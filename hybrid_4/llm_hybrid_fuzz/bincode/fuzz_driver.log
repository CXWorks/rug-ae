/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/atomic.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/enc/encoder.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/enc/write.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/enc/impls.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/enc/mod.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/enc/impl_tuples.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/varint/encode_unsigned.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/varint/encode_signed.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/varint/decode_signed.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/varint/decode_unsigned.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/varint/mod.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/error.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/config.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/de/impls.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/de/mod.rs
err tests_rug_153 test_decode_option_variant
    Blocking waiting for file lock on package cache
   Compiling bincode v2.0.0-rc.3 (/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode)
error[E0521]: borrowed data escapes outside of closure
   --> src/de/mod.rs:384:232
    |
383 | ...h(|rug_data| {
    |       --------
    |       |
    |       `rug_data` is a reference that is only valid in the closure body
    |       has type `&'1 [u8]`
384 | ...et Ok((mut rug_fuzz_0, mut rug_fuzz_1, mut rug_fuzz_2, mut rug_fuzz_3, mut rug_fuzz_4, mut rug_fuzz_5, mut rug_fuzz_6, mut rug_fuzz_7)) = <(u8, u8, u8, u8, u8, &str, u8, u8) as arbitrary::Arbitrary>::arbitrary(&mut arbitrary::Unstructured::new(rug_data...
    |                                                                                                                                                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |                                                                                                                                                                                                                           |
    |                                                                                                                                                                                                                           `rug_data` escapes the closure body here
    |                                                                                                                                                                                                                           argument requires that `'1` must outlive `'static`

For more information about this error, try `rustc --explain E0521`.
error: could not compile `bincode` due to previous error
warning: build failed, waiting for other jobs to finish...

/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/de/impl_tuples.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/de/decoder.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/de/impl_core.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/de/read.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/lib.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/features/serde/de_borrowed.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/features/serde/de_owned.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/features/serde/mod.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/features/serde/ser.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/features/impl_std.rs
err tests_llm_16_359 test_bytes_written
    Blocking waiting for file lock on package cache
   Compiling bincode v2.0.0-rc.3 (/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode)
error[E0425]: cannot find value `mock_writer` in this scope
   --> src/features/impl_std.rs:867:48
    |
867 |         let mut io_writer = IoWriter::new(&mut mock_writer);
    |                                                ^^^^^^^^^^^ not found in this scope

error[E0282]: type annotations needed
   --> src/de/read.rs:131:9
    |
131 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:131:9
    |
131 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:147:9
    |
147 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:147:9
    |
147 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:183:9
    |
183 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:183:9
    |
183 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:396:9
    |
396 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:396:9
    |
396 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

Some errors have detailed explanations: E0282, E0283, E0425.
For more information about an error, try `rustc --explain E0282`.
error: could not compile `bincode` due to 9 previous errors

err tests_rug_70 test_rug
   Compiling bincode v2.0.0-rc.3 (/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode)
error[E0521]: borrowed data escapes outside of closure
    --> src/features/impl_std.rs:1623:92
     |
1622 |         .for_each(|rug_data| {
     |                    --------
     |                    |
     |                    `rug_data` is a reference that is only valid in the closure body
     |                    has type `&'1 [u8]`
1623 |             if let Ok((mut rug_fuzz_0)) = <(&str) as arbitrary::Arbitrary>::arbitrary(&mut arbitrary::Unstructured::new(rug_data)){
     |                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |                                                                                            |
     |                                                                                            `rug_data` escapes the closure body here
     |                                                                                            argument requires that `'1` must outlive `'static`

For more information about this error, try `rustc --explain E0521`.
error: could not compile `bincode` due to previous error
warning: build failed, waiting for other jobs to finish...

/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/features/derive.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/features/mod.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/features/impl_alloc.rs
err tests_llm_16_27 vec_writer_writes_bytes_correctly
   Compiling bincode v2.0.0-rc.3 (/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode)
error[E0425]: cannot find value `writer` in this scope
   --> src/features/impl_alloc.rs:556:9
    |
556 |         writer.write(data).unwrap();
    |         ^^^^^^ not found in this scope

error[E0425]: cannot find value `writer` in this scope
   --> src/features/impl_alloc.rs:557:26
    |
557 |         debug_assert_eq!(writer.inner, data);
    |                          ^^^^^^ not found in this scope

error[E0282]: type annotations needed
   --> src/de/read.rs:131:9
    |
131 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:131:9
    |
131 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:147:9
    |
147 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:147:9
    |
147 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:183:9
    |
183 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:183:9
    |
183 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:396:9
    |
396 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:396:9
    |
396 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

Some errors have detailed explanations: E0282, E0283, E0425.
For more information about an error, try `rustc --explain E0282`.
error: could not compile `bincode` due to 10 previous errors

err tests_llm_16_27 vec_writer_with_capacity_writes_bytes_correctly
    Blocking waiting for file lock on package cache
   Compiling bincode v2.0.0-rc.3 (/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode)
error[E0425]: cannot find value `writer` in this scope
   --> src/features/impl_alloc.rs:566:9
    |
566 |         writer.write(data).unwrap();
    |         ^^^^^^ not found in this scope

error[E0425]: cannot find value `writer` in this scope
   --> src/features/impl_alloc.rs:567:26
    |
567 |         debug_assert_eq!(writer.inner, data);
    |                          ^^^^^^ not found in this scope

error[E0282]: type annotations needed
   --> src/de/read.rs:131:9
    |
131 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:131:9
    |
131 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:147:9
    |
147 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:147:9
    |
147 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:183:9
    |
183 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:183:9
    |
183 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:396:9
    |
396 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:396:9
    |
396 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

Some errors have detailed explanations: E0282, E0283, E0425.
For more information about an error, try `rustc --explain E0282`.
error: could not compile `bincode` due to 10 previous errors

err tests_llm_16_27 vec_writer_collect_returns_inner_vec
   Compiling bincode v2.0.0-rc.3 (/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode)
error[E0425]: cannot find value `writer` in this scope
   --> src/features/impl_alloc.rs:577:9
    |
577 |         writer.write(data).unwrap();
    |         ^^^^^^ not found in this scope

error[E0425]: cannot find value `writer` in this scope
   --> src/features/impl_alloc.rs:578:25
    |
578 |         let collected = writer.collect();
    |                         ^^^^^^ not found in this scope

error[E0282]: type annotations needed
   --> src/de/read.rs:131:9
    |
131 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:131:9
    |
131 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:147:9
    |
147 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:147:9
    |
147 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:183:9
    |
183 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:183:9
    |
183 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:396:9
    |
396 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:396:9
    |
396 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

Some errors have detailed explanations: E0282, E0283, E0425.
For more information about an error, try `rustc --explain E0282`.
error: could not compile `bincode` due to 10 previous errors

err tests_llm_16_27 vec_writer_appends_data_correctly
   Compiling bincode v2.0.0-rc.3 (/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode)
error[E0425]: cannot find value `rug_fuzz_1` in this scope
   --> src/features/impl_alloc.rs:598:21
    |
598 |         let data2 = rug_fuzz_1;
    |                     ^^^^^^^^^^ help: a local variable with a similar name exists: `rug_fuzz_0`

error[E0282]: type annotations needed
   --> src/de/read.rs:131:9
    |
131 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:131:9
    |
131 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:147:9
    |
147 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:147:9
    |
147 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:183:9
    |
183 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:183:9
    |
183 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0282]: type annotations needed
   --> src/de/read.rs:396:9
    |
396 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

error[E0283]: type annotations needed
   --> src/de/read.rs:396:9
    |
396 |         debug_assert_eq!(reader.slice, & []);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |         |
    |         type must be known at this point
    |         cannot infer type of the type parameter `U` declared on the function `assert_failed`
    |
    = note: multiple `impl`s satisfying `u8: PartialEq<_>` found in the following crates: `core`, `serde_json`:
            - impl PartialEq for u8;
            - impl PartialEq<serde_json::Value> for u8;
    = note: required for `[u8]` to implement `PartialEq<[_; 0]>`
    = note: 1 redundant requirement hidden
    = note: required for `&[u8]` to implement `~const PartialEq<&[_; 0]>`
    = note: this error originates in the macro `$crate::assert_eq` which comes from the expansion of the macro `debug_assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)
help: consider specifying the generic arguments
   --> |/home/xiang/snap/rustup/common/rustup/toolchains/nightly-2022-12-10-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:53
    |
45  |                     $crate::panicking::assert_failed::<&[u8], &[_; 0]>(kind, &*left_val, &*right_val, $crate::option::Option::None);
    |                                                     ++++++++++++++++++

Some errors have detailed explanations: E0282, E0283, E0425.
For more information about an error, try `rustc --explain E0282`.
error: could not compile `bincode` due to 9 previous errors

err tests_rug_1 test_rug
   Compiling bincode v2.0.0-rc.3 (/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode)
error: lifetime may not live long enough
   --> src/features/impl_alloc.rs:748:21
    |
745 |         .for_each(|rug_data| {
    |                    -------- has type `&'1 [u8]`
...
748 |         let mut p0: Cow<'static, str> = Cow::Borrowed(rug_fuzz_0);
    |                     ^^^^^^^^^^^^^^^^^ type annotation requires that `'1` must outlive `'static`

error: could not compile `bincode` due to previous error
warning: build failed, waiting for other jobs to finish...

/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/./src/utils.rs
done
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/compatibility/src/sway.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/compatibility/src/membership.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/compatibility/src/misc.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/compatibility/src/rand.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/compatibility/src/lib.rs
done
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/derive/src/derive_struct.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/derive/src/derive_enum.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/derive/src/attribute.rs
/mnt/sda/xiang/llm4_human/llm_hybrid_fuzz/bincode/derive/src/lib.rs
done
