-----------------
src/features/impl_alloc.rs features::impl_alloc::encode_to_vec
deps:{"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::encode_to_vec":{"C":["config::Config","std::marker::Sized"],"E":["std::marker::Sized","enc::Encode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Ord"],"V":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::Decode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::Bound":{"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::collections::HashMap":{"K":["de::BorrowDecode","enc::Encode","std::hash::Hash","std::cmp::Eq","de::Decode","std::marker::Sized"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::hash::Hash","std::cmp::Eq","de::Decode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Fixint","config::LittleEndian","config::BigEndian","config::Varint","std::clone::impls::<impl std::clone::Clone for &T>","config::Limit","config::NoLimit","config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::encode_to_vec":{"C":["<T as config::Config>"],"E":["std::borrow::Cow","std::num::NonZeroU128","std::num::NonZeroU16","std::num::NonZeroU64","std::string::String","std::path::PathBuf","std::option::Option","std::sync::atomic::AtomicUsize","std::ops::Range","std::cell::Cell","std::sync::atomic::AtomicI8","std::collections::HashSet","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::Mutex","std::time::SystemTime","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::num::NonZeroI128","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::net::IpAddr","std::cell::RefCell","std::sync::atomic::AtomicU64","std::boxed::Box","std::rc::Rc","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::result::Result","std::time::Duration","std::sync::atomic::AtomicU16","std::ffi::CString","std::num::NonZeroU8","enc::impls::<impl enc::Encode for &'a T>","std::collections::HashMap","std::vec::Vec","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::sync::RwLock","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::num::NonZeroUsize","std::num::NonZeroI16","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::num::NonZeroI32","std::collections::Bound","std::sync::Arc","std::collections::VecDeque"]},"std::borrow::Cow":{"B":["std::ffi::CStr","<T as std::borrow::ToOwned>","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::cell::Cell","std::net::Ipv4Addr","std::num::NonZeroI32","std::net::IpAddr","std::cell::RefCell","std::num::NonZeroU32","std::num::NonZeroU64","std::string::String","std::num::NonZeroU8","std::num::NonZeroI16","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroUsize","std::option::Option","std::time::SystemTime","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroI64","std::rc::Rc"],"V":["std::collections::VecDeque","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroU32","std::net::SocketAddr","std::cell::Cell","std::marker::PhantomData","std::collections::HashMap","std::collections::BTreeMap","std::num::NonZeroU8","std::num::NonZeroI16","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::boxed::Box","std::ops::Range","std::sync::atomic::AtomicBool","std::sync::RwLock","std::time::SystemTime","std::collections::BinaryHeap","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::vec::Vec","std::net::Ipv6Addr","std::sync::Mutex","std::sync::atomic::AtomicU32","std::time::Duration","std::borrow::Cow","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::collections::Bound","std::sync::Arc","std::num::NonZeroI8","std::ops::RangeInclusive","std::rc::Rc","std::ffi::CString","std::sync::atomic::AtomicI16","std::result::Result","std::net::IpAddr","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::option::Option","std::collections::HashSet","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::string::String","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::num::NonZeroU16"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroI32","std::net::SocketAddrV4","std::num::NonZeroI64","std::string::String","std::rc::Rc","std::num::NonZeroU8","std::net::Ipv4Addr","std::sync::Arc","std::net::IpAddr","std::ffi::CString","std::time::Duration","std::cell::RefCell","std::num::NonZeroI8","std::option::Option","std::cell::Cell","std::net::SocketAddrV6","std::num::NonZeroUsize","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroIsize"]},"std::collections::BinaryHeap":{"T":["std::net::Ipv4Addr","std::cell::Cell","std::ffi::CString","std::cell::RefCell","std::num::NonZeroU64","std::rc::Rc","std::path::PathBuf","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroI8","std::net::SocketAddr","std::num::NonZeroUsize","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroI128","std::num::NonZeroU16","std::net::IpAddr","std::num::NonZeroI32"]},"std::collections::Bound":{"T":["std::collections::HashMap","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::sync::Arc","std::ops::RangeInclusive","std::collections::VecDeque","std::collections::BinaryHeap","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroI32","std::net::Ipv6Addr","std::time::Duration","std::num::NonZeroI8","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroU32","std::time::SystemTime","std::boxed::Box","std::cell::RefCell","std::num::NonZeroI128","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::collections::HashSet","std::sync::atomic::AtomicI64","std::cell::Cell","std::sync::RwLock","std::sync::atomic::AtomicU32","std::vec::Vec","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::num::NonZeroU8","std::collections::Bound","std::ffi::CString","std::path::PathBuf","std::ops::Range","std::borrow::Cow","std::sync::Mutex","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::option::Option","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::string::String","std::rc::Rc","std::result::Result","std::net::IpAddr"]},"std::collections::HashMap":{"K":["std::net::Ipv4Addr","std::ffi::CString","std::rc::Rc","std::num::NonZeroU128","std::string::String","std::time::SystemTime","std::net::Ipv6Addr","std::net::SocketAddrV4","std::num::NonZeroI64","std::option::Option","std::num::NonZeroU8","std::net::IpAddr","std::time::Duration","std::num::NonZeroI32","std::num::NonZeroI16"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::collections::BinaryHeap","std::num::NonZeroUsize","std::time::SystemTime","std::ffi::CString","std::result::Result","std::sync::RwLock","std::path::PathBuf","std::vec::Vec","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::cell::Cell","std::num::NonZeroU128","std::net::Ipv4Addr","std::string::String","std::collections::VecDeque","std::collections::HashMap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::cell::RefCell","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::borrow::Cow","std::net::SocketAddr","std::num::NonZeroU16","std::rc::Rc","std::collections::HashSet","std::option::Option","std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroI8","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::ops::Range","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::collections::Bound","std::net::SocketAddrV4","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::boxed::Box","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::net::IpAddr","std::sync::Arc","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::time::Duration","std::num::NonZeroU8","std::num::NonZeroI32"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::net::Ipv6Addr","std::time::Duration","std::string::String","std::num::NonZeroU64","std::num::NonZeroI32","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroU128","std::num::NonZeroI128","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroUsize","std::num::NonZeroU32","std::sync::Arc","std::num::NonZeroI16","std::ffi::CString","std::net::SocketAddrV6","std::collections::Bound"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroU32","std::collections::VecDeque","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::num::NonZeroIsize","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::boxed::Box","std::num::NonZeroU64","std::net::SocketAddrV4","std::net::IpAddr","std::option::Option","std::sync::atomic::AtomicI64","std::result::Result","std::sync::RwLock","std::time::SystemTime","std::sync::Mutex","std::path::PathBuf","std::collections::HashSet","std::vec::Vec","std::ffi::CString","std::num::NonZeroUsize","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::collections::HashMap","std::string::String","std::net::Ipv4Addr","std::num::NonZeroU8","std::cell::RefCell","std::time::Duration","std::net::SocketAddr","std::sync::Arc","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::net::Ipv6Addr","std::rc::Rc","std::collections::Bound","std::cell::Cell","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::num::NonZeroI8","std::num::NonZeroI128","std::num::NonZeroU16","std::collections::BinaryHeap","std::ops::Range"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::SocketAddrV4","std::collections::Bound","std::num::NonZeroU128","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::sync::Arc","std::net::Ipv4Addr","std::time::SystemTime","std::num::NonZeroI16","std::num::NonZeroI128","std::path::PathBuf","std::sync::RwLock","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::vec::Vec","std::num::NonZeroI32","std::ops::Range","std::string::String","std::collections::HashMap","std::cell::RefCell","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::ops::RangeInclusive","std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroU16","std::cell::Cell","std::borrow::Cow","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::rc::Rc","std::result::Result","std::collections::HashSet","std::collections::BinaryHeap","std::boxed::Box","std::option::Option","std::collections::BTreeSet","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::ffi::CString","std::net::IpAddr","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::net::SocketAddr","std::num::NonZeroUsize","std::collections::VecDeque","std::net::Ipv6Addr","std::time::Duration"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::Arc","std::num::NonZeroI128","std::num::NonZeroU128","std::ffi::CString","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroUsize","std::collections::BTreeSet","std::path::PathBuf","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::collections::HashSet","std::net::IpAddr","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::collections::Bound","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::cell::Cell","std::sync::atomic::AtomicU64","std::result::Result","std::borrow::Cow","std::rc::Rc","std::boxed::Box","std::sync::atomic::AtomicI32","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroIsize","std::collections::BTreeMap","std::num::NonZeroI8","std::num::NonZeroU64","std::net::Ipv6Addr","std::collections::VecDeque","std::marker::PhantomData","std::num::NonZeroU32","std::option::Option","std::net::SocketAddr","std::string::String","std::sync::atomic::AtomicI8","std::ops::Range","std::num::NonZeroU16","std::sync::RwLock","std::net::SocketAddrV6","std::cell::RefCell","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::vec::Vec","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::num::NonZeroI32"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU16","std::borrow::Cow","std::time::SystemTime","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::cell::Cell","std::rc::Rc","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::string::String","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroU64","std::cell::RefCell","std::result::Result","std::net::SocketAddrV6","std::path::PathBuf","std::marker::PhantomData","std::collections::HashMap","std::net::Ipv6Addr","std::time::Duration","std::collections::Bound","std::num::NonZeroIsize","std::net::SocketAddr","std::collections::HashSet","std::ffi::CString","std::num::NonZeroU128","std::vec::Vec","std::collections::BTreeSet","std::num::NonZeroI64","std::net::IpAddr","std::sync::atomic::AtomicI32","std::boxed::Box","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::option::Option","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::sync::Mutex","std::num::NonZeroUsize","std::ops::Range","std::num::NonZeroU8","std::sync::RwLock","std::net::Ipv4Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // E
let mut p1 = MaybeUninit::uninit().assume_init(); // C
+features::impl_alloc::encode_to_vec(p0, p1);
+crate::features::impl_alloc::encode_to_vec(p0, p1);
+crate::features::impl_alloc::encode_to_vec(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::decode_from_std_read
deps:{"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"features::impl_std::decode_from_std_read":{"C":["std::marker::Sized","config::Config"],"D":["de::Decode","std::marker::Sized"],"R":["std::marker::Sized","std::io::Read"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["de::BorrowDecode","enc::Encode","de::Decode","std::cmp::Ord","std::marker::Sized"],"V":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","enc::Encode","std::cmp::Ord","de::Decode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["de::Decode","enc::Encode","de::BorrowDecode","std::cmp::Ord","std::marker::Sized"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","enc::Encode","de::Decode","std::hash::Hash","std::marker::Sized","std::cmp::Eq"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Eq","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]}}
candidates:{"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::LittleEndian","config::BigEndian","config::Varint","config::Configuration","config::Limit","config::Fixint","std::clone::impls::<impl std::clone::Clone for &T>"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"features::impl_std::decode_from_std_read":{"C":["<T as config::Config>"],"D":["std::collections::HashMap","std::num::NonZeroIsize","std::net::IpAddr","std::path::PathBuf","std::result::Result","std::num::NonZeroI64","std::time::SystemTime","std::collections::BinaryHeap","std::collections::BTreeMap","std::collections::HashSet","std::ops::RangeInclusive","std::cell::Cell","std::num::NonZeroU8","std::borrow::Cow","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::sync::Arc","std::sync::atomic::AtomicI16","std::sync::Mutex","std::collections::VecDeque","std::num::NonZeroU64","std::collections::Bound","std::option::Option","std::ops::Range","std::ffi::CString","std::collections::BTreeSet","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::time::Duration","std::sync::atomic::AtomicI64","std::sync::RwLock","std::num::NonZeroI128","std::net::Ipv4Addr","std::vec::Vec","std::boxed::Box","std::num::NonZeroU128","std::rc::Rc","std::num::NonZeroUsize","std::cell::RefCell","std::net::SocketAddrV6","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::num::NonZeroU32","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::string::String","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::num::NonZeroU16"],"R":["std::io::StdinLock<'_>","std::io::Take<T>","std::io::Cursor<T>","std::os::unix::net::UnixStream","std::process::ChildStdout","std::net::TcpStream","std::process::ChildStderr","std::io::BufReader<R>","std::io::Stdin","std::fs::File","std::io::Repeat","std::io::impls::<impl std::io::Read for &mut R>","&std::fs::File","std::collections::VecDeque<u8, A>","std::io::Empty","std::io::stdio::StdinRaw","std::sys::unix::stdio::Stdin","&std::net::TcpStream","&'a std::os::unix::net::UnixStream","&'a std::sys::unix::fd::FileDesc","std::io::Chain<T, U>","std::boxed::Box<R>"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::ffi::CStr","<T as std::borrow::ToOwned>","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU16","std::num::NonZeroU32","std::net::SocketAddrV6","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroUsize","std::net::IpAddr","std::time::Duration","std::cell::RefCell","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroU8","std::num::NonZeroU64","std::cell::Cell","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroU128","std::ffi::CString","std::string::String","std::net::SocketAddr","std::path::PathBuf"],"V":["std::option::Option","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::rc::Rc","std::collections::HashMap","std::net::Ipv4Addr","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::vec::Vec","std::sync::atomic::AtomicU32","std::collections::HashSet","std::boxed::Box","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::result::Result","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroU16","std::num::NonZeroU64","std::borrow::Cow","std::num::NonZeroI128","std::num::NonZeroIsize","std::time::Duration","std::net::SocketAddr","std::num::NonZeroU8","std::collections::BTreeSet","std::cell::Cell","std::time::SystemTime","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::ops::RangeInclusive","std::num::NonZeroU128","std::net::Ipv6Addr","std::collections::BinaryHeap","std::num::NonZeroU32","std::net::IpAddr","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::ffi::CString","std::sync::Mutex","std::sync::atomic::AtomicI8","std::string::String","std::sync::Arc","std::ops::Range","std::collections::Bound","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::sync::RwLock","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroI8"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::net::IpAddr","std::ffi::CString","std::num::NonZeroU32","std::net::Ipv6Addr","std::num::NonZeroI8","std::num::NonZeroI64","std::num::NonZeroU16","std::option::Option","std::num::NonZeroU128","std::net::SocketAddrV6","std::string::String","std::rc::Rc","std::num::NonZeroI16","std::net::SocketAddr","std::num::NonZeroU64","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroI128","std::net::Ipv4Addr","std::num::NonZeroI32","std::cell::Cell","std::time::Duration","std::marker::PhantomData","std::num::NonZeroIsize","std::path::PathBuf","std::net::SocketAddrV4"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU128","std::cell::RefCell","std::num::NonZeroI16","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroI128","std::ffi::CString","std::net::SocketAddrV6","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroI8","std::num::NonZeroI64","std::time::Duration","std::net::IpAddr","std::num::NonZeroI32","std::num::NonZeroU16","std::rc::Rc","std::net::Ipv4Addr","std::cell::Cell","std::path::PathBuf","std::sync::Arc","std::net::Ipv6Addr","std::string::String","std::num::NonZeroU8","std::num::NonZeroU64"]},"std::collections::Bound":{"T":["std::path::PathBuf","std::num::NonZeroI16","std::time::Duration","std::cell::Cell","std::sync::RwLock","std::sync::atomic::AtomicI64","std::option::Option","std::rc::Rc","std::ffi::CString","std::vec::Vec","std::net::SocketAddr","std::num::NonZeroU64","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::ops::Range","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::boxed::Box","std::collections::HashMap","std::num::NonZeroU32","std::net::Ipv6Addr","std::num::NonZeroI128","std::cell::RefCell","std::marker::PhantomData","std::sync::Mutex","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::string::String","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::net::Ipv4Addr","std::num::NonZeroU16","std::net::IpAddr","std::net::SocketAddrV4","std::collections::BTreeSet","std::num::NonZeroI8","std::borrow::Cow","std::collections::Bound","std::sync::atomic::AtomicU32","std::result::Result","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::collections::HashSet","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroUsize","std::num::NonZeroU128"]},"std::collections::HashMap":{"K":["std::ffi::CString","std::net::IpAddr","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroI8","std::time::Duration","std::net::SocketAddr","std::num::NonZeroU16","std::num::NonZeroUsize","std::path::PathBuf"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroI128","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroI64","std::cell::Cell","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::path::PathBuf","std::sync::Mutex","std::rc::Rc","std::result::Result","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::cell::RefCell","std::num::NonZeroU64","std::ffi::CString","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::net::IpAddr","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroI16","std::sync::RwLock","std::num::NonZeroU32","std::collections::HashSet","std::time::SystemTime","std::ops::RangeInclusive","std::net::SocketAddr","std::vec::Vec","std::num::NonZeroIsize","std::sync::Arc","std::sync::atomic::AtomicBool","std::collections::HashMap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::boxed::Box","std::net::SocketAddrV4","std::collections::BinaryHeap","std::option::Option","std::sync::atomic::AtomicI8","std::collections::Bound","std::collections::BTreeSet","std::ops::Range","std::collections::VecDeque","std::borrow::Cow","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::num::NonZeroUsize","std::string::String","std::net::SocketAddrV6"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroUsize","std::num::NonZeroI64","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroIsize","std::num::NonZeroU8","std::marker::PhantomData","std::net::SocketAddr","std::net::Ipv6Addr","std::path::PathBuf","std::net::IpAddr","std::num::NonZeroI128","std::ffi::CString","std::num::NonZeroI16","std::rc::Rc","std::time::Duration","std::num::NonZeroI8","std::net::Ipv4Addr","std::num::NonZeroU64"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::collections::BTreeMap","std::sync::Arc","std::boxed::Box","std::collections::Bound","std::vec::Vec","std::num::NonZeroI8","std::net::Ipv6Addr","std::time::SystemTime","std::net::SocketAddr","std::rc::Rc","std::marker::PhantomData","std::num::NonZeroU16","std::ops::Range","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::option::Option","std::time::Duration","std::num::NonZeroIsize","std::num::NonZeroUsize","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::net::Ipv4Addr","std::result::Result","std::sync::RwLock","std::path::PathBuf","std::collections::HashSet","std::sync::atomic::AtomicI16","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::ffi::CString","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::borrow::Cow","std::sync::Mutex","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::cell::Cell","std::num::NonZeroI16","std::num::NonZeroU8","std::num::NonZeroI128","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::string::String","std::collections::BTreeSet","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::collections::HashMap","std::num::NonZeroU32"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::cell::RefCell","std::result::Result","std::rc::Rc","std::sync::atomic::AtomicI16","std::vec::Vec","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::net::Ipv6Addr","std::collections::HashMap","std::boxed::Box","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::num::NonZeroI16","std::num::NonZeroU8","std::net::SocketAddrV6","std::num::NonZeroI64","std::collections::Bound","std::num::NonZeroU128","std::option::Option","std::net::SocketAddrV4","std::net::SocketAddr","std::collections::BinaryHeap","std::num::NonZeroU16","std::sync::RwLock","std::net::IpAddr","std::collections::BTreeSet","std::num::NonZeroU32","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::string::String","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::sync::Arc","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::ops::Range","std::borrow::Cow","std::net::Ipv4Addr","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::time::Duration","std::time::SystemTime","std::num::NonZeroU64","std::marker::PhantomData","std::num::NonZeroI128","std::collections::HashSet","std::ffi::CString","std::ops::RangeInclusive","std::num::NonZeroUsize","std::cell::Cell","std::path::PathBuf"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::IpAddr","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::path::PathBuf","std::net::Ipv6Addr","std::collections::Bound","std::ops::RangeInclusive","std::collections::BTreeSet","std::num::NonZeroU128","std::num::NonZeroI128","std::num::NonZeroI64","std::ops::Range","std::sync::RwLock","std::sync::atomic::AtomicI8","std::vec::Vec","std::sync::Arc","std::option::Option","std::sync::atomic::AtomicI32","std::boxed::Box","std::time::SystemTime","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::string::String","std::cell::Cell","std::collections::HashSet","std::borrow::Cow","std::num::NonZeroU8","std::num::NonZeroI8","std::marker::PhantomData","std::time::Duration","std::rc::Rc","std::sync::atomic::AtomicBool","std::result::Result","std::num::NonZeroI16","std::collections::VecDeque","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::cell::RefCell","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::sync::Mutex","std::net::SocketAddrV4","std::num::NonZeroU16","std::net::SocketAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::ffi::CString","std::net::Ipv4Addr"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::option::Option","std::sync::Arc","std::collections::Bound","std::time::SystemTime","std::net::IpAddr","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::num::NonZeroI8","std::num::NonZeroU8","std::collections::VecDeque","std::vec::Vec","std::rc::Rc","std::path::PathBuf","std::sync::RwLock","std::net::Ipv6Addr","std::result::Result","std::string::String","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::time::Duration","std::collections::HashSet","std::net::SocketAddr","std::cell::RefCell","std::net::SocketAddrV6","std::net::Ipv4Addr","std::collections::BTreeMap","std::boxed::Box","std::collections::HashMap","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::num::NonZeroUsize","std::sync::Mutex","std::sync::atomic::AtomicBool","std::ops::Range","std::num::NonZeroI16","std::num::NonZeroI64","std::ffi::CString","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::cell::Cell","std::collections::BinaryHeap","std::ops::RangeInclusive"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // C
+features::impl_std::decode_from_std_read(p0, p1);
+crate::features::impl_std::decode_from_std_read(p0, p1);
+crate::features::impl_std::decode_from_std_read(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::encode_into_std_write
deps:{"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::encode_into_std_write":{"C":["std::marker::Sized","config::Config"],"E":["std::marker::Sized","enc::Encode"],"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode","std::cmp::Ord"],"V":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["de::BorrowDecode","de::Decode","enc::Encode","std::cmp::Ord","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","std::cmp::Ord","de::Decode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["enc::Encode","std::marker::Sized","de::Decode","std::cmp::Eq","de::BorrowDecode","std::hash::Hash"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["de::BorrowDecode","std::hash::Hash","std::cmp::Eq","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]}}
candidates:{"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Varint","std::clone::impls::<impl std::clone::Clone for *const T>","config::LittleEndian","config::Limit","config::Fixint","config::BigEndian","config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::encode_into_std_write":{"C":["<T as config::Config>"],"E":["std::collections::BinaryHeap","std::boxed::Box","std::vec::Vec","std::num::NonZeroIsize","std::ffi::CString","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::sync::Mutex","std::num::NonZeroI64","std::num::NonZeroU8","std::collections::VecDeque","std::collections::HashSet","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::borrow::Cow","std::collections::Bound","enc::impls::<impl enc::Encode for &'a T>","std::sync::Arc","std::num::NonZeroU32","std::time::Duration","std::path::PathBuf","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::net::Ipv6Addr","std::option::Option","std::result::Result","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::num::NonZeroU128","std::cell::RefCell","std::time::SystemTime","std::net::IpAddr","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::ops::Range","std::sync::atomic::AtomicU32","std::sync::RwLock","std::num::NonZeroI16","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::cell::Cell","std::num::NonZeroI8","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::rc::Rc","std::string::String","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::collections::HashMap","std::num::NonZeroUsize"],"W":["std::io::stdio::StdoutRaw","std::io::BufWriter<W>","&std::process::ChildStdin","std::io::Stdout","std::sys::unix::stdio::Stderr","std::fs::File","&std::fs::File","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Cursor<[u8; N]>","&std::net::TcpStream","std::io::Cursor<&mut [u8]>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::BorrowedCursor<'a>","std::io::LineWriter<W>","std::vec::Vec<u8, A>","std::net::TcpStream","std::io::StdoutLock<'_>","std::os::unix::net::UnixStream","std::io::StderrLock<'_>","std::process::ChildStdin","std::collections::VecDeque<u8, A>","std::sys::unix::stdio::Stdout","&std::io::Stderr","&'a std::os::unix::net::UnixStream","&std::io::Sink","std::io::Stderr","std::io::Sink","std::io::impls::<impl std::io::Write for &mut W>","std::io::stdio::StderrRaw","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::boxed::Box<W>","&std::io::Stdout"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::ffi::OsStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::time::Duration","std::num::NonZeroI32","std::cell::Cell","std::num::NonZeroU32","std::num::NonZeroI16","std::string::String","std::num::NonZeroI64","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroU64","std::net::Ipv6Addr","std::cell::RefCell","std::num::NonZeroI8","std::time::SystemTime","std::net::SocketAddr","std::ffi::CString","std::option::Option"],"V":["std::string::String","std::collections::BTreeSet","std::sync::atomic::AtomicI32","std::rc::Rc","std::net::IpAddr","std::num::NonZeroI64","std::ops::Range","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::option::Option","std::num::NonZeroU8","std::net::SocketAddrV4","std::time::SystemTime","std::sync::atomic::AtomicU64","std::collections::Bound","std::sync::RwLock","std::cell::Cell","std::net::Ipv6Addr","std::path::PathBuf","std::num::NonZeroIsize","std::time::Duration","std::result::Result","std::marker::PhantomData","std::ffi::CString","std::ops::RangeInclusive","std::borrow::Cow","std::boxed::Box","std::collections::BinaryHeap","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::vec::Vec","std::collections::HashSet","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::cell::RefCell","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::sync::Arc","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::num::NonZeroU128","std::sync::Mutex","std::collections::HashMap"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroUsize","std::num::NonZeroI128","std::num::NonZeroU32","std::path::PathBuf","std::cell::RefCell","std::rc::Rc","std::num::NonZeroI64","std::ffi::CString","std::net::IpAddr","std::net::Ipv4Addr","std::num::NonZeroI8","std::time::SystemTime","std::string::String","std::net::SocketAddrV6","std::num::NonZeroIsize","std::time::Duration","std::net::SocketAddr","std::marker::PhantomData","std::net::Ipv6Addr","std::num::NonZeroU16"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroIsize","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroU64","std::net::SocketAddrV6","std::num::NonZeroU16","std::string::String","std::num::NonZeroI8","std::net::IpAddr","std::net::Ipv6Addr","std::path::PathBuf","std::net::SocketAddrV4","std::time::Duration","std::option::Option"]},"std::collections::Bound":{"T":["std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::collections::Bound","std::num::NonZeroI128","std::time::Duration","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::sync::RwLock","std::cell::RefCell","std::net::SocketAddrV4","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::ffi::CString","std::collections::HashSet","std::vec::Vec","std::num::NonZeroI8","std::collections::HashMap","std::sync::Arc","std::result::Result","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::collections::VecDeque","std::net::SocketAddr","std::time::SystemTime","std::path::PathBuf","std::num::NonZeroU16","std::num::NonZeroUsize","std::string::String","std::ops::Range","std::collections::BTreeSet","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::rc::Rc","std::cell::Cell","std::boxed::Box","std::borrow::Cow","std::num::NonZeroU8","std::sync::Mutex","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::num::NonZeroU32","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicI64","std::net::IpAddr","std::num::NonZeroI64","std::num::NonZeroIsize"]},"std::collections::HashMap":{"K":["std::collections::Bound","std::num::NonZeroU128","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroI32","std::time::Duration","std::num::NonZeroU16","std::net::IpAddr","std::path::PathBuf","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroU8","std::sync::Arc","std::option::Option","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroU64","std::num::NonZeroIsize","std::net::SocketAddrV4"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroU32","std::num::NonZeroUsize","std::sync::RwLock","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::borrow::Cow","std::result::Result","std::cell::RefCell","std::vec::Vec","std::collections::BinaryHeap","std::net::IpAddr","std::collections::HashSet","std::sync::atomic::AtomicU64","std::rc::Rc","std::collections::HashMap","std::option::Option","std::ffi::CString","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::time::SystemTime","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::collections::Bound","std::num::NonZeroU16","std::net::SocketAddrV6","std::sync::Arc","std::sync::atomic::AtomicU16","std::boxed::Box","std::net::SocketAddr","std::num::NonZeroI64","std::time::Duration","std::sync::atomic::AtomicUsize","std::string::String","std::path::PathBuf","std::num::NonZeroI8","std::ops::Range","std::num::NonZeroIsize","std::num::NonZeroU8","std::net::Ipv4Addr","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::sync::Mutex","std::net::Ipv6Addr","std::collections::BTreeSet","std::num::NonZeroI16","std::cell::Cell","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::num::NonZeroI32","std::ops::RangeInclusive","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::marker::PhantomData"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroI64","std::net::Ipv6Addr","std::collections::Bound","std::num::NonZeroU16","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroIsize","std::net::SocketAddr","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroU8"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::boxed::Box","std::sync::atomic::AtomicUsize","std::vec::Vec","std::net::IpAddr","std::collections::HashMap","std::ops::RangeInclusive","std::num::NonZeroI128","std::collections::HashSet","std::string::String","std::sync::atomic::AtomicU32","std::path::PathBuf","std::sync::atomic::AtomicI8","std::collections::Bound","std::net::SocketAddr","std::collections::BinaryHeap","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroI8","std::collections::BTreeSet","std::sync::Arc","std::option::Option","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::ops::Range","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::sync::RwLock","std::sync::Mutex","std::time::Duration","std::num::NonZeroU64","std::num::NonZeroI32","std::cell::Cell","std::collections::VecDeque","std::net::SocketAddrV4","std::time::SystemTime","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::ffi::CString","std::num::NonZeroU32","std::cell::RefCell","std::num::NonZeroU128","std::collections::BTreeMap","std::num::NonZeroI16","std::borrow::Cow","std::sync::atomic::AtomicBool","std::result::Result","std::rc::Rc","std::net::SocketAddrV6","std::num::NonZeroI64","std::sync::atomic::AtomicU8"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroI128","std::num::NonZeroU128","std::collections::HashSet","std::sync::Arc","std::net::SocketAddr","std::net::Ipv4Addr","std::cell::RefCell","std::collections::BTreeMap","std::num::NonZeroU16","std::net::Ipv6Addr","std::result::Result","std::time::Duration","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::sync::RwLock","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::vec::Vec","std::string::String","std::sync::Mutex","std::borrow::Cow","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::ops::Range","std::boxed::Box","std::sync::atomic::AtomicI16","std::rc::Rc","std::num::NonZeroI64","std::collections::VecDeque","std::collections::BTreeSet","std::collections::HashMap","std::option::Option","std::num::NonZeroIsize","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::collections::Bound","std::num::NonZeroI8","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::cell::Cell","std::path::PathBuf","std::num::NonZeroU32","std::net::IpAddr","std::marker::PhantomData","std::sync::atomic::AtomicU32"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::SocketAddrV4","std::num::NonZeroU128","std::collections::VecDeque","std::cell::Cell","std::collections::BTreeSet","std::time::Duration","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::vec::Vec","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::sync::Mutex","std::collections::BTreeMap","std::net::IpAddr","std::num::NonZeroI64","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroU8","std::collections::HashMap","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::boxed::Box","std::cell::RefCell","std::ffi::CString","std::path::PathBuf","std::collections::Bound","std::collections::HashSet","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::ops::Range","std::collections::BinaryHeap","std::net::SocketAddrV6","std::rc::Rc","std::num::NonZeroU64","std::option::Option","std::string::String","std::sync::atomic::AtomicU16","std::borrow::Cow","std::num::NonZeroI128","std::ops::RangeInclusive","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::result::Result"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::vec::Vec","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::num::NonZeroI32","std::sync::Arc","std::string::String","std::num::NonZeroIsize","std::sync::Mutex","std::result::Result","std::num::NonZeroU8","std::option::Option","std::time::Duration","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::rc::Rc","std::net::SocketAddrV4","std::num::NonZeroU64","std::net::Ipv4Addr","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroI64","std::num::NonZeroI8","std::collections::VecDeque","std::num::NonZeroI16","std::marker::PhantomData","std::ffi::CString","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::net::SocketAddrV6","std::collections::Bound","std::collections::BTreeMap","std::collections::BTreeSet","std::cell::RefCell","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::boxed::Box","std::cell::Cell","std::collections::HashSet","std::ops::Range","std::borrow::Cow","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::collections::HashMap","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::path::PathBuf"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // E
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // W
let mut p2 = MaybeUninit::uninit().assume_init(); // C
+features::impl_std::encode_into_std_write(p0, p1, p2);
+crate::features::impl_std::encode_into_std_write(p0, p1, p2);
+crate::features::impl_std::encode_into_std_write(p0, p1, p2);
-----------------
src/varint/decode_signed.rs varint::decode_signed::varint_decode_i16
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_signed::varint_decode_i16":{"R":["de::read::Reader","std::marker::Sized"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::io::impls::<impl std::io::Read for &mut R>","std::fs::File","std::sys::unix::stdio::Stdin","&std::fs::File","std::io::stdio::StdinRaw","std::net::TcpStream","std::io::Take<T>","std::io::Cursor<T>","&std::net::TcpStream","std::io::Stdin","std::os::unix::net::UnixStream","std::process::ChildStderr","std::io::BufReader<R>","std::collections::VecDeque<u8, A>","std::boxed::Box<R>","std::process::ChildStdout","std::io::StdinLock<'_>","std::io::Repeat","&'a std::sys::unix::fd::FileDesc","&'a std::os::unix::net::UnixStream","std::io::Empty","std::io::Chain<T, U>"]},"std::io::BufReader":{"R":["&std::fs::File","std::net::TcpStream","std::fs::File","std::io::Repeat","std::io::Chain<T, U>","std::io::Take<T>","std::boxed::Box<R>","std::process::ChildStderr","&std::net::TcpStream","std::io::Stdin","std::os::unix::net::UnixStream","std::io::stdio::StdinRaw","std::sys::unix::stdio::Stdin","std::process::ChildStdout","std::io::impls::<impl std::io::Read for &mut R>","std::io::Cursor<T>","std::io::BufReader<R>","std::collections::VecDeque<u8, A>","std::io::Empty","std::io::StdinLock<'_>","&'a std::os::unix::net::UnixStream","&'a std::sys::unix::fd::FileDesc"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_signed::varint_decode_i16":{"R":["<&mut T as de::read::Reader>","features::impl_std::IoReader","de::read::SliceReader","std::io::BufReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_signed::varint_decode_i16(p0, p1);
+crate::varint::decode_signed::varint_decode_i16(p0, p1);
+crate::varint::decode_signed::varint_decode_i16(p0, p1);
-----------------
src/varint/decode_signed.rs varint::decode_signed::varint_decode_i32
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_signed::varint_decode_i32":{"R":["std::marker::Sized","de::read::Reader"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::io::Chain<T, U>","std::sys::unix::stdio::Stdin","std::process::ChildStdout","std::io::Empty","std::io::StdinLock<'_>","std::io::BufReader<R>","std::net::TcpStream","std::io::Take<T>","std::io::Repeat","std::fs::File","&'a std::sys::unix::fd::FileDesc","std::process::ChildStderr","std::io::stdio::StdinRaw","&std::fs::File","std::collections::VecDeque<u8, A>","std::io::Cursor<T>","&std::net::TcpStream","std::io::impls::<impl std::io::Read for &mut R>","&'a std::os::unix::net::UnixStream","std::boxed::Box<R>","std::os::unix::net::UnixStream","std::io::Stdin"]},"std::io::BufReader":{"R":["std::io::Take<T>","std::io::StdinLock<'_>","std::net::TcpStream","&'a std::os::unix::net::UnixStream","std::io::Empty","std::sys::unix::stdio::Stdin","&std::net::TcpStream","std::io::impls::<impl std::io::Read for &mut R>","std::fs::File","std::collections::VecDeque<u8, A>","std::io::Repeat","&std::fs::File","std::io::BufReader<R>","std::os::unix::net::UnixStream","std::io::Cursor<T>","std::process::ChildStderr","std::io::Chain<T, U>","std::boxed::Box<R>","std::io::Stdin","std::io::stdio::StdinRaw","std::process::ChildStdout","&'a std::sys::unix::fd::FileDesc"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_signed::varint_decode_i32":{"R":["<&mut T as de::read::Reader>","de::read::SliceReader","std::io::BufReader","features::impl_std::IoReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_signed::varint_decode_i32(p0, p1);
+crate::varint::decode_signed::varint_decode_i32(p0, p1);
+crate::varint::decode_signed::varint_decode_i32(p0, p1);
-----------------
src/varint/decode_signed.rs varint::decode_signed::varint_decode_i64
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_signed::varint_decode_i64":{"R":["std::marker::Sized","de::read::Reader"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::fs::File","std::io::Cursor<T>","std::io::BufReader<R>","std::process::ChildStdout","std::boxed::Box<R>","&'a std::os::unix::net::UnixStream","std::net::TcpStream","std::io::impls::<impl std::io::Read for &mut R>","std::io::Take<T>","&std::fs::File","&'a std::sys::unix::fd::FileDesc","std::process::ChildStderr","std::io::Chain<T, U>","std::io::stdio::StdinRaw","std::io::Empty","&std::net::TcpStream","std::sys::unix::stdio::Stdin","std::io::StdinLock<'_>","std::io::Stdin","std::collections::VecDeque<u8, A>","std::io::Repeat","std::os::unix::net::UnixStream"]},"std::io::BufReader":{"R":["std::collections::VecDeque<u8, A>","std::boxed::Box<R>","std::io::BufReader<R>","std::sys::unix::stdio::Stdin","std::io::Chain<T, U>","std::io::Cursor<T>","std::os::unix::net::UnixStream","std::io::stdio::StdinRaw","std::io::Take<T>","&'a std::sys::unix::fd::FileDesc","std::io::Empty","std::io::impls::<impl std::io::Read for &mut R>","&std::fs::File","std::fs::File","std::io::Stdin","std::process::ChildStderr","&'a std::os::unix::net::UnixStream","&std::net::TcpStream","std::io::Repeat","std::process::ChildStdout","std::io::StdinLock<'_>","std::net::TcpStream"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_signed::varint_decode_i64":{"R":["features::impl_std::IoReader","std::io::BufReader","de::read::SliceReader","<&mut T as de::read::Reader>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_signed::varint_decode_i64(p0, p1);
+crate::varint::decode_signed::varint_decode_i64(p0, p1);
+crate::varint::decode_signed::varint_decode_i64(p0, p1);
-----------------
src/varint/decode_signed.rs varint::decode_signed::varint_decode_i128
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_signed::varint_decode_i128":{"R":["de::read::Reader","std::marker::Sized"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["&'a std::sys::unix::fd::FileDesc","std::sys::unix::stdio::Stdin","std::process::ChildStdout","&'a std::os::unix::net::UnixStream","std::io::stdio::StdinRaw","std::process::ChildStderr","std::boxed::Box<R>","std::io::Chain<T, U>","std::os::unix::net::UnixStream","std::io::Take<T>","std::io::Stdin","std::io::Repeat","std::io::Empty","std::io::impls::<impl std::io::Read for &mut R>","std::io::Cursor<T>","std::collections::VecDeque<u8, A>","&std::fs::File","&std::net::TcpStream","std::net::TcpStream","std::fs::File","std::io::StdinLock<'_>","std::io::BufReader<R>"]},"std::io::BufReader":{"R":["std::boxed::Box<R>","std::collections::VecDeque<u8, A>","std::io::Repeat","&std::fs::File","&'a std::os::unix::net::UnixStream","std::io::Chain<T, U>","&std::net::TcpStream","std::fs::File","std::os::unix::net::UnixStream","std::io::Take<T>","std::io::Stdin","std::io::Empty","std::io::BufReader<R>","std::io::StdinLock<'_>","std::io::stdio::StdinRaw","std::process::ChildStdout","std::net::TcpStream","std::process::ChildStderr","std::io::Cursor<T>","std::io::impls::<impl std::io::Read for &mut R>","std::sys::unix::stdio::Stdin","&'a std::sys::unix::fd::FileDesc"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_signed::varint_decode_i128":{"R":["de::read::SliceReader","features::impl_std::IoReader","<&mut T as de::read::Reader>","std::io::BufReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_signed::varint_decode_i128(p0, p1);
+crate::varint::decode_signed::varint_decode_i128(p0, p1);
+crate::varint::decode_signed::varint_decode_i128(p0, p1);
-----------------
src/varint/decode_signed.rs varint::decode_signed::varint_decode_isize
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_signed::varint_decode_isize":{"R":["de::read::Reader","std::marker::Sized"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::io::stdio::StdinRaw","std::boxed::Box<R>","std::collections::VecDeque<u8, A>","std::io::Cursor<T>","&std::fs::File","std::io::impls::<impl std::io::Read for &mut R>","std::io::BufReader<R>","&'a std::os::unix::net::UnixStream","std::io::StdinLock<'_>","std::io::Chain<T, U>","&'a std::sys::unix::fd::FileDesc","std::io::Take<T>","std::io::Stdin","std::sys::unix::stdio::Stdin","&std::net::TcpStream","std::os::unix::net::UnixStream","std::io::Empty","std::io::Repeat","std::process::ChildStderr","std::fs::File","std::net::TcpStream","std::process::ChildStdout"]},"std::io::BufReader":{"R":["std::process::ChildStdout","std::io::StdinLock<'_>","std::boxed::Box<R>","&std::net::TcpStream","&std::fs::File","std::fs::File","std::sys::unix::stdio::Stdin","std::io::Empty","&'a std::sys::unix::fd::FileDesc","std::io::Stdin","std::io::Take<T>","std::net::TcpStream","&'a std::os::unix::net::UnixStream","std::process::ChildStderr","std::collections::VecDeque<u8, A>","std::io::impls::<impl std::io::Read for &mut R>","std::io::Chain<T, U>","std::io::BufReader<R>","std::io::Repeat","std::io::Cursor<T>","std::io::stdio::StdinRaw","std::os::unix::net::UnixStream"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_signed::varint_decode_isize":{"R":["std::io::BufReader","features::impl_std::IoReader","<&mut T as de::read::Reader>","de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_signed::varint_decode_isize(p0, p1);
+crate::varint::decode_signed::varint_decode_isize(p0, p1);
+crate::varint::decode_signed::varint_decode_isize(p0, p1);
-----------------
src/varint/decode_unsigned.rs varint::decode_unsigned::deserialize_varint_cold_u16
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::BufReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::deserialize_varint_cold_u16":{"R":["std::marker::Sized","de::read::Reader"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::fs::File","std::os::unix::net::UnixStream","std::process::ChildStderr","std::io::Cursor<T>","std::io::BufReader<R>","&std::fs::File","std::io::Stdin","&'a std::os::unix::net::UnixStream","std::process::ChildStdout","std::io::stdio::StdinRaw","std::io::Take<T>","std::io::Empty","std::collections::VecDeque<u8, A>","std::io::StdinLock<'_>","std::sys::unix::stdio::Stdin","&std::net::TcpStream","std::net::TcpStream","std::io::impls::<impl std::io::Read for &mut R>","&'a std::sys::unix::fd::FileDesc","std::io::Repeat","std::boxed::Box<R>","std::io::Chain<T, U>"]},"std::io::BufReader":{"R":["std::process::ChildStdout","std::io::Stdin","std::io::Empty","std::fs::File","&std::fs::File","std::process::ChildStderr","std::sys::unix::stdio::Stdin","std::net::TcpStream","std::io::Take<T>","std::os::unix::net::UnixStream","std::boxed::Box<R>","std::io::impls::<impl std::io::Read for &mut R>","std::io::Cursor<T>","&'a std::os::unix::net::UnixStream","std::io::Chain<T, U>","&std::net::TcpStream","std::io::BufReader<R>","std::io::Repeat","std::io::StdinLock<'_>","std::collections::VecDeque<u8, A>","std::io::stdio::StdinRaw","&'a std::sys::unix::fd::FileDesc"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::deserialize_varint_cold_u16":{"R":["std::io::BufReader","de::read::SliceReader","<&mut T as de::read::Reader>","features::impl_std::IoReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_unsigned::deserialize_varint_cold_u16(p0, p1);
+crate::varint::decode_unsigned::deserialize_varint_cold_u16(p0, p1);
+crate::varint::decode_unsigned::deserialize_varint_cold_u16(p0, p1);
-----------------
src/varint/decode_unsigned.rs varint::decode_unsigned::deserialize_varint_cold_u32
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::deserialize_varint_cold_u32":{"R":["de::read::Reader","std::marker::Sized"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::io::Take<T>","std::sys::unix::stdio::Stdin","&std::fs::File","std::io::Chain<T, U>","std::io::BufReader<R>","std::io::stdio::StdinRaw","&'a std::sys::unix::fd::FileDesc","std::fs::File","&std::net::TcpStream","std::os::unix::net::UnixStream","std::net::TcpStream","std::io::StdinLock<'_>","std::process::ChildStdout","std::io::Stdin","std::process::ChildStderr","std::io::Cursor<T>","std::collections::VecDeque<u8, A>","&'a std::os::unix::net::UnixStream","std::boxed::Box<R>","std::io::impls::<impl std::io::Read for &mut R>","std::io::Repeat","std::io::Empty"]},"std::io::BufReader":{"R":["&'a std::sys::unix::fd::FileDesc","std::io::impls::<impl std::io::Read for &mut R>","&std::net::TcpStream","std::io::BufReader<R>","std::io::Repeat","std::io::StdinLock<'_>","std::io::Take<T>","std::os::unix::net::UnixStream","&std::fs::File","std::boxed::Box<R>","std::process::ChildStderr","std::process::ChildStdout","std::sys::unix::stdio::Stdin","std::io::Cursor<T>","std::io::Chain<T, U>","std::io::Stdin","std::io::stdio::StdinRaw","&'a std::os::unix::net::UnixStream","std::fs::File","std::io::Empty","std::collections::VecDeque<u8, A>","std::net::TcpStream"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::deserialize_varint_cold_u32":{"R":["std::io::BufReader","de::read::SliceReader","features::impl_std::IoReader","<&mut T as de::read::Reader>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_unsigned::deserialize_varint_cold_u32(p0, p1);
+crate::varint::decode_unsigned::deserialize_varint_cold_u32(p0, p1);
+crate::varint::decode_unsigned::deserialize_varint_cold_u32(p0, p1);
-----------------
src/varint/decode_unsigned.rs varint::decode_unsigned::deserialize_varint_cold_u64
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::BufReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::deserialize_varint_cold_u64":{"R":["std::marker::Sized","de::read::Reader"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::process::ChildStderr","std::sys::unix::stdio::Stdin","std::io::Chain<T, U>","&'a std::sys::unix::fd::FileDesc","std::io::Cursor<T>","std::io::Stdin","std::collections::VecDeque<u8, A>","&std::net::TcpStream","std::process::ChildStdout","std::os::unix::net::UnixStream","std::io::Take<T>","&'a std::os::unix::net::UnixStream","std::boxed::Box<R>","std::io::Empty","std::net::TcpStream","&std::fs::File","std::io::StdinLock<'_>","std::fs::File","std::io::BufReader<R>","std::io::Repeat","std::io::stdio::StdinRaw","std::io::impls::<impl std::io::Read for &mut R>"]},"std::io::BufReader":{"R":["std::io::impls::<impl std::io::Read for &mut R>","std::io::BufReader<R>","std::io::Chain<T, U>","std::process::ChildStderr","std::collections::VecDeque<u8, A>","std::net::TcpStream","std::os::unix::net::UnixStream","std::process::ChildStdout","std::io::Repeat","std::io::Empty","std::sys::unix::stdio::Stdin","std::io::StdinLock<'_>","std::io::Cursor<T>","std::io::stdio::StdinRaw","&'a std::sys::unix::fd::FileDesc","&std::fs::File","&'a std::os::unix::net::UnixStream","std::io::Take<T>","&std::net::TcpStream","std::boxed::Box<R>","std::io::Stdin","std::fs::File"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::deserialize_varint_cold_u64":{"R":["de::read::SliceReader","std::io::BufReader","features::impl_std::IoReader","<&mut T as de::read::Reader>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_unsigned::deserialize_varint_cold_u64(p0, p1);
+crate::varint::decode_unsigned::deserialize_varint_cold_u64(p0, p1);
+crate::varint::decode_unsigned::deserialize_varint_cold_u64(p0, p1);
-----------------
src/varint/decode_unsigned.rs varint::decode_unsigned::deserialize_varint_cold_usize
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::deserialize_varint_cold_usize":{"R":["std::marker::Sized","de::read::Reader"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::os::unix::net::UnixStream","std::process::ChildStdout","std::fs::File","std::process::ChildStderr","std::io::StdinLock<'_>","std::io::Cursor<T>","&'a std::os::unix::net::UnixStream","std::io::Empty","std::collections::VecDeque<u8, A>","std::io::Stdin","std::io::stdio::StdinRaw","std::io::Chain<T, U>","std::io::Take<T>","std::io::Repeat","&std::net::TcpStream","std::net::TcpStream","std::sys::unix::stdio::Stdin","&std::fs::File","std::io::BufReader<R>","std::boxed::Box<R>","&'a std::sys::unix::fd::FileDesc","std::io::impls::<impl std::io::Read for &mut R>"]},"std::io::BufReader":{"R":["std::io::Chain<T, U>","std::io::StdinLock<'_>","std::io::impls::<impl std::io::Read for &mut R>","std::io::stdio::StdinRaw","std::sys::unix::stdio::Stdin","std::boxed::Box<R>","&std::fs::File","&'a std::os::unix::net::UnixStream","std::process::ChildStdout","&std::net::TcpStream","std::collections::VecDeque<u8, A>","std::io::Empty","std::os::unix::net::UnixStream","std::io::BufReader<R>","std::io::Cursor<T>","std::io::Take<T>","std::fs::File","std::io::Repeat","&'a std::sys::unix::fd::FileDesc","std::io::Stdin","std::net::TcpStream","std::process::ChildStderr"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::deserialize_varint_cold_usize":{"R":["features::impl_std::IoReader","std::io::BufReader","<&mut T as de::read::Reader>","de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_unsigned::deserialize_varint_cold_usize(p0, p1);
+crate::varint::decode_unsigned::deserialize_varint_cold_usize(p0, p1);
+crate::varint::decode_unsigned::deserialize_varint_cold_usize(p0, p1);
-----------------
src/varint/decode_unsigned.rs varint::decode_unsigned::deserialize_varint_cold_u128
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::deserialize_varint_cold_u128":{"R":["std::marker::Sized","de::read::Reader"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::boxed::Box<R>","std::process::ChildStdout","std::os::unix::net::UnixStream","std::io::Stdin","std::sys::unix::stdio::Stdin","std::fs::File","std::io::stdio::StdinRaw","std::io::Chain<T, U>","std::io::Repeat","std::collections::VecDeque<u8, A>","&std::net::TcpStream","std::io::Cursor<T>","std::io::impls::<impl std::io::Read for &mut R>","std::net::TcpStream","&'a std::sys::unix::fd::FileDesc","&'a std::os::unix::net::UnixStream","std::io::StdinLock<'_>","std::io::Take<T>","std::process::ChildStderr","&std::fs::File","std::io::Empty","std::io::BufReader<R>"]},"std::io::BufReader":{"R":["std::process::ChildStderr","std::io::Cursor<T>","std::io::Empty","std::os::unix::net::UnixStream","std::process::ChildStdout","std::io::Stdin","std::collections::VecDeque<u8, A>","&std::net::TcpStream","std::boxed::Box<R>","&'a std::sys::unix::fd::FileDesc","&std::fs::File","std::io::stdio::StdinRaw","std::io::Repeat","std::io::Chain<T, U>","std::fs::File","std::io::impls::<impl std::io::Read for &mut R>","&'a std::os::unix::net::UnixStream","std::io::StdinLock<'_>","std::io::Take<T>","std::net::TcpStream","std::io::BufReader<R>","std::sys::unix::stdio::Stdin"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::deserialize_varint_cold_u128":{"R":["<&mut T as de::read::Reader>","de::read::SliceReader","std::io::BufReader","features::impl_std::IoReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_unsigned::deserialize_varint_cold_u128(p0, p1);
+crate::varint::decode_unsigned::deserialize_varint_cold_u128(p0, p1);
+crate::varint::decode_unsigned::deserialize_varint_cold_u128(p0, p1);
-----------------
src/varint/decode_unsigned.rs varint::decode_unsigned::invalid_varint_discriminant
deps:{"varint::decode_unsigned::invalid_varint_discriminant":{"T":["std::marker::Sized"]}}
candidates:{"varint::decode_unsigned::invalid_varint_discriminant":{"T":["RUG_ANY"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // error::IntegerType
let mut p1 = MaybeUninit::uninit().assume_init(); // error::IntegerType
+varint::decode_unsigned::invalid_varint_discriminant(p0, p1);
+crate::varint::decode_unsigned::invalid_varint_discriminant(p0, p1);
+crate::varint::decode_unsigned::invalid_varint_discriminant(p0, p1);
-----------------
src/varint/decode_unsigned.rs varint::decode_unsigned::varint_decode_u16
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::varint_decode_u16":{"R":["std::marker::Sized","de::read::Reader"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::io::Empty","std::process::ChildStderr","std::io::StdinLock<'_>","std::process::ChildStdout","std::io::stdio::StdinRaw","&std::net::TcpStream","std::sys::unix::stdio::Stdin","std::io::Cursor<T>","std::io::BufReader<R>","std::io::Take<T>","std::io::Stdin","std::io::impls::<impl std::io::Read for &mut R>","std::io::Repeat","std::os::unix::net::UnixStream","&'a std::sys::unix::fd::FileDesc","&std::fs::File","std::fs::File","std::net::TcpStream","std::io::Chain<T, U>","std::collections::VecDeque<u8, A>","std::boxed::Box<R>","&'a std::os::unix::net::UnixStream"]},"std::io::BufReader":{"R":["std::os::unix::net::UnixStream","std::sys::unix::stdio::Stdin","std::io::Chain<T, U>","std::io::BufReader<R>","&'a std::sys::unix::fd::FileDesc","&'a std::os::unix::net::UnixStream","std::collections::VecDeque<u8, A>","std::io::StdinLock<'_>","std::process::ChildStderr","&std::net::TcpStream","std::boxed::Box<R>","std::process::ChildStdout","std::io::Repeat","std::fs::File","std::io::Stdin","std::io::Take<T>","std::io::Cursor<T>","std::io::Empty","&std::fs::File","std::net::TcpStream","std::io::impls::<impl std::io::Read for &mut R>","std::io::stdio::StdinRaw"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::varint_decode_u16":{"R":["<&mut T as de::read::Reader>","features::impl_std::IoReader","de::read::SliceReader","std::io::BufReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_unsigned::varint_decode_u16(p0, p1);
+crate::varint::decode_unsigned::varint_decode_u16(p0, p1);
+crate::varint::decode_unsigned::varint_decode_u16(p0, p1);
-----------------
src/varint/decode_unsigned.rs varint::decode_unsigned::varint_decode_u32
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::varint_decode_u32":{"R":["de::read::Reader","std::marker::Sized"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::process::ChildStdout","std::io::StdinLock<'_>","std::io::Chain<T, U>","std::io::Empty","std::io::Take<T>","std::io::stdio::StdinRaw","std::io::Stdin","std::io::BufReader<R>","&'a std::sys::unix::fd::FileDesc","std::sys::unix::stdio::Stdin","&std::fs::File","std::net::TcpStream","std::io::Repeat","std::os::unix::net::UnixStream","std::boxed::Box<R>","std::io::impls::<impl std::io::Read for &mut R>","&std::net::TcpStream","std::fs::File","&'a std::os::unix::net::UnixStream","std::io::Cursor<T>","std::collections::VecDeque<u8, A>","std::process::ChildStderr"]},"std::io::BufReader":{"R":["&std::fs::File","std::io::Empty","std::io::Repeat","std::os::unix::net::UnixStream","std::io::Cursor<T>","std::io::BufReader<R>","std::collections::VecDeque<u8, A>","std::net::TcpStream","std::process::ChildStdout","&std::net::TcpStream","&'a std::sys::unix::fd::FileDesc","std::io::StdinLock<'_>","std::io::impls::<impl std::io::Read for &mut R>","std::io::Take<T>","std::boxed::Box<R>","std::process::ChildStderr","std::io::Stdin","std::io::stdio::StdinRaw","std::sys::unix::stdio::Stdin","&'a std::os::unix::net::UnixStream","std::io::Chain<T, U>","std::fs::File"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::varint_decode_u32":{"R":["<&mut T as de::read::Reader>","features::impl_std::IoReader","de::read::SliceReader","std::io::BufReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_unsigned::varint_decode_u32(p0, p1);
+crate::varint::decode_unsigned::varint_decode_u32(p0, p1);
+crate::varint::decode_unsigned::varint_decode_u32(p0, p1);
-----------------
src/varint/decode_unsigned.rs varint::decode_unsigned::varint_decode_u64
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::varint_decode_u64":{"R":["de::read::Reader","std::marker::Sized"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::collections::VecDeque<u8, A>","std::sys::unix::stdio::Stdin","std::io::Repeat","std::io::impls::<impl std::io::Read for &mut R>","std::fs::File","std::os::unix::net::UnixStream","std::boxed::Box<R>","std::net::TcpStream","std::process::ChildStdout","std::io::StdinLock<'_>","&std::net::TcpStream","&'a std::sys::unix::fd::FileDesc","std::io::Cursor<T>","std::io::BufReader<R>","&'a std::os::unix::net::UnixStream","std::io::stdio::StdinRaw","std::io::Chain<T, U>","std::io::Stdin","std::io::Take<T>","std::process::ChildStderr","&std::fs::File","std::io::Empty"]},"std::io::BufReader":{"R":["std::io::stdio::StdinRaw","std::fs::File","std::process::ChildStdout","std::io::Take<T>","std::io::Chain<T, U>","std::os::unix::net::UnixStream","std::io::Cursor<T>","std::io::Repeat","std::sys::unix::stdio::Stdin","std::collections::VecDeque<u8, A>","&std::fs::File","&'a std::os::unix::net::UnixStream","&std::net::TcpStream","&'a std::sys::unix::fd::FileDesc","std::io::impls::<impl std::io::Read for &mut R>","std::io::Empty","std::io::Stdin","std::boxed::Box<R>","std::io::StdinLock<'_>","std::io::BufReader<R>","std::process::ChildStderr","std::net::TcpStream"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::varint_decode_u64":{"R":["features::impl_std::IoReader","<&mut T as de::read::Reader>","de::read::SliceReader","std::io::BufReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_unsigned::varint_decode_u64(p0, p1);
+crate::varint::decode_unsigned::varint_decode_u64(p0, p1);
+crate::varint::decode_unsigned::varint_decode_u64(p0, p1);
-----------------
src/varint/decode_unsigned.rs varint::decode_unsigned::varint_decode_usize
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::varint_decode_usize":{"R":["de::read::Reader","std::marker::Sized"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::net::TcpStream","std::os::unix::net::UnixStream","std::fs::File","std::io::Repeat","std::process::ChildStderr","std::io::BufReader<R>","&std::fs::File","std::io::StdinLock<'_>","std::io::stdio::StdinRaw","std::sys::unix::stdio::Stdin","std::io::Cursor<T>","&'a std::os::unix::net::UnixStream","std::io::Chain<T, U>","std::io::Stdin","std::boxed::Box<R>","&'a std::sys::unix::fd::FileDesc","std::process::ChildStdout","&std::net::TcpStream","std::io::Empty","std::io::impls::<impl std::io::Read for &mut R>","std::collections::VecDeque<u8, A>","std::io::Take<T>"]},"std::io::BufReader":{"R":["std::net::TcpStream","std::io::impls::<impl std::io::Read for &mut R>","std::io::Repeat","std::io::StdinLock<'_>","std::io::Empty","std::io::Take<T>","std::collections::VecDeque<u8, A>","std::io::Chain<T, U>","&std::fs::File","std::process::ChildStderr","std::boxed::Box<R>","std::io::Cursor<T>","&'a std::sys::unix::fd::FileDesc","std::io::stdio::StdinRaw","std::fs::File","std::process::ChildStdout","&'a std::os::unix::net::UnixStream","std::sys::unix::stdio::Stdin","&std::net::TcpStream","std::io::Stdin","std::io::BufReader<R>","std::os::unix::net::UnixStream"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::varint_decode_usize":{"R":["std::io::BufReader","features::impl_std::IoReader","<&mut T as de::read::Reader>","de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_unsigned::varint_decode_usize(p0, p1);
+crate::varint::decode_unsigned::varint_decode_usize(p0, p1);
+crate::varint::decode_unsigned::varint_decode_usize(p0, p1);
-----------------
src/varint/decode_unsigned.rs varint::decode_unsigned::varint_decode_u128
deps:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::varint_decode_u128":{"R":["std::marker::Sized","de::read::Reader"]}}
candidates:{"<&mut T as de::read::Reader>":{},"features::impl_std::IoReader":{"R":["std::boxed::Box<R>","std::io::BufReader<R>","&std::net::TcpStream","std::io::impls::<impl std::io::Read for &mut R>","std::io::Cursor<T>","std::fs::File","std::io::Repeat","std::net::TcpStream","std::io::Empty","std::process::ChildStdout","std::io::Chain<T, U>","&'a std::os::unix::net::UnixStream","std::io::stdio::StdinRaw","std::process::ChildStderr","std::io::Take<T>","std::io::Stdin","std::collections::VecDeque<u8, A>","std::io::StdinLock<'_>","&std::fs::File","std::os::unix::net::UnixStream","&'a std::sys::unix::fd::FileDesc","std::sys::unix::stdio::Stdin"]},"std::io::BufReader":{"R":["std::io::BufReader<R>","std::boxed::Box<R>","std::sys::unix::stdio::Stdin","std::io::Cursor<T>","std::io::Chain<T, U>","&'a std::os::unix::net::UnixStream","std::io::StdinLock<'_>","std::process::ChildStdout","std::io::Take<T>","std::net::TcpStream","std::collections::VecDeque<u8, A>","std::fs::File","std::io::impls::<impl std::io::Read for &mut R>","&'a std::sys::unix::fd::FileDesc","&std::net::TcpStream","std::io::Stdin","std::process::ChildStderr","&std::fs::File","std::io::Repeat","std::os::unix::net::UnixStream","std::io::Empty","std::io::stdio::StdinRaw"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"varint::decode_unsigned::varint_decode_u128":{"R":["features::impl_std::IoReader","std::io::BufReader","<&mut T as de::read::Reader>","de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
+varint::decode_unsigned::varint_decode_u128(p0, p1);
+crate::varint::decode_unsigned::varint_decode_u128(p0, p1);
+crate::varint::decode_unsigned::varint_decode_u128(p0, p1);
-----------------
src/varint/encode_signed.rs varint::encode_signed::varint_encode_i16
deps:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_signed::varint_encode_i16":{"W":["std::marker::Sized","enc::write::Writer"]}}
candidates:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["&std::io::Stdout","std::net::TcpStream","std::io::StdoutLock<'_>","std::io::stdio::StdoutRaw","&std::net::TcpStream","std::io::LineWriter<W>","std::io::Cursor<std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stderr","&std::io::Stderr","&std::fs::File","std::io::Sink","&'a std::os::unix::net::UnixStream","&std::io::Sink","std::process::ChildStdin","std::io::Cursor<&mut [u8]>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Stdout","std::os::unix::net::UnixStream","std::io::impls::<impl std::io::Write for &mut W>","std::io::BorrowedCursor<'a>","std::io::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<[u8; N]>","std::sys::unix::stdio::Stdout","&std::process::ChildStdin","std::collections::VecDeque<u8, A>","std::fs::File","std::io::StderrLock<'_>","std::io::BufWriter<W>","std::io::stdio::StderrRaw","std::boxed::Box<W>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::vec::Vec<u8, A>"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_signed::varint_encode_i16":{"W":["features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SliceWriter","enc::write::SizeWriter"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // W
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
let mut p2 = 0i16; // None+i16
+varint::encode_signed::varint_encode_i16(p0, p1, p2);
+crate::varint::encode_signed::varint_encode_i16(p0, p1, p2);
+crate::varint::encode_signed::varint_encode_i16(p0, p1, p2);
-----------------
src/varint/encode_signed.rs varint::encode_signed::varint_encode_i32
deps:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_signed::varint_encode_i32":{"W":["enc::write::Writer","std::marker::Sized"]}}
candidates:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::sys::unix::stdio::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::net::TcpStream","std::io::stdio::StdoutRaw","std::sys::unix::stdio::Stdout","std::io::Cursor<&mut [u8]>","std::io::stdio::StderrRaw","&std::io::Stderr","std::io::Stdout","std::io::BufWriter<W>","std::os::unix::net::UnixStream","std::process::ChildStdin","std::collections::VecDeque<u8, A>","std::io::Stderr","&std::process::ChildStdin","std::boxed::Box<W>","std::vec::Vec<u8, A>","&std::fs::File","std::io::StderrLock<'_>","&std::io::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::LineWriter<W>","std::io::impls::<impl std::io::Write for &mut W>","std::io::Sink","std::fs::File","std::io::Cursor<[u8; N]>","&'a std::os::unix::net::UnixStream","std::io::BorrowedCursor<'a>","&std::io::Sink","std::io::StdoutLock<'_>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<std::vec::Vec<u8, A>>","std::net::TcpStream"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_signed::varint_encode_i32":{"W":["enc::write::SliceWriter","features::impl_alloc::VecWriter","features::impl_std::IoWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // W
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
let mut p2 = 0i32; // None+i32
+varint::encode_signed::varint_encode_i32(p0, p1, p2);
+crate::varint::encode_signed::varint_encode_i32(p0, p1, p2);
+crate::varint::encode_signed::varint_encode_i32(p0, p1, p2);
-----------------
src/varint/encode_signed.rs varint::encode_signed::varint_encode_i64
deps:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_signed::varint_encode_i64":{"W":["std::marker::Sized","enc::write::Writer"]}}
candidates:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::collections::VecDeque<u8, A>","std::io::Cursor<&mut [u8]>","std::io::StdoutLock<'_>","std::io::Cursor<[u8; N]>","std::io::stdio::StderrRaw","std::boxed::Box<W>","std::io::BufWriter<W>","std::io::stdio::StdoutRaw","&'a std::os::unix::net::UnixStream","&std::io::Sink","std::vec::Vec<u8, A>","std::net::TcpStream","std::io::BorrowedCursor<'a>","std::io::impls::<impl std::io::Write for &mut W>","std::process::ChildStdin","&std::io::Stdout","std::os::unix::net::UnixStream","&std::process::ChildStdin","std::sys::unix::stdio::Stderr","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::LineWriter<W>","&std::net::TcpStream","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::fs::File","std::io::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::fs::File","std::io::Sink","std::sys::unix::stdio::Stdout","std::io::StderrLock<'_>","&std::io::Stderr"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_signed::varint_encode_i64":{"W":["enc::write::SizeWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","features::impl_alloc::VecWriter"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // W
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
let mut p2 = 0i64; // None+i64
+varint::encode_signed::varint_encode_i64(p0, p1, p2);
+crate::varint::encode_signed::varint_encode_i64(p0, p1, p2);
+crate::varint::encode_signed::varint_encode_i64(p0, p1, p2);
-----------------
src/varint/encode_signed.rs varint::encode_signed::varint_encode_i128
deps:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_signed::varint_encode_i128":{"W":["std::marker::Sized","enc::write::Writer"]}}
candidates:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["&std::net::TcpStream","&std::process::ChildStdin","std::net::TcpStream","std::io::BufWriter<W>","std::io::Stdout","std::os::unix::net::UnixStream","&std::fs::File","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Sink","std::sys::unix::stdio::Stderr","std::process::ChildStdin","&std::io::Stderr","std::io::BorrowedCursor<'a>","std::vec::Vec<u8, A>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<&mut [u8]>","std::io::LineWriter<W>","std::io::stdio::StdoutRaw","std::io::StdoutLock<'_>","std::boxed::Box<W>","std::fs::File","std::io::impls::<impl std::io::Write for &mut W>","&std::io::Sink","std::io::stdio::StderrRaw","std::sys::unix::stdio::Stdout","std::io::Stderr","&'a std::os::unix::net::UnixStream","std::io::StderrLock<'_>","&std::io::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::collections::VecDeque<u8, A>","std::io::Cursor<[u8; N]>","std::io::Cursor<std::vec::Vec<u8, A>>"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_signed::varint_encode_i128":{"W":["features::impl_alloc::VecWriter","features::impl_std::IoWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // W
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
let mut p2 = 0i128; // None+i128
+varint::encode_signed::varint_encode_i128(p0, p1, p2);
+crate::varint::encode_signed::varint_encode_i128(p0, p1, p2);
+crate::varint::encode_signed::varint_encode_i128(p0, p1, p2);
-----------------
src/varint/encode_signed.rs varint::encode_signed::varint_encode_isize
deps:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_signed::varint_encode_isize":{"W":["enc::write::Writer","std::marker::Sized"]}}
candidates:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::net::TcpStream","std::io::BufWriter<W>","std::io::StdoutLock<'_>","std::io::impls::<impl std::io::Write for &mut W>","&std::net::TcpStream","std::io::LineWriter<W>","std::io::StderrLock<'_>","&std::fs::File","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::stdio::StderrRaw","std::boxed::Box<W>","std::fs::File","std::sys::unix::stdio::Stdout","&std::io::Stderr","std::process::ChildStdin","std::io::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Stderr","std::collections::VecDeque<u8, A>","&std::io::Sink","std::vec::Vec<u8, A>","std::io::Cursor<[u8; N]>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<&mut [u8]>","&std::io::Stdout","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::BorrowedCursor<'a>","std::sys::unix::stdio::Stderr","std::io::stdio::StdoutRaw","&'a std::os::unix::net::UnixStream","&std::process::ChildStdin","std::os::unix::net::UnixStream","std::io::Sink"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_signed::varint_encode_isize":{"W":["features::impl_std::IoWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter","enc::write::SliceWriter"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // W
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
let mut p2 = 0isize; // None+isize
+varint::encode_signed::varint_encode_isize(p0, p1, p2);
+crate::varint::encode_signed::varint_encode_isize(p0, p1, p2);
+crate::varint::encode_signed::varint_encode_isize(p0, p1, p2);
-----------------
src/varint/encode_unsigned.rs varint::encode_unsigned::varint_encode_u16
deps:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_unsigned::varint_encode_u16":{"W":["enc::write::Writer","std::marker::Sized"]}}
candidates:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["&'a std::os::unix::net::UnixStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<[u8; N]>","std::sys::unix::stdio::Stdout","std::io::StdoutLock<'_>","std::io::stdio::StdoutRaw","std::io::BorrowedCursor<'a>","std::io::BufWriter<W>","&std::io::Sink","std::io::Cursor<&mut [u8]>","std::io::Stdout","std::net::TcpStream","&std::process::ChildStdin","std::vec::Vec<u8, A>","std::io::LineWriter<W>","&std::net::TcpStream","std::io::impls::<impl std::io::Write for &mut W>","std::os::unix::net::UnixStream","std::io::Stderr","std::io::StderrLock<'_>","std::sys::unix::stdio::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::io::Stdout","std::io::stdio::StderrRaw","&std::io::Stderr","std::collections::VecDeque<u8, A>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::fs::File","std::process::ChildStdin","std::boxed::Box<W>","std::fs::File","std::io::Sink","std::io::Cursor<std::vec::Vec<u8, A>>"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_unsigned::varint_encode_u16":{"W":["enc::write::SizeWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SliceWriter"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // W
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
let mut p2 = 0u16; // None+u16
+varint::encode_unsigned::varint_encode_u16(p0, p1, p2);
+crate::varint::encode_unsigned::varint_encode_u16(p0, p1, p2);
+crate::varint::encode_unsigned::varint_encode_u16(p0, p1, p2);
-----------------
src/varint/encode_unsigned.rs varint::encode_unsigned::varint_encode_u32
deps:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_unsigned::varint_encode_u32":{"W":["std::marker::Sized","enc::write::Writer"]}}
candidates:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::sys::unix::stdio::Stdout","std::io::stdio::StdoutRaw","&std::io::Stderr","std::io::BufWriter<W>","std::vec::Vec<u8, A>","std::io::stdio::StderrRaw","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::collections::VecDeque<u8, A>","std::io::StderrLock<'_>","std::io::Cursor<&mut [u8]>","std::boxed::Box<W>","std::io::StdoutLock<'_>","&std::fs::File","std::io::LineWriter<W>","std::os::unix::net::UnixStream","&std::io::Stdout","std::io::BorrowedCursor<'a>","std::io::Stderr","std::io::Cursor<std::vec::Vec<u8, A>>","std::fs::File","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<[u8; N]>","&std::net::TcpStream","&std::process::ChildStdin","&std::io::Sink","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Stdout","std::net::TcpStream","&'a std::os::unix::net::UnixStream","std::io::impls::<impl std::io::Write for &mut W>","std::sys::unix::stdio::Stderr","std::io::Sink","std::process::ChildStdin"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_unsigned::varint_encode_u32":{"W":["features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SizeWriter","enc::write::SliceWriter"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // W
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
let mut p2 = 0u32; // None+u32
+varint::encode_unsigned::varint_encode_u32(p0, p1, p2);
+crate::varint::encode_unsigned::varint_encode_u32(p0, p1, p2);
+crate::varint::encode_unsigned::varint_encode_u32(p0, p1, p2);
-----------------
src/varint/encode_unsigned.rs varint::encode_unsigned::varint_encode_u64
deps:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_unsigned::varint_encode_u64":{"W":["std::marker::Sized","enc::write::Writer"]}}
candidates:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["&std::process::ChildStdin","std::io::StderrLock<'_>","std::sys::unix::stdio::Stdout","&std::io::Stderr","std::collections::VecDeque<u8, A>","std::io::Stdout","std::io::Stderr","std::io::Cursor<[u8; N]>","std::io::BorrowedCursor<'a>","std::io::BufWriter<W>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::fs::File","std::io::impls::<impl std::io::Write for &mut W>","std::io::stdio::StdoutRaw","std::net::TcpStream","std::io::Cursor<&mut [u8]>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::stdio::StderrRaw","&std::io::Stdout","std::io::StdoutLock<'_>","&std::io::Sink","std::os::unix::net::UnixStream","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::LineWriter<W>","std::vec::Vec<u8, A>","std::boxed::Box<W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::fs::File","&'a std::os::unix::net::UnixStream","std::io::Sink","&std::net::TcpStream","std::sys::unix::stdio::Stderr","std::process::ChildStdin"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_unsigned::varint_encode_u64":{"W":["<&mut T as enc::write::Writer>","enc::write::SliceWriter","enc::write::SizeWriter","features::impl_std::IoWriter","features::impl_alloc::VecWriter"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // W
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
let mut p2 = 0u64; // None+u64
+varint::encode_unsigned::varint_encode_u64(p0, p1, p2);
+crate::varint::encode_unsigned::varint_encode_u64(p0, p1, p2);
+crate::varint::encode_unsigned::varint_encode_u64(p0, p1, p2);
-----------------
src/varint/encode_unsigned.rs varint::encode_unsigned::varint_encode_u128
deps:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_unsigned::varint_encode_u128":{"W":["std::marker::Sized","enc::write::Writer"]}}
candidates:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::process::ChildStdin","std::io::BorrowedCursor<'a>","std::io::Stdout","std::sys::unix::stdio::Stdout","std::boxed::Box<W>","&std::net::TcpStream","&std::process::ChildStdin","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::stdio::StdoutRaw","std::sys::unix::stdio::Stderr","std::io::impls::<impl std::io::Write for &mut W>","std::os::unix::net::UnixStream","std::fs::File","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::io::Sink","std::io::LineWriter<W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Sink","&std::fs::File","std::io::StderrLock<'_>","&'a std::os::unix::net::UnixStream","std::collections::VecDeque<u8, A>","&std::io::Stdout","std::io::Cursor<&mut [u8]>","&std::io::Stderr","std::io::stdio::StderrRaw","std::io::StdoutLock<'_>","std::io::Cursor<[u8; N]>","std::net::TcpStream","std::vec::Vec<u8, A>","std::io::Stderr","std::io::BufWriter<W>","std::io::Cursor<std::boxed::Box<[u8], A>>"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_unsigned::varint_encode_u128":{"W":["features::impl_alloc::VecWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SizeWriter"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // W
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
let mut p2 = 0u128; // None+u128
+varint::encode_unsigned::varint_encode_u128(p0, p1, p2);
+crate::varint::encode_unsigned::varint_encode_u128(p0, p1, p2);
+crate::varint::encode_unsigned::varint_encode_u128(p0, p1, p2);
-----------------
src/varint/encode_unsigned.rs varint::encode_unsigned::varint_encode_usize
deps:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_unsigned::varint_encode_usize":{"W":["std::marker::Sized","enc::write::Writer"]}}
candidates:{"<&mut T as enc::write::Writer>":{},"features::impl_std::IoWriter":{"W":["&std::io::Stdout","std::io::stdio::StdoutRaw","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Stdout","std::process::ChildStdin","std::io::Cursor<&mut [u8]>","&std::io::Stderr","std::io::impls::<impl std::io::Write for &mut W>","std::io::BufWriter<W>","std::io::Stderr","std::collections::VecDeque<u8, A>","std::fs::File","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&'a std::os::unix::net::UnixStream","std::sys::unix::stdio::Stderr","&std::net::TcpStream","std::io::Cursor<[u8; N]>","std::net::TcpStream","std::boxed::Box<W>","&std::process::ChildStdin","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::sys::unix::stdio::Stdout","std::io::StderrLock<'_>","std::io::Sink","std::io::StdoutLock<'_>","std::os::unix::net::UnixStream","&std::io::Sink","std::io::BorrowedCursor<'a>","std::io::Cursor<std::vec::Vec<u8, A>>","std::vec::Vec<u8, A>","&std::fs::File","std::io::LineWriter<W>","std::io::stdio::StderrRaw"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"varint::encode_unsigned::varint_encode_usize":{"W":["features::impl_alloc::VecWriter","enc::write::SliceWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // W
let mut p1 = MaybeUninit::uninit().assume_init(); // config::internal::Endian
let mut p2 = 0usize; // None+usize
+varint::encode_unsigned::varint_encode_usize(p0, p1, p2);
+crate::varint::encode_unsigned::varint_encode_usize(p0, p1, p2);
+crate::varint::encode_unsigned::varint_encode_usize(p0, p1, p2);
-----------------
src/config.rs config::standard
deps:{}
candidates:{}
+config::standard();
+crate::config::standard();
+crate::config::standard();
-----------------
src/config.rs config::legacy
deps:{}
candidates:{}
+config::legacy();
+crate::config::legacy();
+crate::config::legacy();
-----------------
src/config.rs config::generate
deps:{"config::generate":{"E":["std::marker::Sized"],"I":["std::marker::Sized"],"L":["std::marker::Sized"]}}
candidates:{"config::generate":{"E":["RUG_ANY"],"I":["RUG_ANY"],"L":["RUG_ANY"]}}
+config::generate();
+crate::config::generate();
+crate::config::generate();
-----------------
src/de/impl_core.rs de::impl_core::collect_into_array
deps:{"<&mut I as std::iter::Iterator>":{},"de::impl_core::collect_into_array":{"E":["std::marker::Sized"],"I":["std::iter::Iterator","std::marker::Sized"],"T":["std::marker::Sized"]}}
candidates:{"<&mut I as std::iter::Iterator>":{},"de::impl_core::collect_into_array":{"E":["RUG_ANY"],"I":["std::vec::DrainFilter<'_, T, F, A>","std::collections::btree_map::IntoValues<K, V, A>","std::collections::binary_heap::IntoIter<T>","std::process::CommandEnvs<'a>","std::ops::RangeFrom<A>","std::slice::SplitInclusiveMut<'a, T, P>","std::iter::Scan<I, St, F>","std::slice::ChunksExact<'a, T>","std::os::unix::net::ancillary::AncillaryDataIter<'a, T>","std::str::CharIndices<'a>","std::collections::vec_deque::Drain<'_, T, A>","std::str::MatchIndices<'a, P>","std::env::Vars","std::iter::Take<I>","std::iter::Zip<A, B>","std::iter::MapWhile<I, P>","std::collections::linked_list::IterMut<'a, T>","std::iter::ArrayChunks<I, N>","std::collections::btree_map::Keys<'a, K, V>","std::collections::hash_map::IntoValues<K, V>","std::sys_common::wtf8::EncodeWide<'a>","std::io::Lines<B>","std::collections::vec_deque::IterMut<'a, T>","std::slice::SplitMut<'a, T, P>","std::env::Args","std::char::ToLowercase","std::str::RSplitN<'a, P>","std::slice::RChunks<'a, T>","std::env::SplitPaths<'a>","std::collections::hash_set::DrainFilter<'_, K, F>","std::slice::RChunksMut<'a, T>","std::result::IntoIter<T>","std::collections::hash_map::Values<'a, K, V>","std::iter::Map<I, F>","std::str::Bytes<'_>","std::str::SplitTerminator<'a, P>","std::collections::btree_set::Range<'a, T>","std::iter::RepeatWith<F>","std::os::unix::net::Messages<'a>","std::collections::binary_heap::IntoIterSorted<T>","std::iter::Peekable<I>","std::iter::Successors<T, F>","core::slice::iter::GenericSplitN<I>","std::option::IterMut<'a, A>","std::collections::binary_heap::Iter<'a, T>","std::option::IntoIter<A>","std::collections::hash_map::ValuesMut<'a, K, V>","std::iter::OnceWith<F>","std::char::DecodeUtf16<I>","std::collections::btree_map::IntoIter<K, V, A>","std::slice::ArrayChunksMut<'a, T, N>","std::collections::btree_map::DrainFilter<'_, K, V, F, A>","std::sync::mpsc::TryIter<'a, T>","std::vec::IntoIter<T, A>","std::iter::Fuse<I>","std::slice::GroupByMut<'a, T, P>","std::collections::hash_set::Difference<'a, T, S>","std::str::RMatchIndices<'a, P>","std::collections::hash_set::IntoIter<K>","std::ops::Range<A>","std::str::SplitInclusive<'a, P>","std::collections::btree_set::Intersection<'a, T, A>","std::sys::unix::fs::ReadDir","std::slice::RChunksExact<'a, T>","std::iter::TakeWhile<I, P>","std::collections::hash_set::Union<'a, T, S>","std::slice::ArrayWindows<'a, T, N>","std::collections::vec_deque::IntoIter<T, A>","std::env::VarsOs","std::collections::btree_map::RangeMut<'a, K, V>","std::path::Components<'a>","std::iter::Flatten<I>","std::collections::hash_map::DrainFilter<'_, K, V, F>","std::iter::Inspect<I, F>","std::iter::FilterMap<I, F>","std::iter::Cycle<I>","std::collections::linked_list::DrainFilter<'_, T, F>","std::str::LinesAny<'a>","std::slice::Iter<'a, T>","std::slice::RSplitMut<'a, T, P>","std::collections::hash_map::IntoIter<K, V>","std::collections::btree_set::Iter<'a, T>","std::collections::linked_list::Iter<'a, T>","std::sys_common::wtf8::Wtf8CodePoints<'a>","std::slice::SplitInclusive<'a, T, P>","std::str::Chars<'a>","std::str::SplitWhitespace<'a>","std::collections::btree_set::Union<'a, T>","std::sys_common::net::LookupHost","std::ascii::EscapeDefault","std::str::SplitAsciiWhitespace<'a>","std::str::Utf8Chunks<'a>","std::net::IntoIncoming","std::boxed::Box<I, A>","std::iter::Chain<A, B>","<&mut I as std::iter::Iterator>","std::str::Split<'a, P>","std::slice::RSplitNMut<'a, T, P>","std::collections::binary_heap::DrainSorted<'_, T>","std::collections::hash_set::SymmetricDifference<'a, T, S>","std::char::EscapeDefault","std::collections::btree_map::Iter<'a, K, V>","std::char::EscapeDebug","std::string::Drain<'_>","std::slice::RChunksExactMut<'a, T>","std::collections::btree_set::SymmetricDifference<'a, T>","std::sync::mpsc::IntoIter<T>","std::fs::ReadDir","std::str::Lines<'a>","std::collections::btree_map::Values<'a, K, V>","std::slice::Windows<'a, T>","std::collections::hash_map::Keys<'a, K, V>","std::collections::linked_list::IntoIter<T>","std::char::EscapeUnicode","std::io::Split<B>","std::slice::RSplitN<'a, T, P>","std::char::ToUppercase","std::slice::SplitNMut<'a, T, P>","std::slice::ChunksMut<'a, T>","std::collections::hash_map::Drain<'a, K, V>","std::sys::unix::os::SplitPaths<'a>","std::result::Iter<'a, T>","std::iter::SkipWhile<I, P>","std::iter::ByRefSized<'_, I>","std::slice::IterMut<'a, T>","std::iter::RepeatN<A>","std::slice::SplitN<'a, T, P>","std::slice::Chunks<'a, T>","std::collections::btree_set::DrainFilter<'_, T, F, A>","std::collections::vec_deque::Iter<'a, T>","std::array::IntoIter<T, N>","std::collections::hash_map::IterMut<'a, K, V>","std::iter::IntersperseWith<I, G>","std::collections::btree_map::ValuesMut<'a, K, V>","std::str::RMatches<'a, P>","std::str::EncodeUtf16<'a>","std::iter::Cloned<I>","std::iter::Once<T>","std::path::Iter<'a>","std::sync::mpsc::Iter<'a, T>","std::iter::Skip<I>","std::iter::FromFn<F>","std::iter::Intersperse<I>","std::vec::Splice<'_, I, A>","std::iter::adapters::flatten::FlattenCompat<I, U>","std::str::SplitN<'a, P>","std::slice::EscapeAscii<'a>","std::os::unix::net::ScmRights<'a>","std::ops::RangeInclusive<A>","std::iter::Filter<I, P>","std::collections::btree_set::Difference<'a, T, A>","std::slice::ChunksExactMut<'a, T>","std::env::ArgsOs","std::slice::GroupBy<'a, T, P>","std::io::Bytes<R>","std::iter::Rev<I>","std::str::Matches<'a, P>","std::ops::index_range::IndexRange","std::collections::hash_map::IntoKeys<K, V>","std::net::Incoming<'a>","std::process::CommandArgs<'a>","std::iter::FlatMap<I, U, F>","std::collections::hash_set::Iter<'a, K>","std::slice::ArrayChunks<'a, T, N>","std::sys::unix::process::process_common::CommandArgs<'a>","std::vec::Drain<'_, T, A>","std::char::CaseMappingIter","std::sys_common::wstr::WStrUnits<'_>","std::option::Item<A>","core::error::Source<'a>","std::collections::btree_set::IntoIter<T, A>","std::result::IterMut<'a, T>","std::slice::RSplit<'a, T, P>","std::os::unix::net::Incoming<'a>","std::str::RSplit<'a, P>","std::iter::sources::from_generator::FromGenerator<G>","std::collections::hash_map::Iter<'a, K, V>","std::str::EscapeUnicode<'a>","std::iter::Empty<T>","std::sys::unix::os::Env","std::iter::Repeat<A>","std::collections::binary_heap::Drain<'_, T>","std::sys::unix::args::Args","std::str::EscapeDebug<'a>","std::str::EscapeDefault<'a>","std::os::unix::net::ScmCredentials<'a>","std::slice::Split<'a, T, P>","std::option::Iter<'a, A>","std::collections::btree_map::Range<'a, K, V>","std::collections::btree_map::IterMut<'a, K, V>","std::iter::adapters::GenericShunt<'_, I, R>","std::collections::btree_map::IntoKeys<K, V, A>","std::str::RSplitTerminator<'a, P>","std::iter::StepBy<I>","std::iter::Copied<I>","std::iter::Enumerate<I>","std::collections::hash_set::Intersection<'a, T, S>","std::path::Ancestors<'a>","std::collections::hash_set::Drain<'a, K>"],"T":["RUG_ANY"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // I
+de::impl_core::collect_into_array(p0);
+crate::de::impl_core::collect_into_array(p0);
+crate::de::impl_core::collect_into_array(p0);
-----------------
src/de/impl_core.rs de::impl_core::slice_assume_init_mut
deps:{"de::impl_core::slice_assume_init_mut":{"T":["std::marker::Sized"]}}
candidates:{"de::impl_core::slice_assume_init_mut":{"T":["RUG_ANY"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // [std::mem::MaybeUninit<T>]
+de::impl_core::slice_assume_init_mut(p0);
+crate::de::impl_core::slice_assume_init_mut(p0);
+crate::de::impl_core::slice_assume_init_mut(p0);
-----------------
src/de/impl_core.rs de::impl_core::uninit_array
deps:{"de::impl_core::uninit_array":{"T":["std::marker::Sized"]}}
candidates:{"de::impl_core::uninit_array":{"T":["RUG_ANY"]}}
+de::impl_core::uninit_array();
+crate::de::impl_core::uninit_array();
+crate::de::impl_core::uninit_array();
-----------------
src/de/impl_core.rs de::impl_core::array_assume_init
deps:{"de::impl_core::array_assume_init":{"T":["std::marker::Sized"]}}
candidates:{"de::impl_core::array_assume_init":{"T":["RUG_ANY"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // [std::mem::MaybeUninit<T>; N]
+de::impl_core::array_assume_init(p0);
+crate::de::impl_core::array_assume_init(p0);
+crate::de::impl_core::array_assume_init(p0);
-----------------
src/de/impls.rs de::impls::utf8_char_width
deps:{}
candidates:{}
let mut p0 = 0u8; // None+u8
+de::impls::utf8_char_width(p0);
+crate::de::impls::utf8_char_width(p0);
+crate::de::impls::utf8_char_width(p0);
-----------------
src/de/mod.rs de::decode_option_variant
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"de::decode_option_variant":{"D":["std::marker::Sized","de::Decoder"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decode_option_variant":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
let mut p1 = "sample"; // None+&str
+de::decode_option_variant(p0, &p1);
+crate::de::decode_option_variant(p0, &p1);
+crate::de::decode_option_variant(p0, &p1);
-----------------
src/de/mod.rs de::decode_slice_len
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decode_slice_len":{"D":["std::marker::Sized","de::Decoder"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decode_slice_len":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::decode_slice_len(p0);
+crate::de::decode_slice_len(p0);
+crate::de::decode_slice_len(p0);
-----------------
src/enc/impls.rs enc::impls::encode_utf8
deps:{"<&mut T as enc::write::Writer>":{},"enc::impls::encode_utf8":{"impl Writer":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&mut T as enc::write::Writer>":{},"enc::impls::encode_utf8":{"impl Writer":["features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SliceWriter","enc::write::SizeWriter"]},"features::impl_std::IoWriter":{"W":["&'a std::os::unix::net::UnixStream","&std::io::Stderr","std::io::StderrLock<'_>","std::io::BorrowedCursor<'a>","std::sys::unix::stdio::Stdout","&std::net::TcpStream","std::io::StdoutLock<'_>","std::io::impls::<impl std::io::Write for &mut W>","&std::io::Sink","&std::process::ChildStdin","&std::io::Stdout","std::boxed::Box<W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::BufWriter<W>","std::fs::File","std::process::ChildStdin","std::io::Sink","std::io::Stderr","std::io::Stdout","std::io::LineWriter<W>","std::io::stdio::StderrRaw","std::io::stdio::StdoutRaw","std::io::Cursor<std::vec::Vec<u8, A>>","std::collections::VecDeque<u8, A>","std::net::TcpStream","std::os::unix::net::UnixStream","std::vec::Vec<u8, A>","std::io::Cursor<&mut [u8]>","&std::fs::File","std::io::Cursor<[u8; N]>","std::sys::unix::stdio::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<std::boxed::Box<[u8], A>>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // impl Writer
let mut p1 = 'a'; // None+char
+enc::impls::encode_utf8(p0, p1);
+crate::enc::impls::encode_utf8(p0, p1);
+crate::enc::impls::encode_utf8(p0, p1);
-----------------
src/enc/mod.rs enc::encode_option_variant
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy"]},"enc::encode_option_variant":{"E":["std::marker::Sized","enc::Encoder"],"T":["std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encode_option_variant":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"],"T":["RUG_ANY"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>"]},"features::impl_std::IoWriter":{"W":["std::vec::Vec<u8, A>","&std::process::ChildStdin","std::io::Cursor<[u8; N]>","&'a std::os::unix::net::UnixStream","std::io::Sink","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stderr","std::io::Stderr","&std::fs::File","std::fs::File","std::io::impls::<impl std::io::Write for &mut W>","std::io::StderrLock<'_>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::io::Stdout","&std::io::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>","std::boxed::Box<W>","std::process::ChildStdin","std::collections::VecDeque<u8, A>","&std::net::TcpStream","std::io::stdio::StdoutRaw","std::net::TcpStream","std::io::LineWriter<W>","&std::io::Sink","std::io::Stdout","std::os::unix::net::UnixStream","std::io::StdoutLock<'_>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::BufWriter<W>","std::sys::unix::stdio::Stdout","std::io::stdio::StderrRaw","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::BorrowedCursor<'a>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // E
let mut p1 = & MaybeUninit::uninit().assume_init(); // std::option::Option<T>
+enc::encode_option_variant(p0, p1);
+crate::enc::encode_option_variant(p0, p1);
+crate::enc::encode_option_variant(p0, p1);
-----------------
src/enc/mod.rs enc::encode_slice_len
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"enc::encode_slice_len":{"E":["std::marker::Sized","enc::Encoder"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encode_slice_len":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter","features::impl_std::IoWriter"]},"features::impl_std::IoWriter":{"W":["std::io::StdoutLock<'_>","&std::io::Stderr","std::sys::unix::stdio::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::stdio::StderrRaw","std::process::ChildStdin","std::io::Stdout","std::sys::unix::stdio::Stderr","std::net::TcpStream","&std::io::Stdout","std::io::StderrLock<'_>","&std::fs::File","std::io::Stderr","std::collections::VecDeque<u8, A>","std::io::impls::<impl std::io::Write for &mut W>","std::io::BorrowedCursor<'a>","std::io::stdio::StdoutRaw","std::io::Cursor<std::vec::Vec<u8, A>>","&std::io::Sink","&std::process::ChildStdin","std::io::Cursor<&mut [u8]>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::vec::Vec<u8, A>","std::fs::File","std::boxed::Box<W>","std::os::unix::net::UnixStream","std::io::Sink","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::net::TcpStream","std::io::BufWriter<W>","std::io::LineWriter<W>","&'a std::os::unix::net::UnixStream","std::io::Cursor<[u8; N]>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // E
let mut p1 = 0usize; // None+usize
+enc::encode_slice_len(p0, p1);
+crate::enc::encode_slice_len(p0, p1);
+crate::enc::encode_slice_len(p0, p1);
-----------------
src/lib.rs encode_into_slice
deps:{"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"enc::impls::<impl enc::Encode for &'a T>":{},"encode_into_slice":{"C":["config::Config","std::marker::Sized"],"E":["std::marker::Sized","enc::Encode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"K":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized","std::cmp::Ord"],"V":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord","de::Decode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::Bound":{"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::hash::Hash","de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized","std::cmp::Eq"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::marker::Sized","std::hash::Hash","de::BorrowDecode","de::Decode","std::cmp::Eq","enc::Encode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]}}
candidates:{"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Fixint","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Configuration","config::Limit","config::Varint","config::BigEndian","config::LittleEndian","config::NoLimit"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::impls::<impl enc::Encode for &'a T>":{},"encode_into_slice":{"C":["<T as config::Config>"],"E":["std::num::NonZeroI128","std::collections::HashMap","std::net::SocketAddrV6","std::net::SocketAddr","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::vec::Vec","std::num::NonZeroI32","std::net::SocketAddrV4","std::rc::Rc","std::sync::atomic::AtomicI16","std::collections::HashSet","std::sync::RwLock","std::sync::atomic::AtomicU32","std::string::String","std::option::Option","std::boxed::Box","std::num::NonZeroU8","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroI8","std::num::NonZeroU32","std::num::NonZeroU16","std::collections::BTreeSet","std::collections::Bound","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::path::PathBuf","std::time::Duration","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::num::NonZeroU64","std::result::Result","std::net::Ipv4Addr","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::net::IpAddr","std::ops::Range","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::cell::Cell","std::num::NonZeroUsize","std::collections::VecDeque","std::sync::Arc","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::sync::Mutex","std::sync::atomic::AtomicBool","std::borrow::Cow","std::marker::PhantomData","std::num::NonZeroU128"]},"std::borrow::Cow":{"B":["std::path::Path","<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroUsize","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroU128","std::net::Ipv4Addr","std::num::NonZeroIsize","std::net::IpAddr","std::num::NonZeroI32","std::net::SocketAddr","std::time::SystemTime","std::rc::Rc","std::num::NonZeroU16","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroI128","std::cell::Cell","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroU8","std::marker::PhantomData","std::option::Option","std::num::NonZeroU64","std::num::NonZeroI64"],"V":["std::sync::Arc","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::collections::HashMap","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::sync::Mutex","std::boxed::Box","std::net::SocketAddrV6","std::borrow::Cow","std::ffi::CString","std::sync::atomic::AtomicI32","std::sync::RwLock","std::collections::VecDeque","std::result::Result","std::num::NonZeroI16","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::cell::Cell","std::cell::RefCell","std::num::NonZeroU128","std::time::SystemTime","std::ops::Range","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::collections::Bound","std::net::SocketAddr","std::num::NonZeroU64","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::num::NonZeroU8","std::net::Ipv4Addr","std::string::String","std::time::Duration","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::path::PathBuf","std::collections::HashSet","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::vec::Vec","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::net::IpAddr","std::rc::Rc","std::collections::BTreeMap","std::collections::BinaryHeap","std::num::NonZeroI128","std::ops::RangeInclusive","std::option::Option","std::net::SocketAddrV4"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::ffi::CString","std::sync::Arc","std::cell::RefCell","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroU32","std::num::NonZeroI128","std::rc::Rc","std::num::NonZeroI64","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroIsize","std::net::IpAddr","std::num::NonZeroI16","std::string::String","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroU8","std::num::NonZeroU128"]},"std::collections::BinaryHeap":{"T":["std::string::String","std::option::Option","std::cell::Cell","std::num::NonZeroI16","std::num::NonZeroI8","std::marker::PhantomData","std::num::NonZeroU32","std::time::Duration","std::net::SocketAddr","std::rc::Rc","std::cell::RefCell","std::sync::Arc","std::num::NonZeroI64","std::num::NonZeroU64","std::num::NonZeroU16","std::net::IpAddr","std::num::NonZeroIsize","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroI32","std::net::SocketAddrV4","std::num::NonZeroU8"]},"std::collections::Bound":{"T":["std::net::SocketAddrV4","std::collections::Bound","std::sync::Mutex","std::collections::HashSet","std::rc::Rc","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::time::SystemTime","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::result::Result","std::num::NonZeroU16","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroU128","std::path::PathBuf","std::num::NonZeroUsize","std::num::NonZeroI16","std::collections::BTreeSet","std::num::NonZeroI128","std::num::NonZeroI64","std::num::NonZeroU64","std::sync::Arc","std::ffi::CString","std::cell::Cell","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::boxed::Box","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::sync::RwLock","std::sync::atomic::AtomicI8","std::cell::RefCell","std::borrow::Cow","std::collections::HashMap","std::num::NonZeroU8","std::string::String","std::net::Ipv6Addr","std::option::Option","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::vec::Vec","std::net::SocketAddrV6","std::collections::BTreeMap","std::num::NonZeroU32","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::ops::Range","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::sync::atomic::AtomicBool"]},"std::collections::HashMap":{"K":["std::num::NonZeroI64","std::net::SocketAddr","std::time::Duration","std::rc::Rc","std::ffi::CString","std::net::IpAddr","std::net::SocketAddrV4","std::time::SystemTime","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroU32","std::string::String","std::net::Ipv4Addr","std::num::NonZeroI128","std::net::Ipv6Addr","std::num::NonZeroU16"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::Mutex","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::ffi::CString","std::net::IpAddr","std::collections::Bound","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::collections::BTreeMap","std::num::NonZeroI64","std::net::SocketAddrV6","std::num::NonZeroU8","std::boxed::Box","std::sync::atomic::AtomicI8","std::time::SystemTime","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::path::PathBuf","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::cell::RefCell","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::marker::PhantomData","std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroIsize","std::result::Result","std::cell::Cell","std::ops::Range","std::option::Option","std::sync::atomic::AtomicU16","std::collections::HashMap","std::string::String","std::collections::BinaryHeap","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::num::NonZeroU64","std::collections::BTreeSet","std::sync::RwLock","std::ops::RangeInclusive","std::rc::Rc","std::sync::Arc","std::num::NonZeroI128","std::collections::HashSet","std::vec::Vec","std::sync::atomic::AtomicI32"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::sync::Arc","std::num::NonZeroUsize","std::net::IpAddr","std::time::SystemTime","std::string::String","std::num::NonZeroI8","std::marker::PhantomData","std::option::Option","std::ffi::CString","std::net::SocketAddrV6","std::num::NonZeroU16","std::num::NonZeroI32","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroIsize","std::num::NonZeroU64","std::num::NonZeroU8","std::num::NonZeroU128"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicU32","std::ops::Range","std::num::NonZeroI128","std::net::IpAddr","std::time::Duration","std::collections::HashSet","std::sync::Arc","std::collections::BTreeSet","std::collections::Bound","std::num::NonZeroU32","std::vec::Vec","std::collections::HashMap","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::option::Option","std::collections::BinaryHeap","std::num::NonZeroU16","std::num::NonZeroIsize","std::time::SystemTime","std::num::NonZeroUsize","std::ops::RangeInclusive","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::sync::Mutex","std::net::SocketAddrV4","std::rc::Rc","std::cell::RefCell","std::result::Result","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::ffi::CString","std::sync::atomic::AtomicU16","std::path::PathBuf","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::net::SocketAddrV6","std::sync::RwLock","std::num::NonZeroU8","std::collections::VecDeque","std::collections::BTreeMap","std::net::SocketAddr","std::boxed::Box","std::num::NonZeroI8","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::cell::Cell","std::num::NonZeroI16","std::borrow::Cow","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::string::String","std::num::NonZeroU128","std::num::NonZeroI32"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::string::String","std::rc::Rc","std::marker::PhantomData","std::num::NonZeroU16","std::ops::RangeInclusive","std::vec::Vec","std::collections::BinaryHeap","std::num::NonZeroU8","std::net::Ipv4Addr","std::net::SocketAddrV6","std::time::Duration","std::time::SystemTime","std::num::NonZeroU64","std::collections::HashMap","std::num::NonZeroI64","std::num::NonZeroI128","std::net::SocketAddr","std::cell::Cell","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::borrow::Cow","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::collections::Bound","std::sync::Mutex","std::result::Result","std::num::NonZeroI8","std::cell::RefCell","std::net::Ipv6Addr","std::collections::HashSet","std::num::NonZeroU32","std::sync::Arc","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::ops::Range","std::sync::RwLock","std::ffi::CString","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::boxed::Box","std::net::IpAddr","std::num::NonZeroI16","std::collections::BTreeMap","std::path::PathBuf","std::num::NonZeroUsize","std::num::NonZeroI32","std::option::Option","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::ops::RangeInclusive","std::collections::HashMap","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::string::String","std::ffi::CString","std::net::Ipv6Addr","std::time::Duration","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::collections::HashSet","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::collections::VecDeque","std::collections::BTreeMap","std::net::Ipv4Addr","std::cell::RefCell","std::sync::Arc","std::collections::BTreeSet","std::vec::Vec","std::collections::Bound","std::borrow::Cow","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::rc::Rc","std::num::NonZeroI64","std::num::NonZeroU64","std::num::NonZeroI128","std::num::NonZeroIsize","std::net::IpAddr","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::num::NonZeroU16","std::net::SocketAddrV6","std::net::SocketAddrV4","std::num::NonZeroU8","std::result::Result","std::num::NonZeroU128","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::boxed::Box","std::num::NonZeroU32","std::net::SocketAddr","std::option::Option","std::sync::Mutex","std::cell::Cell","std::ops::Range","std::sync::RwLock","std::marker::PhantomData"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::collections::HashSet","std::collections::BinaryHeap","std::ops::Range","std::sync::atomic::AtomicU32","std::ffi::CString","std::result::Result","std::boxed::Box","std::collections::Bound","std::num::NonZeroI32","std::time::SystemTime","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::path::PathBuf","std::vec::Vec","std::borrow::Cow","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::time::Duration","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::sync::Arc","std::num::NonZeroU8","std::net::SocketAddrV4","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::string::String","std::collections::HashMap","std::num::NonZeroU16","std::sync::RwLock","std::num::NonZeroI16","std::num::NonZeroU64","std::collections::BTreeSet","std::option::Option","std::num::NonZeroIsize","std::num::NonZeroI8","std::num::NonZeroI128","std::net::Ipv4Addr","std::num::NonZeroUsize","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::ops::RangeInclusive","std::net::IpAddr","std::rc::Rc","std::sync::atomic::AtomicI64","std::sync::Mutex","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::cell::Cell","std::collections::VecDeque","std::sync::atomic::AtomicI32"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // E
let mut p1 = &mut [0u8].as_mut_slice(); // None+[u8]
let mut p2 = MaybeUninit::uninit().assume_init(); // C
+encode_into_slice(p0, p1, p2);
+crate::encode_into_slice(p0, p1, p2);
+crate::encode_into_slice(p0, p1, p2);
-----------------
src/lib.rs encode_into_writer
deps:{"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"enc::impls::<impl enc::Encode for &'a T>":{},"encode_into_writer":{"C":["config::Config","std::marker::Sized"],"E":["std::marker::Sized","enc::Encode"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["de::Decode","de::BorrowDecode","std::cmp::Ord","enc::Encode","std::marker::Sized"],"V":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["std::cmp::Ord","enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Ord"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode","std::cmp::Eq","std::hash::Hash"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::cmp::Eq","std::marker::Sized","std::hash::Hash","enc::Encode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]}}
candidates:{"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Varint","config::Fixint","config::Limit","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Configuration","config::BigEndian","config::LittleEndian"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::impls::<impl enc::Encode for &'a T>":{},"encode_into_writer":{"C":["<T as config::Config>"],"E":["std::result::Result","std::num::NonZeroI16","std::collections::BinaryHeap","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::option::Option","std::num::NonZeroU64","std::num::NonZeroI8","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::cell::RefCell","std::net::SocketAddr","std::ops::RangeInclusive","std::time::Duration","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::collections::BTreeMap","std::net::IpAddr","std::path::PathBuf","std::sync::atomic::AtomicI64","std::sync::Mutex","std::collections::VecDeque","std::cell::Cell","std::sync::atomic::AtomicIsize","std::boxed::Box","std::collections::HashMap","std::sync::atomic::AtomicU64","std::vec::Vec","std::net::SocketAddrV6","std::marker::PhantomData","std::net::Ipv6Addr","std::num::NonZeroU128","std::collections::HashSet","std::rc::Rc","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::sync::Arc","enc::impls::<impl enc::Encode for &'a T>","std::net::Ipv4Addr","std::borrow::Cow","std::sync::atomic::AtomicI8","std::ops::Range","std::sync::atomic::AtomicUsize","std::collections::Bound","std::sync::RwLock","std::num::NonZeroI32","std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroI64","std::ffi::CString","std::string::String","std::time::SystemTime"],"W":["<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SliceWriter","enc::write::SizeWriter","features::impl_std::IoWriter"]},"features::impl_std::IoWriter":{"W":["&std::io::Stderr","std::io::StderrLock<'_>","std::os::unix::net::UnixStream","std::io::BorrowedCursor<'a>","std::io::BufWriter<W>","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::process::ChildStdin","std::process::ChildStdin","std::sys::unix::stdio::Stderr","std::sys::unix::stdio::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::fs::File","&std::io::Sink","std::fs::File","std::io::Stderr","std::net::TcpStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::io::Stdout","std::boxed::Box<W>","std::io::LineWriter<W>","std::io::StdoutLock<'_>","std::io::impls::<impl std::io::Write for &mut W>","std::io::stdio::StdoutRaw","std::io::Sink","std::collections::VecDeque<u8, A>","std::io::Cursor<&mut [u8]>","std::io::Stdout","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::stdio::StderrRaw","&'a std::os::unix::net::UnixStream","&std::net::TcpStream","std::io::Cursor<[u8; N]>","std::vec::Vec<u8, A>"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI128","std::net::Ipv4Addr","std::net::SocketAddr","std::option::Option","std::time::Duration","std::num::NonZeroU64","std::time::SystemTime","std::net::IpAddr","std::path::PathBuf","std::cell::Cell","std::num::NonZeroIsize","std::num::NonZeroU8","std::cell::RefCell","std::ffi::CString","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroI8","std::sync::Arc","std::net::Ipv6Addr","std::string::String","std::net::SocketAddrV6","std::num::NonZeroI32"],"V":["std::ops::RangeInclusive","std::net::SocketAddrV4","std::cell::Cell","std::net::Ipv6Addr","std::boxed::Box","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::path::PathBuf","std::vec::Vec","std::net::Ipv4Addr","std::option::Option","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::ffi::CString","std::collections::BinaryHeap","std::time::SystemTime","std::collections::BTreeMap","std::collections::HashSet","std::cell::RefCell","std::net::SocketAddr","std::num::NonZeroU64","std::num::NonZeroIsize","std::net::IpAddr","std::num::NonZeroI8","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::result::Result","std::collections::Bound","std::sync::Arc","std::num::NonZeroUsize","std::ops::Range","std::num::NonZeroI64","std::marker::PhantomData","std::collections::HashMap","std::time::Duration","std::rc::Rc","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::sync::RwLock","std::sync::atomic::AtomicU64","std::string::String","std::collections::BTreeSet","std::net::SocketAddrV6","std::sync::Mutex","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::borrow::Cow","std::sync::atomic::AtomicI16"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI8","std::num::NonZeroUsize","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroU64","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroU8","std::num::NonZeroI32","std::num::NonZeroIsize","std::cell::Cell","std::path::PathBuf","std::net::Ipv6Addr","std::sync::Arc","std::ffi::CString","std::cell::RefCell","std::num::NonZeroI64","std::num::NonZeroU32","std::net::Ipv4Addr","std::option::Option","std::marker::PhantomData","std::time::Duration","std::rc::Rc","std::string::String"]},"std::collections::BinaryHeap":{"T":["std::rc::Rc","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroIsize","std::num::NonZeroI8","std::net::SocketAddrV6","std::num::NonZeroI128","std::num::NonZeroUsize","std::string::String","std::net::IpAddr","std::sync::Arc","std::net::SocketAddrV4","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroU32","std::path::PathBuf","std::cell::Cell","std::net::Ipv6Addr","std::option::Option","std::num::NonZeroU16"]},"std::collections::Bound":{"T":["std::collections::HashSet","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::string::String","std::collections::BTreeMap","std::result::Result","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::collections::HashMap","std::num::NonZeroUsize","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::vec::Vec","std::net::SocketAddrV6","std::time::Duration","std::num::NonZeroU32","std::boxed::Box","std::cell::RefCell","std::num::NonZeroIsize","std::collections::BTreeSet","std::sync::Arc","std::rc::Rc","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::ops::Range","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::time::SystemTime","std::borrow::Cow","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::ffi::CString","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::num::NonZeroU128","std::cell::Cell","std::sync::Mutex","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::num::NonZeroU64","std::net::Ipv6Addr","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::collections::Bound","std::sync::RwLock","std::num::NonZeroU16","std::ops::RangeInclusive","std::net::IpAddr","std::option::Option","std::path::PathBuf","std::num::NonZeroI32"]},"std::collections::HashMap":{"K":["std::sync::Arc","std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroU8","std::net::IpAddr","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroI16","std::net::SocketAddrV4","std::option::Option","std::num::NonZeroU16","std::net::Ipv4Addr","std::num::NonZeroU128","std::net::SocketAddr","std::num::NonZeroIsize"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::time::SystemTime","std::collections::BTreeSet","std::result::Result","std::net::SocketAddrV6","std::collections::HashMap","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::sync::Arc","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::path::PathBuf","std::ops::RangeInclusive","std::num::NonZeroIsize","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::boxed::Box","std::ffi::CString","std::num::NonZeroU64","std::rc::Rc","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::collections::VecDeque","std::ops::Range","std::time::Duration","std::num::NonZeroU128","std::option::Option","std::num::NonZeroI64","std::collections::BTreeMap","std::num::NonZeroUsize","std::sync::RwLock","std::vec::Vec","std::net::SocketAddr","std::collections::BinaryHeap","std::collections::HashSet","std::cell::RefCell","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::string::String","std::num::NonZeroU16","std::cell::Cell","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::borrow::Cow","std::sync::Mutex","std::collections::Bound","std::num::NonZeroU32","std::num::NonZeroU8","std::net::IpAddr","std::marker::PhantomData","std::num::NonZeroI128"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::net::SocketAddr","std::time::Duration","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroU64","std::net::SocketAddrV6","std::num::NonZeroIsize","std::option::Option","std::net::Ipv6Addr","std::sync::Arc","std::num::NonZeroI16","std::marker::PhantomData","std::path::PathBuf","std::rc::Rc"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::atomic::AtomicIsize","std::collections::HashSet","std::sync::atomic::AtomicU32","std::sync::Mutex","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::num::NonZeroU64","std::path::PathBuf","std::num::NonZeroI16","std::vec::Vec","std::sync::atomic::AtomicI64","std::time::SystemTime","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::time::Duration","std::cell::Cell","std::marker::PhantomData","std::borrow::Cow","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::collections::Bound","std::num::NonZeroI128","std::num::NonZeroI8","std::collections::BTreeSet","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::boxed::Box","std::ops::Range","std::net::SocketAddrV4","std::num::NonZeroU32","std::net::Ipv6Addr","std::net::SocketAddr","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::string::String","std::num::NonZeroU16","std::net::IpAddr","std::ops::RangeInclusive","std::collections::HashMap","std::cell::RefCell","std::sync::atomic::AtomicU16","std::rc::Rc","std::option::Option","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::sync::RwLock","std::num::NonZeroIsize","std::result::Result","std::sync::atomic::AtomicI8","std::sync::Arc","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroI64"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::SocketAddr","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::rc::Rc","std::vec::Vec","std::collections::BinaryHeap","std::sync::RwLock","std::net::IpAddr","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroI64","std::boxed::Box","std::ops::Range","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::cell::Cell","std::string::String","std::collections::HashMap","std::option::Option","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::net::Ipv6Addr","std::collections::VecDeque","std::ops::RangeInclusive","std::num::NonZeroU128","std::result::Result","std::ffi::CString","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::path::PathBuf","std::num::NonZeroI16","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::time::Duration","std::sync::atomic::AtomicU64","std::sync::Arc","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::collections::HashSet","std::collections::BTreeMap","std::cell::RefCell","std::time::SystemTime","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::num::NonZeroU64","std::borrow::Cow","std::num::NonZeroU16","std::net::SocketAddrV6","std::collections::Bound","std::sync::atomic::AtomicBool","std::num::NonZeroI128"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::VecDeque","std::net::Ipv6Addr","std::ops::Range","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::collections::BTreeSet","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::vec::Vec","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::borrow::Cow","std::collections::Bound","std::sync::Mutex","std::num::NonZeroI16","std::rc::Rc","std::collections::BTreeMap","std::num::NonZeroU64","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::boxed::Box","std::num::NonZeroI64","std::result::Result","std::num::NonZeroUsize","std::cell::Cell","std::time::SystemTime","std::net::SocketAddr","std::collections::HashSet","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::path::PathBuf","std::sync::Arc","std::net::IpAddr","std::time::Duration","std::sync::atomic::AtomicI16","std::option::Option","std::sync::RwLock","std::num::NonZeroU32","std::collections::BinaryHeap","std::string::String","std::ffi::CString","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroU8","std::cell::RefCell","std::collections::HashMap","std::sync::atomic::AtomicU64"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::option::Option","std::num::NonZeroUsize","std::collections::HashSet","std::sync::RwLock","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::num::NonZeroI64","std::result::Result","std::ops::RangeInclusive","std::num::NonZeroU16","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::ops::Range","std::borrow::Cow","std::net::IpAddr","std::sync::atomic::AtomicI8","std::string::String","std::num::NonZeroI128","std::net::SocketAddr","std::net::SocketAddrV6","std::sync::Arc","std::num::NonZeroU64","std::collections::Bound","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::time::SystemTime","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::num::NonZeroI32","std::collections::BTreeSet","std::collections::BTreeMap","std::vec::Vec","std::rc::Rc","std::path::PathBuf","std::num::NonZeroIsize","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::ffi::CString","std::sync::Mutex","std::boxed::Box","std::num::NonZeroU128","std::time::Duration","std::collections::VecDeque","std::net::Ipv4Addr","std::cell::RefCell","std::sync::atomic::AtomicBool","std::cell::Cell"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // E
let mut p1 = MaybeUninit::uninit().assume_init(); // W
let mut p2 = MaybeUninit::uninit().assume_init(); // C
+encode_into_writer(p0, p1, p2);
+crate::encode_into_writer(p0, p1, p2);
+crate::encode_into_writer(p0, p1, p2);
-----------------
src/lib.rs decode_from_slice
deps:{"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"]},"decode_from_slice":{"C":["config::Config","std::marker::Sized"],"D":["de::Decode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"K":["std::marker::Sized","std::cmp::Ord","de::BorrowDecode","enc::Encode","de::Decode"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["std::cmp::Ord","enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::BinaryHeap":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Ord","std::marker::Sized"]},"std::collections::Bound":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::HashMap":{"K":["std::marker::Sized","enc::Encode","de::BorrowDecode","std::cmp::Eq","std::hash::Hash","de::Decode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["de::BorrowDecode","std::cmp::Eq","std::hash::Hash","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]}}
candidates:{"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::BigEndian","config::Limit","config::Configuration","config::Fixint","config::Varint","std::clone::impls::<impl std::clone::Clone for &T>","config::LittleEndian"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"decode_from_slice":{"C":["<T as config::Config>"],"D":["std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::time::Duration","std::collections::HashSet","std::num::NonZeroI8","std::num::NonZeroU32","std::net::Ipv4Addr","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::collections::HashMap","std::collections::BinaryHeap","std::option::Option","std::result::Result","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::cell::RefCell","std::num::NonZeroI128","std::cell::Cell","std::sync::atomic::AtomicI8","std::sync::Arc","std::boxed::Box","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::borrow::Cow","std::net::Ipv6Addr","std::ops::Range","std::net::IpAddr","std::marker::PhantomData","std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroU16","std::collections::BTreeSet","std::sync::Mutex","std::string::String","std::sync::atomic::AtomicBool","std::sync::RwLock","std::num::NonZeroI16","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::rc::Rc","std::vec::Vec","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroU8","std::path::PathBuf","std::num::NonZeroI32","std::collections::Bound","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","<T as std::borrow::ToOwned>","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::option::Option","std::net::SocketAddr","std::ffi::CString","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroIsize","std::num::NonZeroU128","std::net::Ipv4Addr","std::num::NonZeroI32","std::cell::Cell","std::num::NonZeroU32","std::num::NonZeroU16","std::net::SocketAddrV4","std::cell::RefCell","std::num::NonZeroU64","std::path::PathBuf","std::string::String","std::net::SocketAddrV6","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroI8","std::rc::Rc","std::marker::PhantomData"],"V":["std::boxed::Box","std::cell::Cell","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::sync::Mutex","std::marker::PhantomData","std::collections::BTreeMap","std::collections::BinaryHeap","std::ffi::CString","std::collections::HashMap","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::ops::Range","std::net::IpAddr","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::sync::Arc","std::option::Option","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::path::PathBuf","std::cell::RefCell","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroUsize","std::num::NonZeroU32","std::collections::Bound","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::string::String","std::result::Result","std::num::NonZeroU8","std::collections::VecDeque","std::net::Ipv6Addr","std::num::NonZeroI16","std::ops::RangeInclusive","std::net::SocketAddrV4","std::collections::HashSet","std::sync::atomic::AtomicBool","std::time::SystemTime","std::num::NonZeroU64","std::vec::Vec","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::rc::Rc","std::sync::RwLock","std::borrow::Cow"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::Ipv4Addr","std::num::NonZeroU128","std::num::NonZeroU64","std::num::NonZeroI16","std::num::NonZeroU16","std::net::IpAddr","std::cell::RefCell","std::num::NonZeroI8","std::net::SocketAddr","std::path::PathBuf","std::string::String","std::net::Ipv6Addr","std::num::NonZeroI32","std::option::Option","std::net::SocketAddrV6","std::time::SystemTime","std::cell::Cell","std::num::NonZeroU8","std::time::Duration"]},"std::collections::BinaryHeap":{"T":["std::path::PathBuf","std::string::String","std::num::NonZeroUsize","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroU8","std::num::NonZeroU64","std::num::NonZeroI32","std::num::NonZeroU32","std::marker::PhantomData","std::num::NonZeroU128","std::num::NonZeroIsize","std::net::SocketAddrV4","std::net::IpAddr","std::time::Duration","std::num::NonZeroU16","std::time::SystemTime","std::rc::Rc","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroI16","std::cell::RefCell","std::net::Ipv4Addr"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicI8","std::marker::PhantomData","std::num::NonZeroU32","std::collections::Bound","std::time::Duration","std::num::NonZeroU128","std::collections::HashSet","std::path::PathBuf","std::net::SocketAddrV6","std::sync::Mutex","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::ops::RangeInclusive","std::option::Option","std::borrow::Cow","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::boxed::Box","std::ops::Range","std::net::SocketAddrV4","std::collections::HashMap","std::num::NonZeroI32","std::num::NonZeroI16","std::net::IpAddr","std::num::NonZeroUsize","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::rc::Rc","std::cell::RefCell","std::collections::BTreeSet","std::collections::BinaryHeap","std::num::NonZeroIsize","std::num::NonZeroU16","std::cell::Cell","std::num::NonZeroU64","std::ffi::CString","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::sync::Arc","std::net::Ipv4Addr","std::string::String","std::net::SocketAddr","std::vec::Vec","std::num::NonZeroI128","std::collections::VecDeque","std::sync::RwLock","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::result::Result"]},"std::collections::HashMap":{"K":["std::net::IpAddr","std::net::SocketAddr","std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroU8","std::num::NonZeroU128","std::num::NonZeroU16","std::ffi::CString","std::rc::Rc","std::net::SocketAddrV4","std::string::String","std::collections::Bound","std::time::Duration","std::num::NonZeroIsize","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroU32","std::num::NonZeroI64"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::collections::HashMap","std::collections::Bound","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::cell::Cell","std::ffi::CString","std::sync::RwLock","std::marker::PhantomData","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::borrow::Cow","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::net::IpAddr","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::num::NonZeroU16","std::result::Result","std::sync::Arc","std::collections::HashSet","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::time::Duration","std::net::Ipv6Addr","std::sync::Mutex","std::collections::BTreeMap","std::net::SocketAddrV4","std::collections::BinaryHeap","std::num::NonZeroUsize","std::string::String","std::cell::RefCell","std::net::Ipv4Addr","std::num::NonZeroI16","std::num::NonZeroU8","std::num::NonZeroI64","std::vec::Vec","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::time::SystemTime","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::option::Option","std::ops::Range","std::rc::Rc","std::boxed::Box","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::path::PathBuf"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroU16","std::num::NonZeroI128","std::marker::PhantomData","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroU8","std::num::NonZeroIsize","std::net::IpAddr","std::num::NonZeroUsize","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroU32","std::string::String","std::rc::Rc","std::num::NonZeroU128","std::net::SocketAddr","std::net::SocketAddrV4","std::num::NonZeroI32","std::sync::Arc"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::path::PathBuf","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::borrow::Cow","std::sync::atomic::AtomicU32","std::string::String","std::num::NonZeroU8","std::num::NonZeroUsize","std::net::IpAddr","std::ffi::CString","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::vec::Vec","std::num::NonZeroI32","std::collections::BTreeSet","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::cell::RefCell","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::ops::Range","std::num::NonZeroI64","std::num::NonZeroI16","std::sync::RwLock","std::rc::Rc","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::time::Duration","std::sync::Arc","std::num::NonZeroU128","std::ops::RangeInclusive","std::num::NonZeroI8","std::cell::Cell","std::collections::BinaryHeap","std::collections::Bound","std::time::SystemTime","std::boxed::Box","std::result::Result","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::sync::Mutex","std::collections::HashMap","std::collections::HashSet","std::option::Option"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::vec::Vec","std::net::Ipv6Addr","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::sync::RwLock","std::sync::Mutex","std::num::NonZeroU128","std::net::Ipv4Addr","std::net::SocketAddr","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::net::IpAddr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::boxed::Box","std::ops::Range","std::collections::HashMap","std::collections::BTreeMap","std::ffi::CString","std::string::String","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::num::NonZeroUsize","std::cell::RefCell","std::sync::atomic::AtomicBool","std::collections::Bound","std::result::Result","std::time::SystemTime","std::option::Option","std::sync::Arc","std::cell::Cell","std::collections::HashSet","std::net::SocketAddrV6","std::num::NonZeroU32","std::marker::PhantomData","std::borrow::Cow","std::rc::Rc","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::path::PathBuf","std::time::Duration","std::ops::RangeInclusive","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::num::NonZeroI16"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicU32","std::collections::VecDeque","std::marker::PhantomData","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::cell::RefCell","std::num::NonZeroI64","std::vec::Vec","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroI128","std::num::NonZeroI8","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::string::String","std::ops::Range","std::num::NonZeroU16","std::borrow::Cow","std::sync::Mutex","std::num::NonZeroU128","std::collections::BTreeSet","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::time::Duration","std::ops::RangeInclusive","std::sync::Arc","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::collections::Bound","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::rc::Rc","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::sync::RwLock","std::collections::HashSet","std::time::SystemTime","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::result::Result","std::net::IpAddr","std::option::Option","std::collections::HashMap","std::cell::Cell","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::ffi::CString","std::boxed::Box","std::collections::BTreeMap","std::path::PathBuf","std::net::SocketAddrV6"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::marker::PhantomData","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::vec::Vec","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::collections::Bound","std::num::NonZeroI8","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::borrow::Cow","std::sync::RwLock","std::num::NonZeroU8","std::num::NonZeroI64","std::path::PathBuf","std::net::SocketAddrV4","std::collections::BinaryHeap","std::num::NonZeroU16","std::collections::BTreeSet","std::time::SystemTime","std::num::NonZeroI32","std::num::NonZeroIsize","std::collections::HashSet","std::sync::atomic::AtomicU32","std::option::Option","std::num::NonZeroI16","std::ops::Range","std::num::NonZeroU64","std::rc::Rc","std::cell::Cell","std::ffi::CString","std::net::IpAddr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::net::SocketAddr","std::boxed::Box","std::sync::atomic::AtomicBool","std::time::Duration","std::sync::atomic::AtomicU8","std::string::String","std::cell::RefCell","std::num::NonZeroUsize","std::collections::VecDeque","std::sync::Mutex","std::result::Result","std::sync::Arc","std::ops::RangeInclusive"]}}
let mut p0 = [0u8,0,0].as_mut_slice(); // None+&[u8]
let mut p1 = MaybeUninit::uninit().assume_init(); // C
+decode_from_slice(p0, p1);
+crate::decode_from_slice(p0, p1);
+crate::decode_from_slice(p0, p1);
-----------------
src/lib.rs borrow_decode_from_slice
'a
deps:{"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"borrow_decode_from_slice":{"C":["config::Config","std::marker::Sized"],"D":["de::BorrowDecode","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::Decode","std::cmp::Ord","de::BorrowDecode","std::marker::Sized","enc::Encode"],"V":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["enc::Encode","std::cmp::Ord","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::Bound":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::HashMap":{"K":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode","std::cmp::Eq","std::hash::Hash"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode","std::cmp::Eq","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]}}
candidates:{"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for &T>","config::LittleEndian","config::NoLimit","config::Varint","config::Configuration","config::Limit","config::BigEndian","config::Fixint"]},"borrow_decode_from_slice":{"C":["<T as config::Config>"],"D":["std::sync::Mutex","std::boxed::Box","std::ops::RangeInclusive","std::time::SystemTime","std::collections::Bound","std::cell::Cell","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::sync::RwLock","std::net::IpAddr","std::ops::Range","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroI32","std::num::NonZeroU16","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::rc::Rc","std::option::Option","std::num::NonZeroU32","std::collections::HashMap","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::net::SocketAddr","std::result::Result","std::num::NonZeroI8","std::ffi::CString","std::collections::BTreeMap","std::net::Ipv4Addr","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::sync::Arc","std::cell::RefCell","std::num::NonZeroU128","std::string::String","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::num::NonZeroI64","std::time::Duration","std::sync::atomic::AtomicU64","std::vec::Vec","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::num::NonZeroIsize","std::path::PathBuf","std::sync::atomic::AtomicI16","std::collections::HashSet","std::num::NonZeroU64"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::path::Path","std::ffi::CStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::option::Option","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroI8","std::sync::Arc","std::num::NonZeroU64","std::num::NonZeroUsize","std::num::NonZeroU8","std::string::String","std::num::NonZeroI128","std::path::PathBuf","std::net::SocketAddrV6","std::num::NonZeroIsize","std::ffi::CString","std::rc::Rc","std::net::Ipv4Addr","std::net::IpAddr","std::num::NonZeroU128","std::cell::Cell","std::net::SocketAddrV4","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroU32"],"V":["std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::rc::Rc","std::num::NonZeroI64","std::collections::VecDeque","std::borrow::Cow","std::string::String","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::ops::RangeInclusive","std::num::NonZeroI16","std::net::SocketAddrV6","std::net::Ipv6Addr","std::boxed::Box","std::collections::HashSet","std::num::NonZeroI128","std::ffi::CString","std::num::NonZeroU128","std::net::SocketAddr","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::num::NonZeroU64","std::cell::Cell","std::marker::PhantomData","std::ops::Range","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::num::NonZeroI32","std::sync::Arc","std::vec::Vec","std::num::NonZeroU32","std::time::Duration","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::result::Result","std::num::NonZeroUsize","std::collections::HashMap","std::net::Ipv4Addr","std::sync::RwLock","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::option::Option","std::num::NonZeroU16","std::time::SystemTime","std::collections::Bound","std::net::IpAddr","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::cell::RefCell"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::time::SystemTime","std::sync::Arc","std::string::String","std::net::SocketAddrV4","std::num::NonZeroUsize","std::cell::Cell","std::time::Duration","std::rc::Rc","std::num::NonZeroU32","std::ffi::CString","std::num::NonZeroI128","std::marker::PhantomData","std::num::NonZeroU64","std::net::SocketAddr","std::num::NonZeroU128","std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroIsize","std::net::IpAddr","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroI64"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU8","std::num::NonZeroI32","std::cell::RefCell","std::path::PathBuf","std::cell::Cell","std::num::NonZeroI16","std::num::NonZeroU128","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroU64","std::num::NonZeroU32","std::net::Ipv4Addr","std::time::SystemTime","std::option::Option","std::marker::PhantomData","std::net::SocketAddr","std::net::Ipv6Addr","std::sync::Arc","std::num::NonZeroUsize","std::ffi::CString"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::collections::BinaryHeap","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::time::SystemTime","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroU8","std::time::Duration","std::cell::RefCell","std::num::NonZeroIsize","std::marker::PhantomData","std::num::NonZeroI32","std::sync::RwLock","std::cell::Cell","std::num::NonZeroUsize","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::sync::Mutex","std::collections::Bound","std::vec::Vec","std::collections::VecDeque","std::num::NonZeroU32","std::collections::HashMap","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::string::String","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::net::IpAddr","std::net::Ipv6Addr","std::collections::BTreeMap","std::rc::Rc","std::result::Result","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::collections::BTreeSet","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::sync::Arc","std::ops::Range","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::option::Option","std::boxed::Box","std::borrow::Cow"]},"std::collections::HashMap":{"K":["std::rc::Rc","std::net::SocketAddr","std::num::NonZeroI16","std::net::Ipv4Addr","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroU64","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroU128","std::sync::Arc","std::num::NonZeroI128","std::num::NonZeroI32","std::net::SocketAddrV6"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroI8","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::vec::Vec","std::sync::Mutex","std::sync::RwLock","std::collections::HashSet","std::num::NonZeroIsize","std::collections::BTreeMap","std::collections::HashMap","std::ops::Range","std::net::Ipv4Addr","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::result::Result","std::rc::Rc","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::string::String","std::num::NonZeroI128","std::cell::RefCell","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::num::NonZeroU32","std::ops::RangeInclusive","std::collections::Bound","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::time::SystemTime","std::num::NonZeroI32","std::net::SocketAddrV4","std::collections::BTreeSet","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::num::NonZeroU16","std::collections::VecDeque","std::sync::Arc","std::sync::atomic::AtomicU16","std::net::IpAddr","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::num::NonZeroU128","std::net::SocketAddr","std::boxed::Box","std::ffi::CString","std::time::Duration","std::option::Option","std::marker::PhantomData","std::cell::Cell","std::num::NonZeroI16"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU128","std::net::Ipv4Addr","std::rc::Rc","std::marker::PhantomData","std::ffi::CString","std::num::NonZeroI16","std::option::Option","std::time::Duration","std::num::NonZeroIsize","std::num::NonZeroU32","std::num::NonZeroU16","std::string::String","std::collections::Bound","std::num::NonZeroUsize","std::num::NonZeroI128","std::num::NonZeroU64","std::time::SystemTime"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::num::NonZeroU128","std::num::NonZeroI64","std::sync::Mutex","std::boxed::Box","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::num::NonZeroU8","std::ops::RangeInclusive","std::collections::Bound","std::num::NonZeroU32","std::collections::HashMap","std::rc::Rc","std::time::SystemTime","std::sync::RwLock","std::num::NonZeroI32","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::num::NonZeroU16","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::option::Option","std::collections::BTreeSet","std::net::Ipv4Addr","std::time::Duration","std::collections::VecDeque","std::borrow::Cow","std::path::PathBuf","std::result::Result","std::net::IpAddr","std::ffi::CString","std::cell::Cell","std::string::String","std::vec::Vec","std::collections::BinaryHeap","std::num::NonZeroI8","std::ops::Range","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::cell::RefCell","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroIsize","std::sync::Arc","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::collections::HashSet","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::net::SocketAddrV6"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::string::String","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroIsize","std::net::IpAddr","std::num::NonZeroU64","std::collections::VecDeque","std::num::NonZeroI128","std::time::SystemTime","std::num::NonZeroI32","std::num::NonZeroU16","std::cell::RefCell","std::sync::Mutex","std::time::Duration","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::result::Result","std::collections::BinaryHeap","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::option::Option","std::sync::RwLock","std::net::SocketAddrV4","std::num::NonZeroI16","std::collections::HashSet","std::num::NonZeroI64","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::path::PathBuf","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::boxed::Box","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::ffi::CString","std::sync::atomic::AtomicU16","std::ops::Range","std::net::SocketAddr","std::collections::Bound","std::vec::Vec","std::cell::Cell","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::collections::HashMap","std::num::NonZeroUsize","std::borrow::Cow","std::sync::Arc","std::sync::atomic::AtomicI16","std::num::NonZeroI8"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::cell::RefCell","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::boxed::Box","std::sync::atomic::AtomicI64","std::sync::Arc","std::path::PathBuf","std::num::NonZeroU16","std::net::SocketAddr","std::vec::Vec","std::sync::atomic::AtomicU32","std::result::Result","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::time::SystemTime","std::time::Duration","std::marker::PhantomData","std::net::IpAddr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::option::Option","std::num::NonZeroU32","std::num::NonZeroI16","std::num::NonZeroI128","std::sync::Mutex","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::num::NonZeroU64","std::collections::Bound","std::ops::Range","std::net::Ipv6Addr","std::ffi::CString","std::collections::HashMap","std::cell::Cell","std::rc::Rc","std::net::SocketAddrV6","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::string::String","std::sync::RwLock","std::num::NonZeroUsize","std::collections::BTreeSet","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::borrow::Cow","std::num::NonZeroI8","std::num::NonZeroI32","std::num::NonZeroU128","std::collections::HashSet","std::ops::RangeInclusive"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::result::Result","std::collections::Bound","std::num::NonZeroUsize","std::num::NonZeroU8","std::sync::RwLock","std::num::NonZeroU32","std::num::NonZeroI32","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::path::PathBuf","std::ops::RangeInclusive","std::net::IpAddr","std::net::SocketAddrV6","std::sync::Arc","std::collections::HashSet","std::cell::RefCell","std::collections::BinaryHeap","std::ffi::CString","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::rc::Rc","std::sync::Mutex","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::collections::HashMap","std::sync::atomic::AtomicI32","std::ops::Range","std::string::String","std::num::NonZeroI128","std::option::Option","std::collections::BTreeSet","std::boxed::Box","std::time::Duration","std::num::NonZeroU64","std::net::Ipv4Addr","std::num::NonZeroU16","std::vec::Vec","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::net::SocketAddr","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::collections::VecDeque","std::time::SystemTime","std::cell::Cell"]}}
let mut p0 = [0u8,0,0].as_mut_slice(); // None+&[u8]
let mut p1 = MaybeUninit::uninit().assume_init(); // C
+borrow_decode_from_slice(p0, p1);
+crate::borrow_decode_from_slice(p0, p1);
+crate::borrow_decode_from_slice(p0, p1);
-----------------
src/lib.rs decode_from_reader
deps:{"<&A as std::alloc::Allocator>":{},"<&mut T as de::read::Reader>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"decode_from_reader":{"C":["std::marker::Sized","config::Config"],"D":["de::Decode","std::marker::Sized"],"R":["de::read::Reader","std::marker::Sized"]},"features::impl_std::IoReader":{"R":["std::marker::Sized","std::io::Read"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::cmp::Ord","de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"],"V":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","std::cmp::Ord","enc::Encode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::BorrowDecode","de::Decode","std::cmp::Ord","std::marker::Sized"]},"std::collections::Bound":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashMap":{"K":["std::hash::Hash","de::Decode","std::cmp::Eq","std::marker::Sized","de::BorrowDecode","enc::Encode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["std::marker::Sized","std::cmp::Eq","de::Decode","enc::Encode","std::hash::Hash","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&A as std::alloc::Allocator>":{},"<&mut T as de::read::Reader>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Varint","config::Limit","config::BigEndian","config::LittleEndian","config::Fixint","config::Configuration","config::NoLimit","std::clone::impls::<impl std::clone::Clone for *const T>"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"decode_from_reader":{"C":["<T as config::Config>"],"D":["std::time::SystemTime","std::sync::atomic::AtomicU16","std::borrow::Cow","std::collections::HashSet","std::num::NonZeroI64","std::num::NonZeroU128","std::ops::Range","std::num::NonZeroI8","std::num::NonZeroUsize","std::cell::RefCell","std::cell::Cell","std::sync::atomic::AtomicBool","std::string::String","std::marker::PhantomData","std::sync::Mutex","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::sync::RwLock","std::option::Option","std::num::NonZeroI128","std::ffi::CString","std::rc::Rc","std::boxed::Box","std::path::PathBuf","std::num::NonZeroU8","std::collections::BTreeMap","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::num::NonZeroU32","std::net::SocketAddr","std::collections::Bound","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::num::NonZeroIsize","std::result::Result","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::vec::Vec","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::collections::VecDeque","std::collections::HashMap","std::sync::Arc","std::num::NonZeroU16","std::net::IpAddr","std::num::NonZeroI32","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::time::Duration"],"R":["features::impl_std::IoReader","std::io::BufReader","de::read::SliceReader","<&mut T as de::read::Reader>"]},"features::impl_std::IoReader":{"R":["std::io::Empty","std::process::ChildStderr","std::net::TcpStream","std::io::Repeat","std::io::stdio::StdinRaw","std::boxed::Box<R>","std::io::Chain<T, U>","&std::fs::File","std::io::Cursor<T>","std::io::Stdin","&'a std::sys::unix::fd::FileDesc","&'a std::os::unix::net::UnixStream","&std::net::TcpStream","std::io::BufReader<R>","std::io::Take<T>","std::sys::unix::stdio::Stdin","std::fs::File","std::os::unix::net::UnixStream","std::process::ChildStdout","std::io::impls::<impl std::io::Read for &mut R>","std::collections::VecDeque<u8, A>","std::io::StdinLock<'_>"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroU64","std::num::NonZeroI8","std::option::Option","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroU128","std::net::IpAddr","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroUsize","std::num::NonZeroI16","std::string::String","std::num::NonZeroI64","std::rc::Rc","std::num::NonZeroU32","std::net::SocketAddrV4","std::num::NonZeroI32","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroI128","std::num::NonZeroU8"],"V":["std::collections::HashMap","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::num::NonZeroU128","std::num::NonZeroI8","std::time::SystemTime","std::borrow::Cow","std::num::NonZeroI128","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroIsize","std::collections::Bound","std::sync::Mutex","std::sync::atomic::AtomicI16","std::time::Duration","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::collections::BinaryHeap","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::string::String","std::ops::RangeInclusive","std::num::NonZeroU8","std::cell::RefCell","std::sync::atomic::AtomicBool","std::path::PathBuf","std::boxed::Box","std::num::NonZeroU16","std::cell::Cell","std::net::Ipv4Addr","std::net::IpAddr","std::vec::Vec","std::net::SocketAddr","std::collections::BTreeMap","std::num::NonZeroU64","std::collections::HashSet","std::sync::atomic::AtomicU8","std::sync::Arc","std::result::Result","std::option::Option","std::sync::atomic::AtomicI64","std::ops::Range","std::collections::BTreeSet","std::ffi::CString","std::sync::RwLock","std::sync::atomic::AtomicI32","std::marker::PhantomData"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroUsize","std::cell::RefCell","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroU16","std::net::Ipv6Addr","std::num::NonZeroIsize","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroI64","std::string::String","std::num::NonZeroI8","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroI16","std::num::NonZeroI128","std::option::Option","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroU128","std::ffi::CString","std::time::Duration","std::num::NonZeroU8","std::path::PathBuf","std::num::NonZeroU32"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI16","std::num::NonZeroI8","std::net::Ipv4Addr","std::net::IpAddr","std::string::String","std::net::SocketAddrV4","std::path::PathBuf","std::time::Duration","std::net::SocketAddr","std::sync::Arc","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroI64","std::cell::RefCell","std::num::NonZeroI32","std::ffi::CString","std::option::Option","std::rc::Rc","std::num::NonZeroU64"]},"std::collections::Bound":{"T":["std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::string::String","std::num::NonZeroUsize","std::sync::Arc","std::option::Option","std::rc::Rc","std::borrow::Cow","std::collections::HashSet","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroU16","std::result::Result","std::boxed::Box","std::num::NonZeroIsize","std::path::PathBuf","std::time::SystemTime","std::net::SocketAddrV6","std::sync::Mutex","std::net::IpAddr","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::sync::RwLock","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::num::NonZeroI16","std::num::NonZeroU32","std::vec::Vec","std::cell::RefCell","std::sync::atomic::AtomicU64","std::collections::Bound","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::ops::Range","std::collections::VecDeque","std::num::NonZeroU8","std::net::Ipv4Addr","std::time::Duration","std::sync::atomic::AtomicI8","std::collections::HashMap","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::cell::Cell","std::num::NonZeroU64","std::collections::BTreeMap","std::net::SocketAddrV4"]},"std::collections::HashMap":{"K":["std::num::NonZeroU8","std::net::Ipv6Addr","std::num::NonZeroIsize","std::net::SocketAddr","std::collections::Bound","std::num::NonZeroI32","std::num::NonZeroU16","std::num::NonZeroU32","std::marker::PhantomData","std::rc::Rc","std::num::NonZeroU64"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::collections::BinaryHeap","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroI64","std::marker::PhantomData","std::time::SystemTime","std::net::Ipv6Addr","std::borrow::Cow","std::sync::atomic::AtomicU32","std::sync::Mutex","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::vec::Vec","std::boxed::Box","std::sync::RwLock","std::ops::Range","std::path::PathBuf","std::cell::RefCell","std::string::String","std::num::NonZeroU128","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::collections::HashMap","std::sync::atomic::AtomicI64","std::ffi::CString","std::time::Duration","std::rc::Rc","std::num::NonZeroIsize","std::result::Result","std::num::NonZeroU16","std::collections::VecDeque","std::num::NonZeroU64","std::option::Option","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::collections::Bound","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroUsize","std::num::NonZeroI8","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::cell::Cell","std::net::IpAddr","std::collections::HashSet","std::num::NonZeroI16"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::marker::PhantomData","std::net::IpAddr","std::num::NonZeroU128","std::net::SocketAddr","std::num::NonZeroI64","std::time::SystemTime","std::ffi::CString","std::net::Ipv4Addr","std::num::NonZeroI8","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroI128","std::num::NonZeroU8","std::sync::Arc","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI16","std::time::Duration","std::net::SocketAddrV6","std::num::NonZeroIsize"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI32","std::num::NonZeroI16","std::string::String","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::result::Result","std::rc::Rc","std::vec::Vec","std::num::NonZeroIsize","std::marker::PhantomData","std::collections::Bound","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::time::SystemTime","std::cell::Cell","std::sync::atomic::AtomicI64","std::path::PathBuf","std::ops::Range","std::collections::BTreeSet","std::num::NonZeroU16","std::collections::HashMap","std::sync::atomic::AtomicI32","std::borrow::Cow","std::net::SocketAddrV4","std::num::NonZeroI8","std::sync::RwLock","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::net::SocketAddr","std::ffi::CString","std::net::SocketAddrV6","std::sync::Mutex","std::collections::BinaryHeap","std::option::Option","std::num::NonZeroU64","std::ops::RangeInclusive","std::num::NonZeroU32","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::time::Duration","std::num::NonZeroU128","std::net::IpAddr","std::sync::Arc","std::sync::atomic::AtomicU16","std::boxed::Box","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::collections::HashSet","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::num::NonZeroUsize","std::net::Ipv6Addr","std::num::NonZeroI64"]},"std::io::BufReader":{"R":["std::io::impls::<impl std::io::Read for &mut R>","std::process::ChildStderr","std::process::ChildStdout","std::io::Take<T>","std::io::Cursor<T>","std::io::Stdin","&'a std::os::unix::net::UnixStream","std::io::BufReader<R>","&'a std::sys::unix::fd::FileDesc","std::io::Chain<T, U>","std::fs::File","std::io::Empty","&std::fs::File","std::boxed::Box<R>","std::io::StdinLock<'_>","std::collections::VecDeque<u8, A>","std::sys::unix::stdio::Stdin","std::os::unix::net::UnixStream","std::net::TcpStream","std::io::Repeat","std::io::stdio::StdinRaw","&std::net::TcpStream"]},"std::io::impls::<impl std::io::Read for &mut R>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::SocketAddr","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::num::NonZeroU16","std::option::Option","std::collections::VecDeque","std::num::NonZeroI64","std::collections::HashMap","std::vec::Vec","std::sync::atomic::AtomicI64","std::boxed::Box","std::ops::RangeInclusive","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::sync::Arc","std::num::NonZeroI16","std::collections::Bound","std::ops::Range","std::sync::atomic::AtomicU16","std::borrow::Cow","std::result::Result","std::num::NonZeroUsize","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::string::String","std::sync::RwLock","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::marker::PhantomData","std::cell::RefCell","std::collections::BTreeMap","std::sync::Mutex","std::net::IpAddr","std::collections::BinaryHeap","std::time::SystemTime","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::time::Duration","std::sync::atomic::AtomicBool","std::ffi::CString","std::num::NonZeroU128","std::collections::HashSet","std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroU64","std::cell::Cell","std::num::NonZeroIsize","std::net::SocketAddrV4"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::boxed::Box","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::result::Result","std::collections::BinaryHeap","std::option::Option","std::sync::RwLock","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::rc::Rc","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::cell::RefCell","std::path::PathBuf","std::collections::VecDeque","std::net::SocketAddrV6","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::net::SocketAddrV4","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::net::Ipv4Addr","std::collections::HashSet","std::cell::Cell","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::collections::Bound","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::ops::RangeInclusive","std::num::NonZeroUsize","std::collections::HashMap","std::time::Duration","std::num::NonZeroU16","std::sync::Arc","std::time::SystemTime","std::ops::Range","std::num::NonZeroU32","std::vec::Vec","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::string::String","std::sync::Mutex","std::ffi::CString","std::num::NonZeroI128","std::num::NonZeroIsize","std::borrow::Cow","std::net::IpAddr"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::ops::Range","std::num::NonZeroU8","std::net::SocketAddrV6","std::num::NonZeroU16","std::net::Ipv4Addr","std::time::SystemTime","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::option::Option","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::cell::RefCell","std::collections::Bound","std::boxed::Box","std::sync::atomic::AtomicI16","std::collections::HashSet","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::num::NonZeroI16","std::collections::BinaryHeap","std::collections::VecDeque","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroUsize","std::collections::HashMap","std::num::NonZeroI8","std::string::String","std::borrow::Cow","std::net::SocketAddr","std::sync::Arc","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::result::Result","std::net::IpAddr","std::sync::atomic::AtomicU32","std::rc::Rc","std::time::Duration","std::net::Ipv6Addr","std::collections::BTreeMap","std::sync::RwLock","std::sync::Mutex","std::num::NonZeroU64","std::vec::Vec","std::num::NonZeroI128","std::num::NonZeroI32","std::ffi::CString","std::path::PathBuf","std::num::NonZeroIsize"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // C
+decode_from_reader(p0, p1);
+crate::decode_from_reader(p0, p1);
+crate::decode_from_reader(p0, p1);
-----------------
src/de/read.rs de::read::Reader::read
deps:{"<&mut T as de::read::Reader>":{},"de::read::Reader::read":{"Self":["de::read::Reader"]},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"<&mut T as de::read::Reader>":{},"de::read::Reader::read":{"Self":["de::read::SliceReader","std::io::BufReader","<&mut T as de::read::Reader>","features::impl_std::IoReader"]},"features::impl_std::IoReader":{"R":["std::process::ChildStderr","std::io::BufReader<R>","std::io::Take<T>","std::net::TcpStream","std::fs::File","std::io::StdinLock<'_>","std::boxed::Box<R>","&'a std::os::unix::net::UnixStream","std::io::Chain<T, U>","std::io::Repeat","std::sys::unix::stdio::Stdin","std::os::unix::net::UnixStream","std::io::Empty","&'a std::sys::unix::fd::FileDesc","std::io::stdio::StdinRaw","std::collections::VecDeque<u8, A>","&std::fs::File","std::io::Stdin","&std::net::TcpStream","std::process::ChildStdout","std::io::impls::<impl std::io::Read for &mut R>","std::io::Cursor<T>"]},"std::io::BufReader":{"R":["std::net::TcpStream","std::process::ChildStderr","std::io::stdio::StdinRaw","std::io::BufReader<R>","std::io::Take<T>","std::io::Chain<T, U>","std::io::Stdin","&std::fs::File","std::io::impls::<impl std::io::Read for &mut R>","std::sys::unix::stdio::Stdin","std::process::ChildStdout","std::boxed::Box<R>","std::io::Cursor<T>","&'a std::os::unix::net::UnixStream","&std::net::TcpStream","std::os::unix::net::UnixStream","std::io::StdinLock<'_>","std::io::Empty","&'a std::sys::unix::fd::FileDesc","std::collections::VecDeque<u8, A>","std::io::Repeat","std::fs::File"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // Self
let mut p1 = &mut [0u8].as_mut_slice(); // None+[u8]
+p0.read(p1);
+de::read::Reader::read(p0, p1);
+crate::de::read::Reader::read(p0, p1);
+crate::de::read::Reader::read(p0, p1);
-----------------
src/de/read.rs de::read::Reader::peek_read
deps:{"<&mut T as de::read::Reader>":{},"de::read::Reader::peek_read":{"Self":["de::read::Reader"]},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"<&mut T as de::read::Reader>":{},"de::read::Reader::peek_read":{"Self":["std::io::BufReader","features::impl_std::IoReader","de::read::SliceReader","<&mut T as de::read::Reader>"]},"features::impl_std::IoReader":{"R":["std::io::BufReader<R>","std::boxed::Box<R>","std::io::Repeat","std::os::unix::net::UnixStream","std::sys::unix::stdio::Stdin","std::fs::File","&std::net::TcpStream","std::io::impls::<impl std::io::Read for &mut R>","std::io::stdio::StdinRaw","std::process::ChildStderr","std::io::Cursor<T>","std::io::StdinLock<'_>","std::io::Empty","std::collections::VecDeque<u8, A>","std::io::Stdin","&std::fs::File","&'a std::os::unix::net::UnixStream","std::io::Take<T>","std::net::TcpStream","std::io::Chain<T, U>","&'a std::sys::unix::fd::FileDesc","std::process::ChildStdout"]},"std::io::BufReader":{"R":["std::net::TcpStream","std::collections::VecDeque<u8, A>","std::io::Empty","std::io::BufReader<R>","&std::fs::File","&std::net::TcpStream","std::io::impls::<impl std::io::Read for &mut R>","std::io::Cursor<T>","std::io::Stdin","std::boxed::Box<R>","&'a std::sys::unix::fd::FileDesc","std::io::Take<T>","std::sys::unix::stdio::Stdin","&'a std::os::unix::net::UnixStream","std::process::ChildStderr","std::os::unix::net::UnixStream","std::process::ChildStdout","std::io::StdinLock<'_>","std::fs::File","std::io::Repeat","std::io::Chain<T, U>","std::io::stdio::StdinRaw"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // Self
let mut p1 = 0usize; // None+usize
+p0.peek_read(p1);
+de::read::Reader::peek_read(p0, p1);
+crate::de::read::Reader::peek_read(p0, p1);
+crate::de::read::Reader::peek_read(p0, p1);
-----------------
src/de/read.rs de::read::Reader::consume
deps:{"<&mut T as de::read::Reader>":{},"de::read::Reader::consume":{"Self":["de::read::Reader"]},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"<&mut T as de::read::Reader>":{},"de::read::Reader::consume":{"Self":["<&mut T as de::read::Reader>","features::impl_std::IoReader","de::read::SliceReader","std::io::BufReader"]},"features::impl_std::IoReader":{"R":["&'a std::sys::unix::fd::FileDesc","std::net::TcpStream","std::boxed::Box<R>","std::io::Empty","std::io::Chain<T, U>","&std::fs::File","std::io::Cursor<T>","std::collections::VecDeque<u8, A>","std::os::unix::net::UnixStream","std::process::ChildStdout","std::io::BufReader<R>","std::io::Take<T>","std::io::Stdin","&std::net::TcpStream","std::process::ChildStderr","std::io::Repeat","std::io::StdinLock<'_>","std::sys::unix::stdio::Stdin","&'a std::os::unix::net::UnixStream","std::io::impls::<impl std::io::Read for &mut R>","std::fs::File","std::io::stdio::StdinRaw"]},"std::io::BufReader":{"R":["std::io::StdinLock<'_>","std::io::Repeat","std::io::impls::<impl std::io::Read for &mut R>","std::os::unix::net::UnixStream","std::boxed::Box<R>","std::io::Take<T>","std::process::ChildStdout","std::collections::VecDeque<u8, A>","&std::fs::File","std::io::Stdin","std::io::BufReader<R>","&std::net::TcpStream","&'a std::sys::unix::fd::FileDesc","std::sys::unix::stdio::Stdin","std::net::TcpStream","std::io::Chain<T, U>","std::io::Empty","std::process::ChildStderr","&'a std::os::unix::net::UnixStream","std::io::stdio::StdinRaw","std::io::Cursor<T>","std::fs::File"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // Self
let mut p1 = 0usize; // None+usize
+p0.consume(p1);
+de::read::Reader::consume(p0, p1);
+crate::de::read::Reader::consume(p0, p1);
+crate::de::read::Reader::consume(p0, p1);
-----------------
src/de/read.rs de::read::BorrowReader::take_bytes
'storage
deps:{"de::read::BorrowReader::take_bytes":{"Self":["de::read::BorrowReader","de::read::Reader"]}}
candidates:{"de::read::BorrowReader::take_bytes":{"Self":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // Self
let mut p1 = 0usize; // None+usize
+p0.take_bytes(p1);
+de::read::BorrowReader::take_bytes(p0, p1);
+crate::de::read::BorrowReader::take_bytes(p0, p1);
+crate::de::read::BorrowReader::take_bytes(p0, p1);
-----------------
src/de/mod.rs de::Decode::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::Decode::decode":{"D":["de::Decoder","std::marker::Sized"],"Self":["de::Decode","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"K":["de::BorrowDecode","std::marker::Sized","enc::Encode","std::cmp::Ord","de::Decode"],"V":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["de::Decode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::Decode","enc::Encode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode"]},"std::collections::Bound":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["std::hash::Hash","std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode","std::cmp::Eq"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["de::Decode","std::cmp::Eq","std::hash::Hash","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::Limit","std::clone::impls::<impl std::clone::Clone for *mut T>","config::NoLimit","config::Fixint","config::Configuration","config::BigEndian","config::Varint"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::Decode::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"Self":["std::num::NonZeroUsize","std::collections::HashSet","std::num::NonZeroIsize","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroU64","std::sync::RwLock","std::borrow::Cow","std::collections::Bound","std::collections::BTreeMap","std::sync::Mutex","std::rc::Rc","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::num::NonZeroU128","std::num::NonZeroI32","std::ops::RangeInclusive","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::string::String","std::result::Result","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::cell::Cell","std::num::NonZeroU16","std::net::Ipv4Addr","std::vec::Vec","std::collections::HashMap","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::ffi::CString","std::num::NonZeroI64","std::net::SocketAddrV6","std::net::IpAddr","std::time::Duration","std::boxed::Box","std::cell::RefCell","std::time::SystemTime","std::net::Ipv6Addr","std::option::Option","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::ops::Range"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::path::Path","<T as std::borrow::ToOwned>","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::path::PathBuf","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroI128","std::sync::Arc","std::num::NonZeroUsize","std::num::NonZeroU32","std::option::Option","std::rc::Rc","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroI64","std::ffi::CString","std::time::Duration","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroIsize","std::cell::RefCell","std::num::NonZeroU128","std::net::SocketAddr"],"V":["std::sync::RwLock","std::sync::atomic::AtomicU8","std::sync::Mutex","std::ops::RangeInclusive","std::collections::HashSet","std::vec::Vec","std::result::Result","std::net::Ipv6Addr","std::marker::PhantomData","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::cell::Cell","std::num::NonZeroI32","std::num::NonZeroUsize","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::ffi::CString","std::sync::atomic::AtomicI8","std::string::String","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::time::SystemTime","std::sync::atomic::AtomicI64","std::net::IpAddr","std::sync::atomic::AtomicU32","std::time::Duration","std::net::Ipv4Addr","std::path::PathBuf","std::collections::BTreeMap","std::num::NonZeroI8","std::net::SocketAddr","std::num::NonZeroU8","std::collections::BinaryHeap","std::collections::Bound","std::num::NonZeroIsize","std::boxed::Box","std::sync::Arc","std::collections::BTreeSet","std::collections::VecDeque","std::collections::HashMap","std::num::NonZeroI64","std::cell::RefCell","std::rc::Rc","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::option::Option","std::ops::Range","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroU64"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroI8","std::num::NonZeroI16","std::net::IpAddr","std::num::NonZeroU32","std::num::NonZeroI64","std::path::PathBuf","std::sync::Arc","std::marker::PhantomData","std::net::SocketAddr","std::rc::Rc","std::num::NonZeroI32","std::net::Ipv4Addr","std::ffi::CString","std::string::String","std::num::NonZeroU16","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroU128","std::net::Ipv6Addr","std::cell::Cell"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU16","std::num::NonZeroU32","std::time::Duration","std::rc::Rc","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroU64","std::cell::RefCell","std::sync::Arc","std::net::IpAddr","std::net::SocketAddrV6","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroI128","std::num::NonZeroI8","std::time::SystemTime","std::num::NonZeroU128","std::net::Ipv4Addr"]},"std::collections::Bound":{"T":["std::sync::Mutex","std::sync::atomic::AtomicIsize","std::ffi::CString","std::sync::atomic::AtomicU32","std::boxed::Box","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::num::NonZeroUsize","std::option::Option","std::sync::atomic::AtomicI32","std::time::Duration","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::cell::RefCell","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroU32","std::num::NonZeroU8","std::num::NonZeroU64","std::collections::HashMap","std::sync::RwLock","std::num::NonZeroI8","std::cell::Cell","std::time::SystemTime","std::ops::RangeInclusive","std::num::NonZeroU128","std::collections::VecDeque","std::num::NonZeroI32","std::num::NonZeroIsize","std::collections::HashSet","std::ops::Range","std::borrow::Cow","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::num::NonZeroI64","std::vec::Vec","std::result::Result","std::net::IpAddr","std::num::NonZeroI128","std::collections::BTreeSet","std::sync::Arc","std::collections::BTreeMap","std::string::String","std::rc::Rc","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::collections::Bound","std::sync::atomic::AtomicU16"]},"std::collections::HashMap":{"K":["std::num::NonZeroU64","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroI32","std::rc::Rc","std::collections::Bound","std::num::NonZeroU16","std::num::NonZeroU128","std::num::NonZeroI64","std::net::SocketAddr","std::net::SocketAddrV6","std::net::Ipv4Addr","std::marker::PhantomData","std::string::String","std::path::PathBuf","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroI16"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::vec::Vec","std::num::NonZeroI32","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::result::Result","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroU8","std::collections::BTreeMap","std::num::NonZeroU128","std::num::NonZeroI16","std::sync::RwLock","std::net::SocketAddrV4","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::borrow::Cow","std::net::Ipv4Addr","std::boxed::Box","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::option::Option","std::ffi::CString","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::ops::Range","std::num::NonZeroIsize","std::path::PathBuf","std::string::String","std::sync::atomic::AtomicI16","std::cell::RefCell","std::collections::HashMap","std::time::Duration","std::num::NonZeroU32","std::time::SystemTime","std::sync::Arc","std::sync::atomic::AtomicI64","std::net::IpAddr","std::collections::HashSet","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::rc::Rc","std::collections::BTreeSet","std::collections::BinaryHeap","std::collections::Bound","std::num::NonZeroI128","std::marker::PhantomData","std::sync::Mutex"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroI16","std::ffi::CString","std::num::NonZeroIsize","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroI32","std::collections::Bound","std::net::Ipv4Addr","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroI8","std::num::NonZeroUsize","std::path::PathBuf","std::option::Option","std::time::Duration","std::num::NonZeroU128"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::vec::Vec","std::collections::HashMap","std::num::NonZeroI8","std::num::NonZeroU128","std::collections::BTreeMap","std::num::NonZeroU32","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::result::Result","std::collections::Bound","std::time::Duration","std::num::NonZeroI16","std::cell::RefCell","std::num::NonZeroI64","std::cell::Cell","std::num::NonZeroI128","std::ffi::CString","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::rc::Rc","std::collections::HashSet","std::path::PathBuf","std::sync::Arc","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::net::IpAddr","std::ops::Range","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::num::NonZeroU16","std::collections::BinaryHeap","std::sync::Mutex","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::option::Option","std::time::SystemTime","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::num::NonZeroU64","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::borrow::Cow","std::net::SocketAddr","std::ops::RangeInclusive","std::net::SocketAddrV4","std::sync::RwLock","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::string::String","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::boxed::Box","std::sync::atomic::AtomicU32","std::collections::VecDeque"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::ops::RangeInclusive","std::num::NonZeroIsize","std::rc::Rc","std::num::NonZeroI64","std::ops::Range","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::num::NonZeroU8","std::net::IpAddr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::ffi::CString","std::num::NonZeroU128","std::time::Duration","std::sync::Mutex","std::marker::PhantomData","std::boxed::Box","std::net::SocketAddr","std::net::Ipv6Addr","std::sync::Arc","std::num::NonZeroU32","std::collections::VecDeque","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroI128","std::string::String","std::time::SystemTime","std::collections::HashMap","std::vec::Vec","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::cell::Cell","std::option::Option","std::num::NonZeroI16","std::collections::BinaryHeap","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::sync::RwLock","std::result::Result","std::borrow::Cow","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::path::PathBuf","std::collections::Bound","std::num::NonZeroI8","std::cell::RefCell","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::sync::atomic::AtomicI32","std::num::NonZeroU64"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::ops::RangeInclusive","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::borrow::Cow","std::sync::atomic::AtomicI32","std::cell::Cell","std::num::NonZeroU32","std::net::SocketAddrV4","std::collections::BinaryHeap","std::result::Result","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::collections::HashSet","std::net::SocketAddr","std::num::NonZeroU16","std::vec::Vec","std::net::Ipv4Addr","std::cell::RefCell","std::marker::PhantomData","std::path::PathBuf","std::collections::HashMap","std::net::Ipv6Addr","std::num::NonZeroI64","std::num::NonZeroI16","std::sync::RwLock","std::num::NonZeroI8","std::collections::BTreeMap","std::sync::Arc","std::ops::Range","std::sync::Mutex","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::boxed::Box","std::time::Duration","std::net::SocketAddrV6","std::collections::BTreeSet","std::string::String","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::ffi::CString","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroI128","std::collections::Bound","std::time::SystemTime","std::option::Option","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicBool","std::result::Result","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::num::NonZeroI16","std::num::NonZeroU64","std::net::Ipv6Addr","std::ffi::CString","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::ops::Range","std::collections::Bound","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::cell::RefCell","std::num::NonZeroI8","std::path::PathBuf","std::cell::Cell","std::sync::atomic::AtomicU32","std::boxed::Box","std::ops::RangeInclusive","std::num::NonZeroIsize","std::collections::HashSet","std::time::Duration","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::num::NonZeroU128","std::marker::PhantomData","std::num::NonZeroI128","std::collections::BinaryHeap","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::collections::BTreeMap","std::borrow::Cow","std::string::String","std::rc::Rc","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroI64","std::vec::Vec","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::option::Option","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::time::SystemTime","std::sync::Mutex"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::Decode::decode(p0);
+crate::de::Decode::decode(p0);
+crate::de::Decode::decode(p0);
-----------------
src/de/mod.rs de::BorrowDecode::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"de::BorrowDecode::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"],"Self":["std::marker::Sized","de::BorrowDecode"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized","std::cmp::Ord"],"V":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["enc::Encode","de::Decode","std::cmp::Ord","de::BorrowDecode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["enc::Encode","de::Decode","std::marker::Sized","std::cmp::Eq","de::BorrowDecode","std::hash::Hash"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::cmp::Eq","std::hash::Hash","enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for &mut T>","config::Varint","config::BigEndian","config::LittleEndian","config::NoLimit","config::Fixint","config::Configuration","config::Limit"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::BorrowDecode::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"Self":["std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::marker::PhantomData","std::collections::Bound","std::num::NonZeroU64","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::ops::Range","std::time::Duration","std::num::NonZeroU16","std::collections::VecDeque","std::string::String","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::option::Option","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::net::SocketAddrV4","std::num::NonZeroI16","std::num::NonZeroI8","std::rc::Rc","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::net::SocketAddr","std::sync::Arc","std::sync::atomic::AtomicU16","std::borrow::Cow","std::cell::RefCell","std::num::NonZeroI32","std::collections::BinaryHeap","std::sync::RwLock","std::vec::Vec","std::collections::HashMap","std::result::Result","std::num::NonZeroUsize","std::collections::HashSet","std::ffi::CString","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::time::SystemTime","std::net::IpAddr","std::path::PathBuf","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::cell::Cell","std::num::NonZeroU8","std::boxed::Box","std::sync::atomic::AtomicIsize"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::CStr","<T as std::borrow::ToOwned>","std::ffi::OsStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroU128","std::net::SocketAddrV6","std::cell::Cell","std::num::NonZeroU16","std::num::NonZeroIsize","std::marker::PhantomData","std::time::Duration","std::cell::RefCell","std::rc::Rc","std::num::NonZeroU64","std::net::Ipv4Addr","std::num::NonZeroU32","std::string::String","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroI8","std::num::NonZeroI32","std::net::Ipv6Addr","std::path::PathBuf","std::sync::Arc","std::num::NonZeroU8","std::num::NonZeroI16","std::time::SystemTime","std::option::Option"],"V":["std::num::NonZeroU64","std::option::Option","std::rc::Rc","std::cell::Cell","std::num::NonZeroU8","std::borrow::Cow","std::collections::HashSet","std::net::Ipv4Addr","std::string::String","std::collections::Bound","std::num::NonZeroUsize","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroI64","std::boxed::Box","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::sync::Arc","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroU16","std::net::Ipv6Addr","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::sync::RwLock","std::collections::BTreeMap","std::num::NonZeroIsize","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::num::NonZeroI32","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::path::PathBuf","std::sync::atomic::AtomicU16","std::result::Result","std::ffi::CString","std::cell::RefCell","std::sync::Mutex","std::net::SocketAddr","std::ops::Range","std::num::NonZeroI8","std::vec::Vec","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::net::SocketAddrV6","std::marker::PhantomData","std::net::IpAddr","std::sync::atomic::AtomicBool"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU16","std::num::NonZeroU128","std::option::Option","std::string::String","std::cell::RefCell","std::num::NonZeroI64","std::num::NonZeroI32","std::time::SystemTime","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroUsize","std::num::NonZeroI128","std::net::Ipv6Addr","std::path::PathBuf","std::net::SocketAddrV6","std::num::NonZeroI16","std::ffi::CString","std::num::NonZeroU8","std::net::Ipv4Addr","std::time::Duration","std::sync::Arc"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroI8","std::num::NonZeroI128","std::net::Ipv6Addr","std::num::NonZeroU64","std::net::SocketAddr","std::num::NonZeroU32","std::cell::RefCell","std::option::Option","std::num::NonZeroI16","std::rc::Rc","std::string::String","std::ffi::CString","std::path::PathBuf","std::num::NonZeroI64","std::net::SocketAddrV4","std::num::NonZeroIsize","std::cell::Cell","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroU16","std::net::SocketAddrV6","std::time::Duration","std::net::IpAddr"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicU8","std::collections::HashSet","std::collections::HashMap","std::num::NonZeroI8","std::ffi::CString","std::collections::VecDeque","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::sync::Arc","std::sync::Mutex","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::ops::Range","std::num::NonZeroI64","std::num::NonZeroI16","std::vec::Vec","std::num::NonZeroU32","std::net::IpAddr","std::string::String","std::borrow::Cow","std::cell::Cell","std::sync::atomic::AtomicIsize","std::result::Result","std::net::Ipv4Addr","std::num::NonZeroI128","std::net::SocketAddr","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::collections::Bound","std::cell::RefCell","std::rc::Rc","std::num::NonZeroIsize","std::net::SocketAddrV4","std::boxed::Box","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::option::Option","std::collections::BTreeMap","std::time::Duration","std::sync::atomic::AtomicBool","std::time::SystemTime","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroU8","std::sync::RwLock","std::ops::RangeInclusive","std::path::PathBuf","std::marker::PhantomData","std::collections::BTreeSet"]},"std::collections::HashMap":{"K":["std::num::NonZeroI64","std::net::SocketAddrV6","std::num::NonZeroI32","std::time::Duration","std::num::NonZeroU16","std::string::String","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroI128","std::num::NonZeroUsize","std::collections::Bound","std::net::SocketAddrV4","std::num::NonZeroI16","std::net::SocketAddr","std::num::NonZeroIsize","std::sync::Arc"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::sync::Arc","std::ffi::CString","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::collections::BTreeMap","std::collections::Bound","std::num::NonZeroIsize","std::boxed::Box","std::string::String","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroU8","std::collections::VecDeque","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::vec::Vec","std::num::NonZeroU128","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::time::Duration","std::num::NonZeroU32","std::net::Ipv4Addr","std::net::SocketAddrV6","std::result::Result","std::collections::HashMap","std::collections::BinaryHeap","std::cell::Cell","std::collections::BTreeSet","std::collections::HashSet","std::rc::Rc","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::num::NonZeroI64","std::cell::RefCell","std::sync::atomic::AtomicI8","std::sync::Mutex","std::option::Option","std::ops::Range","std::ops::RangeInclusive","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroI32","std::sync::RwLock","std::borrow::Cow","std::sync::atomic::AtomicU32"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::net::Ipv4Addr","std::num::NonZeroI16","std::num::NonZeroIsize","std::time::SystemTime","std::time::Duration","std::net::SocketAddr","std::collections::Bound","std::num::NonZeroU64","std::net::IpAddr","std::num::NonZeroU8","std::string::String","std::num::NonZeroI64","std::num::NonZeroU128","std::path::PathBuf"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::num::NonZeroU64","std::collections::BTreeSet","std::sync::Mutex","std::ops::Range","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::ffi::CString","std::sync::atomic::AtomicI8","std::boxed::Box","std::result::Result","std::time::Duration","std::sync::Arc","std::collections::Bound","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::string::String","std::sync::RwLock","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::time::SystemTime","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroI64","std::option::Option","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::net::IpAddr","std::sync::atomic::AtomicU64","std::collections::HashSet","std::net::Ipv6Addr","std::cell::Cell","std::cell::RefCell","std::sync::atomic::AtomicI32","std::path::PathBuf","std::collections::HashMap","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::borrow::Cow","std::net::SocketAddr","std::ops::RangeInclusive","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::num::NonZeroI32","std::net::SocketAddrV6","std::collections::VecDeque","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::marker::PhantomData","std::net::Ipv4Addr","std::vec::Vec"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::boxed::Box","std::num::NonZeroU128","std::net::Ipv4Addr","std::string::String","std::num::NonZeroI64","std::cell::Cell","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::cell::RefCell","std::time::SystemTime","std::sync::atomic::AtomicI8","std::collections::HashMap","std::option::Option","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::num::NonZeroIsize","std::net::IpAddr","std::num::NonZeroU64","std::borrow::Cow","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::marker::PhantomData","std::collections::BTreeMap","std::vec::Vec","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::time::Duration","std::num::NonZeroI16","std::rc::Rc","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::collections::Bound","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::ffi::CString","std::num::NonZeroU16","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::collections::BTreeSet","std::sync::RwLock","std::sync::atomic::AtomicU64","std::collections::HashSet","std::result::Result","std::sync::atomic::AtomicI16","std::path::PathBuf","std::ops::RangeInclusive","std::ops::Range","std::sync::Arc","std::collections::BinaryHeap","std::num::NonZeroI8"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::ops::RangeInclusive","std::borrow::Cow","std::collections::VecDeque","std::collections::Bound","std::collections::BTreeMap","std::net::IpAddr","std::net::SocketAddr","std::result::Result","std::ffi::CString","std::sync::atomic::AtomicU16","std::string::String","std::net::SocketAddrV4","std::num::NonZeroI16","std::ops::Range","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::sync::RwLock","std::time::SystemTime","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::cell::RefCell","std::marker::PhantomData","std::time::Duration","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::path::PathBuf","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::vec::Vec","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::num::NonZeroI32","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::Mutex","std::collections::BinaryHeap","std::cell::Cell","std::sync::Arc","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::num::NonZeroU32","std::rc::Rc","std::sync::atomic::AtomicBool","std::collections::HashMap","std::collections::HashSet","std::net::Ipv4Addr"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::option::Option","std::sync::atomic::AtomicBool","std::sync::RwLock","std::num::NonZeroUsize","std::num::NonZeroIsize","std::collections::HashSet","std::path::PathBuf","std::num::NonZeroI8","std::sync::Arc","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::vec::Vec","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::num::NonZeroI64","std::rc::Rc","std::num::NonZeroU64","std::ffi::CString","std::collections::BTreeSet","std::cell::Cell","std::time::SystemTime","std::num::NonZeroI32","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::net::SocketAddrV6","std::ops::Range","std::net::Ipv6Addr","std::result::Result","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::boxed::Box","std::ops::RangeInclusive","std::marker::PhantomData","std::num::NonZeroU16","std::borrow::Cow","std::sync::Mutex","std::num::NonZeroU32","std::num::NonZeroI128","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::net::IpAddr","std::collections::Bound","std::string::String","std::net::SocketAddr","std::time::Duration","std::collections::HashMap","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::cell::RefCell","std::net::Ipv4Addr"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::BorrowDecode::borrow_decode(p0);
+crate::de::BorrowDecode::borrow_decode(p0);
+crate::de::BorrowDecode::borrow_decode(p0);
-----------------
src/de/mod.rs de::Decoder::reader
deps:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as utils::Sealed>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::Decoder::reader":{"Self":["utils::Sealed","de::Decoder"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as utils::Sealed>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::Decoder::reader":{"Self":["<&'a mut T as utils::Sealed>","de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // Self
+p0.reader();
+de::Decoder::reader(p0);
+crate::de::Decoder::reader(p0);
+crate::de::Decoder::reader(p0);
-----------------
src/de/mod.rs de::Decoder::config
deps:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as utils::Sealed>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::Decoder::config":{"Self":["utils::Sealed","de::Decoder"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as utils::Sealed>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::Decoder::config":{"Self":["<&'a mut T as utils::Sealed>","<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // Self
+p0.config();
+de::Decoder::config(p0);
+crate::de::Decoder::config(p0);
+crate::de::Decoder::config(p0);
-----------------
src/de/mod.rs de::Decoder::claim_bytes_read
deps:{"<&'a mut T as utils::Sealed>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::Decoder::claim_bytes_read":{"Self":["de::Decoder","utils::Sealed"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]}}
candidates:{"<&'a mut T as utils::Sealed>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::Decoder::claim_bytes_read":{"Self":["<&'a mut T as utils::Sealed>","de::decoder::DecoderImpl"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // Self
let mut p1 = 0usize; // None+usize
+p0.claim_bytes_read(p1);
+de::Decoder::claim_bytes_read(p0, p1);
+crate::de::Decoder::claim_bytes_read(p0, p1);
+crate::de::Decoder::claim_bytes_read(p0, p1);
-----------------
src/de/mod.rs de::Decoder::claim_container_read
deps:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as utils::Sealed>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::Decoder::claim_container_read":{"Self":["utils::Sealed","de::Decoder"],"T":["std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as utils::Sealed>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::Decoder::claim_container_read":{"Self":["<&'a mut T as de::Decoder>","<&'a mut T as utils::Sealed>","de::decoder::DecoderImpl"],"T":["RUG_ANY"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // Self
let mut p1 = 0usize; // None+usize
+p0.claim_container_read(p1);
+de::Decoder::claim_container_read(p0, p1);
+crate::de::Decoder::claim_container_read(p0, p1);
+crate::de::Decoder::claim_container_read(p0, p1);
-----------------
src/de/mod.rs de::Decoder::unclaim_bytes_read
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::Decoder::unclaim_bytes_read":{"Self":["utils::Sealed","de::Decoder"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::Decoder::unclaim_bytes_read":{"Self":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // Self
let mut p1 = 0usize; // None+usize
+p0.unclaim_bytes_read(p1);
+de::Decoder::unclaim_bytes_read(p0, p1);
+crate::de::Decoder::unclaim_bytes_read(p0, p1);
+crate::de::Decoder::unclaim_bytes_read(p0, p1);
-----------------
src/de/mod.rs de::BorrowDecoder::borrow_reader
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::BorrowDecoder::borrow_reader":{"Self":["de::Decoder","de::BorrowDecoder"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::BorrowDecoder::borrow_reader":{"Self":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // Self
+p0.borrow_reader();
+de::BorrowDecoder::borrow_reader(p0);
+crate::de::BorrowDecoder::borrow_reader(p0);
+crate::de::BorrowDecoder::borrow_reader(p0);
-----------------
src/enc/write.rs enc::write::Writer::write
deps:{"<&mut T as enc::write::Writer>":{},"enc::write::Writer::write":{"Self":["enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&mut T as enc::write::Writer>":{},"enc::write::Writer::write":{"Self":["features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter"]},"features::impl_std::IoWriter":{"W":["std::io::stdio::StderrRaw","std::io::LineWriter<W>","std::io::Cursor<[u8; N]>","&std::net::TcpStream","std::vec::Vec<u8, A>","&std::io::Sink","std::io::stdio::StdoutRaw","&'a std::os::unix::net::UnixStream","std::fs::File","&std::fs::File","std::io::Sink","std::io::Stderr","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::net::TcpStream","std::process::ChildStdin","std::io::BorrowedCursor<'a>","std::collections::VecDeque<u8, A>","std::os::unix::net::UnixStream","std::io::Stdout","&std::process::ChildStdin","std::boxed::Box<W>","std::io::Cursor<std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stderr","std::sys::unix::stdio::Stdout","std::io::BufWriter<W>","&std::io::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::impls::<impl std::io::Write for &mut W>","std::io::StdoutLock<'_>","&std::io::Stdout","std::io::StderrLock<'_>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<&mut [u8]>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // Self
let mut p1 = [0u8,0,0].as_mut_slice(); // None+&[u8]
+p0.write(p1);
+enc::write::Writer::write(p0, p1);
+crate::enc::write::Writer::write(p0, p1);
+crate::enc::write::Writer::write(p0, p1);
-----------------
src/enc/mod.rs enc::Encode::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::Encode::encode":{"E":["enc::Encoder","std::marker::Sized"],"Self":["enc::Encode"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["std::marker::Sized","std::cmp::Ord","de::BorrowDecode","de::Decode","enc::Encode"],"V":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::BorrowDecode","enc::Encode","std::cmp::Ord","de::Decode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized","std::hash::Hash","std::cmp::Eq"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized","std::cmp::Eq","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","std::clone::impls::<impl std::clone::Clone for *const T>","config::Configuration","config::NoLimit","config::Fixint","config::Limit","config::Varint","config::BigEndian"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::Encode::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"Self":["std::ops::Range","std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::collections::HashMap","std::sync::atomic::AtomicU32","std::rc::Rc","std::time::Duration","std::sync::Mutex","std::num::NonZeroUsize","std::marker::PhantomData","std::net::IpAddr","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::collections::Bound","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::collections::HashSet","std::num::NonZeroU8","std::collections::BTreeSet","std::borrow::Cow","std::num::NonZeroU32","std::net::Ipv6Addr","std::vec::Vec","std::net::SocketAddrV4","std::sync::RwLock","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroIsize","std::result::Result","std::sync::atomic::AtomicIsize","std::sync::Arc","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::num::NonZeroU64","std::string::String","std::collections::BTreeMap","std::cell::Cell","std::time::SystemTime","std::path::PathBuf","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::ffi::CString","std::boxed::Box","std::num::NonZeroU128","std::option::Option","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::num::NonZeroI64"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","enc::write::SizeWriter","enc::write::SliceWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Cursor<[u8; N]>","std::fs::File","&std::io::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::collections::VecDeque<u8, A>","std::io::StderrLock<'_>","std::io::Cursor<&mut [u8]>","std::io::impls::<impl std::io::Write for &mut W>","&std::io::Stderr","std::io::LineWriter<W>","std::os::unix::net::UnixStream","std::io::Sink","std::boxed::Box<W>","std::io::BorrowedCursor<'a>","std::net::TcpStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Stderr","&std::fs::File","std::io::StdoutLock<'_>","std::io::BufWriter<W>","&std::process::ChildStdin","&std::net::TcpStream","&'a std::os::unix::net::UnixStream","std::io::stdio::StdoutRaw","&std::io::Sink","std::sys::unix::stdio::Stdout","std::io::Cursor<std::vec::Vec<u8, A>>","std::vec::Vec<u8, A>","std::io::stdio::StderrRaw","std::io::Stdout","std::sys::unix::stdio::Stderr","std::process::ChildStdin","std::io::Cursor<std::boxed::Box<[u8], A>>"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::CStr","std::ffi::OsStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::net::SocketAddr","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroU128","std::num::NonZeroU8","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroI128","std::ffi::CString","std::cell::RefCell","std::rc::Rc","std::cell::Cell","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroI64","std::path::PathBuf","std::option::Option","std::net::IpAddr","std::num::NonZeroIsize","std::num::NonZeroI16"],"V":["std::ops::RangeInclusive","std::collections::HashSet","std::num::NonZeroU64","std::sync::Mutex","std::num::NonZeroUsize","std::num::NonZeroI128","std::string::String","std::cell::RefCell","std::marker::PhantomData","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::borrow::Cow","std::num::NonZeroI64","std::collections::VecDeque","std::cell::Cell","std::rc::Rc","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::path::PathBuf","std::collections::HashMap","std::time::Duration","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::ops::Range","std::net::SocketAddr","std::net::SocketAddrV4","std::net::Ipv4Addr","std::time::SystemTime","std::ffi::CString","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::collections::Bound","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroI16","std::collections::BTreeMap","std::num::NonZeroU16","std::num::NonZeroU128","std::num::NonZeroI8","std::sync::RwLock","std::sync::Arc","std::option::Option","std::net::Ipv6Addr","std::result::Result","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::vec::Vec","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::boxed::Box","std::sync::atomic::AtomicBool","std::num::NonZeroI32"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::string::String","std::cell::Cell","std::num::NonZeroI8","std::num::NonZeroU8","std::rc::Rc","std::num::NonZeroI32","std::ffi::CString","std::num::NonZeroU64","std::net::SocketAddrV6","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroU16","std::marker::PhantomData","std::time::SystemTime","std::net::SocketAddr","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroI16","std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroI128","std::num::NonZeroIsize","std::net::Ipv6Addr","std::cell::RefCell","std::net::Ipv4Addr"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU128","std::num::NonZeroU64","std::num::NonZeroI64","std::net::IpAddr","std::net::SocketAddrV6","std::ffi::CString","std::option::Option","std::num::NonZeroUsize","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroI32","std::num::NonZeroU32","std::net::SocketAddrV4","std::num::NonZeroI8","std::time::Duration","std::time::SystemTime","std::rc::Rc","std::marker::PhantomData","std::cell::Cell","std::num::NonZeroU16","std::num::NonZeroU8","std::path::PathBuf","std::sync::Arc","std::num::NonZeroI16","std::net::Ipv6Addr","std::string::String"]},"std::collections::Bound":{"T":["std::marker::PhantomData","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::time::SystemTime","std::sync::atomic::AtomicBool","std::result::Result","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::num::NonZeroI64","std::path::PathBuf","std::boxed::Box","std::cell::Cell","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroU64","std::num::NonZeroUsize","std::collections::VecDeque","std::borrow::Cow","std::num::NonZeroI8","std::net::Ipv4Addr","std::ops::RangeInclusive","std::sync::RwLock","std::collections::HashSet","std::net::IpAddr","std::cell::RefCell","std::num::NonZeroU16","std::net::SocketAddr","std::sync::Mutex","std::num::NonZeroI128","std::num::NonZeroIsize","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::vec::Vec","std::sync::atomic::AtomicI64","std::ffi::CString","std::sync::Arc","std::collections::BTreeMap","std::option::Option","std::ops::Range","std::num::NonZeroU8","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::string::String","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::collections::Bound","std::collections::BinaryHeap","std::time::Duration","std::num::NonZeroU128","std::rc::Rc","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::net::SocketAddrV6"]},"std::collections::HashMap":{"K":["std::num::NonZeroU32","std::num::NonZeroU16","std::path::PathBuf","std::collections::Bound","std::marker::PhantomData","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroI16","std::num::NonZeroU128","std::rc::Rc","std::num::NonZeroUsize","std::num::NonZeroIsize","std::net::SocketAddrV6","std::net::IpAddr","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroI32"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::marker::PhantomData","std::num::NonZeroI8","std::time::Duration","std::collections::BinaryHeap","std::sync::RwLock","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::sync::atomic::AtomicI32","std::path::PathBuf","std::collections::BTreeMap","std::collections::VecDeque","std::num::NonZeroU8","std::net::IpAddr","std::vec::Vec","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::ops::Range","std::num::NonZeroI128","std::boxed::Box","std::string::String","std::sync::atomic::AtomicI64","std::option::Option","std::net::SocketAddr","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroI32","std::num::NonZeroU64","std::collections::HashMap","std::net::SocketAddrV6","std::cell::Cell","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroU32","std::result::Result","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::borrow::Cow","std::sync::atomic::AtomicI8","std::collections::Bound","std::rc::Rc","std::num::NonZeroUsize","std::num::NonZeroU16","std::num::NonZeroI16","std::sync::Mutex","std::ops::RangeInclusive","std::sync::Arc","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::ffi::CString","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::collections::HashSet"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI128","std::num::NonZeroI8","std::num::NonZeroI64","std::net::SocketAddr","std::collections::Bound","std::string::String","std::num::NonZeroI16","std::net::SocketAddrV4","std::net::SocketAddrV6","std::marker::PhantomData","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroU16","std::net::IpAddr","std::option::Option","std::rc::Rc","std::path::PathBuf","std::num::NonZeroUsize"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::collections::HashMap","std::option::Option","std::string::String","std::result::Result","std::collections::BTreeSet","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::sync::RwLock","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::num::NonZeroU16","std::time::Duration","std::ffi::CString","std::vec::Vec","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroIsize","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::collections::HashSet","std::num::NonZeroI16","std::boxed::Box","std::net::Ipv4Addr","std::net::IpAddr","std::net::SocketAddrV4","std::sync::Mutex","std::num::NonZeroI32","std::cell::RefCell","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::marker::PhantomData","std::ops::RangeInclusive","std::num::NonZeroI8","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::path::PathBuf","std::sync::Arc","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::ops::Range","std::collections::Bound","std::rc::Rc","std::net::SocketAddr","std::num::NonZeroU32","std::borrow::Cow","std::num::NonZeroU8","std::num::NonZeroU128"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroU64","std::num::NonZeroI16","std::time::Duration","std::sync::atomic::AtomicU8","std::path::PathBuf","std::ffi::CString","std::collections::Bound","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::net::Ipv4Addr","std::num::NonZeroU16","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroI32","std::net::Ipv6Addr","std::num::NonZeroUsize","std::ops::Range","std::collections::HashMap","std::sync::RwLock","std::net::IpAddr","std::borrow::Cow","std::result::Result","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::collections::BTreeSet","std::num::NonZeroIsize","std::rc::Rc","std::vec::Vec","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroI128","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::cell::Cell","std::marker::PhantomData","std::option::Option","std::cell::RefCell","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::collections::HashSet","std::string::String","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::boxed::Box","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::collections::VecDeque","std::ops::RangeInclusive","std::net::SocketAddrV4"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::cell::RefCell","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroU32","std::borrow::Cow","std::vec::Vec","std::num::NonZeroU16","std::collections::HashSet","std::num::NonZeroU64","std::net::SocketAddrV4","std::string::String","std::ops::Range","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::cell::Cell","std::boxed::Box","std::sync::Mutex","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::collections::HashMap","std::result::Result","std::num::NonZeroI8","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::ffi::CString","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::num::NonZeroIsize","std::path::PathBuf","std::collections::BTreeMap","std::net::IpAddr","std::option::Option","std::sync::atomic::AtomicI16","std::collections::Bound","std::num::NonZeroU128","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::net::Ipv6Addr","std::time::Duration","std::num::NonZeroI32","std::time::SystemTime","std::sync::RwLock","std::rc::Rc","std::sync::atomic::AtomicI32","std::sync::Arc"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::result::Result","std::string::String","std::net::IpAddr","std::path::PathBuf","std::cell::RefCell","std::collections::Bound","std::num::NonZeroU64","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::boxed::Box","std::collections::HashSet","std::sync::atomic::AtomicU16","std::sync::RwLock","std::vec::Vec","std::num::NonZeroU16","std::option::Option","std::net::Ipv4Addr","std::net::SocketAddr","std::ffi::CString","std::num::NonZeroU32","std::rc::Rc","std::num::NonZeroI32","std::num::NonZeroI16","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroU8","std::cell::Cell","std::borrow::Cow","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::sync::Arc","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::num::NonZeroIsize","std::num::NonZeroI8","std::collections::HashMap","std::ops::RangeInclusive","std::time::Duration","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::ops::Range","std::time::SystemTime","std::sync::Mutex","std::sync::atomic::AtomicI64","std::collections::BTreeSet"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // Self
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::Encode::encode(p0, p1);
+crate::enc::Encode::encode(p0, p1);
+crate::enc::Encode::encode(p0, p1);
-----------------
src/enc/mod.rs enc::Encoder::writer
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::Encoder::writer":{"Self":["utils::Sealed","enc::Encoder"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::Encoder::writer":{"Self":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","enc::write::SliceWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Sink","std::io::Stderr","&std::io::Stdout","std::io::BufWriter<W>","std::vec::Vec<u8, A>","std::net::TcpStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::io::Stderr","std::boxed::Box<W>","std::io::StderrLock<'_>","&std::net::TcpStream","std::io::Cursor<[u8; N]>","std::io::Cursor<&mut [u8]>","std::io::stdio::StdoutRaw","std::io::stdio::StderrRaw","std::os::unix::net::UnixStream","std::io::BorrowedCursor<'a>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::collections::VecDeque<u8, A>","&std::fs::File","std::io::Cursor<std::vec::Vec<u8, A>>","std::fs::File","std::sys::unix::stdio::Stdout","std::sys::unix::stdio::Stderr","std::io::LineWriter<W>","std::io::impls::<impl std::io::Write for &mut W>","&std::process::ChildStdin","std::io::StdoutLock<'_>","std::io::Stdout","std::process::ChildStdin","&'a std::os::unix::net::UnixStream","&std::io::Sink"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // Self
+p0.writer();
+enc::Encoder::writer(p0);
+crate::enc::Encoder::writer(p0);
+crate::enc::Encoder::writer(p0);
-----------------
src/enc/mod.rs enc::Encoder::config
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"enc::Encoder::config":{"Self":["enc::Encoder","utils::Sealed"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::Encoder::config":{"Self":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","enc::write::SizeWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter"]},"features::impl_std::IoWriter":{"W":["std::io::stdio::StderrRaw","std::io::Cursor<&mut [u8]>","std::collections::VecDeque<u8, A>","std::boxed::Box<W>","std::io::BorrowedCursor<'a>","std::io::Sink","&std::fs::File","&std::net::TcpStream","std::io::Stderr","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::stdio::StdoutRaw","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stdout","std::io::StderrLock<'_>","std::io::Cursor<[u8; N]>","std::io::StdoutLock<'_>","&std::process::ChildStdin","std::os::unix::net::UnixStream","std::io::Stdout","std::sys::unix::stdio::Stderr","std::vec::Vec<u8, A>","&std::io::Stderr","std::io::BufWriter<W>","std::io::LineWriter<W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::fs::File","std::process::ChildStdin","&std::io::Stdout","&'a std::os::unix::net::UnixStream","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::io::Sink","std::net::TcpStream","std::io::impls::<impl std::io::Write for &mut W>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // Self
+p0.config();
+enc::Encoder::config(p0);
+crate::enc::Encoder::config(p0);
+crate::enc::Encoder::config(p0);
-----------------
src/atomic.rs atomic::<impl enc::Encode for std::sync::atomic::AtomicBool>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicBool>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicBool>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter","enc::write::SliceWriter"]},"features::impl_std::IoWriter":{"W":["std::vec::Vec<u8, A>","&std::fs::File","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::process::ChildStdin","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<&mut [u8]>","&std::process::ChildStdin","std::os::unix::net::UnixStream","&std::io::Stderr","std::io::LineWriter<W>","std::sys::unix::stdio::Stdout","std::io::StderrLock<'_>","&std::io::Stdout","&std::net::TcpStream","std::io::Cursor<[u8; N]>","&'a std::os::unix::net::UnixStream","std::fs::File","&std::io::Sink","std::collections::VecDeque<u8, A>","std::io::stdio::StderrRaw","std::io::BorrowedCursor<'a>","std::io::impls::<impl std::io::Write for &mut W>","std::io::StdoutLock<'_>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::stdio::StdoutRaw","std::io::Stdout","std::io::BufWriter<W>","std::boxed::Box<W>","std::io::Sink","std::net::TcpStream","std::sys::unix::stdio::Stderr","std::io::Stderr"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::atomic::AtomicBool
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+atomic::<impl enc::Encode for std::sync::atomic::AtomicBool>::encode(p0, p1);
+crate::atomic::<impl enc::Encode for std::sync::atomic::AtomicBool>::encode(p0, p1);
+<std::sync::atomic::AtomicBool>::encode(p0, p1);
-----------------
src/atomic.rs atomic::<impl de::Decode for std::sync::atomic::AtomicBool>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicBool>::decode":{"D":["de::Decoder","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicBool>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::Decode for std::sync::atomic::AtomicBool>::decode(p0);
+crate::atomic::<impl de::Decode for std::sync::atomic::AtomicBool>::decode(p0);
+<std::sync::atomic::AtomicBool>::decode(p0);
-----------------
src/de/mod.rs atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicBool>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicBool>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicBool>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicBool>::borrow_decode(p0);
+crate::atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicBool>::borrow_decode(p0);
+<std::sync::atomic::AtomicBool>::borrow_decode(p0);
-----------------
src/atomic.rs atomic::<impl enc::Encode for std::sync::atomic::AtomicU8>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicU8>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicU8>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","enc::write::SizeWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter"]},"features::impl_std::IoWriter":{"W":["std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Stdout","&std::io::Sink","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::StdoutLock<'_>","std::io::impls::<impl std::io::Write for &mut W>","std::io::Sink","std::os::unix::net::UnixStream","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Cursor<&mut [u8]>","&std::net::TcpStream","std::io::Stderr","&'a std::os::unix::net::UnixStream","&std::io::Stdout","std::io::BufWriter<W>","std::io::StderrLock<'_>","std::io::LineWriter<W>","std::net::TcpStream","std::collections::VecDeque<u8, A>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::BorrowedCursor<'a>","&std::io::Stderr","std::io::Cursor<[u8; N]>","std::fs::File","&std::fs::File","std::io::stdio::StderrRaw","std::io::stdio::StdoutRaw","&std::process::ChildStdin","std::process::ChildStdin","std::vec::Vec<u8, A>","std::sys::unix::stdio::Stderr","std::sys::unix::stdio::Stdout","std::boxed::Box<W>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::atomic::AtomicU8
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+atomic::<impl enc::Encode for std::sync::atomic::AtomicU8>::encode(p0, p1);
+crate::atomic::<impl enc::Encode for std::sync::atomic::AtomicU8>::encode(p0, p1);
+<std::sync::atomic::AtomicU8>::encode(p0, p1);
-----------------
src/atomic.rs atomic::<impl de::Decode for std::sync::atomic::AtomicU8>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::clone::Clone"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicU8>::decode":{"D":["std::marker::Sized","de::Decoder"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicU8>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::Decode for std::sync::atomic::AtomicU8>::decode(p0);
+crate::atomic::<impl de::Decode for std::sync::atomic::AtomicU8>::decode(p0);
+<std::sync::atomic::AtomicU8>::decode(p0);
-----------------
src/de/mod.rs atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU8>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU8>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU8>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU8>::borrow_decode(p0);
+crate::atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU8>::borrow_decode(p0);
+<std::sync::atomic::AtomicU8>::borrow_decode(p0);
-----------------
src/atomic.rs atomic::<impl enc::Encode for std::sync::atomic::AtomicU16>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicU16>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicU16>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","features::impl_alloc::VecWriter","features::impl_std::IoWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>"]},"features::impl_std::IoWriter":{"W":["std::boxed::Box<W>","std::net::TcpStream","std::io::Cursor<std::vec::Vec<u8, A>>","std::process::ChildStdin","std::io::impls::<impl std::io::Write for &mut W>","std::io::Stdout","&std::io::Stderr","std::io::Cursor<[u8; N]>","&std::process::ChildStdin","std::io::Stderr","std::io::LineWriter<W>","std::collections::VecDeque<u8, A>","std::io::stdio::StdoutRaw","&std::io::Stdout","std::sys::unix::stdio::Stderr","std::fs::File","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::io::Sink","std::io::BorrowedCursor<'a>","std::io::StderrLock<'_>","&'a std::os::unix::net::UnixStream","&std::fs::File","std::io::StdoutLock<'_>","std::io::Cursor<&mut [u8]>","std::vec::Vec<u8, A>","&std::net::TcpStream","std::io::Sink","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::stdio::StderrRaw","std::os::unix::net::UnixStream","std::sys::unix::stdio::Stdout","std::io::BufWriter<W>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::atomic::AtomicU16
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+atomic::<impl enc::Encode for std::sync::atomic::AtomicU16>::encode(p0, p1);
+crate::atomic::<impl enc::Encode for std::sync::atomic::AtomicU16>::encode(p0, p1);
+<std::sync::atomic::AtomicU16>::encode(p0, p1);
-----------------
src/atomic.rs atomic::<impl de::Decode for std::sync::atomic::AtomicU16>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicU16>::decode":{"D":["de::Decoder","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicU16>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::Decode for std::sync::atomic::AtomicU16>::decode(p0);
+crate::atomic::<impl de::Decode for std::sync::atomic::AtomicU16>::decode(p0);
+<std::sync::atomic::AtomicU16>::decode(p0);
-----------------
src/de/mod.rs atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU16>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU16>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU16>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU16>::borrow_decode(p0);
+crate::atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU16>::borrow_decode(p0);
+<std::sync::atomic::AtomicU16>::borrow_decode(p0);
-----------------
src/atomic.rs atomic::<impl enc::Encode for std::sync::atomic::AtomicU32>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::clone::Clone"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicU32>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicU32>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","enc::write::SliceWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>"]},"features::impl_std::IoWriter":{"W":["std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::StderrLock<'_>","&std::io::Sink","std::fs::File","std::io::Cursor<[u8; N]>","&std::io::Stdout","std::io::stdio::StdoutRaw","&std::process::ChildStdin","std::io::Stdout","std::io::StdoutLock<'_>","&std::net::TcpStream","std::os::unix::net::UnixStream","std::io::Stderr","std::io::stdio::StderrRaw","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::LineWriter<W>","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::fs::File","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stderr","&std::io::Stderr","std::process::ChildStdin","std::vec::Vec<u8, A>","std::collections::VecDeque<u8, A>","std::io::Sink","std::sys::unix::stdio::Stdout","std::io::BufWriter<W>","&'a std::os::unix::net::UnixStream","std::net::TcpStream","std::io::BorrowedCursor<'a>","std::io::Cursor<std::vec::Vec<u8, A>>","std::boxed::Box<W>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::atomic::AtomicU32
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+atomic::<impl enc::Encode for std::sync::atomic::AtomicU32>::encode(p0, p1);
+crate::atomic::<impl enc::Encode for std::sync::atomic::AtomicU32>::encode(p0, p1);
+<std::sync::atomic::AtomicU32>::encode(p0, p1);
-----------------
src/atomic.rs atomic::<impl de::Decode for std::sync::atomic::AtomicU32>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicU32>::decode":{"D":["std::marker::Sized","de::Decoder"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicU32>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::Decode for std::sync::atomic::AtomicU32>::decode(p0);
+crate::atomic::<impl de::Decode for std::sync::atomic::AtomicU32>::decode(p0);
+<std::sync::atomic::AtomicU32>::decode(p0);
-----------------
src/de/mod.rs atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU32>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU32>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU32>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU32>::borrow_decode(p0);
+crate::atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU32>::borrow_decode(p0);
+<std::sync::atomic::AtomicU32>::borrow_decode(p0);
-----------------
src/atomic.rs atomic::<impl enc::Encode for std::sync::atomic::AtomicU64>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicU64>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicU64>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","enc::write::SliceWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter"]},"features::impl_std::IoWriter":{"W":["std::boxed::Box<W>","std::io::Cursor<std::vec::Vec<u8, A>>","std::fs::File","&std::io::Sink","&'a std::os::unix::net::UnixStream","&std::fs::File","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::vec::Vec<u8, A>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::sys::unix::stdio::Stderr","std::io::Stdout","std::process::ChildStdin","std::io::stdio::StderrRaw","std::collections::VecDeque<u8, A>","&std::io::Stdout","std::os::unix::net::UnixStream","std::io::LineWriter<W>","std::io::impls::<impl std::io::Write for &mut W>","std::io::BufWriter<W>","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stdout","&std::net::TcpStream","&std::io::Stderr","std::io::StderrLock<'_>","std::io::stdio::StdoutRaw","std::io::Sink","std::io::Cursor<[u8; N]>","std::io::Stderr","std::net::TcpStream","std::io::BorrowedCursor<'a>","std::io::StdoutLock<'_>","&std::process::ChildStdin","std::io::buffered::linewritershim::LineWriterShim<'a, W>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::atomic::AtomicU64
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+atomic::<impl enc::Encode for std::sync::atomic::AtomicU64>::encode(p0, p1);
+crate::atomic::<impl enc::Encode for std::sync::atomic::AtomicU64>::encode(p0, p1);
+<std::sync::atomic::AtomicU64>::encode(p0, p1);
-----------------
src/atomic.rs atomic::<impl de::Decode for std::sync::atomic::AtomicU64>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicU64>::decode":{"D":["std::marker::Sized","de::Decoder"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicU64>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::Decode for std::sync::atomic::AtomicU64>::decode(p0);
+crate::atomic::<impl de::Decode for std::sync::atomic::AtomicU64>::decode(p0);
+<std::sync::atomic::AtomicU64>::decode(p0);
-----------------
src/de/mod.rs atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU64>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU64>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU64>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU64>::borrow_decode(p0);
+crate::atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU64>::borrow_decode(p0);
+<std::sync::atomic::AtomicU64>::borrow_decode(p0);
-----------------
src/atomic.rs atomic::<impl enc::Encode for std::sync::atomic::AtomicUsize>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicUsize>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicUsize>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_alloc::VecWriter"]},"features::impl_std::IoWriter":{"W":["std::sys::unix::stdio::Stderr","std::io::Cursor<[u8; N]>","std::io::BorrowedCursor<'a>","&std::io::Stderr","std::io::Sink","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Stderr","std::io::LineWriter<W>","std::io::StdoutLock<'_>","std::process::ChildStdin","std::boxed::Box<W>","&std::io::Sink","std::io::stdio::StderrRaw","&std::process::ChildStdin","&std::net::TcpStream","&std::fs::File","std::io::Stdout","std::net::TcpStream","&std::io::Stdout","std::sys::unix::stdio::Stdout","std::io::BufWriter<W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&'a std::os::unix::net::UnixStream","std::os::unix::net::UnixStream","std::vec::Vec<u8, A>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::fs::File","std::io::Cursor<&mut [u8]>","std::io::impls::<impl std::io::Write for &mut W>","std::io::StderrLock<'_>","std::collections::VecDeque<u8, A>","std::io::stdio::StdoutRaw"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::atomic::AtomicUsize
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+atomic::<impl enc::Encode for std::sync::atomic::AtomicUsize>::encode(p0, p1);
+crate::atomic::<impl enc::Encode for std::sync::atomic::AtomicUsize>::encode(p0, p1);
+<std::sync::atomic::AtomicUsize>::encode(p0, p1);
-----------------
src/atomic.rs atomic::<impl de::Decode for std::sync::atomic::AtomicUsize>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicUsize>::decode":{"D":["de::Decoder","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicUsize>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::Decode for std::sync::atomic::AtomicUsize>::decode(p0);
+crate::atomic::<impl de::Decode for std::sync::atomic::AtomicUsize>::decode(p0);
+<std::sync::atomic::AtomicUsize>::decode(p0);
-----------------
src/de/mod.rs atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicUsize>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicUsize>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicUsize>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicUsize>::borrow_decode(p0);
+crate::atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicUsize>::borrow_decode(p0);
+<std::sync::atomic::AtomicUsize>::borrow_decode(p0);
-----------------
src/atomic.rs atomic::<impl enc::Encode for std::sync::atomic::AtomicI8>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicI8>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicI8>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","enc::write::SliceWriter","enc::write::SizeWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>"]},"features::impl_std::IoWriter":{"W":["std::io::BorrowedCursor<'a>","std::io::Cursor<std::vec::Vec<u8, A>>","std::collections::VecDeque<u8, A>","std::io::Stderr","std::io::BufWriter<W>","std::boxed::Box<W>","&std::net::TcpStream","&std::process::ChildStdin","&'a std::os::unix::net::UnixStream","std::sys::unix::stdio::Stderr","std::sys::unix::stdio::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::io::Sink","std::net::TcpStream","std::os::unix::net::UnixStream","std::io::stdio::StderrRaw","&std::io::Stdout","std::io::LineWriter<W>","std::vec::Vec<u8, A>","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::stdio::StdoutRaw","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::io::Stderr","std::io::Sink","std::io::Cursor<&mut [u8]>","std::fs::File","std::io::StderrLock<'_>","std::process::ChildStdin","std::io::Stdout","&std::fs::File","std::io::StdoutLock<'_>","std::io::Cursor<[u8; N]>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::atomic::AtomicI8
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+atomic::<impl enc::Encode for std::sync::atomic::AtomicI8>::encode(p0, p1);
+crate::atomic::<impl enc::Encode for std::sync::atomic::AtomicI8>::encode(p0, p1);
+<std::sync::atomic::AtomicI8>::encode(p0, p1);
-----------------
src/atomic.rs atomic::<impl de::Decode for std::sync::atomic::AtomicI8>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicI8>::decode":{"D":["std::marker::Sized","de::Decoder"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicI8>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::Decode for std::sync::atomic::AtomicI8>::decode(p0);
+crate::atomic::<impl de::Decode for std::sync::atomic::AtomicI8>::decode(p0);
+<std::sync::atomic::AtomicI8>::decode(p0);
-----------------
src/de/mod.rs atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI8>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI8>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI8>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI8>::borrow_decode(p0);
+crate::atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI8>::borrow_decode(p0);
+<std::sync::atomic::AtomicI8>::borrow_decode(p0);
-----------------
src/atomic.rs atomic::<impl enc::Encode for std::sync::atomic::AtomicI16>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicI16>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicI16>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","features::impl_std::IoWriter","enc::write::SizeWriter"]},"features::impl_std::IoWriter":{"W":["std::collections::VecDeque<u8, A>","std::io::BufWriter<W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::StdoutLock<'_>","&std::io::Stdout","&'a std::os::unix::net::UnixStream","std::vec::Vec<u8, A>","std::io::Stdout","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::io::Stderr","std::io::Cursor<[u8; N]>","std::net::TcpStream","std::fs::File","&std::process::ChildStdin","std::io::Stderr","std::io::Sink","&std::net::TcpStream","std::os::unix::net::UnixStream","&std::fs::File","std::io::stdio::StdoutRaw","std::io::BorrowedCursor<'a>","std::io::stdio::StderrRaw","std::io::LineWriter<W>","&std::io::Sink","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stderr","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::StderrLock<'_>","std::process::ChildStdin","std::boxed::Box<W>","std::sys::unix::stdio::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::atomic::AtomicI16
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+atomic::<impl enc::Encode for std::sync::atomic::AtomicI16>::encode(p0, p1);
+crate::atomic::<impl enc::Encode for std::sync::atomic::AtomicI16>::encode(p0, p1);
+<std::sync::atomic::AtomicI16>::encode(p0, p1);
-----------------
src/atomic.rs atomic::<impl de::Decode for std::sync::atomic::AtomicI16>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicI16>::decode":{"D":["std::marker::Sized","de::Decoder"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicI16>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::Decode for std::sync::atomic::AtomicI16>::decode(p0);
+crate::atomic::<impl de::Decode for std::sync::atomic::AtomicI16>::decode(p0);
+<std::sync::atomic::AtomicI16>::decode(p0);
-----------------
src/de/mod.rs atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI16>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI16>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI16>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI16>::borrow_decode(p0);
+crate::atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI16>::borrow_decode(p0);
+<std::sync::atomic::AtomicI16>::borrow_decode(p0);
-----------------
src/atomic.rs atomic::<impl enc::Encode for std::sync::atomic::AtomicI32>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicI32>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicI32>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SliceWriter","enc::write::SizeWriter"]},"features::impl_std::IoWriter":{"W":["std::net::TcpStream","std::io::BufWriter<W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&'a std::os::unix::net::UnixStream","std::sys::unix::stdio::Stdout","std::fs::File","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<std::vec::Vec<u8, A>>","&std::io::Stderr","&std::net::TcpStream","&std::io::Sink","&std::io::Stdout","std::io::Stderr","std::io::BorrowedCursor<'a>","&std::process::ChildStdin","std::process::ChildStdin","std::io::StdoutLock<'_>","&std::fs::File","std::boxed::Box<W>","std::io::stdio::StdoutRaw","std::io::Stdout","std::io::Cursor<&mut [u8]>","std::io::LineWriter<W>","std::io::StderrLock<'_>","std::os::unix::net::UnixStream","std::io::impls::<impl std::io::Write for &mut W>","std::io::Sink","std::io::Cursor<[u8; N]>","std::sys::unix::stdio::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::vec::Vec<u8, A>","std::io::stdio::StderrRaw","std::collections::VecDeque<u8, A>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::atomic::AtomicI32
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+atomic::<impl enc::Encode for std::sync::atomic::AtomicI32>::encode(p0, p1);
+crate::atomic::<impl enc::Encode for std::sync::atomic::AtomicI32>::encode(p0, p1);
+<std::sync::atomic::AtomicI32>::encode(p0, p1);
-----------------
src/atomic.rs atomic::<impl de::Decode for std::sync::atomic::AtomicI32>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicI32>::decode":{"D":["std::marker::Sized","de::Decoder"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicI32>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::Decode for std::sync::atomic::AtomicI32>::decode(p0);
+crate::atomic::<impl de::Decode for std::sync::atomic::AtomicI32>::decode(p0);
+<std::sync::atomic::AtomicI32>::decode(p0);
-----------------
src/de/mod.rs atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI32>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI32>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI32>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI32>::borrow_decode(p0);
+crate::atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI32>::borrow_decode(p0);
+<std::sync::atomic::AtomicI32>::borrow_decode(p0);
-----------------
src/atomic.rs atomic::<impl enc::Encode for std::sync::atomic::AtomicI64>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicI64>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicI64>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter","features::impl_alloc::VecWriter"]},"features::impl_std::IoWriter":{"W":["std::net::TcpStream","std::io::Cursor<&mut [u8]>","&std::net::TcpStream","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::LineWriter<W>","std::sys::unix::stdio::Stdout","std::io::stdio::StdoutRaw","std::io::Sink","std::io::StdoutLock<'_>","std::collections::VecDeque<u8, A>","&std::io::Sink","std::io::StderrLock<'_>","std::vec::Vec<u8, A>","&std::io::Stderr","std::io::BorrowedCursor<'a>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::io::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::BufWriter<W>","std::io::Stdout","std::os::unix::net::UnixStream","std::fs::File","&'a std::os::unix::net::UnixStream","std::process::ChildStdin","std::sys::unix::stdio::Stderr","std::io::Cursor<[u8; N]>","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::process::ChildStdin","std::io::impls::<impl std::io::Write for &mut W>","std::boxed::Box<W>","std::io::Stderr","&std::fs::File","std::io::stdio::StderrRaw"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::atomic::AtomicI64
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+atomic::<impl enc::Encode for std::sync::atomic::AtomicI64>::encode(p0, p1);
+crate::atomic::<impl enc::Encode for std::sync::atomic::AtomicI64>::encode(p0, p1);
+<std::sync::atomic::AtomicI64>::encode(p0, p1);
-----------------
src/atomic.rs atomic::<impl de::Decode for std::sync::atomic::AtomicI64>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicI64>::decode":{"D":["std::marker::Sized","de::Decoder"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicI64>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::Decode for std::sync::atomic::AtomicI64>::decode(p0);
+crate::atomic::<impl de::Decode for std::sync::atomic::AtomicI64>::decode(p0);
+<std::sync::atomic::AtomicI64>::decode(p0);
-----------------
src/de/mod.rs atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI64>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI64>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI64>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI64>::borrow_decode(p0);
+crate::atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI64>::borrow_decode(p0);
+<std::sync::atomic::AtomicI64>::borrow_decode(p0);
-----------------
src/atomic.rs atomic::<impl enc::Encode for std::sync::atomic::AtomicIsize>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicIsize>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl enc::Encode for std::sync::atomic::AtomicIsize>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","enc::write::SizeWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter"]},"features::impl_std::IoWriter":{"W":["std::io::Stdout","std::io::Sink","std::io::Cursor<[u8; N]>","std::net::TcpStream","std::boxed::Box<W>","std::process::ChildStdin","std::vec::Vec<u8, A>","std::io::StderrLock<'_>","&std::process::ChildStdin","&'a std::os::unix::net::UnixStream","&std::io::Stderr","std::sys::unix::stdio::Stderr","std::collections::VecDeque<u8, A>","std::io::stdio::StdoutRaw","std::io::LineWriter<W>","&std::io::Stdout","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::impls::<impl std::io::Write for &mut W>","&std::io::Sink","std::os::unix::net::UnixStream","std::io::Cursor<&mut [u8]>","std::io::StdoutLock<'_>","&std::net::TcpStream","std::io::BufWriter<W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::stdio::StderrRaw","&std::fs::File","std::io::BorrowedCursor<'a>","std::io::Cursor<std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stdout","std::fs::File","std::io::Stderr"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::atomic::AtomicIsize
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+atomic::<impl enc::Encode for std::sync::atomic::AtomicIsize>::encode(p0, p1);
+crate::atomic::<impl enc::Encode for std::sync::atomic::AtomicIsize>::encode(p0, p1);
+<std::sync::atomic::AtomicIsize>::encode(p0, p1);
-----------------
src/atomic.rs atomic::<impl de::Decode for std::sync::atomic::AtomicIsize>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicIsize>::decode":{"D":["std::marker::Sized","de::Decoder"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::Decode for std::sync::atomic::AtomicIsize>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::Decode for std::sync::atomic::AtomicIsize>::decode(p0);
+crate::atomic::<impl de::Decode for std::sync::atomic::AtomicIsize>::decode(p0);
+<std::sync::atomic::AtomicIsize>::decode(p0);
-----------------
src/de/mod.rs atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicIsize>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalEndianConfig"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicIsize>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicIsize>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicIsize>::borrow_decode(p0);
+crate::atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicIsize>::borrow_decode(p0);
+<std::sync::atomic::AtomicIsize>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs <features::impl_alloc::VecWriter as std::default::Default>::default
deps:{}
candidates:{}
+<features::impl_alloc::VecWriter as std::default::Default>::default();
+crate::<features::impl_alloc::VecWriter as std::default::Default>::default();
+<features::impl_alloc::VecWriter>::default();
-----------------
src/features/impl_alloc.rs features::impl_alloc::VecWriter::with_capacity
deps:{}
candidates:{}
let mut p0 = 0usize; // None+usize
+features::impl_alloc::VecWriter::with_capacity(p0);
+crate::features::impl_alloc::VecWriter::with_capacity(p0);
+<features::impl_alloc::VecWriter>::with_capacity(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::VecWriter::collect
deps:{}
candidates:{}
let mut p0 = MaybeUninit::uninit().assume_init(); // features::impl_alloc::VecWriter
+p0.collect();
+features::impl_alloc::VecWriter::collect(p0);
+crate::features::impl_alloc::VecWriter::collect(p0);
+<features::impl_alloc::VecWriter>::collect(p0);
-----------------
src/features/impl_alloc.rs <features::impl_alloc::VecWriter as enc::write::Writer>::write
deps:{}
candidates:{}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // features::impl_alloc::VecWriter
let mut p1 = [0u8,0,0].as_mut_slice(); // None+&[u8]
+p0.write(p1);
+<features::impl_alloc::VecWriter as enc::write::Writer>::write(p0, p1);
+crate::<features::impl_alloc::VecWriter as enc::write::Writer>::write(p0, p1);
+<features::impl_alloc::VecWriter>::write(p0, p1);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::collections::BinaryHeap<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"features::impl_alloc::<impl de::Decode for std::collections::BinaryHeap<T>>::decode":{"D":["std::marker::Sized","de::Decoder"],"T":["std::cmp::Ord","std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["enc::Encode","std::cmp::Ord","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::Bound":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::HashMap":{"K":["std::hash::Hash","std::marker::Sized","std::cmp::Eq","enc::Encode","de::Decode","de::BorrowDecode"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Eq","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::NoLimit","config::Fixint","config::LittleEndian","config::Varint","std::clone::impls::<impl std::clone::Clone for *const T>","config::BigEndian","config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::collections::BinaryHeap<T>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"T":["std::net::Ipv6Addr","std::num::NonZeroU128","std::num::NonZeroI128","std::ffi::CString","std::string::String","std::path::PathBuf","std::time::SystemTime","std::cell::Cell","std::num::NonZeroU32","std::cell::RefCell","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroUsize","std::num::NonZeroI64","std::net::SocketAddrV6","std::num::NonZeroU8","std::option::Option","std::time::Duration","std::num::NonZeroI8","std::net::SocketAddr","std::num::NonZeroI16","std::rc::Rc","std::num::NonZeroIsize","std::net::Ipv4Addr","std::num::NonZeroU16","std::num::NonZeroU64","std::num::NonZeroI32"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::ffi::CStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU8","std::num::NonZeroU64","std::num::NonZeroU16","std::net::IpAddr","std::path::PathBuf","std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroI16","std::num::NonZeroI32","std::cell::RefCell","std::option::Option","std::num::NonZeroU32","std::marker::PhantomData","std::string::String","std::num::NonZeroIsize","std::rc::Rc","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroI8","std::num::NonZeroU128","std::time::SystemTime","std::net::Ipv4Addr"],"V":["std::rc::Rc","std::ops::RangeInclusive","std::num::NonZeroUsize","std::cell::Cell","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::time::SystemTime","std::net::SocketAddr","std::result::Result","std::num::NonZeroU64","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::cell::RefCell","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::net::IpAddr","std::collections::HashSet","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::collections::BinaryHeap","std::ops::Range","std::boxed::Box","std::collections::VecDeque","std::time::Duration","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroU16","std::collections::Bound","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::option::Option","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroU32","std::num::NonZeroIsize","std::borrow::Cow","std::num::NonZeroU128","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::vec::Vec","std::net::SocketAddrV4","std::sync::RwLock","std::sync::Arc","std::collections::HashMap","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::string::String","std::sync::Mutex","std::num::NonZeroI128"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::ffi::CString","std::time::SystemTime","std::cell::Cell","std::num::NonZeroU128","std::net::Ipv6Addr","std::string::String","std::num::NonZeroI128","std::sync::Arc","std::marker::PhantomData","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroI16","std::net::Ipv4Addr","std::num::NonZeroI8","std::num::NonZeroIsize","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroU16","std::net::SocketAddr","std::path::PathBuf","std::num::NonZeroU64","std::rc::Rc","std::cell::RefCell","std::net::SocketAddrV6","std::time::Duration"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroI64","std::sync::Arc","std::num::NonZeroIsize","std::num::NonZeroI32","std::num::NonZeroI128","std::cell::RefCell","std::net::IpAddr","std::cell::Cell","std::time::SystemTime","std::time::Duration","std::option::Option","std::num::NonZeroU128"]},"std::collections::Bound":{"T":["std::net::IpAddr","std::sync::atomic::AtomicI64","std::collections::HashMap","std::num::NonZeroI16","std::path::PathBuf","std::marker::PhantomData","std::boxed::Box","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::rc::Rc","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::ops::Range","std::result::Result","std::sync::atomic::AtomicBool","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroUsize","std::string::String","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::vec::Vec","std::time::SystemTime","std::option::Option","std::sync::Arc","std::collections::BTreeSet","std::collections::HashSet","std::collections::Bound","std::collections::BinaryHeap","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::cell::Cell","std::borrow::Cow","std::ops::RangeInclusive","std::num::NonZeroU128","std::sync::RwLock","std::net::SocketAddrV4","std::num::NonZeroU8","std::num::NonZeroI8","std::num::NonZeroI64","std::net::Ipv4Addr","std::collections::BTreeMap","std::time::Duration","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::sync::Mutex","std::ffi::CString","std::num::NonZeroIsize","std::net::SocketAddr"]},"std::collections::HashMap":{"K":["std::sync::Arc","std::string::String","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroU128","std::net::IpAddr","std::ffi::CString","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroI8","std::time::SystemTime","std::num::NonZeroU16","std::net::SocketAddrV4","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroI16"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::time::SystemTime","std::sync::atomic::AtomicU8","std::collections::HashMap","std::sync::Mutex","std::collections::Bound","std::rc::Rc","std::collections::BTreeMap","std::num::NonZeroU64","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::time::Duration","std::collections::BinaryHeap","std::ops::RangeInclusive","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::boxed::Box","std::num::NonZeroU32","std::cell::RefCell","std::net::SocketAddrV4","std::sync::RwLock","std::string::String","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::vec::Vec","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::borrow::Cow","std::cell::Cell","std::num::NonZeroI8","std::collections::HashSet","std::net::Ipv4Addr","std::num::NonZeroI16","std::num::NonZeroU128","std::path::PathBuf","std::ops::Range","std::result::Result","std::net::IpAddr","std::num::NonZeroI32","std::ffi::CString","std::collections::VecDeque","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::num::NonZeroU8","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::option::Option"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::net::SocketAddrV6","std::net::Ipv4Addr","std::ffi::CString","std::option::Option","std::num::NonZeroU64","std::net::SocketAddr","std::num::NonZeroU32","std::num::NonZeroU8","std::num::NonZeroU128","std::collections::Bound","std::sync::Arc","std::num::NonZeroI64","std::num::NonZeroUsize","std::num::NonZeroI32","std::time::Duration","std::num::NonZeroI8","std::net::Ipv6Addr","std::marker::PhantomData","std::rc::Rc","std::num::NonZeroIsize","std::num::NonZeroI128"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::num::NonZeroI128","std::collections::VecDeque","std::borrow::Cow","std::ops::RangeInclusive","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::collections::HashSet","std::collections::HashMap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::path::PathBuf","std::collections::Bound","std::num::NonZeroI16","std::num::NonZeroUsize","std::vec::Vec","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::num::NonZeroU16","std::result::Result","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::collections::BTreeSet","std::net::IpAddr","std::net::SocketAddrV6","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::time::Duration","std::rc::Rc","std::num::NonZeroU32","std::boxed::Box","std::num::NonZeroI8","std::num::NonZeroIsize","std::cell::RefCell","std::num::NonZeroU128","std::sync::Arc","std::num::NonZeroI64","std::option::Option","std::cell::Cell","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::ops::Range","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::sync::Mutex","std::net::Ipv6Addr","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::ffi::CString","std::net::SocketAddr","std::sync::RwLock","std::time::SystemTime","std::string::String","std::sync::atomic::AtomicU32"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::Mutex","std::sync::Arc","std::result::Result","std::collections::HashSet","std::collections::Bound","std::time::Duration","std::collections::HashMap","std::time::SystemTime","std::net::SocketAddr","std::num::NonZeroU16","std::ops::Range","std::num::NonZeroU64","std::sync::RwLock","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::collections::BTreeSet","std::net::IpAddr","std::net::Ipv4Addr","std::string::String","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::vec::Vec","std::sync::atomic::AtomicIsize","std::boxed::Box","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::borrow::Cow","std::ops::RangeInclusive","std::ffi::CString","std::num::NonZeroI64","std::num::NonZeroIsize","std::collections::VecDeque","std::cell::Cell","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroI8","std::num::NonZeroI32","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroUsize","std::path::PathBuf","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::rc::Rc","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::cell::RefCell","std::num::NonZeroI128","std::sync::atomic::AtomicBool"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::VecDeque","std::num::NonZeroI32","std::collections::BTreeSet","std::ffi::CString","std::num::NonZeroIsize","std::num::NonZeroI8","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::collections::Bound","std::net::IpAddr","std::marker::PhantomData","std::rc::Rc","std::boxed::Box","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::result::Result","std::borrow::Cow","std::time::SystemTime","std::cell::Cell","std::string::String","std::sync::Mutex","std::num::NonZeroU64","std::num::NonZeroI64","std::net::Ipv4Addr","std::num::NonZeroU16","std::cell::RefCell","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::vec::Vec","std::time::Duration","std::collections::HashSet","std::num::NonZeroU128","std::collections::HashMap","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::path::PathBuf","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::sync::Arc","std::net::SocketAddr","std::option::Option","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::num::NonZeroUsize","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::ops::Range","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::net::SocketAddrV4"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::num::NonZeroIsize","std::borrow::Cow","std::option::Option","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::collections::Bound","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::marker::PhantomData","std::sync::Mutex","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::sync::Arc","std::vec::Vec","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::string::String","std::result::Result","std::net::Ipv6Addr","std::boxed::Box","std::collections::HashSet","std::cell::Cell","std::path::PathBuf","std::time::Duration","std::ffi::CString","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::collections::BTreeMap","std::net::Ipv4Addr","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroI8","std::num::NonZeroU32","std::ops::Range","std::num::NonZeroU128","std::collections::BTreeSet","std::time::SystemTime","std::num::NonZeroU16","std::rc::Rc","std::sync::RwLock","std::cell::RefCell","std::net::SocketAddr","std::collections::VecDeque"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::collections::BinaryHeap<T>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::collections::BinaryHeap<T>>::decode(p0);
+<std::collections::BinaryHeap<T>>::decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BinaryHeap<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BinaryHeap<T>>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","std::cmp::Ord"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized","std::cmp::Ord"],"V":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["std::marker::Sized","std::cmp::Ord","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","std::cmp::Ord","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::Bound":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode","std::hash::Hash","std::cmp::Eq"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Eq","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::LittleEndian","config::NoLimit","std::clone::impls::<impl std::clone::Clone for &T>","config::BigEndian","config::Configuration","config::Fixint","config::Varint"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BinaryHeap<T>>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"T":["std::num::NonZeroU32","std::path::PathBuf","std::net::IpAddr","std::num::NonZeroUsize","std::num::NonZeroIsize","std::num::NonZeroI32","std::net::SocketAddr","std::time::Duration","std::cell::Cell","std::marker::PhantomData","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroI16","std::num::NonZeroU64","std::num::NonZeroI128","std::cell::RefCell","std::num::NonZeroI64","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroI8","std::option::Option","std::num::NonZeroU8","std::net::SocketAddrV4","std::net::SocketAddrV6"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::ffi::OsStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU128","std::num::NonZeroI8","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroU8","std::num::NonZeroI32","std::num::NonZeroI64","std::num::NonZeroUsize","std::cell::Cell","std::net::SocketAddr","std::path::PathBuf","std::net::Ipv6Addr","std::num::NonZeroU64","std::num::NonZeroIsize","std::option::Option","std::ffi::CString","std::string::String","std::cell::RefCell"],"V":["std::num::NonZeroI16","std::collections::VecDeque","std::string::String","std::time::SystemTime","std::borrow::Cow","std::sync::atomic::AtomicBool","std::path::PathBuf","std::net::Ipv6Addr","std::collections::BTreeSet","std::num::NonZeroU32","std::ffi::CString","std::boxed::Box","std::num::NonZeroI8","std::net::SocketAddrV4","std::net::SocketAddr","std::num::NonZeroU64","std::collections::BTreeMap","std::net::SocketAddrV6","std::net::IpAddr","std::time::Duration","std::sync::atomic::AtomicU16","std::vec::Vec","std::num::NonZeroI64","std::cell::RefCell","std::sync::Arc","std::ops::Range","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::num::NonZeroUsize","std::num::NonZeroI128","std::cell::Cell","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::result::Result","std::collections::HashSet","std::collections::HashMap","std::sync::RwLock","std::collections::Bound","std::net::Ipv4Addr","std::rc::Rc","std::ops::RangeInclusive","std::option::Option"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU16","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroIsize","std::time::SystemTime","std::num::NonZeroU64","std::sync::Arc","std::string::String","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroI8","std::option::Option","std::num::NonZeroI32","std::net::Ipv6Addr","std::num::NonZeroU32","std::ffi::CString","std::rc::Rc","std::net::SocketAddrV4","std::cell::Cell","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroI128","std::net::SocketAddrV6","std::net::SocketAddr","std::cell::RefCell"]},"std::collections::BinaryHeap":{"T":["std::ffi::CString","std::num::NonZeroI128","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroUsize","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroU128","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroI32","std::net::SocketAddrV4","std::cell::Cell","std::net::IpAddr","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroI64","std::num::NonZeroIsize","std::string::String","std::time::Duration","std::net::SocketAddrV6"]},"std::collections::Bound":{"T":["std::sync::Arc","std::num::NonZeroU64","std::time::SystemTime","std::sync::atomic::AtomicI64","std::time::Duration","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicI32","std::path::PathBuf","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroI32","std::cell::RefCell","std::sync::atomic::AtomicBool","std::sync::Mutex","std::num::NonZeroU32","std::collections::BTreeMap","std::ops::Range","std::net::IpAddr","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::num::NonZeroU16","std::marker::PhantomData","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::ffi::CString","std::sync::atomic::AtomicIsize","std::cell::Cell","std::collections::HashMap","std::net::Ipv4Addr","std::borrow::Cow","std::collections::VecDeque","std::collections::Bound","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::rc::Rc","std::num::NonZeroI128","std::result::Result","std::string::String","std::collections::HashSet","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::ops::RangeInclusive","std::sync::RwLock","std::vec::Vec","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::collections::BinaryHeap","std::num::NonZeroIsize","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::num::NonZeroU128"]},"std::collections::HashMap":{"K":["std::net::SocketAddrV6","std::collections::Bound","std::sync::Arc","std::ffi::CString","std::net::IpAddr","std::num::NonZeroU128","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroI16","std::option::Option","std::num::NonZeroI128","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroIsize","std::rc::Rc","std::num::NonZeroU64"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicU64","std::collections::VecDeque","std::cell::Cell","std::net::SocketAddr","std::collections::HashSet","std::num::NonZeroIsize","std::option::Option","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::sync::Arc","std::net::SocketAddrV4","std::path::PathBuf","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::borrow::Cow","std::string::String","std::net::SocketAddrV6","std::result::Result","std::sync::Mutex","std::time::Duration","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::num::NonZeroU16","std::net::IpAddr","std::net::Ipv4Addr","std::collections::BinaryHeap","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::time::SystemTime","std::collections::Bound","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::marker::PhantomData","std::collections::HashMap","std::num::NonZeroI16","std::ffi::CString","std::boxed::Box","std::collections::BTreeSet","std::ops::Range","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::rc::Rc","std::cell::RefCell","std::vec::Vec","std::num::NonZeroU64","std::num::NonZeroI64","std::sync::atomic::AtomicU32"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::net::Ipv6Addr","std::num::NonZeroI32","std::string::String","std::num::NonZeroU128","std::num::NonZeroU16","std::path::PathBuf","std::time::Duration","std::time::SystemTime","std::net::SocketAddrV4","std::option::Option","std::num::NonZeroI8","std::rc::Rc","std::num::NonZeroI16","std::collections::Bound","std::net::IpAddr","std::marker::PhantomData","std::ffi::CString","std::net::SocketAddrV6"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::collections::Bound","std::num::NonZeroU128","std::ffi::CString","std::net::Ipv6Addr","std::collections::HashSet","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::vec::Vec","std::string::String","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::collections::BTreeSet","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::sync::Mutex","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroI32","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::result::Result","std::collections::HashMap","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::boxed::Box","std::num::NonZeroU32","std::net::Ipv4Addr","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroIsize","std::net::IpAddr","std::rc::Rc","std::cell::RefCell","std::sync::atomic::AtomicI64","std::ops::Range","std::sync::atomic::AtomicUsize","std::time::Duration","std::num::NonZeroI64","std::num::NonZeroI128","std::ops::RangeInclusive","std::num::NonZeroI8","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::time::SystemTime","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::path::PathBuf","std::net::SocketAddrV6","std::borrow::Cow","std::sync::Arc","std::cell::Cell"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::boxed::Box","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::collections::Bound","std::num::NonZeroI16","std::ffi::CString","std::net::IpAddr","std::collections::HashSet","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::num::NonZeroU32","std::time::Duration","std::collections::BTreeSet","std::collections::HashMap","std::sync::Arc","std::num::NonZeroU8","std::ops::RangeInclusive","std::string::String","std::num::NonZeroI8","std::sync::Mutex","std::num::NonZeroU128","std::num::NonZeroUsize","std::net::Ipv4Addr","std::cell::Cell","std::marker::PhantomData","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::vec::Vec","std::sync::RwLock","std::net::SocketAddrV4","std::collections::BTreeMap","std::time::SystemTime","std::ops::Range","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::borrow::Cow","std::num::NonZeroIsize","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::path::PathBuf","std::num::NonZeroU16","std::option::Option","std::result::Result","std::rc::Rc","std::num::NonZeroI32"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::IpAddr","std::time::Duration","std::net::SocketAddrV4","std::sync::RwLock","std::num::NonZeroU64","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::path::PathBuf","std::cell::Cell","std::time::SystemTime","std::marker::PhantomData","std::collections::VecDeque","std::net::SocketAddrV6","std::ops::RangeInclusive","std::num::NonZeroI32","std::collections::HashMap","std::collections::BinaryHeap","std::num::NonZeroU128","std::num::NonZeroI128","std::ops::Range","std::result::Result","std::num::NonZeroIsize","std::sync::Mutex","std::borrow::Cow","std::collections::BTreeMap","std::num::NonZeroI64","std::rc::Rc","std::collections::BTreeSet","std::sync::Arc","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::cell::RefCell","std::vec::Vec","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::string::String","std::net::Ipv4Addr","std::num::NonZeroI8","std::collections::Bound","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::boxed::Box","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::option::Option","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::ffi::CString","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::num::NonZeroU16"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::string::String","std::vec::Vec","std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroU64","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::ops::Range","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::net::SocketAddrV4","std::sync::Arc","std::collections::BTreeSet","std::result::Result","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::time::SystemTime","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::net::Ipv4Addr","std::collections::HashMap","std::collections::HashSet","std::cell::RefCell","std::rc::Rc","std::marker::PhantomData","std::option::Option","std::cell::Cell","std::collections::VecDeque","std::net::IpAddr","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::sync::RwLock","std::num::NonZeroIsize","std::collections::Bound","std::sync::atomic::AtomicIsize","std::time::Duration","std::boxed::Box","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::num::NonZeroI16","std::ffi::CString","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroI128","std::ops::RangeInclusive","std::path::PathBuf","std::borrow::Cow"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BinaryHeap<T>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BinaryHeap<T>>::borrow_decode(p0);
+<std::collections::BinaryHeap<T>>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl enc::Encode for std::collections::BinaryHeap<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_alloc::<impl enc::Encode for std::collections::BinaryHeap<T>>::encode":{"E":["enc::Encoder","std::marker::Sized"],"T":["enc::Encode","std::cmp::Ord","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["de::BorrowDecode","enc::Encode","std::marker::Sized","std::cmp::Ord","de::Decode"],"V":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord","enc::Encode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","std::cmp::Ord","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::Bound":{"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::hash::Hash","de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode","std::cmp::Eq"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["std::cmp::Eq","de::BorrowDecode","de::Decode","std::hash::Hash","enc::Encode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Configuration","std::clone::impls::<impl std::clone::Clone for &mut T>","config::Limit","config::Varint","config::BigEndian","config::Fixint","config::LittleEndian"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","enc::write::SizeWriter","features::impl_std::IoWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>"]},"features::impl_alloc::<impl enc::Encode for std::collections::BinaryHeap<T>>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"T":["std::rc::Rc","std::net::Ipv4Addr","std::net::Ipv6Addr","std::net::SocketAddrV4","std::num::NonZeroI64","std::net::IpAddr","std::marker::PhantomData","std::path::PathBuf","std::time::SystemTime","std::option::Option","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroU32","std::ffi::CString","std::num::NonZeroI32","std::num::NonZeroU128","std::time::Duration","std::num::NonZeroU64","std::cell::RefCell","std::net::SocketAddrV6","std::string::String","std::sync::Arc","std::num::NonZeroUsize","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroI128","std::num::NonZeroI16"]},"features::impl_std::IoWriter":{"W":["std::io::Stderr","&std::io::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::vec::Vec<u8, A>","std::io::Stdout","std::net::TcpStream","std::io::StderrLock<'_>","std::sys::unix::stdio::Stdout","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::StdoutLock<'_>","std::io::Cursor<&mut [u8]>","std::process::ChildStdin","std::io::LineWriter<W>","std::io::BorrowedCursor<'a>","&std::io::Stderr","std::sys::unix::stdio::Stderr","std::io::Cursor<[u8; N]>","&std::fs::File","std::io::BufWriter<W>","std::io::impls::<impl std::io::Write for &mut W>","std::os::unix::net::UnixStream","&std::process::ChildStdin","std::boxed::Box<W>","&std::io::Sink","std::io::stdio::StderrRaw","std::io::Sink","std::io::stdio::StdoutRaw","&'a std::os::unix::net::UnixStream","std::fs::File","std::collections::VecDeque<u8, A>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::net::TcpStream"]},"std::borrow::Cow":{"B":["std::ffi::CStr","<T as std::borrow::ToOwned>","std::path::Path","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI128","std::num::NonZeroIsize","std::option::Option","std::num::NonZeroI16","std::net::SocketAddr","std::net::Ipv4Addr","std::ffi::CString","std::net::Ipv6Addr","std::path::PathBuf","std::net::SocketAddrV4","std::string::String","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroU64","std::num::NonZeroI64","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroU128","std::cell::RefCell","std::sync::Arc","std::time::SystemTime","std::net::SocketAddrV6","std::marker::PhantomData","std::num::NonZeroU32"],"V":["std::collections::BTreeMap","std::ops::RangeInclusive","std::collections::BinaryHeap","std::num::NonZeroI64","std::borrow::Cow","std::sync::atomic::AtomicI16","std::time::SystemTime","std::net::Ipv4Addr","std::option::Option","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroUsize","std::path::PathBuf","std::sync::Arc","std::time::Duration","std::net::Ipv6Addr","std::net::IpAddr","std::num::NonZeroI8","std::collections::BTreeSet","std::string::String","std::num::NonZeroI32","std::num::NonZeroU16","std::sync::RwLock","std::cell::Cell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::collections::HashMap","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::collections::Bound","std::result::Result","std::num::NonZeroU8","std::ops::Range","std::rc::Rc","std::collections::HashSet","std::cell::RefCell","std::sync::atomic::AtomicI64","std::boxed::Box","std::ffi::CString","std::vec::Vec","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::sync::Mutex","std::marker::PhantomData"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU128","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroIsize","std::num::NonZeroU64","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroU32","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroU8","std::num::NonZeroI32","std::num::NonZeroI16","std::net::IpAddr","std::net::SocketAddr","std::ffi::CString","std::time::Duration","std::cell::Cell","std::path::PathBuf","std::cell::RefCell","std::option::Option","std::time::SystemTime","std::num::NonZeroUsize"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU16","std::num::NonZeroI16","std::net::Ipv4Addr","std::time::SystemTime","std::ffi::CString","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroI64","std::net::SocketAddrV6","std::net::SocketAddr","std::time::Duration","std::string::String","std::num::NonZeroI8","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroI32","std::net::SocketAddrV4","std::num::NonZeroU8","std::marker::PhantomData","std::path::PathBuf","std::rc::Rc"]},"std::collections::Bound":{"T":["std::num::NonZeroUsize","std::sync::atomic::AtomicI64","std::vec::Vec","std::collections::VecDeque","std::collections::BinaryHeap","std::ops::RangeInclusive","std::cell::Cell","std::ops::Range","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::num::NonZeroU16","std::sync::RwLock","std::num::NonZeroU128","std::time::SystemTime","std::result::Result","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroU8","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::option::Option","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::num::NonZeroU32","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::time::Duration","std::sync::Arc","std::sync::Mutex","std::marker::PhantomData","std::num::NonZeroU64","std::borrow::Cow","std::net::SocketAddrV4","std::net::SocketAddrV6","std::num::NonZeroI32","std::collections::Bound","std::path::PathBuf","std::net::IpAddr","std::ffi::CString","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::rc::Rc","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::boxed::Box","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::string::String","std::net::Ipv6Addr","std::collections::HashSet"]},"std::collections::HashMap":{"K":["std::collections::Bound","std::num::NonZeroU128","std::num::NonZeroI32","std::num::NonZeroU16","std::path::PathBuf","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroI16","std::num::NonZeroI8","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroI64","std::num::NonZeroU8","std::option::Option","std::num::NonZeroU64"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::net::SocketAddrV6","std::collections::BTreeSet","std::option::Option","std::num::NonZeroIsize","std::collections::VecDeque","std::collections::BTreeMap","std::num::NonZeroU64","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::borrow::Cow","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::path::PathBuf","std::time::SystemTime","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::sync::RwLock","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::ops::RangeInclusive","std::net::IpAddr","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::cell::Cell","std::time::Duration","std::ops::Range","std::num::NonZeroI64","std::collections::BinaryHeap","std::rc::Rc","std::net::Ipv6Addr","std::vec::Vec","std::boxed::Box","std::num::NonZeroU128","std::cell::RefCell","std::net::Ipv4Addr","std::collections::HashMap","std::num::NonZeroI32","std::string::String","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::marker::PhantomData","std::net::SocketAddr","std::collections::HashSet","std::sync::Arc","std::sync::atomic::AtomicIsize","std::ffi::CString","std::result::Result","std::sync::Mutex","std::collections::Bound","std::sync::atomic::AtomicUsize","std::num::NonZeroU32"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::sync::Arc","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroU32","std::net::IpAddr","std::time::SystemTime","std::net::Ipv6Addr","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroU16"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::ops::Range","std::sync::atomic::AtomicBool","std::net::IpAddr","std::collections::BinaryHeap","std::string::String","std::collections::Bound","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::num::NonZeroU32","std::collections::HashMap","std::num::NonZeroIsize","std::borrow::Cow","std::num::NonZeroU128","std::ops::RangeInclusive","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::rc::Rc","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroU16","std::ffi::CString","std::result::Result","std::collections::BTreeSet","std::sync::RwLock","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::sync::Mutex","std::time::Duration","std::cell::RefCell","std::vec::Vec","std::boxed::Box","std::num::NonZeroU64","std::num::NonZeroI8","std::collections::VecDeque","std::num::NonZeroI128","std::num::NonZeroUsize","std::sync::Arc","std::net::SocketAddr","std::collections::HashSet","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::path::PathBuf","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::cell::Cell","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicI16","std::num::NonZeroI16"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::time::SystemTime","std::num::NonZeroU64","std::rc::Rc","std::collections::BTreeSet","std::marker::PhantomData","std::sync::RwLock","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::sync::Arc","std::vec::Vec","std::time::Duration","std::path::PathBuf","std::num::NonZeroI8","std::cell::RefCell","std::sync::atomic::AtomicI32","std::cell::Cell","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::net::SocketAddrV6","std::net::SocketAddr","std::string::String","std::collections::HashSet","std::collections::HashMap","std::ffi::CString","std::net::IpAddr","std::sync::atomic::AtomicU64","std::sync::Mutex","std::num::NonZeroU32","std::num::NonZeroU8","std::num::NonZeroU16","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::result::Result","std::num::NonZeroI64","std::net::Ipv6Addr","std::ops::Range","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::boxed::Box","std::option::Option","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::num::NonZeroUsize","std::borrow::Cow","std::num::NonZeroIsize","std::collections::Bound","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::sync::atomic::AtomicUsize"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::cell::Cell","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::result::Result","std::borrow::Cow","std::time::Duration","std::time::SystemTime","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::net::IpAddr","std::num::NonZeroUsize","std::collections::VecDeque","std::collections::BTreeSet","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroU32","std::sync::Mutex","std::net::SocketAddr","std::boxed::Box","std::rc::Rc","std::num::NonZeroIsize","std::net::SocketAddrV6","std::path::PathBuf","std::sync::atomic::AtomicBool","std::ffi::CString","std::sync::atomic::AtomicU8","std::sync::RwLock","std::collections::HashMap","std::string::String","std::option::Option","std::sync::atomic::AtomicI16","std::vec::Vec","std::num::NonZeroI8","std::collections::HashSet","std::num::NonZeroI16","std::num::NonZeroU8","std::ops::Range","std::collections::BTreeMap","std::num::NonZeroU128","std::num::NonZeroI64","std::net::SocketAddrV4","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::sync::Arc"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::ops::RangeInclusive","std::num::NonZeroI128","std::ops::Range","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::collections::HashSet","std::net::SocketAddrV4","std::num::NonZeroU16","std::collections::VecDeque","std::path::PathBuf","std::net::IpAddr","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::collections::HashMap","std::num::NonZeroI16","std::net::SocketAddrV6","std::sync::Mutex","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::num::NonZeroUsize","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::collections::BTreeMap","std::cell::RefCell","std::cell::Cell","std::time::Duration","std::num::NonZeroI8","std::sync::Arc","std::net::SocketAddr","std::option::Option","std::sync::atomic::AtomicU64","std::sync::RwLock","std::collections::BinaryHeap","std::boxed::Box","std::num::NonZeroU32","std::vec::Vec","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::collections::Bound","std::sync::atomic::AtomicBool","std::rc::Rc","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::num::NonZeroU64","std::num::NonZeroI64","std::collections::BTreeSet","std::result::Result","std::sync::atomic::AtomicIsize","std::string::String","std::ffi::CString","std::time::SystemTime","std::sync::atomic::AtomicI16","std::net::Ipv6Addr"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::collections::BinaryHeap<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_alloc::<impl enc::Encode for std::collections::BinaryHeap<T>>::encode(p0, p1);
+crate::features::impl_alloc::<impl enc::Encode for std::collections::BinaryHeap<T>>::encode(p0, p1);
+<std::collections::BinaryHeap<T>>::encode(p0, p1);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::collections::BTreeMap<K, V>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"features::impl_alloc::<impl de::Decode for std::collections::BTreeMap<K, V>>::decode":{"D":["de::Decoder","std::marker::Sized"],"K":["std::cmp::Ord","std::marker::Sized","de::Decode"],"V":["de::Decode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"K":["std::cmp::Ord","de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","std::cmp::Ord","enc::Encode","de::Decode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::cmp::Ord","enc::Encode","de::Decode","std::marker::Sized"]},"std::collections::Bound":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","de::Decode","de::BorrowDecode","enc::Encode","std::hash::Hash","std::marker::Sized"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","std::hash::Hash","std::cmp::Eq","de::Decode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Configuration","config::BigEndian","config::Fixint","config::Limit","std::clone::impls::<impl std::clone::Clone for &T>","config::LittleEndian","config::Varint"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::collections::BTreeMap<K, V>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"K":["std::net::SocketAddr","std::string::String","std::num::NonZeroI64","std::net::SocketAddrV4","std::net::Ipv6Addr","std::option::Option","std::rc::Rc","std::num::NonZeroU16","std::num::NonZeroIsize","std::num::NonZeroU8","std::path::PathBuf","std::marker::PhantomData","std::num::NonZeroI8","std::cell::RefCell","std::sync::Arc","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroI16","std::num::NonZeroI128","std::net::IpAddr","std::ffi::CString","std::time::Duration","std::net::SocketAddrV6","std::num::NonZeroU64","std::num::NonZeroU32","std::num::NonZeroI32"],"V":["std::net::SocketAddrV4","std::net::IpAddr","std::num::NonZeroI8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::sync::Arc","std::num::NonZeroU128","std::net::Ipv4Addr","std::num::NonZeroI128","std::collections::HashMap","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::num::NonZeroI64","std::num::NonZeroI16","std::rc::Rc","std::collections::VecDeque","std::time::SystemTime","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::sync::Mutex","std::ops::Range","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::num::NonZeroU32","std::ffi::CString","std::marker::PhantomData","std::string::String","std::num::NonZeroU64","std::cell::RefCell","std::collections::HashSet","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::option::Option","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::num::NonZeroUsize","std::collections::BTreeSet","std::boxed::Box","std::time::Duration","std::collections::Bound","std::cell::Cell","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::borrow::Cow","std::num::NonZeroU8","std::vec::Vec","std::result::Result","std::net::Ipv6Addr","std::collections::BTreeMap","std::path::PathBuf"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU32","std::num::NonZeroU8","std::num::NonZeroI32","std::cell::RefCell","std::num::NonZeroI64","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroU64","std::num::NonZeroI8","std::sync::Arc","std::option::Option","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroUsize","std::string::String","std::net::SocketAddrV6","std::net::IpAddr","std::cell::Cell","std::path::PathBuf"],"V":["std::num::NonZeroU128","std::string::String","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::ops::Range","std::net::SocketAddr","std::path::PathBuf","std::num::NonZeroU32","std::num::NonZeroI32","std::collections::VecDeque","std::num::NonZeroU64","std::marker::PhantomData","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::sync::Arc","std::collections::BinaryHeap","std::collections::HashSet","std::time::SystemTime","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::sync::RwLock","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroI8","std::rc::Rc","std::cell::RefCell","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::collections::BTreeSet","std::option::Option","std::vec::Vec","std::net::Ipv6Addr","std::collections::HashMap","std::collections::Bound","std::time::Duration","std::net::IpAddr","std::ffi::CString","std::boxed::Box","std::sync::atomic::AtomicI16","std::sync::Mutex","std::result::Result","std::borrow::Cow","std::cell::Cell","std::num::NonZeroU8","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::num::NonZeroI128"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::string::String","std::num::NonZeroI128","std::cell::Cell","std::num::NonZeroU8","std::num::NonZeroI16","std::time::SystemTime","std::num::NonZeroI32","std::num::NonZeroU64","std::rc::Rc","std::num::NonZeroIsize","std::path::PathBuf","std::net::Ipv4Addr","std::sync::Arc","std::time::Duration","std::ffi::CString","std::option::Option","std::cell::RefCell","std::net::SocketAddrV4","std::num::NonZeroUsize","std::num::NonZeroU16","std::net::SocketAddr","std::net::SocketAddrV6","std::marker::PhantomData","std::num::NonZeroU32","std::num::NonZeroU128","std::net::IpAddr","std::num::NonZeroI64"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI16","std::num::NonZeroU128","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroU64","std::string::String","std::rc::Rc","std::num::NonZeroU16","std::time::Duration","std::ffi::CString","std::num::NonZeroI32","std::time::SystemTime","std::num::NonZeroI8","std::num::NonZeroU8","std::net::Ipv4Addr","std::num::NonZeroU32","std::marker::PhantomData","std::net::SocketAddrV4","std::option::Option","std::cell::RefCell","std::net::Ipv6Addr","std::path::PathBuf","std::sync::Arc","std::num::NonZeroI64"]},"std::collections::Bound":{"T":["std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::num::NonZeroIsize","std::net::SocketAddrV6","std::collections::VecDeque","std::ops::Range","std::result::Result","std::ffi::CString","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::option::Option","std::num::NonZeroU128","std::num::NonZeroI16","std::borrow::Cow","std::collections::BTreeSet","std::net::IpAddr","std::sync::Arc","std::cell::Cell","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::string::String","std::net::SocketAddr","std::collections::Bound","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::boxed::Box","std::rc::Rc","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::vec::Vec","std::sync::atomic::AtomicIsize","std::time::Duration","std::collections::HashMap","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroI8","std::path::PathBuf","std::collections::BinaryHeap","std::sync::Mutex","std::num::NonZeroU64","std::num::NonZeroU16","std::collections::HashSet","std::sync::RwLock","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::cell::RefCell","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::ops::RangeInclusive"]},"std::collections::HashMap":{"K":["std::num::NonZeroU8","std::sync::Arc","std::string::String","std::num::NonZeroI8","std::num::NonZeroU64","std::net::SocketAddrV4","std::collections::Bound","std::num::NonZeroU32","std::ffi::CString","std::net::SocketAddrV6"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroI32","std::num::NonZeroI64","std::sync::Mutex","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::time::Duration","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroUsize","std::num::NonZeroU32","std::string::String","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroU128","std::sync::Arc","std::sync::atomic::AtomicBool","std::result::Result","std::num::NonZeroU16","std::collections::HashSet","std::cell::Cell","std::net::SocketAddrV6","std::ops::Range","std::marker::PhantomData","std::time::SystemTime","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::net::IpAddr","std::sync::RwLock","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::boxed::Box","std::collections::BTreeMap","std::collections::HashMap","std::ffi::CString","std::vec::Vec","std::net::SocketAddr","std::borrow::Cow","std::rc::Rc","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::collections::VecDeque","std::collections::BTreeSet","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::option::Option","std::cell::RefCell","std::collections::Bound","std::net::Ipv4Addr"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroU16","std::num::NonZeroU8","std::net::SocketAddrV6","std::num::NonZeroU64","std::string::String","std::num::NonZeroUsize","std::ffi::CString","std::net::SocketAddrV4","std::time::Duration","std::path::PathBuf","std::net::SocketAddr","std::num::NonZeroI64","std::net::IpAddr","std::net::Ipv4Addr","std::option::Option","std::collections::Bound"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::atomic::AtomicU64","std::borrow::Cow","std::sync::atomic::AtomicI64","std::time::Duration","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::string::String","std::result::Result","std::num::NonZeroI64","std::num::NonZeroIsize","std::collections::VecDeque","std::ops::RangeInclusive","std::path::PathBuf","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::vec::Vec","std::num::NonZeroI128","std::num::NonZeroI8","std::cell::Cell","std::net::IpAddr","std::sync::RwLock","std::boxed::Box","std::sync::atomic::AtomicBool","std::rc::Rc","std::cell::RefCell","std::sync::Arc","std::sync::Mutex","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::collections::HashMap","std::collections::Bound","std::sync::atomic::AtomicI16","std::ffi::CString","std::ops::Range","std::num::NonZeroI16","std::collections::BTreeSet","std::net::SocketAddrV6","std::option::Option","std::net::Ipv6Addr","std::time::SystemTime","std::collections::HashSet","std::marker::PhantomData","std::num::NonZeroU8","std::net::Ipv4Addr","std::num::NonZeroUsize"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::collections::HashMap","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroU64","std::option::Option","std::sync::atomic::AtomicBool","std::sync::Arc","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::sync::RwLock","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroI128","std::num::NonZeroIsize","std::collections::Bound","std::sync::Mutex","std::collections::HashSet","std::vec::Vec","std::sync::atomic::AtomicI64","std::boxed::Box","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::num::NonZeroU32","std::net::SocketAddrV4","std::time::SystemTime","std::net::IpAddr","std::rc::Rc","std::ops::Range","std::net::Ipv6Addr","std::time::Duration","std::result::Result","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::cell::RefCell","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::collections::BinaryHeap","std::ffi::CString","std::borrow::Cow","std::cell::Cell","std::net::Ipv4Addr","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::string::String","std::num::NonZeroUsize","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::path::PathBuf"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::cell::RefCell","std::net::SocketAddrV4","std::sync::Mutex","std::num::NonZeroI64","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::collections::HashMap","std::sync::atomic::AtomicI64","std::time::Duration","std::ffi::CString","std::num::NonZeroI32","std::result::Result","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::collections::HashSet","std::option::Option","std::time::SystemTime","std::num::NonZeroU64","std::collections::Bound","std::boxed::Box","std::sync::Arc","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::ops::Range","std::rc::Rc","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::collections::VecDeque","std::net::Ipv4Addr","std::cell::Cell","std::string::String","std::num::NonZeroI8","std::num::NonZeroU128","std::borrow::Cow","std::sync::RwLock","std::vec::Vec","std::marker::PhantomData","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::net::IpAddr","std::path::PathBuf","std::net::SocketAddrV6","std::num::NonZeroI128","std::collections::BTreeMap","std::num::NonZeroU8","std::net::SocketAddr"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::boxed::Box","std::num::NonZeroU64","std::ops::Range","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::num::NonZeroI8","std::sync::RwLock","std::num::NonZeroI128","std::time::SystemTime","std::num::NonZeroU16","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::net::Ipv6Addr","std::ops::RangeInclusive","std::net::IpAddr","std::option::Option","std::borrow::Cow","std::collections::BTreeSet","std::net::Ipv4Addr","std::marker::PhantomData","std::string::String","std::num::NonZeroU32","std::time::Duration","std::sync::atomic::AtomicU64","std::collections::HashMap","std::sync::atomic::AtomicU8","std::ffi::CString","std::result::Result","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::cell::RefCell","std::collections::VecDeque","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::cell::Cell","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::vec::Vec","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::rc::Rc","std::collections::BTreeMap","std::collections::Bound","std::collections::HashSet","std::net::SocketAddrV4","std::sync::Arc","std::path::PathBuf","std::num::NonZeroI16","std::sync::atomic::AtomicIsize"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::collections::BTreeMap<K, V>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::collections::BTreeMap<K, V>>::decode(p0);
+<std::collections::BTreeMap<K, V>>::decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BTreeMap<K, V>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BTreeMap<K, V>>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"],"K":["de::BorrowDecode","std::cmp::Ord","std::marker::Sized"],"V":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode"],"V":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","std::cmp::Ord","de::Decode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::Bound":{"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashMap":{"K":["std::hash::Hash","de::BorrowDecode","de::Decode","std::cmp::Eq","std::marker::Sized","enc::Encode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["enc::Encode","std::hash::Hash","std::marker::Sized","de::Decode","std::cmp::Eq","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::BigEndian","config::Fixint","config::NoLimit","config::Varint","config::LittleEndian","config::Limit","config::Configuration","std::clone::impls::<impl std::clone::Clone for &mut T>"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BTreeMap<K, V>>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"K":["std::path::PathBuf","std::num::NonZeroI16","std::cell::Cell","std::time::SystemTime","std::ffi::CString","std::net::SocketAddrV6","std::net::SocketAddrV4","std::net::SocketAddr","std::num::NonZeroIsize","std::string::String","std::marker::PhantomData","std::num::NonZeroI64","std::cell::RefCell","std::time::Duration","std::net::Ipv4Addr","std::num::NonZeroU64","std::num::NonZeroI128","std::num::NonZeroI32","std::num::NonZeroU8","std::rc::Rc","std::option::Option","std::num::NonZeroU16","std::net::IpAddr","std::num::NonZeroU128","std::num::NonZeroI8"],"V":["std::ops::Range","std::collections::Bound","std::borrow::Cow","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::sync::RwLock","std::sync::Arc","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::boxed::Box","std::sync::atomic::AtomicI8","std::cell::Cell","std::num::NonZeroUsize","std::num::NonZeroI32","std::result::Result","std::time::SystemTime","std::path::PathBuf","std::ffi::CString","std::collections::BinaryHeap","std::collections::HashMap","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::collections::BTreeMap","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroI128","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::vec::Vec","std::net::Ipv6Addr","std::net::SocketAddrV4","std::rc::Rc","std::net::SocketAddrV6","std::collections::BTreeSet","std::num::NonZeroI16","std::sync::Mutex","std::num::NonZeroI64","std::net::SocketAddr","std::option::Option","std::net::Ipv4Addr","std::time::Duration","std::cell::RefCell","std::num::NonZeroU64","std::string::String","std::collections::HashSet","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroI32","std::net::SocketAddrV4","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroIsize","std::net::Ipv4Addr","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroU16","std::net::SocketAddrV6","std::time::SystemTime","std::num::NonZeroI8","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroU64"],"V":["std::sync::RwLock","std::time::SystemTime","std::time::Duration","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::num::NonZeroI128","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::boxed::Box","std::ffi::CString","std::num::NonZeroUsize","std::num::NonZeroU16","std::sync::Arc","std::sync::atomic::AtomicBool","std::vec::Vec","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::ops::Range","std::result::Result","std::collections::HashSet","std::num::NonZeroU64","std::num::NonZeroIsize","std::collections::BTreeMap","std::num::NonZeroI8","std::cell::RefCell","std::num::NonZeroU8","std::cell::Cell","std::rc::Rc","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::net::IpAddr","std::num::NonZeroU128","std::option::Option","std::net::SocketAddrV4","std::collections::VecDeque","std::collections::Bound","std::net::SocketAddrV6","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::path::PathBuf","std::string::String","std::num::NonZeroI16","std::borrow::Cow"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI64","std::time::SystemTime","std::num::NonZeroI16","std::num::NonZeroU8","std::time::Duration","std::cell::RefCell","std::string::String","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroUsize","std::num::NonZeroIsize","std::num::NonZeroU32","std::option::Option","std::net::Ipv4Addr","std::net::SocketAddr","std::net::Ipv6Addr","std::sync::Arc","std::path::PathBuf","std::rc::Rc","std::num::NonZeroU128","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroI8"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroIsize","std::num::NonZeroU64","std::time::Duration","std::num::NonZeroI32","std::sync::Arc","std::cell::RefCell","std::net::SocketAddrV4","std::num::NonZeroU8","std::rc::Rc","std::net::SocketAddrV6","std::path::PathBuf","std::num::NonZeroI128","std::ffi::CString","std::net::Ipv6Addr","std::num::NonZeroI16","std::net::Ipv4Addr","std::num::NonZeroU16","std::net::IpAddr","std::num::NonZeroI64","std::num::NonZeroI8"]},"std::collections::Bound":{"T":["std::collections::BTreeMap","std::collections::Bound","std::result::Result","std::ops::RangeInclusive","std::borrow::Cow","std::sync::RwLock","std::rc::Rc","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::string::String","std::num::NonZeroI64","std::time::Duration","std::marker::PhantomData","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::sync::Arc","std::num::NonZeroUsize","std::num::NonZeroI8","std::cell::RefCell","std::net::SocketAddrV4","std::num::NonZeroU32","std::vec::Vec","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::net::IpAddr","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::cell::Cell","std::num::NonZeroU16","std::net::Ipv6Addr","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::time::SystemTime","std::collections::HashSet","std::collections::HashMap","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::option::Option","std::ops::Range","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::path::PathBuf","std::boxed::Box","std::collections::BTreeSet","std::sync::Mutex","std::num::NonZeroI16","std::ffi::CString"]},"std::collections::HashMap":{"K":["std::num::NonZeroIsize","std::ffi::CString","std::collections::Bound","std::num::NonZeroU128","std::rc::Rc","std::time::Duration","std::net::Ipv4Addr","std::net::SocketAddrV6","std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroU8","std::num::NonZeroU16","std::num::NonZeroU64","std::num::NonZeroI32","std::option::Option","std::net::SocketAddr","std::num::NonZeroI128","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroUsize","std::num::NonZeroI64"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::num::NonZeroI128","std::string::String","std::rc::Rc","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::collections::Bound","std::sync::atomic::AtomicI8","std::sync::RwLock","std::collections::HashSet","std::collections::BinaryHeap","std::sync::Mutex","std::sync::atomic::AtomicU32","std::boxed::Box","std::path::PathBuf","std::time::SystemTime","std::num::NonZeroU16","std::num::NonZeroI8","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::ops::RangeInclusive","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::ops::Range","std::net::SocketAddrV6","std::num::NonZeroI64","std::net::Ipv6Addr","std::cell::Cell","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroU64","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroU32","std::num::NonZeroU128","std::borrow::Cow","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::net::IpAddr","std::vec::Vec","std::sync::atomic::AtomicU64","std::sync::Arc","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::sync::atomic::AtomicU8","std::result::Result","std::time::Duration","std::collections::BTreeSet","std::num::NonZeroUsize","std::option::Option","std::net::SocketAddr","std::marker::PhantomData","std::sync::atomic::AtomicI64"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::marker::PhantomData","std::num::NonZeroI8","std::num::NonZeroI16","std::num::NonZeroU128","std::option::Option","std::net::SocketAddr","std::num::NonZeroIsize","std::num::NonZeroI32","std::string::String","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroI64","std::num::NonZeroUsize","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroI128"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::sync::Mutex","std::collections::Bound","std::net::SocketAddrV4","std::sync::Arc","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::rc::Rc","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::time::SystemTime","std::option::Option","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::net::Ipv6Addr","std::path::PathBuf","std::ffi::CString","std::num::NonZeroI128","std::num::NonZeroIsize","std::collections::HashSet","std::cell::RefCell","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::boxed::Box","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::ops::Range","std::collections::HashMap","std::sync::atomic::AtomicU64","std::borrow::Cow","std::string::String","std::net::SocketAddrV6","std::time::Duration","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::num::NonZeroU32","std::num::NonZeroI16","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::result::Result","std::num::NonZeroU64","std::num::NonZeroI64","std::ops::RangeInclusive","std::num::NonZeroUsize","std::num::NonZeroU128","std::net::IpAddr","std::num::NonZeroI32","std::net::Ipv4Addr","std::cell::Cell","std::vec::Vec","std::num::NonZeroU8","std::sync::atomic::AtomicI64"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::BinaryHeap","std::string::String","std::num::NonZeroU16","std::sync::Arc","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::sync::Mutex","std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroI64","std::collections::VecDeque","std::vec::Vec","std::sync::atomic::AtomicI32","std::sync::RwLock","std::ffi::CString","std::collections::BTreeMap","std::num::NonZeroI128","std::rc::Rc","std::cell::RefCell","std::collections::Bound","std::num::NonZeroU8","std::num::NonZeroI32","std::ops::Range","std::option::Option","std::num::NonZeroU32","std::cell::Cell","std::path::PathBuf","std::result::Result","std::num::NonZeroU64","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::time::SystemTime","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::collections::HashSet","std::num::NonZeroI8","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::collections::BTreeSet","std::boxed::Box","std::time::Duration","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::collections::HashMap","std::sync::atomic::AtomicI8"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::ops::RangeInclusive","std::borrow::Cow","std::sync::atomic::AtomicI64","std::collections::HashMap","std::num::NonZeroU128","std::net::Ipv4Addr","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::string::String","std::vec::Vec","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::collections::BinaryHeap","std::cell::Cell","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::net::IpAddr","std::collections::Bound","std::boxed::Box","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::net::SocketAddr","std::result::Result","std::sync::Arc","std::num::NonZeroI128","std::cell::RefCell","std::sync::Mutex","std::rc::Rc","std::num::NonZeroIsize","std::ffi::CString","std::time::SystemTime","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::num::NonZeroI16","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::time::Duration","std::collections::BTreeMap","std::path::PathBuf","std::sync::atomic::AtomicU8","std::sync::RwLock","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroI32","std::num::NonZeroU8","std::option::Option","std::ops::Range","std::collections::HashSet"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::atomic::AtomicI8","std::ffi::CString","std::net::Ipv6Addr","std::borrow::Cow","std::sync::RwLock","std::num::NonZeroU8","std::sync::Mutex","std::cell::RefCell","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::sync::Arc","std::ops::RangeInclusive","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::num::NonZeroI128","std::collections::BinaryHeap","std::net::SocketAddrV6","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::option::Option","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::marker::PhantomData","std::path::PathBuf","std::collections::HashSet","std::rc::Rc","std::ops::Range","std::num::NonZeroU32","std::result::Result","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::net::Ipv4Addr","std::num::NonZeroUsize","std::string::String","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::time::SystemTime","std::sync::atomic::AtomicU32","std::collections::Bound","std::cell::Cell","std::collections::HashMap","std::net::SocketAddr","std::vec::Vec","std::collections::BTreeSet","std::num::NonZeroI32","std::boxed::Box","std::time::Duration","std::num::NonZeroU16"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BTreeMap<K, V>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BTreeMap<K, V>>::borrow_decode(p0);
+<std::collections::BTreeMap<K, V>>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl enc::Encode for std::collections::BTreeMap<K, V>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::collections::BTreeMap<K, V>>::encode":{"E":["std::marker::Sized","enc::Encoder"],"K":["enc::Encode","std::cmp::Ord","std::marker::Sized"],"V":["std::marker::Sized","enc::Encode"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"K":["de::Decode","de::BorrowDecode","std::cmp::Ord","std::marker::Sized","enc::Encode"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["std::marker::Sized","std::cmp::Ord","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode","std::cmp::Ord"]},"std::collections::Bound":{"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::hash::Hash","std::cmp::Eq","de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Eq","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Fixint","config::Limit","std::clone::impls::<impl std::clone::Clone for *mut T>","config::LittleEndian","config::BigEndian","config::Configuration","config::Varint"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","features::impl_std::IoWriter","enc::write::SizeWriter","enc::write::SliceWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::collections::BTreeMap<K, V>>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"],"K":["std::num::NonZeroU64","std::num::NonZeroU8","std::num::NonZeroI128","std::num::NonZeroU16","std::num::NonZeroI32","std::num::NonZeroI64","std::num::NonZeroI8","std::num::NonZeroUsize","std::rc::Rc","std::string::String","std::num::NonZeroU32","std::num::NonZeroU128","std::option::Option","std::net::SocketAddr","std::num::NonZeroI16","std::ffi::CString","std::net::SocketAddrV4","std::marker::PhantomData","std::sync::Arc","std::cell::RefCell","std::num::NonZeroIsize","std::net::Ipv6Addr","std::time::SystemTime","std::time::Duration"],"V":["std::borrow::Cow","std::cell::Cell","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::ffi::CString","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::num::NonZeroU128","std::option::Option","std::path::PathBuf","std::net::Ipv4Addr","std::sync::Arc","std::sync::RwLock","std::collections::VecDeque","std::result::Result","std::marker::PhantomData","std::vec::Vec","std::net::SocketAddrV4","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::num::NonZeroI128","std::num::NonZeroI32","std::collections::HashSet","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::ops::Range","std::collections::Bound","std::collections::BinaryHeap","std::rc::Rc","std::num::NonZeroI64","std::net::SocketAddr","std::string::String","std::num::NonZeroI16","std::time::Duration","std::cell::RefCell","std::num::NonZeroU32","std::boxed::Box","std::collections::BTreeSet","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::net::IpAddr","std::time::SystemTime","std::collections::HashMap","std::sync::Mutex"]},"features::impl_std::IoWriter":{"W":["std::collections::VecDeque<u8, A>","std::io::stdio::StderrRaw","std::fs::File","std::io::Cursor<std::boxed::Box<[u8], A>>","std::boxed::Box<W>","&std::io::Stdout","std::io::StderrLock<'_>","std::sys::unix::stdio::Stderr","std::process::ChildStdin","std::vec::Vec<u8, A>","std::io::stdio::StdoutRaw","std::io::BufWriter<W>","std::io::Cursor<&mut [u8]>","std::io::Stderr","std::io::LineWriter<W>","std::io::Stdout","&std::io::Stderr","std::os::unix::net::UnixStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::sys::unix::stdio::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::fs::File","std::net::TcpStream","std::io::impls::<impl std::io::Write for &mut W>","&'a std::os::unix::net::UnixStream","std::io::BorrowedCursor<'a>","std::io::Cursor<[u8; N]>","std::io::StdoutLock<'_>","&std::process::ChildStdin","&std::net::TcpStream","std::io::Sink","std::io::Cursor<std::vec::Vec<u8, A>>","&std::io::Sink"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::ffi::CStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::cell::RefCell","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroIsize","std::num::NonZeroI8","std::string::String","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroI128","std::path::PathBuf","std::sync::Arc","std::net::SocketAddrV6","std::time::SystemTime","std::num::NonZeroU16","std::net::Ipv4Addr","std::net::IpAddr","std::rc::Rc","std::net::SocketAddr","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroU32"],"V":["std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::sync::RwLock","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::net::IpAddr","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::time::SystemTime","std::collections::VecDeque","std::num::NonZeroUsize","std::cell::RefCell","std::net::Ipv6Addr","std::num::NonZeroU8","std::sync::Mutex","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::vec::Vec","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::marker::PhantomData","std::result::Result","std::boxed::Box","std::num::NonZeroIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::borrow::Cow","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::ops::Range","std::cell::Cell","std::rc::Rc","std::ops::RangeInclusive","std::num::NonZeroI32","std::num::NonZeroU16","std::collections::Bound","std::path::PathBuf","std::collections::HashMap","std::string::String","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::sync::Arc","std::collections::HashSet","std::ffi::CString","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroI16","std::option::Option"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::marker::PhantomData","std::cell::RefCell","std::num::NonZeroIsize","std::num::NonZeroU128","std::num::NonZeroUsize","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroI128","std::path::PathBuf","std::num::NonZeroU32","std::num::NonZeroU16","std::net::SocketAddrV4","std::sync::Arc","std::rc::Rc","std::string::String","std::option::Option","std::net::SocketAddrV6"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddr","std::option::Option","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroU8","std::string::String","std::sync::Arc","std::net::SocketAddrV4","std::num::NonZeroIsize","std::num::NonZeroU128","std::rc::Rc","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroI64","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroI16","std::time::SystemTime","std::time::Duration"]},"std::collections::Bound":{"T":["std::ops::RangeInclusive","std::collections::VecDeque","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::rc::Rc","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::net::SocketAddrV4","std::time::Duration","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::num::NonZeroI8","std::path::PathBuf","std::option::Option","std::sync::atomic::AtomicI16","std::string::String","std::ffi::CString","std::sync::atomic::AtomicBool","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroUsize","std::borrow::Cow","std::sync::Arc","std::num::NonZeroU16","std::boxed::Box","std::net::Ipv4Addr","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::vec::Vec","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::collections::Bound","std::collections::HashSet","std::result::Result","std::net::SocketAddr","std::time::SystemTime","std::sync::Mutex","std::collections::HashMap","std::cell::Cell","std::num::NonZeroI64","std::num::NonZeroI128","std::cell::RefCell","std::sync::atomic::AtomicU16","std::ops::Range","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::sync::RwLock","std::sync::atomic::AtomicU32","std::num::NonZeroU8"]},"std::collections::HashMap":{"K":["std::num::NonZeroIsize","std::num::NonZeroI8","std::num::NonZeroU16","std::collections::Bound","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroU64","std::net::Ipv4Addr","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroUsize","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroU128","std::net::IpAddr","std::net::SocketAddr"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::RwLock","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::num::NonZeroI64","std::cell::Cell","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::collections::VecDeque","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::borrow::Cow","std::net::SocketAddr","std::time::Duration","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::cell::RefCell","std::net::Ipv6Addr","std::marker::PhantomData","std::option::Option","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::vec::Vec","std::sync::Arc","std::time::SystemTime","std::collections::HashMap","std::string::String","std::collections::BTreeMap","std::result::Result","std::sync::Mutex","std::collections::BTreeSet","std::num::NonZeroU16","std::collections::BinaryHeap","std::num::NonZeroU8","std::ops::Range","std::num::NonZeroU64","std::num::NonZeroIsize","std::num::NonZeroU32","std::num::NonZeroI16","std::rc::Rc","std::collections::Bound","std::num::NonZeroI8","std::path::PathBuf","std::boxed::Box","std::sync::atomic::AtomicI64","std::ffi::CString","std::net::IpAddr","std::ops::RangeInclusive","std::collections::HashSet"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::string::String","std::time::Duration","std::rc::Rc","std::num::NonZeroU8","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroU64","std::marker::PhantomData","std::time::SystemTime","std::num::NonZeroU16","std::net::Ipv6Addr","std::net::Ipv4Addr","std::num::NonZeroU128","std::collections::Bound","std::num::NonZeroI64","std::option::Option"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicU8","std::cell::RefCell","std::cell::Cell","std::sync::atomic::AtomicU32","std::collections::Bound","std::sync::RwLock","std::vec::Vec","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::net::IpAddr","std::num::NonZeroI8","std::net::Ipv6Addr","std::collections::HashMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::ops::Range","std::collections::BinaryHeap","std::net::SocketAddrV6","std::marker::PhantomData","std::collections::BTreeSet","std::collections::BTreeMap","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::ops::RangeInclusive","std::collections::VecDeque","std::string::String","std::num::NonZeroI32","std::borrow::Cow","std::sync::atomic::AtomicI8","std::path::PathBuf","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::ffi::CString","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::result::Result","std::time::SystemTime","std::net::SocketAddr","std::net::SocketAddrV4","std::num::NonZeroU8","std::time::Duration","std::num::NonZeroU32","std::num::NonZeroU16","std::rc::Rc","std::collections::HashSet","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::num::NonZeroU128"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicU16","std::collections::HashMap","std::collections::BinaryHeap","std::ops::Range","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::cell::RefCell","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::sync::atomic::AtomicI32","std::path::PathBuf","std::net::IpAddr","std::net::Ipv6Addr","std::collections::VecDeque","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::sync::Arc","std::num::NonZeroI8","std::collections::Bound","std::num::NonZeroU16","std::option::Option","std::num::NonZeroI128","std::ops::RangeInclusive","std::string::String","std::net::SocketAddrV6","std::num::NonZeroI64","std::num::NonZeroIsize","std::collections::HashSet","std::net::Ipv4Addr","std::net::SocketAddr","std::vec::Vec","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::cell::Cell","std::sync::Mutex","std::num::NonZeroU32","std::sync::RwLock","std::rc::Rc","std::num::NonZeroI16","std::marker::PhantomData","std::boxed::Box","std::time::SystemTime","std::net::SocketAddrV4","std::time::Duration","std::ffi::CString","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::result::Result","std::sync::atomic::AtomicU64"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::marker::PhantomData","std::collections::BinaryHeap","std::num::NonZeroI128","std::collections::BTreeMap","std::num::NonZeroI8","std::num::NonZeroUsize","std::sync::Mutex","std::ffi::CString","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::num::NonZeroU16","std::collections::HashSet","std::net::SocketAddr","std::rc::Rc","std::net::SocketAddrV4","std::boxed::Box","std::num::NonZeroI64","std::vec::Vec","std::collections::VecDeque","std::num::NonZeroIsize","std::borrow::Cow","std::collections::BTreeSet","std::net::IpAddr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::option::Option","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::collections::HashMap","std::time::SystemTime","std::sync::atomic::AtomicI8","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::net::SocketAddrV6","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::cell::Cell","std::string::String","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::ops::Range","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::collections::Bound","std::time::Duration","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::num::NonZeroI16","std::sync::RwLock","std::cell::RefCell","std::sync::Arc","std::result::Result"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::boxed::Box","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::num::NonZeroU16","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::ffi::CString","std::num::NonZeroU8","std::option::Option","std::sync::Arc","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::net::IpAddr","std::num::NonZeroU32","std::time::Duration","std::sync::RwLock","std::num::NonZeroUsize","std::time::SystemTime","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::borrow::Cow","std::collections::BTreeSet","std::num::NonZeroU128","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::vec::Vec","std::sync::atomic::AtomicI64","std::string::String","std::collections::HashMap","std::result::Result","std::rc::Rc","std::cell::Cell","std::ops::Range","std::collections::Bound","std::sync::atomic::AtomicI32","std::cell::RefCell","std::num::NonZeroIsize","std::num::NonZeroI8","std::collections::BinaryHeap","std::ops::RangeInclusive","std::net::Ipv4Addr","std::collections::VecDeque","std::path::PathBuf","std::sync::Mutex","std::num::NonZeroI64","std::net::SocketAddrV4","std::net::SocketAddrV6","std::num::NonZeroI128","std::collections::HashSet","std::collections::BTreeMap","std::net::SocketAddr"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::collections::BTreeMap<K, V>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_alloc::<impl enc::Encode for std::collections::BTreeMap<K, V>>::encode(p0, p1);
+crate::features::impl_alloc::<impl enc::Encode for std::collections::BTreeMap<K, V>>::encode(p0, p1);
+<std::collections::BTreeMap<K, V>>::encode(p0, p1);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::collections::BTreeSet<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_alloc::<impl de::Decode for std::collections::BTreeSet<T>>::decode":{"D":["std::marker::Sized","de::Decoder"],"T":["std::cmp::Ord","de::Decode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::marker::Sized","std::cmp::Ord","de::BorrowDecode","enc::Encode","de::Decode"],"V":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["std::marker::Sized","std::cmp::Ord","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode","std::cmp::Ord"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["de::Decode","std::cmp::Eq","std::hash::Hash","de::BorrowDecode","std::marker::Sized","enc::Encode"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["de::BorrowDecode","std::marker::Sized","std::cmp::Eq","de::Decode","enc::Encode","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::BigEndian","config::LittleEndian","config::Fixint","config::Varint","config::NoLimit","config::Configuration","std::clone::impls::<impl std::clone::Clone for &T>"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::collections::BTreeSet<T>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"T":["std::time::SystemTime","std::num::NonZeroI64","std::net::SocketAddrV4","std::num::NonZeroI32","std::time::Duration","std::net::IpAddr","std::ffi::CString","std::sync::Arc","std::num::NonZeroU64","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroI8","std::rc::Rc","std::num::NonZeroI128","std::marker::PhantomData","std::num::NonZeroU32","std::option::Option","std::path::PathBuf","std::num::NonZeroIsize","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroU128","std::net::SocketAddrV6","std::cell::RefCell","std::num::NonZeroU16","std::string::String","std::cell::Cell"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::path::Path","std::ffi::CStr","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::ffi::CString","std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroI8","std::num::NonZeroIsize","std::net::Ipv6Addr","std::num::NonZeroU8","std::num::NonZeroUsize","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroI16","std::sync::Arc","std::cell::Cell","std::num::NonZeroI64","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroI128","std::num::NonZeroI32","std::cell::RefCell","std::net::IpAddr","std::marker::PhantomData"],"V":["std::cell::RefCell","std::num::NonZeroI128","std::string::String","std::net::SocketAddr","std::num::NonZeroI16","std::num::NonZeroUsize","std::collections::HashSet","std::vec::Vec","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::ops::RangeInclusive","std::net::SocketAddrV4","std::num::NonZeroIsize","std::num::NonZeroU8","std::rc::Rc","std::time::Duration","std::collections::HashMap","std::net::Ipv4Addr","std::num::NonZeroI32","std::net::IpAddr","std::sync::atomic::AtomicU64","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::result::Result","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::ffi::CString","std::option::Option","std::collections::BTreeSet","std::collections::VecDeque","std::net::SocketAddrV6","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::sync::Arc","std::collections::BTreeMap","std::collections::BinaryHeap","std::net::Ipv6Addr","std::num::NonZeroU64","std::borrow::Cow","std::time::SystemTime","std::sync::atomic::AtomicI16","std::collections::Bound","std::sync::RwLock","std::sync::Mutex","std::sync::atomic::AtomicI8","std::path::PathBuf","std::boxed::Box","std::ops::Range","std::num::NonZeroU128"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::SocketAddr","std::num::NonZeroI64","std::cell::RefCell","std::net::SocketAddrV6","std::num::NonZeroU128","std::time::SystemTime","std::num::NonZeroIsize","std::net::IpAddr","std::cell::Cell","std::num::NonZeroU32","std::net::Ipv6Addr","std::time::Duration","std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroU16","std::net::SocketAddrV4","std::num::NonZeroI8","std::sync::Arc","std::option::Option","std::net::Ipv4Addr"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI8","std::num::NonZeroUsize","std::option::Option","std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroU32","std::rc::Rc","std::net::SocketAddr","std::net::SocketAddrV4","std::string::String","std::net::IpAddr","std::num::NonZeroU64","std::time::SystemTime","std::sync::Arc","std::num::NonZeroI128","std::cell::Cell","std::num::NonZeroIsize","std::num::NonZeroI16"]},"std::collections::Bound":{"T":["std::boxed::Box","std::option::Option","std::path::PathBuf","std::cell::RefCell","std::sync::atomic::AtomicU64","std::collections::HashMap","std::collections::HashSet","std::num::NonZeroI16","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::marker::PhantomData","std::time::SystemTime","std::sync::atomic::AtomicI32","std::net::IpAddr","std::sync::Arc","std::ops::Range","std::collections::BinaryHeap","std::cell::Cell","std::string::String","std::sync::Mutex","std::ffi::CString","std::sync::atomic::AtomicI8","std::collections::Bound","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroU64","std::num::NonZeroUsize","std::net::SocketAddrV4","std::sync::RwLock","std::num::NonZeroU8","std::collections::VecDeque","std::rc::Rc","std::vec::Vec","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::borrow::Cow","std::collections::BTreeMap","std::num::NonZeroU32","std::num::NonZeroI8","std::time::Duration","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::result::Result"]},"std::collections::HashMap":{"K":["std::num::NonZeroIsize","std::num::NonZeroU32","std::collections::Bound","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroUsize","std::path::PathBuf","std::rc::Rc","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroU64","std::ffi::CString","std::time::Duration","std::net::SocketAddrV6","std::num::NonZeroU16"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::num::NonZeroU32","std::boxed::Box","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::num::NonZeroI64","std::sync::Mutex","std::result::Result","std::marker::PhantomData","std::collections::Bound","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::cell::Cell","std::collections::BTreeMap","std::option::Option","std::num::NonZeroU8","std::cell::RefCell","std::collections::VecDeque","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::time::SystemTime","std::num::NonZeroU128","std::collections::HashSet","std::borrow::Cow","std::sync::Arc","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::rc::Rc","std::string::String","std::num::NonZeroI16","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::time::Duration","std::num::NonZeroIsize","std::ops::Range","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::ops::RangeInclusive","std::net::Ipv4Addr","std::net::IpAddr","std::sync::RwLock","std::ffi::CString","std::vec::Vec","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::path::PathBuf"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU16","std::num::NonZeroU8","std::rc::Rc","std::ffi::CString","std::num::NonZeroI32","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroI16","std::marker::PhantomData","std::num::NonZeroUsize","std::collections::Bound","std::num::NonZeroI128","std::path::PathBuf","std::string::String","std::time::Duration","std::net::SocketAddrV4","std::net::Ipv4Addr","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroU128"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::atomic::AtomicI32","std::option::Option","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::ops::RangeInclusive","std::ops::Range","std::sync::Mutex","std::result::Result","std::time::Duration","std::sync::RwLock","std::boxed::Box","std::net::IpAddr","std::collections::HashMap","std::sync::Arc","std::vec::Vec","std::string::String","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::net::SocketAddrV6","std::collections::BTreeSet","std::num::NonZeroU128","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::path::PathBuf","std::cell::Cell","std::collections::VecDeque","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::collections::BinaryHeap","std::time::SystemTime","std::cell::RefCell","std::ffi::CString","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::num::NonZeroI64","std::borrow::Cow","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::rc::Rc","std::num::NonZeroI128","std::collections::Bound","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::collections::HashSet"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::Bound","std::net::SocketAddrV4","std::cell::RefCell","std::num::NonZeroU8","std::ops::RangeInclusive","std::string::String","std::sync::atomic::AtomicU64","std::option::Option","std::sync::RwLock","std::boxed::Box","std::result::Result","std::num::NonZeroI16","std::vec::Vec","std::num::NonZeroI64","std::collections::BTreeMap","std::collections::HashMap","std::rc::Rc","std::num::NonZeroUsize","std::path::PathBuf","std::marker::PhantomData","std::num::NonZeroU128","std::collections::VecDeque","std::net::SocketAddr","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::num::NonZeroU16","std::net::IpAddr","std::collections::HashSet","std::ffi::CString","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::sync::Arc","std::num::NonZeroIsize","std::time::SystemTime","std::cell::Cell","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::num::NonZeroI32","std::time::Duration","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::ops::Range","std::net::SocketAddrV6","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::borrow::Cow","std::sync::Mutex"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::cell::RefCell","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::collections::BTreeSet","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::collections::BinaryHeap","std::rc::Rc","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::num::NonZeroUsize","std::collections::VecDeque","std::num::NonZeroU8","std::time::Duration","std::ops::Range","std::collections::HashMap","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::collections::Bound","std::sync::Arc","std::num::NonZeroI128","std::result::Result","std::time::SystemTime","std::sync::atomic::AtomicI16","std::net::IpAddr","std::option::Option","std::cell::Cell","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::marker::PhantomData","std::borrow::Cow","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::net::SocketAddrV6","std::sync::Mutex","std::sync::RwLock","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::net::Ipv6Addr","std::string::String","std::collections::BTreeMap","std::vec::Vec","std::path::PathBuf","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::collections::HashSet","std::boxed::Box","std::ffi::CString"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::collections::BTreeSet","std::collections::VecDeque","std::path::PathBuf","std::result::Result","std::sync::atomic::AtomicU64","std::collections::HashSet","std::sync::atomic::AtomicI8","std::net::IpAddr","std::rc::Rc","std::num::NonZeroI64","std::vec::Vec","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroI128","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::sync::Arc","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroU64","std::cell::Cell","std::sync::atomic::AtomicBool","std::string::String","std::sync::Mutex","std::net::SocketAddr","std::ffi::CString","std::collections::Bound","std::num::NonZeroI32","std::num::NonZeroIsize","std::num::NonZeroU8","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::boxed::Box","std::time::Duration","std::collections::HashMap","std::cell::RefCell","std::borrow::Cow","std::ops::Range","std::option::Option","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroU32","std::sync::RwLock","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::num::NonZeroU16","std::net::SocketAddrV4"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::collections::BTreeSet<T>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::collections::BTreeSet<T>>::decode(p0);
+<std::collections::BTreeSet<T>>::decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BTreeSet<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BTreeSet<T>>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"],"T":["de::BorrowDecode","std::marker::Sized","std::cmp::Ord"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BTreeSet<T>>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"T":["std::time::SystemTime","std::marker::PhantomData","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroI32","std::net::SocketAddrV6","std::sync::Arc","std::net::SocketAddrV4","std::net::Ipv4Addr","std::num::NonZeroIsize","std::num::NonZeroI64","std::time::Duration","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroU128","std::net::SocketAddr","std::num::NonZeroI128","std::rc::Rc","std::num::NonZeroI8"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BTreeSet<T>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BTreeSet<T>>::borrow_decode(p0);
+<std::collections::BTreeSet<T>>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl enc::Encode for std::collections::BTreeSet<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_alloc::<impl enc::Encode for std::collections::BTreeSet<T>>::encode":{"E":["enc::Encoder","std::marker::Sized"],"T":["enc::Encode","std::cmp::Ord","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SliceWriter","enc::write::SizeWriter","features::impl_alloc::VecWriter"]},"features::impl_alloc::<impl enc::Encode for std::collections::BTreeSet<T>>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"],"T":["std::path::PathBuf","std::sync::Arc","std::string::String","std::net::Ipv6Addr","std::num::NonZeroU16","std::num::NonZeroU128","std::net::SocketAddrV4","std::net::SocketAddrV6","std::rc::Rc","std::net::IpAddr","std::num::NonZeroI8","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroI32","std::num::NonZeroUsize","std::net::Ipv4Addr","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroI64","std::time::Duration","std::cell::Cell"]},"features::impl_std::IoWriter":{"W":["std::fs::File","&'a std::os::unix::net::UnixStream","std::io::StdoutLock<'_>","std::io::Cursor<std::vec::Vec<u8, A>>","&std::process::ChildStdin","std::io::stdio::StderrRaw","std::process::ChildStdin","std::io::stdio::StdoutRaw","std::io::Sink","std::io::Cursor<std::boxed::Box<[u8], A>>","std::boxed::Box<W>","std::io::StderrLock<'_>","std::io::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<[u8; N]>","std::io::Cursor<&mut [u8]>","&std::io::Stderr","std::vec::Vec<u8, A>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::os::unix::net::UnixStream","std::io::LineWriter<W>","&std::io::Sink","std::sys::unix::stdio::Stderr","std::collections::VecDeque<u8, A>","std::io::impls::<impl std::io::Write for &mut W>","std::io::Stderr","&std::io::Stdout","std::io::BufWriter<W>","&std::net::TcpStream","std::sys::unix::stdio::Stdout","std::net::TcpStream","std::io::BorrowedCursor<'a>","&std::fs::File"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::collections::BTreeSet<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_alloc::<impl enc::Encode for std::collections::BTreeSet<T>>::encode(p0, p1);
+crate::features::impl_alloc::<impl enc::Encode for std::collections::BTreeSet<T>>::encode(p0, p1);
+<std::collections::BTreeSet<T>>::encode(p0, p1);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::collections::VecDeque<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"features::impl_alloc::<impl de::Decode for std::collections::VecDeque<T>>::decode":{"D":["std::marker::Sized","de::Decoder"],"T":["de::Decode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"K":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","std::cmp::Ord","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode"]},"std::collections::Bound":{"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["std::hash::Hash","de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Eq","enc::Encode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["de::BorrowDecode","de::Decode","std::hash::Hash","enc::Encode","std::marker::Sized","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Varint","std::clone::impls::<impl std::clone::Clone for &T>","config::Configuration","config::Fixint","config::NoLimit","config::Limit","config::BigEndian","config::LittleEndian"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::collections::VecDeque<T>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"T":["std::cell::Cell","std::collections::BTreeSet","std::ffi::CString","std::collections::BTreeMap","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::path::PathBuf","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::borrow::Cow","std::sync::Arc","std::collections::BinaryHeap","std::num::NonZeroU32","std::rc::Rc","std::sync::atomic::AtomicI8","std::cell::RefCell","std::collections::VecDeque","std::net::Ipv4Addr","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::net::SocketAddrV6","std::num::NonZeroUsize","std::option::Option","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::sync::Mutex","std::string::String","std::net::IpAddr","std::num::NonZeroU128","std::boxed::Box","std::num::NonZeroIsize","std::num::NonZeroI16","std::sync::RwLock","std::collections::HashMap","std::net::SocketAddr","std::ops::Range","std::time::SystemTime","std::marker::PhantomData","std::collections::Bound","std::num::NonZeroU16","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::vec::Vec","std::sync::atomic::AtomicIsize","std::result::Result","std::num::NonZeroI32","std::time::Duration","std::net::SocketAddrV4"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::ffi::OsStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::option::Option","std::net::Ipv6Addr","std::num::NonZeroI32","std::cell::RefCell","std::num::NonZeroI128","std::rc::Rc","std::net::IpAddr","std::sync::Arc","std::time::Duration","std::string::String","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroI64","std::num::NonZeroU16","std::ffi::CString","std::num::NonZeroU64","std::num::NonZeroU8","std::time::SystemTime","std::num::NonZeroI8","std::cell::Cell","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroI16"],"V":["std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::sync::Arc","std::num::NonZeroI128","std::num::NonZeroU32","std::ops::RangeInclusive","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::num::NonZeroI64","std::collections::HashSet","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::boxed::Box","std::net::Ipv6Addr","std::collections::Bound","std::ops::Range","std::rc::Rc","std::time::Duration","std::num::NonZeroIsize","std::collections::BinaryHeap","std::sync::RwLock","std::path::PathBuf","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::num::NonZeroU128","std::collections::BTreeMap","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::ffi::CString","std::result::Result","std::cell::Cell","std::borrow::Cow","std::collections::HashMap","std::num::NonZeroU8","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::option::Option","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::sync::Mutex","std::marker::PhantomData","std::string::String","std::net::Ipv4Addr","std::num::NonZeroUsize","std::time::SystemTime","std::net::SocketAddr","std::vec::Vec","std::sync::atomic::AtomicU32","std::num::NonZeroI32"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI128","std::num::NonZeroI16","std::net::Ipv4Addr","std::ffi::CString","std::option::Option","std::string::String","std::num::NonZeroU32","std::net::Ipv6Addr","std::rc::Rc","std::cell::Cell","std::num::NonZeroI32","std::sync::Arc","std::net::IpAddr","std::time::SystemTime","std::path::PathBuf","std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroU64","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroU16","std::num::NonZeroI8","std::num::NonZeroU8","std::net::SocketAddrV6","std::cell::RefCell","std::num::NonZeroU128"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroUsize","std::rc::Rc","std::net::SocketAddrV6","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroU64","std::path::PathBuf","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroU128","std::net::IpAddr","std::option::Option","std::num::NonZeroI16","std::cell::RefCell","std::num::NonZeroI64"]},"std::collections::Bound":{"T":["std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::string::String","std::num::NonZeroU128","std::net::SocketAddrV4","std::cell::RefCell","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::sync::Arc","std::net::Ipv4Addr","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroI32","std::boxed::Box","std::option::Option","std::collections::HashSet","std::result::Result","std::sync::atomic::AtomicI64","std::ops::Range","std::num::NonZeroIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::path::PathBuf","std::cell::Cell","std::collections::BinaryHeap","std::ffi::CString","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::marker::PhantomData","std::num::NonZeroI64","std::collections::Bound","std::borrow::Cow","std::sync::Mutex","std::collections::BTreeSet","std::sync::atomic::AtomicI32","std::time::SystemTime","std::vec::Vec","std::net::IpAddr","std::time::Duration","std::collections::BTreeMap","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::rc::Rc","std::collections::HashMap","std::num::NonZeroI128"]},"std::collections::HashMap":{"K":["std::num::NonZeroI128","std::net::Ipv6Addr","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroU16","std::net::Ipv4Addr","std::string::String","std::num::NonZeroI8","std::option::Option","std::net::SocketAddrV6","std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroU8","std::collections::Bound","std::net::IpAddr","std::num::NonZeroI64"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::boxed::Box","std::collections::VecDeque","std::ops::RangeInclusive","std::collections::BinaryHeap","std::rc::Rc","std::ops::Range","std::time::SystemTime","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::vec::Vec","std::sync::Arc","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::collections::Bound","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::time::Duration","std::sync::RwLock","std::sync::atomic::AtomicBool","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::collections::HashMap","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::sync::Mutex","std::ffi::CString","std::cell::RefCell","std::collections::HashSet","std::option::Option","std::num::NonZeroIsize","std::num::NonZeroU8","std::num::NonZeroU128","std::string::String","std::collections::BTreeMap","std::num::NonZeroU16","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroU32","std::num::NonZeroI16","std::num::NonZeroI32","std::net::SocketAddrV4","std::result::Result","std::net::SocketAddr","std::num::NonZeroI128","std::num::NonZeroU64","std::cell::Cell","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::num::NonZeroUsize","std::net::Ipv4Addr","std::num::NonZeroI64"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI8","std::num::NonZeroUsize","std::string::String","std::collections::Bound","std::net::SocketAddr","std::num::NonZeroIsize","std::num::NonZeroI16","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroU128","std::ffi::CString","std::time::SystemTime","std::rc::Rc","std::num::NonZeroU16","std::net::Ipv4Addr","std::num::NonZeroU8","std::net::IpAddr","std::num::NonZeroI32"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::result::Result","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::sync::atomic::AtomicU64","std::time::Duration","std::sync::atomic::AtomicI8","std::ffi::CString","std::marker::PhantomData","std::cell::Cell","std::collections::VecDeque","std::net::SocketAddrV6","std::num::NonZeroU64","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroI32","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::net::SocketAddr","std::vec::Vec","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::num::NonZeroU8","std::collections::Bound","std::sync::atomic::AtomicU16","std::option::Option","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::num::NonZeroU16","std::num::NonZeroI128","std::boxed::Box","std::collections::HashMap","std::string::String","std::num::NonZeroIsize","std::rc::Rc","std::sync::Mutex","std::collections::BTreeMap","std::collections::BinaryHeap","std::ops::Range","std::cell::RefCell","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::sync::RwLock","std::num::NonZeroI64","std::num::NonZeroU32","std::borrow::Cow","std::path::PathBuf","std::collections::HashSet","std::net::IpAddr"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::cell::Cell","std::result::Result","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::net::IpAddr","std::num::NonZeroU32","std::num::NonZeroU64","std::sync::Mutex","std::collections::BTreeSet","std::marker::PhantomData","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::borrow::Cow","std::boxed::Box","std::collections::VecDeque","std::time::Duration","std::net::SocketAddrV6","std::rc::Rc","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::string::String","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::collections::HashMap","std::path::PathBuf","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::net::Ipv6Addr","std::vec::Vec","std::num::NonZeroI8","std::ffi::CString","std::cell::RefCell","std::net::Ipv4Addr","std::sync::RwLock","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroI32","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::sync::Arc","std::time::SystemTime","std::num::NonZeroI64","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::ops::Range","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::collections::Bound"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicU8","std::result::Result","std::num::NonZeroU64","std::boxed::Box","std::collections::BTreeMap","std::vec::Vec","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::rc::Rc","std::num::NonZeroI64","std::collections::HashMap","std::net::IpAddr","std::num::NonZeroU128","std::sync::Mutex","std::num::NonZeroI32","std::num::NonZeroUsize","std::cell::RefCell","std::cell::Cell","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::ops::Range","std::ffi::CString","std::num::NonZeroIsize","std::collections::Bound","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::num::NonZeroU16","std::string::String","std::sync::Arc","std::option::Option","std::num::NonZeroI128","std::collections::VecDeque","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::time::Duration","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::sync::RwLock","std::borrow::Cow","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::collections::HashSet","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::path::PathBuf","std::collections::BTreeSet"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::collections::BinaryHeap","std::collections::Bound","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::cell::RefCell","std::num::NonZeroU64","std::time::Duration","std::cell::Cell","std::net::SocketAddrV6","std::num::NonZeroU128","std::option::Option","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::collections::BTreeSet","std::num::NonZeroI8","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::result::Result","std::net::Ipv4Addr","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::net::IpAddr","std::net::SocketAddrV4","std::vec::Vec","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::net::SocketAddr","std::collections::HashMap","std::num::NonZeroI16","std::ops::Range","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroU32","std::net::Ipv6Addr","std::num::NonZeroIsize","std::sync::RwLock","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::rc::Rc","std::ops::RangeInclusive","std::sync::Mutex","std::path::PathBuf","std::ffi::CString","std::collections::VecDeque","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::string::String","std::time::SystemTime","std::boxed::Box","std::borrow::Cow"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::collections::VecDeque<T>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::collections::VecDeque<T>>::decode(p0);
+<std::collections::VecDeque<T>>::decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::VecDeque<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::VecDeque<T>>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["enc::Encode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode","de::Decode"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::cmp::Ord","std::marker::Sized","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::Bound":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::marker::Sized","enc::Encode","de::Decode","std::hash::Hash","std::cmp::Eq","de::BorrowDecode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["enc::Encode","std::cmp::Eq","std::marker::Sized","de::BorrowDecode","de::Decode","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Varint","std::clone::impls::<impl std::clone::Clone for *mut T>","config::BigEndian","config::NoLimit","config::Limit","config::Fixint","config::LittleEndian","config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::VecDeque<T>>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"T":["std::num::NonZeroU128","std::num::NonZeroU8","std::vec::Vec","std::sync::atomic::AtomicUsize","std::collections::Bound","std::collections::HashSet","std::sync::Arc","std::cell::Cell","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroU64","std::time::SystemTime","std::result::Result","std::path::PathBuf","std::sync::RwLock","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::num::NonZeroU32","std::borrow::Cow","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::num::NonZeroI8","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::string::String","std::boxed::Box","std::rc::Rc","std::option::Option","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::sync::Mutex","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::collections::HashMap","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::cell::RefCell","std::num::NonZeroI128","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroI32","std::ffi::CString","std::ops::Range"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI32","std::cell::Cell","std::time::Duration","std::time::SystemTime","std::net::Ipv4Addr","std::num::NonZeroI16","std::num::NonZeroU16","std::num::NonZeroI8","std::ffi::CString","std::num::NonZeroIsize","std::cell::RefCell","std::num::NonZeroI128","std::net::SocketAddr","std::net::IpAddr","std::net::SocketAddrV4","std::marker::PhantomData","std::net::Ipv6Addr","std::num::NonZeroUsize"],"V":["std::cell::RefCell","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::sync::Arc","std::option::Option","std::marker::PhantomData","std::collections::Bound","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::collections::BinaryHeap","std::time::Duration","std::collections::BTreeSet","std::time::SystemTime","std::borrow::Cow","std::net::SocketAddrV4","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroI32","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::net::IpAddr","std::num::NonZeroI16","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::vec::Vec","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::num::NonZeroU8","std::rc::Rc","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::collections::BTreeMap","std::sync::Mutex","std::string::String","std::net::SocketAddrV6","std::net::Ipv4Addr","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::result::Result","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::sync::RwLock","std::collections::HashSet","std::collections::HashMap","std::num::NonZeroU16","std::ffi::CString","std::ops::Range","std::path::PathBuf","std::cell::Cell","std::boxed::Box"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::sync::Arc","std::cell::RefCell","std::time::Duration","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroU32","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroU16","std::ffi::CString","std::num::NonZeroU128","std::net::SocketAddr","std::string::String","std::marker::PhantomData"]},"std::collections::BinaryHeap":{"T":["std::time::SystemTime","std::time::Duration","std::sync::Arc","std::net::IpAddr","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroU32","std::marker::PhantomData","std::num::NonZeroU16","std::num::NonZeroU8","std::ffi::CString","std::net::Ipv6Addr","std::path::PathBuf","std::net::SocketAddrV6","std::num::NonZeroIsize","std::num::NonZeroU64","std::net::SocketAddrV4","std::net::SocketAddr","std::num::NonZeroI8","std::string::String","std::rc::Rc"]},"std::collections::Bound":{"T":["std::result::Result","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::collections::Bound","std::net::Ipv4Addr","std::num::NonZeroI32","std::vec::Vec","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::ffi::CString","std::net::IpAddr","std::num::NonZeroI64","std::num::NonZeroI128","std::num::NonZeroU32","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::sync::RwLock","std::num::NonZeroIsize","std::num::NonZeroU8","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::cell::Cell","std::option::Option","std::cell::RefCell","std::sync::Arc","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::sync::Mutex","std::net::Ipv6Addr","std::ops::Range","std::time::SystemTime","std::collections::HashMap","std::boxed::Box","std::collections::HashSet","std::num::NonZeroI16","std::borrow::Cow","std::collections::VecDeque","std::net::SocketAddr","std::rc::Rc","std::ops::RangeInclusive","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::time::Duration","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroUsize","std::string::String"]},"std::collections::HashMap":{"K":["std::num::NonZeroI64","std::net::SocketAddr","std::option::Option","std::path::PathBuf","std::time::SystemTime","std::num::NonZeroI32","std::num::NonZeroI128","std::net::Ipv4Addr","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroUsize","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroI8","std::string::String","std::collections::Bound","std::num::NonZeroU16"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::collections::BTreeMap","std::time::SystemTime","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::vec::Vec","std::cell::Cell","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::collections::HashMap","std::time::Duration","std::boxed::Box","std::sync::atomic::AtomicU16","std::sync::RwLock","std::num::NonZeroU128","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::string::String","std::collections::BinaryHeap","std::ffi::CString","std::option::Option","std::collections::Bound","std::net::IpAddr","std::net::Ipv6Addr","std::cell::RefCell","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::result::Result","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroI8","std::ops::Range","std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::collections::VecDeque","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::marker::PhantomData","std::net::Ipv4Addr","std::borrow::Cow","std::sync::Arc","std::rc::Rc","std::net::SocketAddr","std::collections::HashSet"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::time::Duration","std::net::Ipv4Addr","std::num::NonZeroU16","std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroI64","std::num::NonZeroU8","std::num::NonZeroU32","std::net::SocketAddrV6","std::collections::Bound","std::option::Option","std::num::NonZeroI16","std::time::SystemTime","std::num::NonZeroU64","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroIsize","std::net::SocketAddrV4"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::path::PathBuf","std::cell::RefCell","std::collections::BTreeMap","std::rc::Rc","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroU128","std::sync::Arc","std::borrow::Cow","std::collections::HashMap","std::string::String","std::sync::Mutex","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroI32","std::sync::RwLock","std::num::NonZeroI8","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::boxed::Box","std::sync::atomic::AtomicI16","std::time::SystemTime","std::collections::BTreeSet","std::vec::Vec","std::result::Result","std::ops::Range","std::collections::VecDeque","std::time::Duration","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::num::NonZeroU32","std::option::Option","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroU64","std::collections::BinaryHeap","std::num::NonZeroU16","std::num::NonZeroUsize","std::collections::HashSet","std::sync::atomic::AtomicI32","std::net::IpAddr","std::num::NonZeroI16","std::net::SocketAddrV4","std::cell::Cell","std::net::SocketAddrV6","std::collections::Bound"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::path::PathBuf","std::rc::Rc","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::sync::Arc","std::num::NonZeroU16","std::sync::Mutex","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::net::IpAddr","std::option::Option","std::net::SocketAddrV6","std::net::Ipv4Addr","std::marker::PhantomData","std::result::Result","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::vec::Vec","std::sync::atomic::AtomicU32","std::sync::RwLock","std::collections::BinaryHeap","std::ops::RangeInclusive","std::num::NonZeroU64","std::borrow::Cow","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::collections::HashSet","std::num::NonZeroU8","std::cell::RefCell","std::time::SystemTime","std::net::SocketAddr","std::time::Duration","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::string::String","std::boxed::Box","std::collections::BTreeSet","std::num::NonZeroIsize","std::num::NonZeroU32","std::collections::Bound","std::cell::Cell","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::ffi::CString","std::ops::Range"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::Mutex","std::sync::Arc","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::num::NonZeroI16","std::cell::Cell","std::sync::atomic::AtomicI32","std::cell::RefCell","std::boxed::Box","std::collections::BinaryHeap","std::num::NonZeroI32","std::result::Result","std::num::NonZeroI8","std::time::SystemTime","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::rc::Rc","std::net::Ipv4Addr","std::collections::BTreeMap","std::collections::BTreeSet","std::num::NonZeroU128","std::option::Option","std::vec::Vec","std::num::NonZeroU64","std::net::Ipv6Addr","std::ffi::CString","std::collections::HashSet","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::string::String","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::ops::Range","std::collections::Bound","std::net::IpAddr","std::num::NonZeroU8","std::time::Duration","std::sync::atomic::AtomicU8","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::num::NonZeroU32","std::marker::PhantomData","std::sync::RwLock","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::num::NonZeroU16","std::net::SocketAddr","std::collections::HashMap","std::path::PathBuf","std::sync::atomic::AtomicI8","std::collections::VecDeque"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicI16","std::marker::PhantomData","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::collections::BTreeMap","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::collections::BinaryHeap","std::num::NonZeroU8","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroU64","std::collections::BTreeSet","std::num::NonZeroI64","std::cell::Cell","std::num::NonZeroI128","std::collections::VecDeque","std::rc::Rc","std::sync::atomic::AtomicI64","std::time::SystemTime","std::string::String","std::net::IpAddr","std::sync::RwLock","std::ops::RangeInclusive","std::result::Result","std::ops::Range","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::boxed::Box","std::num::NonZeroIsize","std::borrow::Cow","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::sync::Arc","std::num::NonZeroI8","std::collections::HashMap","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::cell::RefCell","std::num::NonZeroI32","std::ffi::CString","std::option::Option","std::time::Duration","std::collections::HashSet","std::sync::Mutex","std::num::NonZeroU16","std::num::NonZeroU128","std::vec::Vec","std::sync::atomic::AtomicI32","std::path::PathBuf","std::sync::atomic::AtomicU8"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::VecDeque<T>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::VecDeque<T>>::borrow_decode(p0);
+<std::collections::VecDeque<T>>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl enc::Encode for std::collections::VecDeque<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::collections::VecDeque<T>>::encode":{"E":["enc::Encoder","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::marker::Sized","std::cmp::Ord","de::Decode","de::BorrowDecode","enc::Encode"],"V":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["std::cmp::Ord","de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::Bound":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashMap":{"K":["de::Decode","std::marker::Sized","std::hash::Hash","enc::Encode","std::cmp::Eq","de::BorrowDecode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized","std::cmp::Eq","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Fixint","config::Configuration","std::clone::impls::<impl std::clone::Clone for &mut T>","config::LittleEndian","config::BigEndian","config::Varint","config::Limit"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SliceWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::collections::VecDeque<T>>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"],"T":["std::collections::HashMap","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::borrow::Cow","std::collections::Bound","std::num::NonZeroI8","std::ops::Range","std::net::SocketAddr","std::result::Result","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::collections::VecDeque","std::collections::BinaryHeap","std::cell::RefCell","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::option::Option","std::sync::atomic::AtomicIsize","std::boxed::Box","std::rc::Rc","std::vec::Vec","std::sync::atomic::AtomicI32","std::time::SystemTime","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::sync::Mutex","std::time::Duration","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::net::IpAddr","std::num::NonZeroU16","std::sync::RwLock","std::net::Ipv6Addr","std::sync::Arc","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::collections::HashSet","std::cell::Cell","std::string::String","std::collections::BTreeMap","std::num::NonZeroI64","std::num::NonZeroI128","std::net::SocketAddrV4","std::path::PathBuf","std::net::Ipv4Addr","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU32"]},"features::impl_std::IoWriter":{"W":["&std::net::TcpStream","std::io::Cursor<[u8; N]>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::sys::unix::stdio::Stdout","std::vec::Vec<u8, A>","std::net::TcpStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Stderr","std::process::ChildStdin","std::io::Stdout","std::io::impls::<impl std::io::Write for &mut W>","std::collections::VecDeque<u8, A>","&'a std::os::unix::net::UnixStream","std::boxed::Box<W>","std::io::LineWriter<W>","std::io::Sink","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<&mut [u8]>","&std::io::Sink","std::sys::unix::stdio::Stderr","&std::process::ChildStdin","std::io::stdio::StdoutRaw","&std::io::Stdout","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::BufWriter<W>","&std::io::Stderr","std::fs::File","std::io::BorrowedCursor<'a>","std::os::unix::net::UnixStream","std::io::StderrLock<'_>","std::io::stdio::StderrRaw","&std::fs::File","std::io::StdoutLock<'_>"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroI128","std::num::NonZeroU128","std::marker::PhantomData","std::time::SystemTime","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroU8","std::path::PathBuf","std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroI8","std::net::Ipv6Addr","std::cell::Cell","std::ffi::CString","std::net::SocketAddrV6","std::net::Ipv4Addr","std::net::SocketAddr","std::rc::Rc","std::num::NonZeroI64","std::net::SocketAddrV4","std::time::Duration"],"V":["std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::option::Option","std::num::NonZeroUsize","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::cell::RefCell","std::cell::Cell","std::time::Duration","std::collections::HashMap","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::collections::Bound","std::path::PathBuf","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::Arc","std::net::SocketAddrV4","std::num::NonZeroU128","std::string::String","std::ops::RangeInclusive","std::num::NonZeroU32","std::collections::VecDeque","std::num::NonZeroI128","std::collections::HashSet","std::boxed::Box","std::num::NonZeroU64","std::ops::Range","std::result::Result","std::num::NonZeroI16","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::sync::Mutex","std::rc::Rc","std::collections::BinaryHeap","std::sync::RwLock","std::collections::BTreeMap","std::ffi::CString","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::vec::Vec","std::borrow::Cow"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI32","std::num::NonZeroUsize","std::time::SystemTime","std::net::Ipv4Addr","std::time::Duration","std::path::PathBuf","std::ffi::CString","std::num::NonZeroI8","std::option::Option","std::rc::Rc","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroI64","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroU128","std::cell::RefCell","std::marker::PhantomData","std::num::NonZeroU32","std::num::NonZeroU8","std::string::String"]},"std::collections::BinaryHeap":{"T":["std::option::Option","std::path::PathBuf","std::cell::RefCell","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroI128","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroI32","std::net::SocketAddr","std::string::String","std::sync::Arc","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroU64","std::num::NonZeroIsize","std::num::NonZeroU8","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroI8","std::net::IpAddr"]},"std::collections::Bound":{"T":["std::num::NonZeroUsize","std::ffi::CString","std::sync::RwLock","std::vec::Vec","std::net::SocketAddrV6","std::num::NonZeroU64","std::num::NonZeroU32","std::result::Result","std::num::NonZeroI16","std::ops::RangeInclusive","std::net::Ipv6Addr","std::net::IpAddr","std::time::SystemTime","std::cell::RefCell","std::collections::VecDeque","std::sync::Mutex","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::collections::HashSet","std::ops::Range","std::sync::atomic::AtomicU16","std::string::String","std::cell::Cell","std::num::NonZeroU8","std::num::NonZeroI32","std::time::Duration","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::borrow::Cow","std::num::NonZeroI64","std::collections::BinaryHeap","std::num::NonZeroIsize","std::collections::HashMap","std::net::Ipv4Addr","std::num::NonZeroU128","std::boxed::Box","std::sync::Arc","std::num::NonZeroI128","std::collections::BTreeSet","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::collections::Bound","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::path::PathBuf","std::rc::Rc","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::option::Option"]},"std::collections::HashMap":{"K":["std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroI128","std::rc::Rc","std::num::NonZeroU32","std::net::SocketAddr","std::num::NonZeroU16","std::num::NonZeroU8","std::num::NonZeroU128","std::string::String","std::option::Option","std::net::Ipv4Addr","std::num::NonZeroI32","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroIsize"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicU16","std::collections::Bound","std::sync::Arc","std::ops::Range","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::sync::RwLock","std::collections::BTreeSet","std::vec::Vec","std::ffi::CString","std::time::Duration","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::collections::HashSet","std::sync::atomic::AtomicU32","std::sync::Mutex","std::net::IpAddr","std::num::NonZeroI128","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroI16","std::num::NonZeroI64","std::cell::RefCell","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::rc::Rc","std::marker::PhantomData","std::num::NonZeroI32","std::num::NonZeroUsize","std::borrow::Cow","std::collections::BTreeMap","std::cell::Cell","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::boxed::Box","std::net::Ipv4Addr","std::path::PathBuf","std::sync::atomic::AtomicU8","std::collections::HashMap","std::string::String","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::time::SystemTime","std::option::Option","std::ops::RangeInclusive","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::result::Result"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::rc::Rc","std::time::SystemTime","std::net::Ipv4Addr","std::num::NonZeroU32","std::string::String","std::num::NonZeroU64","std::num::NonZeroU16","std::sync::Arc","std::time::Duration","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroI64","std::collections::Bound","std::net::SocketAddrV6","std::num::NonZeroI8","std::num::NonZeroI128","std::num::NonZeroU8","std::path::PathBuf","std::net::SocketAddr"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU64","std::cell::Cell","std::net::IpAddr","std::sync::atomic::AtomicI32","std::borrow::Cow","std::num::NonZeroU16","std::cell::RefCell","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::result::Result","std::collections::Bound","std::num::NonZeroI32","std::ffi::CString","std::vec::Vec","std::net::Ipv6Addr","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::sync::Mutex","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::path::PathBuf","std::ops::Range","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::num::NonZeroI16","std::num::NonZeroU32","std::ops::RangeInclusive","std::collections::BTreeMap","std::marker::PhantomData","std::boxed::Box","std::sync::atomic::AtomicI64","std::string::String","std::sync::RwLock","std::num::NonZeroUsize","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::option::Option","std::net::SocketAddrV6","std::num::NonZeroI128","std::time::Duration","std::num::NonZeroI64","std::rc::Rc","std::collections::BinaryHeap","std::num::NonZeroI8","std::sync::Arc","std::sync::atomic::AtomicU32","std::time::SystemTime","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::num::NonZeroU128","std::collections::HashMap"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicI8","std::time::Duration","std::collections::HashMap","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::cell::Cell","std::sync::Mutex","std::sync::atomic::AtomicI16","std::collections::HashSet","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::ops::RangeInclusive","std::num::NonZeroI8","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::num::NonZeroU8","std::result::Result","std::sync::RwLock","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::rc::Rc","std::cell::RefCell","std::path::PathBuf","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::net::SocketAddrV6","std::collections::BTreeMap","std::num::NonZeroI32","std::vec::Vec","std::num::NonZeroI128","std::option::Option","std::sync::Arc","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::boxed::Box","std::num::NonZeroI16","std::num::NonZeroI64","std::time::SystemTime","std::collections::Bound","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::ops::Range","std::borrow::Cow","std::net::IpAddr","std::collections::BinaryHeap","std::ffi::CString","std::string::String"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::collections::Bound","std::collections::VecDeque","std::sync::RwLock","std::num::NonZeroI8","std::ops::Range","std::vec::Vec","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroU128","std::cell::RefCell","std::time::Duration","std::path::PathBuf","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::boxed::Box","std::net::Ipv4Addr","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroU8","std::num::NonZeroI32","std::collections::HashSet","std::num::NonZeroIsize","std::collections::BTreeMap","std::marker::PhantomData","std::collections::HashMap","std::string::String","std::num::NonZeroI16","std::num::NonZeroU64","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::result::Result","std::num::NonZeroI128","std::time::SystemTime","std::rc::Rc","std::cell::Cell","std::sync::atomic::AtomicU8","std::borrow::Cow","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::sync::Mutex","std::ffi::CString","std::collections::BTreeSet"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::num::NonZeroI64","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::option::Option","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::sync::RwLock","std::ffi::CString","std::boxed::Box","std::collections::BTreeMap","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroU16","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::sync::Arc","std::path::PathBuf","std::cell::Cell","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::cell::RefCell","std::num::NonZeroIsize","std::borrow::Cow","std::num::NonZeroU32","std::string::String","std::num::NonZeroU8","std::num::NonZeroU128","std::num::NonZeroU64","std::collections::VecDeque","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::result::Result","std::net::IpAddr","std::ops::Range","std::vec::Vec","std::net::Ipv4Addr","std::ops::RangeInclusive","std::collections::Bound","std::rc::Rc","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::num::NonZeroUsize","std::marker::PhantomData","std::time::Duration","std::collections::HashSet","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::collections::HashMap","std::num::NonZeroI128","std::sync::atomic::AtomicI8"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::collections::VecDeque<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_alloc::<impl enc::Encode for std::collections::VecDeque<T>>::encode(p0, p1);
+crate::features::impl_alloc::<impl enc::Encode for std::collections::VecDeque<T>>::encode(p0, p1);
+<std::collections::VecDeque<T>>::encode(p0, p1);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::vec::Vec<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"features::impl_alloc::<impl de::Decode for std::vec::Vec<T>>::decode":{"D":["std::marker::Sized","de::Decoder"],"T":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["std::cmp::Ord","de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"],"V":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["enc::Encode","std::cmp::Ord","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::Bound":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized","std::hash::Hash","std::cmp::Eq"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["std::cmp::Eq","std::marker::Sized","de::BorrowDecode","enc::Encode","std::hash::Hash","de::Decode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Configuration","config::Fixint","config::LittleEndian","std::clone::impls::<impl std::clone::Clone for &mut T>","config::Limit","config::Varint","config::BigEndian"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::vec::Vec<T>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"T":["std::num::NonZeroI32","std::num::NonZeroUsize","std::ops::Range","std::sync::atomic::AtomicUsize","std::cell::Cell","std::sync::RwLock","std::cell::RefCell","std::vec::Vec","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::collections::BTreeMap","std::ffi::CString","std::sync::Arc","std::option::Option","std::net::SocketAddrV6","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::borrow::Cow","std::path::PathBuf","std::collections::BinaryHeap","std::num::NonZeroU16","std::result::Result","std::sync::Mutex","std::net::IpAddr","std::sync::atomic::AtomicI32","std::time::Duration","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::boxed::Box","std::num::NonZeroI8","std::time::SystemTime","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::collections::BTreeSet","std::collections::HashMap","std::net::Ipv6Addr","std::collections::HashSet","std::num::NonZeroIsize","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::collections::Bound","std::net::SocketAddr","std::rc::Rc","std::string::String","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::num::NonZeroI64"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::marker::PhantomData","std::num::NonZeroU8","std::time::SystemTime","std::num::NonZeroU16","std::num::NonZeroI16","std::cell::Cell","std::num::NonZeroI32","std::num::NonZeroIsize","std::path::PathBuf","std::string::String","std::net::SocketAddr","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroUsize","std::num::NonZeroU32","std::num::NonZeroU128","std::net::Ipv4Addr","std::cell::RefCell","std::net::Ipv6Addr","std::net::IpAddr","std::num::NonZeroI8","std::num::NonZeroU64","std::rc::Rc"],"V":["std::borrow::Cow","std::sync::atomic::AtomicU16","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroU8","std::rc::Rc","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::vec::Vec","std::ops::RangeInclusive","std::ops::Range","std::sync::RwLock","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::cell::Cell","std::result::Result","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::string::String","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::path::PathBuf","std::collections::HashMap","std::sync::Mutex","std::cell::RefCell","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::time::Duration","std::option::Option","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::num::NonZeroU16","std::num::NonZeroU32","std::collections::HashSet","std::num::NonZeroU128","std::sync::Arc","std::time::SystemTime","std::ffi::CString","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::collections::Bound","std::num::NonZeroIsize","std::boxed::Box","std::num::NonZeroUsize","std::num::NonZeroI8","std::marker::PhantomData","std::num::NonZeroI32","std::num::NonZeroI128"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU128","std::net::IpAddr","std::num::NonZeroU16","std::num::NonZeroI32","std::string::String","std::ffi::CString","std::num::NonZeroI8","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroIsize","std::num::NonZeroI128","std::net::SocketAddr","std::path::PathBuf","std::num::NonZeroU32","std::option::Option","std::cell::Cell","std::net::Ipv4Addr","std::num::NonZeroU64","std::num::NonZeroI16","std::sync::Arc","std::num::NonZeroU8","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroUsize"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroI8","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroU32","std::string::String","std::num::NonZeroI64","std::ffi::CString","std::time::SystemTime","std::option::Option","std::num::NonZeroU8","std::time::Duration","std::marker::PhantomData","std::rc::Rc","std::num::NonZeroI16","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroU128","std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroUsize","std::net::Ipv6Addr"]},"std::collections::Bound":{"T":["std::marker::PhantomData","std::ops::Range","std::sync::atomic::AtomicBool","std::collections::HashMap","std::num::NonZeroU128","std::sync::Mutex","std::collections::BTreeSet","std::num::NonZeroU32","std::collections::BinaryHeap","std::rc::Rc","std::collections::BTreeMap","std::num::NonZeroUsize","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::sync::atomic::AtomicU64","std::borrow::Cow","std::net::Ipv6Addr","std::ffi::CString","std::sync::Arc","std::num::NonZeroU64","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroI32","std::path::PathBuf","std::option::Option","std::collections::HashSet","std::num::NonZeroIsize","std::net::IpAddr","std::time::SystemTime","std::cell::Cell","std::vec::Vec","std::cell::RefCell","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::time::Duration","std::string::String","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::boxed::Box","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::collections::Bound","std::result::Result"]},"std::collections::HashMap":{"K":["std::path::PathBuf","std::net::SocketAddr","std::string::String","std::num::NonZeroI8","std::net::SocketAddrV4","std::net::IpAddr","std::net::Ipv4Addr","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroU16","std::num::NonZeroU32","std::collections::Bound","std::time::Duration","std::sync::Arc","std::num::NonZeroI64","std::num::NonZeroI16","std::rc::Rc"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::borrow::Cow","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::collections::Bound","std::ffi::CString","std::collections::HashMap","std::cell::RefCell","std::net::IpAddr","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::num::NonZeroU16","std::string::String","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::vec::Vec","std::result::Result","std::collections::BinaryHeap","std::time::SystemTime","std::time::Duration","std::collections::BTreeMap","std::num::NonZeroI32","std::sync::RwLock","std::num::NonZeroU64","std::path::PathBuf","std::num::NonZeroI128","std::net::Ipv6Addr","std::num::NonZeroI8","std::net::SocketAddr","std::cell::Cell","std::ops::Range","std::num::NonZeroU128","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::ops::RangeInclusive","std::net::Ipv4Addr","std::num::NonZeroUsize","std::net::SocketAddrV6","std::collections::HashSet","std::num::NonZeroIsize","std::option::Option","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::boxed::Box","std::rc::Rc","std::sync::Mutex","std::sync::Arc"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroU64","std::sync::Arc","std::marker::PhantomData","std::collections::Bound","std::net::Ipv4Addr","std::num::NonZeroI8","std::num::NonZeroI16","std::option::Option","std::path::PathBuf","std::num::NonZeroU32","std::num::NonZeroIsize","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroU8","std::net::IpAddr"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI32","std::net::Ipv6Addr","std::path::PathBuf","std::collections::BinaryHeap","std::num::NonZeroU128","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::collections::HashSet","std::time::SystemTime","std::sync::atomic::AtomicI8","std::vec::Vec","std::collections::HashMap","std::collections::BTreeMap","std::ops::Range","std::sync::atomic::AtomicU16","std::boxed::Box","std::num::NonZeroI8","std::num::NonZeroU64","std::option::Option","std::time::Duration","std::sync::atomic::AtomicI32","std::collections::Bound","std::cell::Cell","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroI16","std::ffi::CString","std::result::Result","std::cell::RefCell","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::sync::RwLock","std::sync::atomic::AtomicI16","std::sync::Arc","std::sync::atomic::AtomicIsize","std::string::String","std::sync::Mutex","std::rc::Rc","std::num::NonZeroUsize","std::net::Ipv4Addr","std::net::IpAddr","std::num::NonZeroU32","std::ops::RangeInclusive","std::collections::BTreeSet","std::net::SocketAddrV6","std::collections::VecDeque"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::Arc","std::collections::Bound","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::sync::atomic::AtomicU8","std::vec::Vec","std::sync::atomic::AtomicI16","std::ffi::CString","std::num::NonZeroUsize","std::sync::RwLock","std::net::Ipv4Addr","std::time::Duration","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::string::String","std::num::NonZeroI64","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::collections::HashSet","std::result::Result","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroIsize","std::time::SystemTime","std::path::PathBuf","std::net::SocketAddrV4","std::option::Option","std::collections::BTreeMap","std::ops::Range","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::net::SocketAddr","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::cell::Cell","std::sync::atomic::AtomicBool","std::net::IpAddr","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::rc::Rc","std::boxed::Box","std::collections::HashMap","std::collections::VecDeque","std::borrow::Cow","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::num::NonZeroI32","std::num::NonZeroU16","std::num::NonZeroI16","std::net::Ipv6Addr"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::num::NonZeroU32","std::rc::Rc","std::path::PathBuf","std::borrow::Cow","std::collections::HashMap","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::num::NonZeroI8","std::time::SystemTime","std::time::Duration","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::ffi::CString","std::net::SocketAddrV6","std::collections::Bound","std::sync::atomic::AtomicI64","std::cell::RefCell","std::collections::HashSet","std::net::IpAddr","std::num::NonZeroU16","std::num::NonZeroI32","std::boxed::Box","std::collections::BTreeSet","std::net::Ipv6Addr","std::num::NonZeroUsize","std::collections::BinaryHeap","std::result::Result","std::option::Option","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::vec::Vec","std::sync::RwLock","std::ops::RangeInclusive","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroU8","std::net::SocketAddrV4","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::ops::Range","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::sync::Mutex","std::sync::Arc","std::num::NonZeroIsize","std::string::String","std::collections::VecDeque"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::atomic::AtomicU16","std::collections::VecDeque","std::collections::BTreeMap","std::num::NonZeroI32","std::net::IpAddr","std::ops::Range","std::net::SocketAddrV6","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::path::PathBuf","std::sync::RwLock","std::num::NonZeroI64","std::ffi::CString","std::num::NonZeroU32","std::net::Ipv4Addr","std::marker::PhantomData","std::collections::Bound","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::num::NonZeroU16","std::net::SocketAddrV4","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::rc::Rc","std::num::NonZeroI8","std::option::Option","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::vec::Vec","std::time::Duration","std::collections::HashMap","std::net::SocketAddr","std::sync::Mutex","std::sync::atomic::AtomicBool","std::collections::HashSet","std::collections::BTreeSet","std::num::NonZeroU64","std::net::Ipv6Addr","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::borrow::Cow","std::cell::Cell","std::result::Result","std::string::String","std::time::SystemTime","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::sync::Arc","std::sync::atomic::AtomicU8","std::boxed::Box"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::vec::Vec<T>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::vec::Vec<T>>::decode(p0);
+<std::vec::Vec<T>>::decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::vec::Vec<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"L":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::vec::Vec<T>>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode"],"V":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","std::cmp::Ord","de::Decode"]},"std::collections::BinaryHeap":{"T":["de::Decode","enc::Encode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["std::hash::Hash","de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized","std::cmp::Eq"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::hash::Hash","enc::Encode","de::Decode","std::marker::Sized","std::cmp::Eq","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","config::Fixint","std::clone::impls::<impl std::clone::Clone for *const T>","config::Varint","config::NoLimit","config::Limit","config::BigEndian","config::LittleEndian"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::vec::Vec<T>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"T":["std::time::SystemTime","std::sync::atomic::AtomicIsize","std::cell::Cell","std::num::NonZeroU32","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::collections::BinaryHeap","std::collections::Bound","std::vec::Vec","std::sync::Arc","std::result::Result","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::marker::PhantomData","std::boxed::Box","std::ffi::CString","std::num::NonZeroI128","std::num::NonZeroU128","std::time::Duration","std::collections::VecDeque","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroU64","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::ops::Range","std::num::NonZeroI8","std::rc::Rc","std::net::IpAddr","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::num::NonZeroU8","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::sync::RwLock","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::num::NonZeroIsize","std::net::SocketAddrV4","std::path::PathBuf","std::cell::RefCell","std::ops::RangeInclusive","std::num::NonZeroI32","std::collections::HashMap","std::net::SocketAddr","std::collections::HashSet","std::sync::atomic::AtomicI16","std::string::String","std::borrow::Cow","std::collections::BTreeSet","std::sync::Mutex","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::sync::Arc","std::num::NonZeroU8","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroU128","std::cell::RefCell","std::net::SocketAddr","std::num::NonZeroI128","std::num::NonZeroU64","std::num::NonZeroUsize","std::num::NonZeroI32","std::time::Duration","std::net::Ipv4Addr","std::num::NonZeroI16","std::ffi::CString","std::net::SocketAddrV6","std::num::NonZeroIsize","std::rc::Rc","std::cell::Cell","std::path::PathBuf","std::num::NonZeroI8"],"V":["std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::collections::BTreeMap","std::collections::VecDeque","std::sync::Arc","std::ffi::CString","std::string::String","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::option::Option","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::ops::Range","std::num::NonZeroU16","std::rc::Rc","std::sync::atomic::AtomicBool","std::boxed::Box","std::collections::Bound","std::cell::RefCell","std::num::NonZeroI16","std::marker::PhantomData","std::net::SocketAddrV6","std::collections::BTreeSet","std::net::Ipv4Addr","std::vec::Vec","std::num::NonZeroIsize","std::net::SocketAddr","std::ops::RangeInclusive","std::num::NonZeroUsize","std::num::NonZeroU64","std::net::IpAddr","std::cell::Cell","std::path::PathBuf","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::num::NonZeroI8","std::borrow::Cow","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::time::Duration","std::num::NonZeroU128","std::sync::RwLock","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::collections::HashMap","std::result::Result","std::collections::BinaryHeap","std::num::NonZeroI32","std::collections::HashSet","std::sync::Mutex","std::time::SystemTime"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU16","std::num::NonZeroI8","std::num::NonZeroI64","std::num::NonZeroU64","std::net::SocketAddrV6","std::net::SocketAddr","std::time::Duration","std::rc::Rc","std::num::NonZeroUsize","std::time::SystemTime","std::num::NonZeroI32","std::option::Option","std::net::IpAddr","std::string::String","std::cell::RefCell","std::num::NonZeroU8","std::sync::Arc","std::net::SocketAddrV4","std::net::Ipv6Addr"]},"std::collections::BinaryHeap":{"T":["std::string::String","std::num::NonZeroI128","std::net::Ipv6Addr","std::num::NonZeroUsize","std::num::NonZeroU16","std::marker::PhantomData","std::time::SystemTime","std::path::PathBuf","std::num::NonZeroU8","std::cell::RefCell","std::net::Ipv4Addr","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroIsize","std::net::SocketAddr","std::num::NonZeroU64","std::sync::Arc","std::num::NonZeroU128"]},"std::collections::Bound":{"T":["std::boxed::Box","std::ops::RangeInclusive","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::ops::Range","std::sync::atomic::AtomicI32","std::option::Option","std::num::NonZeroUsize","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::collections::VecDeque","std::collections::Bound","std::num::NonZeroI16","std::cell::Cell","std::sync::RwLock","std::time::Duration","std::collections::BTreeSet","std::sync::Mutex","std::num::NonZeroI8","std::string::String","std::num::NonZeroU8","std::sync::Arc","std::rc::Rc","std::sync::atomic::AtomicI16","std::collections::HashMap","std::marker::PhantomData","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::result::Result","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::num::NonZeroI128","std::net::IpAddr","std::num::NonZeroI64","std::time::SystemTime","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::net::Ipv4Addr","std::vec::Vec","std::collections::BinaryHeap","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::ffi::CString","std::collections::HashSet","std::num::NonZeroU16","std::cell::RefCell"]},"std::collections::HashMap":{"K":["std::net::SocketAddrV6","std::num::NonZeroI8","std::num::NonZeroI16","std::sync::Arc","std::rc::Rc","std::option::Option","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroI128","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroU16","std::net::IpAddr","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroU32"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicIsize","std::sync::Mutex","std::collections::Bound","std::collections::HashMap","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::string::String","std::boxed::Box","std::sync::Arc","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::vec::Vec","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::ffi::CString","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::time::SystemTime","std::num::NonZeroU64","std::ops::RangeInclusive","std::time::Duration","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::path::PathBuf","std::num::NonZeroIsize","std::collections::HashSet","std::sync::atomic::AtomicI64","std::result::Result","std::collections::BTreeMap","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroI64","std::ops::Range","std::num::NonZeroU32","std::borrow::Cow","std::collections::BTreeSet","std::sync::RwLock","std::collections::BinaryHeap","std::cell::Cell","std::sync::atomic::AtomicU32","std::option::Option","std::marker::PhantomData","std::net::IpAddr","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::cell::RefCell"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::net::Ipv4Addr","std::collections::Bound","std::net::SocketAddrV4","std::num::NonZeroUsize","std::path::PathBuf","std::net::SocketAddr","std::ffi::CString","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroU32","std::num::NonZeroU128","std::num::NonZeroI128","std::time::SystemTime","std::sync::Arc","std::num::NonZeroI8","std::string::String","std::marker::PhantomData"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::rc::Rc","std::collections::BTreeSet","std::cell::Cell","std::collections::BTreeMap","std::time::Duration","std::marker::PhantomData","std::net::IpAddr","std::num::NonZeroU32","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::ops::Range","std::num::NonZeroI128","std::borrow::Cow","std::time::SystemTime","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::net::Ipv4Addr","std::ops::RangeInclusive","std::sync::Mutex","std::result::Result","std::num::NonZeroI64","std::option::Option","std::sync::atomic::AtomicI8","std::vec::Vec","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::collections::VecDeque","std::num::NonZeroU128","std::num::NonZeroU64","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::cell::RefCell","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::sync::RwLock","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::sync::Arc","std::collections::HashSet","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::path::PathBuf","std::string::String","std::collections::Bound","std::boxed::Box","std::num::NonZeroU8","std::collections::HashMap","std::net::Ipv6Addr","std::ffi::CString","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::num::NonZeroIsize"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::BTreeMap","std::borrow::Cow","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::sync::Mutex","std::collections::Bound","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::path::PathBuf","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::time::Duration","std::ffi::CString","std::ops::RangeInclusive","std::num::NonZeroU32","std::num::NonZeroI64","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::sync::Arc","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::num::NonZeroI128","std::option::Option","std::boxed::Box","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::net::SocketAddr","std::string::String","std::sync::atomic::AtomicU16","std::rc::Rc","std::num::NonZeroI8","std::ops::Range","std::sync::atomic::AtomicI16","std::sync::RwLock","std::num::NonZeroI16","std::result::Result","std::marker::PhantomData","std::num::NonZeroU64","std::collections::BinaryHeap","std::net::SocketAddrV6","std::net::IpAddr","std::cell::Cell","std::num::NonZeroI32","std::time::SystemTime","std::cell::RefCell","std::vec::Vec","std::collections::HashMap"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroU32","std::time::SystemTime","std::vec::Vec","std::collections::Bound","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::option::Option","std::net::SocketAddr","std::ffi::CString","std::path::PathBuf","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::time::Duration","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::collections::BTreeMap","std::sync::Arc","std::sync::RwLock","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::num::NonZeroI64","std::num::NonZeroU64","std::net::SocketAddrV6","std::num::NonZeroUsize","std::sync::Mutex","std::boxed::Box","std::num::NonZeroI128","std::rc::Rc","std::net::IpAddr","std::cell::RefCell","std::sync::atomic::AtomicI64","std::result::Result","std::num::NonZeroI8","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::ops::Range","std::num::NonZeroU16","std::net::Ipv4Addr","std::collections::BTreeSet","std::collections::HashMap","std::collections::VecDeque","std::num::NonZeroI16","std::cell::Cell","std::string::String","std::num::NonZeroIsize","std::marker::PhantomData","std::net::SocketAddrV4","std::ops::RangeInclusive"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::collections::VecDeque","std::option::Option","std::boxed::Box","std::sync::Mutex","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::string::String","std::rc::Rc","std::num::NonZeroIsize","std::ops::Range","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::borrow::Cow","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::time::SystemTime","std::num::NonZeroI8","std::num::NonZeroI128","std::collections::BinaryHeap","std::time::Duration","std::collections::HashMap","std::vec::Vec","std::sync::RwLock","std::sync::Arc","std::marker::PhantomData","std::num::NonZeroI32","std::path::PathBuf","std::collections::BTreeSet","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::net::SocketAddr","std::collections::BTreeMap","std::num::NonZeroU32","std::num::NonZeroUsize","std::net::IpAddr","std::collections::HashSet","std::net::SocketAddrV4","std::num::NonZeroI16","std::ffi::CString","std::sync::atomic::AtomicU16","std::cell::RefCell","std::result::Result","std::num::NonZeroU16","std::collections::Bound","std::net::Ipv6Addr","std::cell::Cell","std::net::SocketAddrV6","std::num::NonZeroU128","std::ops::RangeInclusive"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::vec::Vec<T>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::vec::Vec<T>>::borrow_decode(p0);
+<std::vec::Vec<T>>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl enc::Encode for std::vec::Vec<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::vec::Vec<T>>::encode":{"E":["std::marker::Sized","enc::Encoder"],"T":["enc::Encode","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["std::marker::Sized","std::cmp::Ord","de::BorrowDecode","enc::Encode","de::Decode"],"V":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::Decode","enc::Encode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","std::cmp::Ord","enc::Encode"]},"std::collections::Bound":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::HashMap":{"K":["std::marker::Sized","de::BorrowDecode","std::hash::Hash","de::Decode","std::cmp::Eq","enc::Encode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","std::cmp::Eq","std::hash::Hash","de::BorrowDecode","enc::Encode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::Varint","std::clone::impls::<impl std::clone::Clone for &mut T>","config::BigEndian","config::Configuration","config::Fixint","config::Limit","config::NoLimit"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter","features::impl_std::IoWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::vec::Vec<T>>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"T":["std::rc::Rc","std::ops::RangeInclusive","std::num::NonZeroI16","std::path::PathBuf","std::net::Ipv6Addr","std::boxed::Box","std::net::SocketAddrV6","std::collections::BinaryHeap","std::collections::Bound","std::net::IpAddr","std::num::NonZeroU64","std::vec::Vec","std::time::SystemTime","std::num::NonZeroI8","std::num::NonZeroI32","std::borrow::Cow","std::cell::RefCell","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::option::Option","std::num::NonZeroU16","std::collections::HashMap","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::ops::Range","std::num::NonZeroIsize","std::num::NonZeroU128","std::time::Duration","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::sync::atomic::AtomicI16","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::result::Result","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::string::String","std::sync::RwLock","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::ffi::CString","std::collections::BTreeMap","std::collections::HashSet","std::marker::PhantomData","std::cell::Cell","std::collections::BTreeSet","std::sync::atomic::AtomicBool"]},"features::impl_std::IoWriter":{"W":["&std::io::Sink","std::sys::unix::stdio::Stderr","&std::io::Stdout","std::net::TcpStream","std::fs::File","std::sys::unix::stdio::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::process::ChildStdin","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::stdio::StdoutRaw","&std::io::Stderr","std::io::LineWriter<W>","std::boxed::Box<W>","&std::net::TcpStream","std::collections::VecDeque<u8, A>","std::io::stdio::StderrRaw","std::vec::Vec<u8, A>","std::os::unix::net::UnixStream","std::io::impls::<impl std::io::Write for &mut W>","std::io::Stderr","std::io::Stdout","std::io::Cursor<[u8; N]>","std::process::ChildStdin","std::io::Cursor<&mut [u8]>","&std::fs::File","std::io::BufWriter<W>","std::io::StdoutLock<'_>","std::io::BorrowedCursor<'a>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::StderrLock<'_>","&'a std::os::unix::net::UnixStream","std::io::Sink"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::path::Path","std::ffi::OsStr","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::cell::Cell","std::num::NonZeroI128","std::num::NonZeroU64","std::num::NonZeroI16","std::net::Ipv6Addr","std::ffi::CString","std::path::PathBuf","std::num::NonZeroIsize","std::net::SocketAddr","std::net::SocketAddrV4","std::string::String","std::num::NonZeroI32","std::net::SocketAddrV6","std::num::NonZeroI8","std::net::Ipv4Addr","std::time::Duration","std::time::SystemTime","std::sync::Arc","std::num::NonZeroU8","std::option::Option","std::rc::Rc","std::marker::PhantomData","std::net::IpAddr","std::num::NonZeroU128","std::num::NonZeroUsize"],"V":["std::net::SocketAddrV6","std::sync::RwLock","std::collections::VecDeque","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::vec::Vec","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::path::PathBuf","std::collections::Bound","std::num::NonZeroU32","std::sync::Mutex","std::rc::Rc","std::num::NonZeroI32","std::string::String","std::num::NonZeroI16","std::num::NonZeroU128","std::collections::BinaryHeap","std::ffi::CString","std::sync::atomic::AtomicU16","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::net::Ipv6Addr","std::net::Ipv4Addr","std::boxed::Box","std::option::Option","std::net::SocketAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::num::NonZeroU8","std::marker::PhantomData","std::result::Result","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::sync::Arc","std::num::NonZeroI64","std::collections::BTreeSet","std::collections::HashMap","std::time::Duration","std::cell::Cell","std::ops::RangeInclusive","std::borrow::Cow","std::ops::Range"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::path::PathBuf","std::num::NonZeroU16","std::sync::Arc","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroI128","std::net::SocketAddrV6","std::num::NonZeroIsize","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroU64","std::num::NonZeroU128","std::num::NonZeroU32","std::ffi::CString","std::net::Ipv6Addr","std::net::Ipv4Addr","std::num::NonZeroI16","std::string::String","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroUsize"]},"std::collections::BinaryHeap":{"T":["std::net::Ipv6Addr","std::cell::Cell","std::net::SocketAddrV6","std::num::NonZeroI16","std::num::NonZeroI8","std::net::Ipv4Addr","std::num::NonZeroU16","std::num::NonZeroU128","std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroIsize","std::ffi::CString","std::path::PathBuf","std::string::String","std::num::NonZeroU64","std::time::Duration","std::num::NonZeroI64","std::cell::RefCell","std::net::IpAddr","std::num::NonZeroI32","std::rc::Rc","std::marker::PhantomData"]},"std::collections::Bound":{"T":["std::num::NonZeroIsize","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::cell::Cell","std::path::PathBuf","std::borrow::Cow","std::net::SocketAddrV4","std::ffi::CString","std::cell::RefCell","std::time::Duration","std::num::NonZeroUsize","std::ops::RangeInclusive","std::boxed::Box","std::result::Result","std::num::NonZeroI8","std::sync::Arc","std::num::NonZeroI16","std::rc::Rc","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::string::String","std::net::SocketAddrV6","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::collections::HashMap","std::net::Ipv6Addr","std::vec::Vec","std::num::NonZeroI128","std::option::Option","std::marker::PhantomData","std::time::SystemTime","std::num::NonZeroU64","std::sync::Mutex","std::num::NonZeroU16","std::collections::BinaryHeap","std::ops::Range","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::net::SocketAddr","std::collections::HashSet","std::collections::BTreeSet","std::collections::Bound"]},"std::collections::HashMap":{"K":["std::num::NonZeroU16","std::net::SocketAddr","std::num::NonZeroU64","std::num::NonZeroU32","std::option::Option","std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroU128","std::collections::Bound","std::num::NonZeroU8","std::path::PathBuf","std::rc::Rc","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroI8","std::sync::Arc"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::result::Result","std::num::NonZeroU16","std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroU32","std::boxed::Box","std::num::NonZeroI128","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroUsize","std::num::NonZeroI32","std::vec::Vec","std::sync::Mutex","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::ops::Range","std::num::NonZeroU8","std::net::IpAddr","std::collections::Bound","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::cell::Cell","std::sync::RwLock","std::time::SystemTime","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::collections::BinaryHeap","std::borrow::Cow","std::sync::atomic::AtomicI64","std::collections::HashMap","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::num::NonZeroU128","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::time::Duration","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::cell::RefCell","std::string::String","std::sync::Arc","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::ffi::CString","std::num::NonZeroI16","std::collections::HashSet","std::rc::Rc","std::collections::VecDeque","std::num::NonZeroI8","std::num::NonZeroIsize"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::path::PathBuf","std::sync::Arc","std::rc::Rc","std::time::SystemTime","std::num::NonZeroU16","std::num::NonZeroI128","std::time::Duration","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroI32","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroUsize","std::num::NonZeroI8","std::num::NonZeroI64","std::num::NonZeroIsize","std::net::SocketAddr","std::collections::Bound","std::string::String","std::num::NonZeroI16"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::string::String","std::net::IpAddr","std::num::NonZeroI32","std::net::Ipv4Addr","std::ops::Range","std::boxed::Box","std::sync::Mutex","std::num::NonZeroUsize","std::collections::VecDeque","std::sync::Arc","std::num::NonZeroIsize","std::collections::BTreeMap","std::ops::RangeInclusive","std::num::NonZeroI128","std::collections::HashSet","std::sync::atomic::AtomicI32","std::cell::Cell","std::rc::Rc","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::marker::PhantomData","std::option::Option","std::num::NonZeroU32","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::sync::RwLock","std::vec::Vec","std::time::SystemTime","std::collections::HashMap","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::result::Result","std::ffi::CString","std::net::SocketAddrV4","std::time::Duration","std::cell::RefCell","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::borrow::Cow","std::collections::Bound","std::path::PathBuf","std::sync::atomic::AtomicI16"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::path::PathBuf","std::collections::BTreeSet","std::cell::RefCell","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::sync::Arc","std::collections::Bound","std::string::String","std::net::Ipv6Addr","std::num::NonZeroU16","std::num::NonZeroUsize","std::collections::HashMap","std::ffi::CString","std::collections::HashSet","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::num::NonZeroIsize","std::sync::RwLock","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::net::IpAddr","std::rc::Rc","std::num::NonZeroU32","std::num::NonZeroI8","std::time::Duration","std::cell::Cell","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::collections::VecDeque","std::num::NonZeroI32","std::sync::Mutex","std::vec::Vec","std::time::SystemTime","std::collections::BinaryHeap","std::net::SocketAddrV6","std::net::Ipv4Addr","std::collections::BTreeMap","std::ops::Range","std::borrow::Cow","std::net::SocketAddrV4","std::result::Result","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::num::NonZeroI64"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::rc::Rc","std::sync::atomic::AtomicUsize","std::time::Duration","std::ops::RangeInclusive","std::time::SystemTime","std::sync::Arc","std::num::NonZeroIsize","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::result::Result","std::num::NonZeroI32","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::sync::Mutex","std::num::NonZeroU8","std::borrow::Cow","std::cell::RefCell","std::collections::BinaryHeap","std::cell::Cell","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::path::PathBuf","std::sync::atomic::AtomicI16","std::ops::Range","std::num::NonZeroI64","std::collections::Bound","std::boxed::Box","std::net::Ipv6Addr","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::option::Option","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::collections::HashSet","std::num::NonZeroU16","std::num::NonZeroI8","std::string::String","std::net::IpAddr","std::collections::HashMap","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::sync::RwLock","std::num::NonZeroU32","std::net::SocketAddrV6","std::collections::BTreeMap","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::vec::Vec","std::ffi::CString"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::string::String","std::cell::Cell","std::collections::BTreeMap","std::num::NonZeroUsize","std::num::NonZeroU128","std::collections::BTreeSet","std::num::NonZeroU8","std::net::IpAddr","std::num::NonZeroU32","std::boxed::Box","std::sync::Arc","std::time::Duration","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::ops::Range","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::time::SystemTime","std::collections::HashSet","std::result::Result","std::rc::Rc","std::num::NonZeroI16","std::num::NonZeroI128","std::net::SocketAddrV6","std::num::NonZeroI64","std::marker::PhantomData","std::net::SocketAddrV4","std::vec::Vec","std::option::Option","std::ops::RangeInclusive","std::collections::HashMap","std::borrow::Cow","std::sync::atomic::AtomicU64","std::path::PathBuf","std::collections::Bound","std::sync::atomic::AtomicI32","std::cell::RefCell","std::sync::atomic::AtomicBool","std::sync::RwLock","std::collections::BinaryHeap","std::ffi::CString","std::collections::VecDeque","std::num::NonZeroI32","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::sync::atomic::AtomicU8"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::vec::Vec<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_alloc::<impl enc::Encode for std::vec::Vec<T>>::encode(p0, p1);
+crate::features::impl_alloc::<impl enc::Encode for std::vec::Vec<T>>::encode(p0, p1);
+<std::vec::Vec<T>>::encode(p0, p1);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::string::String>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"features::impl_alloc::<impl de::Decode for std::string::String>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::string::String>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::string::String>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::string::String>::decode(p0);
+<std::string::String>::decode(p0);
-----------------
src/de/mod.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::string::String>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::string::String>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::string::String>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::string::String>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::string::String>::borrow_decode(p0);
+<std::string::String>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::boxed::Box<str>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"features::impl_alloc::<impl de::Decode for std::boxed::Box<str>>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::boxed::Box<str>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::boxed::Box<str>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::boxed::Box<str>>::decode(p0);
+<std::boxed::Box<str>>::decode(p0);
-----------------
src/de/mod.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<str>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized"],"L":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<str>>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<str>>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<str>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<str>>::borrow_decode(p0);
+<std::boxed::Box<str>>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl enc::Encode for std::string::String>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_alloc::<impl enc::Encode for std::string::String>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","features::impl_alloc::VecWriter"]},"features::impl_alloc::<impl enc::Encode for std::string::String>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::io::stdio::StdoutRaw","std::vec::Vec<u8, A>","std::io::impls::<impl std::io::Write for &mut W>","std::io::Stdout","&std::net::TcpStream","std::io::Sink","std::process::ChildStdin","std::io::StderrLock<'_>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::LineWriter<W>","std::io::BufWriter<W>","std::fs::File","std::boxed::Box<W>","std::io::BorrowedCursor<'a>","&std::fs::File","std::io::Stderr","std::sys::unix::stdio::Stdout","std::net::TcpStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::stdio::StderrRaw","std::sys::unix::stdio::Stderr","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::StdoutLock<'_>","&std::process::ChildStdin","&std::io::Stderr","&std::io::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&'a std::os::unix::net::UnixStream","std::collections::VecDeque<u8, A>","std::io::Cursor<&mut [u8]>","std::io::Cursor<[u8; N]>","&std::io::Sink","std::os::unix::net::UnixStream"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & std::string::String::new(); // None+std::string::String
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_alloc::<impl enc::Encode for std::string::String>::encode(p0, p1);
+crate::features::impl_alloc::<impl enc::Encode for std::string::String>::encode(p0, p1);
+<std::string::String>::encode(p0, p1);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::boxed::Box<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"features::impl_alloc::<impl de::Decode for std::boxed::Box<T>>::decode":{"D":["std::marker::Sized","de::Decoder"],"T":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["de::BorrowDecode","de::Decode","std::cmp::Ord","enc::Encode","std::marker::Sized"],"V":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","std::cmp::Ord","de::Decode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::cmp::Ord","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::Bound":{"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashMap":{"K":["std::hash::Hash","std::marker::Sized","enc::Encode","de::Decode","std::cmp::Eq","de::BorrowDecode"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::cmp::Eq","de::Decode","std::hash::Hash","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::BigEndian","config::NoLimit","config::Varint","config::LittleEndian","config::Configuration","config::Fixint","std::clone::impls::<impl std::clone::Clone for *mut T>"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::boxed::Box<T>>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"T":["std::num::NonZeroU32","std::result::Result","std::num::NonZeroI32","std::net::Ipv4Addr","std::sync::Arc","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::borrow::Cow","std::net::SocketAddr","std::vec::Vec","std::sync::Mutex","std::marker::PhantomData","std::ffi::CString","std::collections::BinaryHeap","std::ops::Range","std::time::Duration","std::boxed::Box","std::num::NonZeroI64","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::rc::Rc","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::time::SystemTime","std::collections::Bound","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::sync::RwLock","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::net::IpAddr","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroI8","std::num::NonZeroI16","std::num::NonZeroI128","std::net::Ipv6Addr","std::collections::HashMap","std::collections::BTreeMap","std::cell::RefCell","std::string::String","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::option::Option","std::ops::RangeInclusive","std::num::NonZeroU64","std::cell::Cell","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::net::SocketAddrV6","std::path::PathBuf"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::CStr","<T as std::borrow::ToOwned>","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU8","std::path::PathBuf","std::cell::Cell","std::rc::Rc","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroI64","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroI128","std::net::SocketAddrV4","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroUsize","std::string::String","std::num::NonZeroU128","std::option::Option"],"V":["std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroI16","std::collections::Bound","std::net::SocketAddrV4","std::time::Duration","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::sync::RwLock","std::result::Result","std::cell::Cell","std::collections::HashSet","std::net::IpAddr","std::num::NonZeroU128","std::path::PathBuf","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::ffi::CString","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::sync::Arc","std::borrow::Cow","std::net::SocketAddrV6","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::num::NonZeroI64","std::net::Ipv6Addr","std::vec::Vec","std::cell::RefCell","std::num::NonZeroI128","std::collections::HashMap","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::net::Ipv4Addr","std::string::String","std::net::SocketAddr","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::ops::Range","std::num::NonZeroI8","std::collections::BTreeSet","std::num::NonZeroU8","std::rc::Rc","std::option::Option","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::num::NonZeroI32","std::boxed::Box"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::IpAddr","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroU8","std::num::NonZeroI16","std::num::NonZeroIsize","std::net::Ipv4Addr","std::ffi::CString","std::sync::Arc","std::num::NonZeroU64","std::marker::PhantomData","std::net::SocketAddrV6","std::rc::Rc","std::path::PathBuf","std::string::String","std::time::Duration","std::option::Option","std::num::NonZeroU32","std::cell::Cell","std::net::SocketAddrV4"]},"std::collections::BinaryHeap":{"T":["std::marker::PhantomData","std::num::NonZeroU64","std::ffi::CString","std::num::NonZeroI64","std::num::NonZeroU128","std::path::PathBuf","std::time::Duration","std::net::SocketAddrV4","std::string::String","std::cell::RefCell","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroUsize","std::cell::Cell","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroU16","std::sync::Arc","std::num::NonZeroIsize","std::num::NonZeroI8","std::net::Ipv4Addr"]},"std::collections::Bound":{"T":["std::num::NonZeroU8","std::collections::HashMap","std::marker::PhantomData","std::collections::HashSet","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::borrow::Cow","std::num::NonZeroUsize","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroI128","std::net::SocketAddrV6","std::collections::BTreeSet","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::option::Option","std::result::Result","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::collections::Bound","std::num::NonZeroU32","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::cell::Cell","std::ops::Range","std::sync::Arc","std::net::Ipv6Addr","std::collections::VecDeque","std::num::NonZeroI8","std::vec::Vec","std::sync::RwLock","std::sync::atomic::AtomicBool","std::string::String","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::num::NonZeroU64","std::path::PathBuf","std::num::NonZeroIsize","std::rc::Rc","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::boxed::Box","std::time::SystemTime","std::num::NonZeroI32","std::time::Duration","std::num::NonZeroU128","std::net::Ipv4Addr","std::collections::BinaryHeap","std::cell::RefCell","std::sync::atomic::AtomicU32","std::sync::Mutex"]},"std::collections::HashMap":{"K":["std::num::NonZeroI32","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroU64","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroI64","std::num::NonZeroU32","std::net::Ipv4Addr","std::num::NonZeroI16","std::sync::Arc","std::option::Option","std::time::SystemTime","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroI8","std::num::NonZeroU16","std::string::String","std::num::NonZeroI128"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::num::NonZeroI8","std::collections::VecDeque","std::result::Result","std::sync::RwLock","std::option::Option","std::num::NonZeroU16","std::num::NonZeroI16","std::boxed::Box","std::num::NonZeroU64","std::ops::Range","std::net::SocketAddrV4","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::borrow::Cow","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::rc::Rc","std::net::Ipv6Addr","std::collections::HashMap","std::collections::HashSet","std::ops::RangeInclusive","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::collections::BinaryHeap","std::vec::Vec","std::sync::atomic::AtomicI64","std::string::String","std::sync::Arc","std::cell::Cell","std::net::IpAddr","std::sync::atomic::AtomicU8","std::sync::Mutex","std::time::Duration","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::ffi::CString","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::collections::Bound","std::collections::BTreeMap","std::net::SocketAddrV6","std::num::NonZeroI64","std::time::SystemTime","std::num::NonZeroUsize","std::net::SocketAddr","std::collections::BTreeSet","std::cell::RefCell"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::net::SocketAddrV4","std::num::NonZeroU8","std::path::PathBuf","std::net::SocketAddrV6","std::string::String","std::num::NonZeroU32","std::sync::Arc","std::net::Ipv4Addr","std::marker::PhantomData","std::num::NonZeroI64","std::option::Option","std::num::NonZeroI128","std::num::NonZeroU128","std::collections::Bound"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::borrow::Cow","std::num::NonZeroU8","std::ops::RangeInclusive","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::num::NonZeroU128","std::collections::HashMap","std::sync::RwLock","std::collections::Bound","std::num::NonZeroU64","std::sync::Mutex","std::collections::BinaryHeap","std::time::SystemTime","std::num::NonZeroU16","std::collections::BTreeMap","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::collections::BTreeSet","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroI128","std::sync::Arc","std::net::SocketAddrV4","std::marker::PhantomData","std::cell::RefCell","std::option::Option","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::collections::VecDeque","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::collections::HashSet","std::cell::Cell","std::sync::atomic::AtomicUsize","std::boxed::Box","std::vec::Vec","std::path::PathBuf","std::net::SocketAddr","std::rc::Rc","std::num::NonZeroI8","std::ops::Range","std::sync::atomic::AtomicU8","std::result::Result","std::sync::atomic::AtomicU64","std::ffi::CString","std::sync::atomic::AtomicI64","std::string::String","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::num::NonZeroUsize"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroU16","std::borrow::Cow","std::collections::BinaryHeap","std::ffi::CString","std::collections::HashMap","std::cell::RefCell","std::collections::BTreeSet","std::time::Duration","std::cell::Cell","std::sync::Mutex","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::boxed::Box","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::option::Option","std::sync::RwLock","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::net::SocketAddr","std::vec::Vec","std::time::SystemTime","std::ops::RangeInclusive","std::result::Result","std::collections::VecDeque","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::ops::Range","std::sync::Arc","std::collections::Bound","std::sync::atomic::AtomicI8","std::collections::HashSet","std::path::PathBuf","std::net::Ipv6Addr","std::net::IpAddr","std::num::NonZeroI16","std::num::NonZeroI8","std::net::SocketAddrV6","std::string::String","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroIsize","std::num::NonZeroU128","std::rc::Rc"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::IpAddr","std::ops::Range","std::num::NonZeroUsize","std::num::NonZeroI64","std::net::SocketAddrV4","std::result::Result","std::num::NonZeroU64","std::net::SocketAddrV6","std::num::NonZeroIsize","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::ops::RangeInclusive","std::time::SystemTime","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::cell::Cell","std::string::String","std::collections::HashSet","std::vec::Vec","std::sync::Arc","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::boxed::Box","std::collections::BinaryHeap","std::collections::Bound","std::ffi::CString","std::option::Option","std::time::Duration","std::sync::atomic::AtomicU32","std::rc::Rc","std::path::PathBuf","std::net::Ipv6Addr","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::collections::HashMap","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::net::SocketAddr","std::num::NonZeroI16","std::borrow::Cow","std::marker::PhantomData","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::sync::Mutex"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::ops::Range","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::time::SystemTime","std::num::NonZeroU16","std::ffi::CString","std::sync::Arc","std::ops::RangeInclusive","std::net::Ipv6Addr","std::net::Ipv4Addr","std::marker::PhantomData","std::num::NonZeroIsize","std::path::PathBuf","std::sync::atomic::AtomicI64","std::net::IpAddr","std::collections::BinaryHeap","std::num::NonZeroUsize","std::result::Result","std::rc::Rc","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::borrow::Cow","std::string::String","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::time::Duration","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::boxed::Box","std::num::NonZeroI16","std::vec::Vec","std::num::NonZeroU64","std::collections::HashSet","std::cell::RefCell","std::collections::VecDeque","std::num::NonZeroU128","std::net::SocketAddr","std::collections::Bound","std::sync::RwLock","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::sync::Mutex","std::sync::atomic::AtomicI16","std::option::Option","std::collections::BTreeMap","std::cell::Cell","std::collections::HashMap","std::num::NonZeroI8","std::num::NonZeroI64"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::boxed::Box<T>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::boxed::Box<T>>::decode(p0);
+<std::boxed::Box<T>>::decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<T>>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"],"T":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["std::marker::Sized","std::cmp::Ord","enc::Encode","de::BorrowDecode","de::Decode"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","std::cmp::Ord","de::Decode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::Bound":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","de::Decode","de::BorrowDecode","std::hash::Hash","std::marker::Sized","enc::Encode"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["std::marker::Sized","std::hash::Hash","de::Decode","std::cmp::Eq","de::BorrowDecode","enc::Encode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Varint","std::clone::impls::<impl std::clone::Clone for &mut T>","config::Fixint","config::Configuration","config::Limit","config::BigEndian","config::LittleEndian"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<T>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"T":["std::net::IpAddr","std::num::NonZeroU128","std::num::NonZeroU64","std::num::NonZeroI16","std::result::Result","std::num::NonZeroU32","std::net::SocketAddrV4","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::sync::Mutex","std::sync::RwLock","std::num::NonZeroIsize","std::num::NonZeroU16","std::time::SystemTime","std::sync::atomic::AtomicU32","std::collections::HashMap","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::collections::BTreeMap","std::num::NonZeroI64","std::boxed::Box","std::sync::atomic::AtomicU64","std::option::Option","std::net::SocketAddrV6","std::borrow::Cow","std::net::SocketAddr","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::net::Ipv4Addr","std::ffi::CString","std::string::String","std::cell::Cell","std::ops::Range","std::sync::atomic::AtomicI64","std::path::PathBuf","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::vec::Vec","std::num::NonZeroI8","std::num::NonZeroI128","std::time::Duration","std::num::NonZeroU8","std::sync::Arc","std::collections::Bound","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::rc::Rc","std::collections::VecDeque","std::net::Ipv6Addr","std::collections::BinaryHeap","std::collections::HashSet"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::ffi::CStr","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::net::SocketAddrV6","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroU64","std::option::Option","std::net::SocketAddrV4","std::rc::Rc","std::marker::PhantomData","std::num::NonZeroI8","std::time::SystemTime","std::num::NonZeroIsize","std::string::String","std::path::PathBuf","std::num::NonZeroI32","std::num::NonZeroU128","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroU32","std::time::Duration","std::cell::RefCell","std::cell::Cell"],"V":["std::sync::RwLock","std::sync::atomic::AtomicI64","std::sync::Mutex","std::num::NonZeroU128","std::option::Option","std::num::NonZeroUsize","std::time::Duration","std::collections::Bound","std::borrow::Cow","std::sync::atomic::AtomicU16","std::net::IpAddr","std::boxed::Box","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::string::String","std::collections::HashSet","std::cell::RefCell","std::cell::Cell","std::path::PathBuf","std::ffi::CString","std::num::NonZeroU8","std::net::Ipv6Addr","std::ops::RangeInclusive","std::num::NonZeroI16","std::num::NonZeroU32","std::ops::Range","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroU16","std::result::Result","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::vec::Vec","std::collections::BTreeSet","std::rc::Rc","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::HashMap","std::num::NonZeroI32","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::net::Ipv4Addr","std::num::NonZeroU64"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::cell::RefCell","std::num::NonZeroU128","std::sync::Arc","std::rc::Rc","std::num::NonZeroU16","std::num::NonZeroI32","std::time::SystemTime","std::num::NonZeroU32","std::marker::PhantomData","std::num::NonZeroI128","std::time::Duration","std::num::NonZeroI16","std::net::IpAddr","std::net::Ipv6Addr","std::cell::Cell","std::path::PathBuf","std::net::Ipv4Addr","std::string::String","std::num::NonZeroIsize","std::num::NonZeroI64","std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroI8","std::ffi::CString"]},"std::collections::BinaryHeap":{"T":["std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroU64","std::ffi::CString","std::net::Ipv6Addr","std::path::PathBuf","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroI8","std::option::Option","std::rc::Rc","std::cell::Cell","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroI32","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroU128","std::sync::Arc","std::num::NonZeroU16"]},"std::collections::Bound":{"T":["std::num::NonZeroU32","std::sync::RwLock","std::string::String","std::path::PathBuf","std::option::Option","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::result::Result","std::num::NonZeroIsize","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::net::SocketAddrV6","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::sync::Arc","std::collections::HashSet","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::ffi::CString","std::sync::atomic::AtomicU32","std::rc::Rc","std::borrow::Cow","std::num::NonZeroU64","std::num::NonZeroI16","std::num::NonZeroI8","std::num::NonZeroU8","std::net::Ipv6Addr","std::num::NonZeroI64","std::num::NonZeroU16","std::cell::Cell","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::collections::Bound","std::ops::Range","std::boxed::Box","std::collections::BTreeSet","std::sync::Mutex","std::sync::atomic::AtomicI64","std::cell::RefCell","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::time::Duration","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::net::SocketAddrV4","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroI32","std::collections::HashMap","std::num::NonZeroU128","std::vec::Vec"]},"std::collections::HashMap":{"K":["std::num::NonZeroU64","std::time::SystemTime","std::net::SocketAddrV4","std::net::SocketAddr","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroIsize","std::ffi::CString","std::path::PathBuf","std::num::NonZeroI16","std::net::Ipv6Addr","std::sync::Arc","std::num::NonZeroI128","std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroI64","std::string::String"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::string::String","std::path::PathBuf","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::borrow::Cow","std::result::Result","std::collections::BTreeSet","std::num::NonZeroI16","std::num::NonZeroU8","std::collections::BTreeMap","std::num::NonZeroU64","std::collections::Bound","std::collections::HashSet","std::sync::atomic::AtomicBool","std::cell::Cell","std::sync::atomic::AtomicI64","std::rc::Rc","std::net::SocketAddrV6","std::time::Duration","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::ffi::CString","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::collections::BinaryHeap","std::num::NonZeroI32","std::collections::VecDeque","std::net::SocketAddrV4","std::net::IpAddr","std::option::Option","std::time::SystemTime","std::sync::RwLock","std::cell::RefCell","std::collections::HashMap","std::num::NonZeroU16","std::net::Ipv6Addr","std::num::NonZeroIsize","std::sync::Arc","std::boxed::Box","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::ops::Range","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroU128","std::net::Ipv4Addr","std::vec::Vec","std::num::NonZeroI8","std::net::SocketAddr","std::num::NonZeroU32"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroI64","std::path::PathBuf","std::net::SocketAddrV4","std::string::String","std::net::Ipv4Addr","std::time::SystemTime","std::net::SocketAddr","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroI8","std::rc::Rc","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroU64","std::collections::Bound","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroU128","std::num::NonZeroI32","std::num::NonZeroI16"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroU128","std::num::NonZeroU64","std::collections::BTreeMap","std::borrow::Cow","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::cell::RefCell","std::sync::Arc","std::string::String","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::sync::RwLock","std::vec::Vec","std::net::IpAddr","std::num::NonZeroIsize","std::num::NonZeroI8","std::rc::Rc","std::collections::Bound","std::sync::atomic::AtomicU32","std::time::SystemTime","std::net::SocketAddrV6","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::boxed::Box","std::num::NonZeroUsize","std::cell::Cell","std::collections::BTreeSet","std::sync::Mutex","std::num::NonZeroI32","std::result::Result","std::num::NonZeroU16","std::ops::RangeInclusive","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::collections::VecDeque","std::collections::HashMap","std::path::PathBuf","std::sync::atomic::AtomicI32","std::ffi::CString","std::option::Option","std::marker::PhantomData","std::num::NonZeroI128","std::net::SocketAddrV4","std::ops::Range","std::time::Duration","std::net::Ipv6Addr","std::sync::atomic::AtomicI64"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::SocketAddrV4","std::num::NonZeroI8","std::collections::BTreeMap","std::num::NonZeroU16","std::num::NonZeroU8","std::string::String","std::net::SocketAddr","std::path::PathBuf","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::option::Option","std::vec::Vec","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::num::NonZeroI32","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::collections::HashMap","std::num::NonZeroU128","std::net::IpAddr","std::collections::Bound","std::ffi::CString","std::sync::Arc","std::sync::Mutex","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::rc::Rc","std::time::Duration","std::boxed::Box","std::ops::Range","std::collections::BinaryHeap","std::marker::PhantomData","std::num::NonZeroU32","std::result::Result","std::collections::HashSet","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::collections::VecDeque","std::num::NonZeroI16","std::num::NonZeroI64","std::cell::Cell","std::sync::atomic::AtomicI32","std::borrow::Cow","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::cell::RefCell","std::time::SystemTime","std::sync::atomic::AtomicBool"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroI32","std::num::NonZeroI8","std::net::SocketAddrV6","std::string::String","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroU32","std::num::NonZeroU8","std::sync::RwLock","std::num::NonZeroU128","std::rc::Rc","std::sync::Arc","std::ops::RangeInclusive","std::net::Ipv4Addr","std::borrow::Cow","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::num::NonZeroI16","std::sync::Mutex","std::num::NonZeroU64","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::collections::HashMap","std::ops::Range","std::vec::Vec","std::collections::HashSet","std::collections::BTreeSet","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::cell::RefCell","std::result::Result","std::cell::Cell","std::boxed::Box","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::collections::Bound","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::net::IpAddr","std::option::Option","std::time::Duration","std::num::NonZeroI64","std::net::SocketAddrV4","std::collections::BTreeMap","std::net::SocketAddr","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::sync::atomic::AtomicBool","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::string::String","std::collections::Bound","std::num::NonZeroIsize","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroI128","std::collections::HashSet","std::sync::atomic::AtomicU8","std::result::Result","std::option::Option","std::num::NonZeroU128","std::sync::atomic::AtomicI16","std::sync::Arc","std::marker::PhantomData","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::collections::BinaryHeap","std::sync::Mutex","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::cell::RefCell","std::borrow::Cow","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::path::PathBuf","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::time::Duration","std::num::NonZeroU32","std::ffi::CString","std::net::Ipv6Addr","std::sync::RwLock","std::collections::BTreeMap","std::num::NonZeroUsize","std::vec::Vec","std::boxed::Box","std::net::SocketAddrV6","std::num::NonZeroU8","std::ops::Range","std::num::NonZeroI8","std::cell::Cell","std::net::Ipv4Addr","std::rc::Rc","std::net::IpAddr","std::collections::HashMap","std::sync::atomic::AtomicU64","std::num::NonZeroU64"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<T>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<T>>::borrow_decode(p0);
+<std::boxed::Box<T>>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl enc::Encode for std::boxed::Box<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::boxed::Box<T>>::encode":{"E":["enc::Encoder","std::marker::Sized"],"T":["enc::Encode"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","std::cmp::Ord","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode","std::cmp::Ord"]},"std::collections::Bound":{"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["de::Decode","enc::Encode","std::hash::Hash","de::BorrowDecode","std::marker::Sized","std::cmp::Eq"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["de::Decode","std::marker::Sized","std::cmp::Eq","std::hash::Hash","de::BorrowDecode","enc::Encode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::BigEndian","config::LittleEndian","config::Configuration","config::NoLimit","config::Varint","config::Fixint","std::clone::impls::<impl std::clone::Clone for &T>"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","enc::write::SizeWriter","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::boxed::Box<T>>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"T":["std::cell::Cell","std::net::SocketAddrV6","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::borrow::Cow","std::cell::RefCell","std::sync::atomic::AtomicI8","std::collections::HashSet","std::num::NonZeroIsize","std::num::NonZeroI8","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::sync::Arc","std::net::IpAddr","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::num::NonZeroU32","std::sync::Mutex","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::num::NonZeroI128","std::rc::Rc","std::option::Option","std::ops::Range","std::time::Duration","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::num::NonZeroU8","std::num::NonZeroU16","std::collections::Bound","std::sync::atomic::AtomicI64","std::result::Result","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::vec::Vec","std::num::NonZeroUsize","std::sync::RwLock","std::net::SocketAddrV4","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::string::String","std::path::PathBuf","std::num::NonZeroU128","std::collections::BinaryHeap","std::num::NonZeroI16","std::net::Ipv6Addr","std::ffi::CString","std::time::SystemTime","std::collections::VecDeque","std::collections::BTreeSet","std::boxed::Box","std::net::SocketAddr"]},"features::impl_std::IoWriter":{"W":["std::io::Sink","std::process::ChildStdin","std::sys::unix::stdio::Stderr","std::io::Cursor<std::vec::Vec<u8, A>>","std::net::TcpStream","&std::fs::File","std::io::StdoutLock<'_>","&std::net::TcpStream","&std::io::Sink","&'a std::os::unix::net::UnixStream","std::io::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>","std::fs::File","std::io::Stdout","std::io::stdio::StderrRaw","std::io::impls::<impl std::io::Write for &mut W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::StderrLock<'_>","std::io::Cursor<[u8; N]>","std::os::unix::net::UnixStream","std::io::Cursor<&mut [u8]>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::io::Stdout","std::io::BufWriter<W>","std::io::LineWriter<W>","std::vec::Vec<u8, A>","std::io::BorrowedCursor<'a>","std::io::stdio::StdoutRaw","std::boxed::Box<W>","&std::process::ChildStdin","std::sys::unix::stdio::Stdout","std::collections::VecDeque<u8, A>","&std::io::Stderr"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::ffi::CStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU8","std::num::NonZeroU64","std::net::SocketAddrV4","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroU16","std::num::NonZeroI64","std::num::NonZeroI128","std::marker::PhantomData","std::net::Ipv6Addr","std::net::Ipv4Addr","std::cell::RefCell","std::option::Option","std::num::NonZeroI8","std::time::SystemTime","std::num::NonZeroU32","std::ffi::CString","std::num::NonZeroIsize","std::string::String","std::num::NonZeroU128","std::path::PathBuf","std::time::Duration","std::cell::Cell"],"V":["std::num::NonZeroU16","std::result::Result","std::num::NonZeroU32","std::num::NonZeroI128","std::net::Ipv6Addr","std::net::IpAddr","std::collections::BinaryHeap","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::vec::Vec","std::num::NonZeroU64","std::sync::Mutex","std::collections::BTreeSet","std::num::NonZeroI64","std::cell::Cell","std::collections::BTreeMap","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::string::String","std::collections::HashMap","std::num::NonZeroU128","std::sync::RwLock","std::path::PathBuf","std::num::NonZeroI16","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::option::Option","std::sync::atomic::AtomicU32","std::ffi::CString","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::num::NonZeroI32","std::sync::Arc","std::cell::RefCell","std::net::SocketAddrV6","std::net::Ipv4Addr","std::time::SystemTime","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::time::Duration","std::borrow::Cow","std::collections::Bound","std::sync::atomic::AtomicBool","std::boxed::Box","std::rc::Rc","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::ops::Range"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::sync::Arc","std::time::Duration","std::cell::RefCell","std::ffi::CString","std::num::NonZeroU16","std::num::NonZeroU64","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroIsize","std::num::NonZeroI128","std::num::NonZeroU32","std::cell::Cell","std::net::SocketAddr","std::rc::Rc","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroUsize","std::num::NonZeroI8","std::string::String","std::net::IpAddr","std::time::SystemTime","std::option::Option","std::num::NonZeroU8"]},"std::collections::BinaryHeap":{"T":["std::option::Option","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroI32","std::time::Duration","std::net::IpAddr","std::rc::Rc","std::marker::PhantomData","std::num::NonZeroIsize","std::num::NonZeroI16","std::num::NonZeroU128","std::ffi::CString","std::net::SocketAddrV6","std::sync::Arc","std::num::NonZeroU64","std::num::NonZeroUsize","std::net::SocketAddr","std::path::PathBuf","std::string::String","std::net::SocketAddrV4","std::num::NonZeroI8","std::num::NonZeroI64"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::ops::RangeInclusive","std::vec::Vec","std::collections::Bound","std::net::SocketAddrV4","std::time::Duration","std::ffi::CString","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::time::SystemTime","std::net::Ipv6Addr","std::result::Result","std::num::NonZeroU64","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::borrow::Cow","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::string::String","std::sync::atomic::AtomicU8","std::boxed::Box","std::sync::RwLock","std::num::NonZeroIsize","std::collections::BinaryHeap","std::num::NonZeroU32","std::sync::Mutex","std::rc::Rc","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::num::NonZeroU16","std::path::PathBuf","std::marker::PhantomData","std::ops::Range","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::cell::RefCell","std::net::SocketAddrV6","std::num::NonZeroI128","std::collections::HashSet","std::num::NonZeroU8","std::cell::Cell","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::option::Option","std::collections::HashMap"]},"std::collections::HashMap":{"K":["std::collections::Bound","std::sync::Arc","std::net::IpAddr","std::num::NonZeroI32","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroI64","std::num::NonZeroU128","std::rc::Rc","std::path::PathBuf","std::marker::PhantomData","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroI16","std::option::Option"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroI8","std::net::IpAddr","std::sync::atomic::AtomicU32","std::time::SystemTime","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::borrow::Cow","std::net::SocketAddr","std::ops::Range","std::sync::RwLock","std::string::String","std::cell::RefCell","std::num::NonZeroU64","std::collections::BTreeSet","std::num::NonZeroU32","std::num::NonZeroI32","std::cell::Cell","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::sync::Mutex","std::vec::Vec","std::num::NonZeroI128","std::result::Result","std::option::Option","std::net::SocketAddrV4","std::rc::Rc","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::time::Duration","std::collections::HashMap","std::collections::VecDeque","std::net::Ipv4Addr","std::boxed::Box","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroI64","std::sync::Arc","std::collections::BTreeMap","std::ffi::CString","std::collections::Bound","std::collections::HashSet","std::num::NonZeroI16","std::ops::RangeInclusive"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::ffi::CString","std::num::NonZeroU16","std::num::NonZeroU32","std::net::IpAddr","std::net::SocketAddr","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroIsize","std::num::NonZeroUsize","std::string::String","std::rc::Rc","std::num::NonZeroU8","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroU64"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::result::Result","std::rc::Rc","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::boxed::Box","std::time::Duration","std::num::NonZeroU128","std::sync::Arc","std::path::PathBuf","std::ffi::CString","std::net::IpAddr","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::cell::Cell","std::num::NonZeroI16","std::ops::RangeInclusive","std::borrow::Cow","std::net::Ipv6Addr","std::num::NonZeroI32","std::collections::BTreeSet","std::string::String","std::net::SocketAddrV6","std::collections::HashSet","std::ops::Range","std::net::SocketAddrV4","std::num::NonZeroIsize","std::num::NonZeroUsize","std::collections::HashMap","std::sync::Mutex","std::collections::Bound","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::vec::Vec","std::cell::RefCell","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::option::Option","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::collections::BinaryHeap","std::collections::VecDeque","std::time::SystemTime","std::num::NonZeroU16"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::num::NonZeroI32","std::net::Ipv4Addr","std::num::NonZeroU128","std::collections::HashMap","std::cell::Cell","std::net::Ipv6Addr","std::option::Option","std::time::Duration","std::num::NonZeroI16","std::borrow::Cow","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::cell::RefCell","std::marker::PhantomData","std::net::SocketAddrV4","std::net::SocketAddr","std::net::IpAddr","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::num::NonZeroUsize","std::path::PathBuf","std::string::String","std::boxed::Box","std::sync::atomic::AtomicI16","std::sync::Arc","std::collections::HashSet","std::num::NonZeroU16","std::num::NonZeroU32","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::ffi::CString","std::collections::BinaryHeap","std::result::Result","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::collections::Bound","std::sync::RwLock","std::num::NonZeroU64","std::time::SystemTime","std::vec::Vec","std::sync::Mutex","std::num::NonZeroI64","std::rc::Rc","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::ops::Range","std::sync::atomic::AtomicBool"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::BTreeSet","std::time::Duration","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::string::String","std::sync::Mutex","std::path::PathBuf","std::collections::VecDeque","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::result::Result","std::marker::PhantomData","std::num::NonZeroU16","std::ffi::CString","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::num::NonZeroI32","std::sync::Arc","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::ops::Range","std::collections::BTreeMap","std::collections::HashMap","std::num::NonZeroU64","std::net::Ipv4Addr","std::net::SocketAddr","std::vec::Vec","std::boxed::Box","std::sync::atomic::AtomicU8","std::sync::RwLock","std::cell::Cell","std::num::NonZeroU8","std::num::NonZeroI16","std::num::NonZeroI8","std::net::Ipv6Addr","std::cell::RefCell","std::borrow::Cow","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroUsize","std::num::NonZeroI64","std::collections::BinaryHeap","std::collections::Bound","std::net::IpAddr","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::num::NonZeroI128","std::collections::HashSet","std::option::Option","std::rc::Rc","std::sync::atomic::AtomicIsize"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::time::SystemTime","std::borrow::Cow","std::string::String","std::option::Option","std::ffi::CString","std::result::Result","std::collections::HashMap","std::cell::RefCell","std::num::NonZeroU32","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::vec::Vec","std::path::PathBuf","std::net::Ipv4Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::num::NonZeroUsize","std::net::SocketAddr","std::sync::Mutex","std::rc::Rc","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::net::SocketAddrV4","std::collections::Bound","std::num::NonZeroI16","std::ops::Range","std::sync::RwLock","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::collections::HashSet","std::time::Duration","std::sync::atomic::AtomicIsize","std::boxed::Box","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::net::IpAddr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::sync::Arc","std::num::NonZeroU128","std::cell::Cell","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::collections::BTreeSet","std::num::NonZeroI128","std::collections::BTreeMap","std::num::NonZeroI32"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::boxed::Box<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_alloc::<impl enc::Encode for std::boxed::Box<T>>::encode(p0, p1);
+crate::features::impl_alloc::<impl enc::Encode for std::boxed::Box<T>>::encode(p0, p1);
+<std::boxed::Box<T>>::encode(p0, p1);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::boxed::Box<[T]>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"features::impl_alloc::<impl de::Decode for std::boxed::Box<[T]>>::decode":{"D":["std::marker::Sized","de::Decoder"],"T":["de::Decode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["std::cmp::Ord","de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"],"V":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::cmp::Ord","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::cmp::Ord","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized","std::cmp::Eq","std::hash::Hash"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["std::cmp::Eq","enc::Encode","std::marker::Sized","de::Decode","std::hash::Hash","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Fixint","config::LittleEndian","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Limit","config::Configuration","config::Varint","config::BigEndian"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::boxed::Box<[T]>>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"T":["std::num::NonZeroI32","std::result::Result","std::sync::Arc","std::collections::BTreeMap","std::sync::RwLock","std::marker::PhantomData","std::ops::Range","std::path::PathBuf","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::ops::RangeInclusive","std::ffi::CString","std::net::SocketAddrV6","std::cell::Cell","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::rc::Rc","std::sync::Mutex","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::time::Duration","std::num::NonZeroUsize","std::cell::RefCell","std::net::Ipv6Addr","std::num::NonZeroI16","std::collections::Bound","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::borrow::Cow","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::boxed::Box","std::num::NonZeroI64","std::num::NonZeroI128","std::time::SystemTime","std::option::Option","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::net::IpAddr","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroU64","std::vec::Vec","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::string::String","std::num::NonZeroU16","std::collections::HashSet","std::num::NonZeroU32","std::collections::HashMap"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::ffi::OsStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroUsize","std::num::NonZeroI128","std::num::NonZeroI64","std::net::SocketAddrV6","std::num::NonZeroI8","std::time::Duration","std::sync::Arc","std::net::Ipv4Addr","std::num::NonZeroIsize","std::option::Option","std::net::IpAddr","std::num::NonZeroI32","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroI16","std::num::NonZeroU32","std::cell::Cell","std::string::String","std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroU128"],"V":["std::cell::RefCell","std::collections::Bound","std::marker::PhantomData","std::num::NonZeroI8","std::rc::Rc","std::option::Option","std::time::SystemTime","std::num::NonZeroU16","std::collections::HashSet","std::boxed::Box","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::ffi::CString","std::sync::RwLock","std::borrow::Cow","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::net::Ipv4Addr","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::net::SocketAddrV6","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::ops::Range","std::time::Duration","std::result::Result","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::vec::Vec","std::sync::Mutex","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::num::NonZeroI32","std::net::IpAddr","std::num::NonZeroU64","std::collections::HashMap","std::cell::Cell","std::collections::BTreeSet","std::string::String","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroI64"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroIsize","std::marker::PhantomData","std::num::NonZeroI32","std::cell::Cell","std::ffi::CString","std::num::NonZeroI64","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroU64","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroU8","std::time::Duration","std::string::String","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroU32","std::sync::Arc","std::path::PathBuf","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroU128"]},"std::collections::BinaryHeap":{"T":["std::marker::PhantomData","std::num::NonZeroI64","std::net::SocketAddrV4","std::net::IpAddr","std::sync::Arc","std::num::NonZeroU128","std::cell::Cell","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroIsize","std::num::NonZeroU32","std::num::NonZeroUsize","std::option::Option","std::time::SystemTime","std::num::NonZeroU16","std::rc::Rc","std::time::Duration","std::num::NonZeroI32","std::num::NonZeroU8","std::string::String","std::net::Ipv6Addr","std::cell::RefCell","std::net::Ipv4Addr","std::ffi::CString"]},"std::collections::Bound":{"T":["std::num::NonZeroI32","std::collections::BinaryHeap","std::sync::Mutex","std::num::NonZeroU8","std::boxed::Box","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::collections::HashSet","std::cell::Cell","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::option::Option","std::sync::atomic::AtomicI16","std::time::SystemTime","std::sync::atomic::AtomicU32","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroI64","std::cell::RefCell","std::sync::atomic::AtomicU16","std::collections::HashMap","std::net::IpAddr","std::sync::Arc","std::ffi::CString","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::result::Result","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::string::String","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::ops::Range","std::net::Ipv6Addr","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroU32","std::borrow::Cow","std::path::PathBuf","std::sync::RwLock","std::vec::Vec","std::num::NonZeroU16","std::marker::PhantomData","std::net::Ipv4Addr","std::collections::Bound","std::num::NonZeroIsize","std::time::Duration","std::collections::BTreeMap","std::num::NonZeroI128"]},"std::collections::HashMap":{"K":["std::num::NonZeroI128","std::num::NonZeroU128","std::net::SocketAddrV6","std::path::PathBuf","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroIsize","std::marker::PhantomData","std::time::SystemTime","std::rc::Rc","std::collections::Bound","std::num::NonZeroU32","std::net::Ipv6Addr"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::net::IpAddr","std::ops::RangeInclusive","std::cell::Cell","std::num::NonZeroU32","std::net::SocketAddr","std::rc::Rc","std::sync::Arc","std::num::NonZeroI128","std::collections::VecDeque","std::num::NonZeroU8","std::ops::Range","std::cell::RefCell","std::path::PathBuf","std::marker::PhantomData","std::ffi::CString","std::sync::atomic::AtomicUsize","std::option::Option","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::sync::RwLock","std::vec::Vec","std::time::SystemTime","std::result::Result","std::collections::Bound","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::boxed::Box","std::collections::BTreeMap","std::collections::HashSet","std::borrow::Cow","std::sync::atomic::AtomicI32","std::sync::Mutex","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::string::String","std::net::SocketAddrV6","std::collections::HashMap","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroUsize","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::net::Ipv6Addr"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::marker::PhantomData","std::option::Option","std::net::Ipv4Addr","std::rc::Rc","std::net::IpAddr","std::num::NonZeroI32","std::num::NonZeroU8","std::num::NonZeroU16","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroI8","std::num::NonZeroIsize","std::num::NonZeroI64","std::net::SocketAddrV4","std::net::SocketAddr","std::time::SystemTime"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::num::NonZeroI64","std::boxed::Box","std::time::SystemTime","std::net::Ipv6Addr","std::num::NonZeroUsize","std::cell::RefCell","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::num::NonZeroI128","std::time::Duration","std::ffi::CString","std::borrow::Cow","std::collections::Bound","std::net::SocketAddr","std::net::SocketAddrV4","std::string::String","std::vec::Vec","std::sync::RwLock","std::collections::BinaryHeap","std::path::PathBuf","std::num::NonZeroU64","std::collections::BTreeSet","std::net::SocketAddrV6","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::sync::Arc","std::num::NonZeroI16","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::rc::Rc","std::collections::BTreeMap","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::collections::HashMap","std::ops::Range","std::ops::RangeInclusive","std::result::Result","std::num::NonZeroI8","std::num::NonZeroU16","std::collections::HashSet","std::sync::Mutex","std::sync::atomic::AtomicBool","std::option::Option","std::sync::atomic::AtomicU64","std::cell::Cell","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::num::NonZeroI32"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::HashMap","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::net::SocketAddrV6","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::option::Option","std::num::NonZeroU8","std::time::Duration","std::result::Result","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::borrow::Cow","std::ops::Range","std::rc::Rc","std::time::SystemTime","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::collections::VecDeque","std::net::Ipv4Addr","std::path::PathBuf","std::sync::atomic::AtomicI32","std::collections::Bound","std::ffi::CString","std::num::NonZeroIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::string::String","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::sync::RwLock","std::num::NonZeroU64","std::num::NonZeroUsize","std::sync::Arc","std::ops::RangeInclusive","std::net::Ipv6Addr","std::vec::Vec","std::collections::BTreeSet","std::net::SocketAddr","std::num::NonZeroI16","std::num::NonZeroU16","std::num::NonZeroI64","std::cell::Cell","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::cell::RefCell","std::num::NonZeroU32","std::collections::HashSet","std::marker::PhantomData","std::sync::Mutex","std::net::SocketAddrV4","std::net::IpAddr","std::boxed::Box"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::marker::PhantomData","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::net::SocketAddr","std::collections::BTreeMap","std::sync::Arc","std::time::SystemTime","std::net::SocketAddrV4","std::ops::RangeInclusive","std::num::NonZeroI64","std::boxed::Box","std::sync::atomic::AtomicU64","std::vec::Vec","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::time::Duration","std::num::NonZeroI8","std::collections::HashSet","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::cell::Cell","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::sync::RwLock","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::result::Result","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::net::IpAddr","std::net::Ipv6Addr","std::collections::HashMap","std::rc::Rc","std::num::NonZeroU16","std::ops::Range","std::num::NonZeroI16","std::borrow::Cow","std::num::NonZeroU128","std::option::Option","std::num::NonZeroUsize","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::collections::Bound","std::sync::atomic::AtomicI16","std::sync::Mutex","std::path::PathBuf","std::num::NonZeroIsize","std::ffi::CString","std::string::String","std::num::NonZeroI32"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::cell::RefCell","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::net::IpAddr","std::collections::VecDeque","std::option::Option","std::rc::Rc","std::string::String","std::num::NonZeroIsize","std::sync::RwLock","std::num::NonZeroU64","std::ops::Range","std::ops::RangeInclusive","std::num::NonZeroUsize","std::collections::HashSet","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::net::SocketAddrV4","std::time::SystemTime","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::collections::Bound","std::marker::PhantomData","std::num::NonZeroI8","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroI64","std::sync::Arc","std::collections::BTreeSet","std::collections::HashMap","std::time::Duration","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::vec::Vec","std::result::Result","std::borrow::Cow","std::num::NonZeroI32","std::num::NonZeroI16","std::cell::Cell","std::boxed::Box"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::boxed::Box<[T]>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::boxed::Box<[T]>>::decode(p0);
+<std::boxed::Box<[T]>>::decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<[T]>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<[T]>>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"],"T":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Ord","std::marker::Sized"],"V":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Ord","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::cmp::Ord","std::marker::Sized","de::Decode","enc::Encode"]},"std::collections::Bound":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::HashMap":{"K":["std::marker::Sized","std::hash::Hash","de::BorrowDecode","std::cmp::Eq","de::Decode","enc::Encode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode","std::hash::Hash","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","std::clone::impls::<impl std::clone::Clone for &mut T>","config::Fixint","config::Configuration","config::Varint","config::Limit","config::BigEndian","config::NoLimit"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<[T]>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"T":["std::net::Ipv6Addr","std::rc::Rc","std::collections::VecDeque","std::sync::Arc","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::result::Result","std::num::NonZeroU32","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::sync::Mutex","std::num::NonZeroI32","std::net::Ipv4Addr","std::ops::RangeInclusive","std::num::NonZeroI64","std::net::SocketAddrV6","std::string::String","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::ops::Range","std::vec::Vec","std::time::SystemTime","std::sync::atomic::AtomicU8","std::cell::Cell","std::net::SocketAddr","std::collections::Bound","std::collections::BTreeSet","std::num::NonZeroI8","std::option::Option","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::num::NonZeroI16","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::path::PathBuf","std::sync::RwLock","std::cell::RefCell","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::collections::HashMap","std::net::SocketAddrV4","std::ffi::CString","std::time::Duration","std::boxed::Box","std::borrow::Cow","std::num::NonZeroUsize","std::collections::HashSet","std::net::IpAddr","std::num::NonZeroU16","std::collections::BTreeMap","std::num::NonZeroU128"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU128","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroI64","std::cell::RefCell","std::net::IpAddr","std::time::Duration","std::path::PathBuf","std::num::NonZeroIsize","std::net::SocketAddrV6","std::num::NonZeroI32","std::cell::Cell","std::ffi::CString","std::net::SocketAddrV4","std::string::String","std::num::NonZeroI8","std::num::NonZeroI128","std::sync::Arc","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroU64","std::num::NonZeroU16"],"V":["std::cell::Cell","std::num::NonZeroI16","std::collections::BTreeSet","std::sync::RwLock","std::vec::Vec","std::ops::Range","std::boxed::Box","std::net::SocketAddrV6","std::num::NonZeroIsize","std::num::NonZeroI32","std::num::NonZeroU8","std::string::String","std::time::Duration","std::num::NonZeroI128","std::num::NonZeroU64","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::path::PathBuf","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::ffi::CString","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::num::NonZeroU16","std::rc::Rc","std::marker::PhantomData","std::result::Result","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::net::SocketAddrV4","std::num::NonZeroUsize","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::sync::Mutex","std::collections::HashMap","std::net::SocketAddr","std::collections::Bound","std::collections::HashSet","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::borrow::Cow","std::sync::atomic::AtomicBool","std::cell::RefCell","std::num::NonZeroU128","std::sync::Arc","std::option::Option","std::sync::atomic::AtomicI16"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI16","std::cell::RefCell","std::num::NonZeroIsize","std::cell::Cell","std::net::SocketAddrV4","std::num::NonZeroU16","std::string::String","std::num::NonZeroU64","std::num::NonZeroI128","std::net::IpAddr","std::net::Ipv4Addr","std::time::Duration","std::num::NonZeroU32","std::num::NonZeroI32","std::ffi::CString","std::num::NonZeroU8","std::sync::Arc"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI8","std::num::NonZeroI32","std::num::NonZeroU32","std::net::Ipv4Addr","std::num::NonZeroU8","std::marker::PhantomData","std::cell::RefCell","std::net::SocketAddrV6","std::net::SocketAddrV4","std::ffi::CString","std::rc::Rc","std::option::Option","std::string::String","std::num::NonZeroIsize","std::sync::Arc","std::num::NonZeroI16","std::time::Duration","std::cell::Cell"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicBool","std::result::Result","std::marker::PhantomData","std::num::NonZeroU128","std::collections::BinaryHeap","std::num::NonZeroI8","std::num::NonZeroI32","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::net::IpAddr","std::net::SocketAddrV4","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::rc::Rc","std::num::NonZeroI64","std::string::String","std::borrow::Cow","std::num::NonZeroU32","std::net::Ipv4Addr","std::net::SocketAddrV6","std::path::PathBuf","std::num::NonZeroU8","std::collections::BTreeMap","std::collections::BTreeSet","std::num::NonZeroI128","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::ffi::CString","std::sync::atomic::AtomicU16","std::sync::Arc","std::sync::Mutex","std::vec::Vec","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::option::Option","std::time::Duration","std::sync::RwLock","std::time::SystemTime","std::boxed::Box","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::ops::Range","std::cell::RefCell","std::sync::atomic::AtomicI8","std::cell::Cell","std::collections::HashMap","std::collections::Bound","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::num::NonZeroU64"]},"std::collections::HashMap":{"K":["std::ffi::CString","std::net::SocketAddr","std::num::NonZeroU64","std::net::Ipv6Addr","std::num::NonZeroU32","std::net::SocketAddrV6","std::num::NonZeroI128","std::num::NonZeroU128","std::num::NonZeroIsize","std::option::Option","std::net::SocketAddrV4","std::num::NonZeroU16","std::rc::Rc"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::collections::BTreeSet","std::net::Ipv6Addr","std::borrow::Cow","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::net::IpAddr","std::num::NonZeroIsize","std::sync::RwLock","std::num::NonZeroU32","std::num::NonZeroU128","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::collections::Bound","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::marker::PhantomData","std::net::SocketAddrV4","std::sync::Mutex","std::num::NonZeroI32","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::collections::HashSet","std::cell::RefCell","std::rc::Rc","std::num::NonZeroU16","std::collections::BTreeMap","std::option::Option","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::boxed::Box","std::num::NonZeroI8","std::sync::Arc","std::time::SystemTime","std::collections::HashMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::cell::Cell","std::ops::RangeInclusive","std::time::Duration","std::sync::atomic::AtomicU16","std::ops::Range","std::result::Result","std::num::NonZeroU64","std::string::String","std::ffi::CString","std::path::PathBuf","std::num::NonZeroI128","std::num::NonZeroUsize","std::vec::Vec"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::time::Duration","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroI32","std::net::Ipv4Addr","std::num::NonZeroU8","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroU64","std::num::NonZeroIsize","std::net::SocketAddrV4","std::string::String","std::num::NonZeroU16","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroI8"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::collections::VecDeque","std::num::NonZeroU32","std::collections::HashMap","std::collections::HashSet","std::string::String","std::sync::Mutex","std::num::NonZeroI64","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::net::SocketAddrV6","std::collections::BTreeMap","std::borrow::Cow","std::num::NonZeroI16","std::vec::Vec","std::num::NonZeroI128","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::collections::Bound","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::sync::Arc","std::option::Option","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::time::Duration","std::net::Ipv4Addr","std::ops::Range","std::cell::RefCell","std::sync::atomic::AtomicU16","std::rc::Rc","std::net::Ipv6Addr","std::result::Result","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroU64","std::num::NonZeroIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::boxed::Box","std::cell::Cell","std::ops::RangeInclusive","std::num::NonZeroU128","std::num::NonZeroI32","std::sync::RwLock","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::path::PathBuf","std::net::IpAddr","std::sync::atomic::AtomicIsize"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::RwLock","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::sync::atomic::AtomicI32","std::collections::HashMap","std::collections::Bound","std::net::Ipv4Addr","std::ops::RangeInclusive","std::num::NonZeroU8","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::cell::RefCell","std::net::Ipv6Addr","std::collections::VecDeque","std::num::NonZeroU64","std::sync::Arc","std::borrow::Cow","std::rc::Rc","std::collections::HashSet","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::vec::Vec","std::num::NonZeroU32","std::ops::Range","std::boxed::Box","std::time::SystemTime","std::num::NonZeroI8","std::string::String","std::num::NonZeroUsize","std::num::NonZeroIsize","std::net::IpAddr","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::time::Duration","std::result::Result","std::num::NonZeroU16","std::sync::Mutex","std::option::Option","std::num::NonZeroI128","std::ffi::CString","std::path::PathBuf","std::cell::Cell","std::num::NonZeroI16","std::collections::BinaryHeap","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::num::NonZeroU128"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::IpAddr","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::path::PathBuf","std::time::Duration","std::ops::RangeInclusive","std::num::NonZeroU8","std::string::String","std::num::NonZeroIsize","std::borrow::Cow","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::result::Result","std::num::NonZeroU128","std::num::NonZeroU16","std::vec::Vec","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::ops::Range","std::boxed::Box","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::sync::Mutex","std::sync::atomic::AtomicU64","std::rc::Rc","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::cell::RefCell","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::num::NonZeroI64","std::sync::RwLock","std::num::NonZeroUsize","std::time::SystemTime","std::marker::PhantomData","std::collections::HashMap","std::option::Option","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroU32","std::collections::BTreeSet","std::sync::Arc","std::collections::HashSet","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroI128","std::cell::Cell","std::sync::atomic::AtomicU32","std::ffi::CString","std::collections::VecDeque"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::collections::VecDeque","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::net::IpAddr","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::num::NonZeroI8","std::path::PathBuf","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::collections::BTreeMap","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroI128","std::time::Duration","std::option::Option","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::time::SystemTime","std::sync::atomic::AtomicI8","std::cell::RefCell","std::rc::Rc","std::cell::Cell","std::num::NonZeroUsize","std::string::String","std::num::NonZeroU64","std::net::SocketAddrV6","std::collections::HashSet","std::boxed::Box","std::ops::RangeInclusive","std::borrow::Cow","std::num::NonZeroIsize","std::vec::Vec","std::marker::PhantomData","std::num::NonZeroU8","std::sync::Mutex","std::sync::RwLock","std::ffi::CString","std::ops::Range","std::collections::Bound","std::net::Ipv6Addr","std::result::Result","std::sync::Arc","std::sync::atomic::AtomicI64"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<[T]>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<[T]>>::borrow_decode(p0);
+<std::boxed::Box<[T]>>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::borrow::Cow<'cow, T>>::decode
'cow
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"features::impl_alloc::<impl de::Decode for std::borrow::Cow<'cow, T>>::decode":{"<T as std::borrow::ToOwned>::Owned":["de::Decode"],"D":["de::Decoder","std::marker::Sized"],"T":["std::borrow::ToOwned"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"K":["enc::Encode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord","de::Decode"],"V":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::Decode","std::cmp::Ord","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::Decode","enc::Encode","de::BorrowDecode","std::cmp::Ord","std::marker::Sized"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["enc::Encode","de::BorrowDecode","std::cmp::Eq","de::Decode","std::marker::Sized","std::hash::Hash"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","std::hash::Hash","de::BorrowDecode","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::Configuration","config::Fixint","config::LittleEndian","std::clone::impls::<impl std::clone::Clone for *const T>","config::NoLimit","config::Varint","config::BigEndian"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::borrow::Cow<'cow, T>>::decode":{"<T as std::borrow::ToOwned>::Owned":["std::collections::BTreeMap","std::num::NonZeroU64","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::cell::RefCell","std::sync::atomic::AtomicU16","std::ffi::CString","std::net::Ipv4Addr","std::time::Duration","std::collections::HashMap","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::collections::BinaryHeap","std::result::Result","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::rc::Rc","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::cell::Cell","std::sync::Mutex","std::sync::RwLock","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::path::PathBuf","std::time::SystemTime","std::borrow::Cow","std::num::NonZeroU128","std::ops::Range","std::option::Option","std::collections::BTreeSet","std::num::NonZeroI16","std::ops::RangeInclusive","std::net::Ipv6Addr","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::string::String","std::collections::HashSet","std::num::NonZeroI32","std::num::NonZeroU8","std::boxed::Box","std::vec::Vec","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::sync::Arc","std::collections::Bound","std::net::SocketAddr","std::num::NonZeroIsize","std::collections::VecDeque","std::net::IpAddr"],"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"T":["std::path::Path","std::ffi::CStr","<T as std::borrow::ToOwned>","std::ffi::OsStr"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::ffi::CStr","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::ffi::CString","std::marker::PhantomData","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroI64","std::num::NonZeroIsize","std::num::NonZeroI8","std::net::IpAddr","std::net::SocketAddrV4","std::net::SocketAddr","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroI16","std::option::Option","std::path::PathBuf","std::cell::Cell","std::rc::Rc","std::num::NonZeroU32","std::num::NonZeroU8","std::num::NonZeroU64","std::net::SocketAddrV6","std::num::NonZeroU128","std::time::Duration"],"V":["std::sync::Mutex","std::rc::Rc","std::cell::Cell","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::boxed::Box","std::option::Option","std::num::NonZeroU8","std::ops::RangeInclusive","std::vec::Vec","std::net::IpAddr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::cell::RefCell","std::num::NonZeroUsize","std::ffi::CString","std::time::Duration","std::sync::atomic::AtomicU32","std::ops::Range","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::time::SystemTime","std::num::NonZeroU32","std::sync::RwLock","std::result::Result","std::num::NonZeroIsize","std::net::SocketAddrV6","std::net::Ipv6Addr","std::collections::HashSet","std::net::Ipv4Addr","std::string::String","std::num::NonZeroI32","std::num::NonZeroU64","std::path::PathBuf","std::borrow::Cow","std::num::NonZeroI128","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::collections::HashMap","std::num::NonZeroU128","std::collections::BinaryHeap","std::num::NonZeroI16","std::collections::Bound","std::sync::Arc","std::sync::atomic::AtomicUsize"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU32","std::num::NonZeroI16","std::num::NonZeroI64","std::string::String","std::rc::Rc","std::net::SocketAddr","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroU64","std::num::NonZeroIsize","std::sync::Arc","std::cell::RefCell","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroI8","std::option::Option","std::num::NonZeroU128","std::marker::PhantomData","std::num::NonZeroI32","std::net::Ipv4Addr","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroU16"]},"std::collections::BinaryHeap":{"T":["std::rc::Rc","std::net::Ipv6Addr","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroU64","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroI128","std::ffi::CString","std::num::NonZeroI64","std::num::NonZeroU32","std::time::Duration","std::num::NonZeroI16","std::string::String","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroIsize","std::net::SocketAddrV4","std::option::Option","std::cell::RefCell","std::net::SocketAddrV6"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::sync::Mutex","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::collections::Bound","std::string::String","std::sync::Arc","std::sync::RwLock","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::collections::BinaryHeap","std::collections::BTreeSet","std::collections::HashMap","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::collections::BTreeMap","std::option::Option","std::net::SocketAddrV4","std::net::Ipv4Addr","std::num::NonZeroUsize","std::time::SystemTime","std::rc::Rc","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::cell::Cell","std::net::Ipv6Addr","std::time::Duration","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::path::PathBuf","std::num::NonZeroI32","std::borrow::Cow","std::sync::atomic::AtomicI16","std::result::Result","std::marker::PhantomData","std::cell::RefCell","std::num::NonZeroIsize","std::num::NonZeroU128","std::boxed::Box","std::collections::HashSet","std::collections::VecDeque","std::net::SocketAddrV6","std::ops::RangeInclusive","std::ops::Range","std::vec::Vec","std::net::IpAddr","std::sync::atomic::AtomicI32","std::ffi::CString"]},"std::collections::HashMap":{"K":["std::net::Ipv4Addr","std::sync::Arc","std::string::String","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroU32","std::option::Option","std::path::PathBuf","std::marker::PhantomData","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroU64","std::num::NonZeroUsize","std::num::NonZeroI128","std::num::NonZeroI64"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::boxed::Box","std::vec::Vec","std::net::SocketAddrV4","std::sync::RwLock","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::num::NonZeroI64","std::num::NonZeroU64","std::sync::Mutex","std::num::NonZeroIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::option::Option","std::collections::BTreeMap","std::marker::PhantomData","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::rc::Rc","std::collections::HashSet","std::time::Duration","std::ops::RangeInclusive","std::num::NonZeroI8","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::string::String","std::result::Result","std::num::NonZeroU32","std::net::IpAddr","std::collections::HashMap","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::ffi::CString","std::sync::atomic::AtomicI64","std::cell::RefCell","std::time::SystemTime","std::ops::Range","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::num::NonZeroU16","std::collections::BTreeSet","std::cell::Cell","std::path::PathBuf","std::collections::BinaryHeap","std::collections::Bound","std::borrow::Cow","std::sync::Arc"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::marker::PhantomData","std::num::NonZeroI8","std::num::NonZeroI64","std::time::Duration","std::path::PathBuf","std::collections::Bound","std::net::Ipv4Addr","std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroU8","std::sync::Arc","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroI32"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::result::Result","std::string::String","std::rc::Rc","std::vec::Vec","std::sync::atomic::AtomicBool","std::borrow::Cow","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroI128","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::option::Option","std::num::NonZeroU64","std::collections::BinaryHeap","std::marker::PhantomData","std::num::NonZeroI32","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::sync::Arc","std::net::SocketAddrV6","std::collections::BTreeSet","std::boxed::Box","std::sync::Mutex","std::cell::Cell","std::cell::RefCell","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::net::SocketAddrV4","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::num::NonZeroU128","std::time::Duration","std::ffi::CString","std::ops::RangeInclusive","std::collections::HashMap","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::ops::Range","std::sync::RwLock","std::num::NonZeroI16","std::num::NonZeroIsize","std::collections::VecDeque","std::collections::HashSet","std::collections::Bound","std::num::NonZeroI64"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::SocketAddr","std::sync::atomic::AtomicI32","std::option::Option","std::num::NonZeroUsize","std::sync::RwLock","std::ffi::CString","std::vec::Vec","std::num::NonZeroU32","std::result::Result","std::net::IpAddr","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::num::NonZeroI64","std::num::NonZeroU8","std::cell::RefCell","std::cell::Cell","std::path::PathBuf","std::ops::Range","std::collections::BTreeMap","std::rc::Rc","std::num::NonZeroI8","std::string::String","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::borrow::Cow","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::collections::HashMap","std::collections::VecDeque","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::num::NonZeroIsize","std::sync::Arc","std::boxed::Box","std::net::Ipv6Addr","std::collections::Bound","std::time::Duration","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::collections::BinaryHeap","std::collections::HashSet","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::collections::BTreeSet","std::time::SystemTime","std::num::NonZeroI32","std::ops::RangeInclusive","std::net::SocketAddrV6","std::net::Ipv4Addr"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::ffi::CString","std::cell::RefCell","std::sync::atomic::AtomicU8","std::net::IpAddr","std::boxed::Box","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::path::PathBuf","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroI16","std::sync::Mutex","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::result::Result","std::net::Ipv6Addr","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::cell::Cell","std::option::Option","std::num::NonZeroI8","std::net::SocketAddrV4","std::rc::Rc","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::sync::RwLock","std::num::NonZeroU32","std::collections::VecDeque","std::time::Duration","std::borrow::Cow","std::num::NonZeroI128","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::collections::Bound","std::ops::Range","std::collections::HashMap","std::num::NonZeroU16","std::num::NonZeroU64","std::num::NonZeroU128","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::sync::Arc","std::num::NonZeroUsize","std::collections::HashSet","std::ops::RangeInclusive","std::string::String","std::vec::Vec"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroI16","std::num::NonZeroU32","std::net::SocketAddrV4","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::time::Duration","std::sync::Arc","std::result::Result","std::collections::BTreeSet","std::collections::VecDeque","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::net::IpAddr","std::sync::atomic::AtomicU16","std::rc::Rc","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::sync::Mutex","std::num::NonZeroUsize","std::num::NonZeroU16","std::sync::RwLock","std::ops::RangeInclusive","std::num::NonZeroI8","std::ops::Range","std::num::NonZeroI64","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::collections::HashMap","std::num::NonZeroU8","std::option::Option","std::collections::Bound","std::borrow::Cow","std::ffi::CString","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::vec::Vec","std::net::SocketAddr","std::num::NonZeroI128","std::num::NonZeroU64","std::num::NonZeroIsize","std::cell::Cell","std::net::Ipv6Addr","std::boxed::Box","std::num::NonZeroI32","std::collections::HashSet","std::time::SystemTime","std::cell::RefCell","std::string::String","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::sync::atomic::AtomicU32"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::borrow::Cow<'cow, T>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::borrow::Cow<'cow, T>>::decode(p0);
+<std::borrow::Cow<'cow, T>>::decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::BorrowDecode<'cow> for std::borrow::Cow<'cow, T>>::borrow_decode
'cow
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_alloc::<impl de::BorrowDecode<'cow> for std::borrow::Cow<'cow, T>>::borrow_decode":{"&'cow T":["de::BorrowDecode"],"D":["std::marker::Sized","de::BorrowDecoder"],"T":["std::borrow::ToOwned"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["std::marker::Sized","de::Decode","std::cmp::Ord","enc::Encode","de::BorrowDecode"],"V":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["std::cmp::Ord","de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","enc::Encode","de::Decode","std::cmp::Ord","de::BorrowDecode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::HashMap":{"K":["de::Decode","enc::Encode","std::hash::Hash","std::marker::Sized","de::BorrowDecode","std::cmp::Eq"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["de::Decode","std::cmp::Eq","std::marker::Sized","de::BorrowDecode","enc::Encode","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::LittleEndian","config::Configuration","config::Varint","config::NoLimit","config::Fixint","std::clone::impls::<impl std::clone::Clone for *const T>","std::clone::impls::<impl std::clone::Clone for *mut T>","config::BigEndian"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'cow> for std::borrow::Cow<'cow, T>>::borrow_decode":{"&'cow T":["std::sync::Arc","std::ffi::CString","std::boxed::Box","std::net::IpAddr","std::net::Ipv6Addr","std::borrow::Cow","std::time::Duration","std::sync::atomic::AtomicU64","std::rc::Rc","std::time::SystemTime","std::vec::Vec","std::num::NonZeroI8","std::collections::HashSet","std::num::NonZeroU64","std::marker::PhantomData","std::collections::BTreeSet","std::collections::BinaryHeap","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::collections::Bound","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::path::PathBuf","std::collections::HashMap","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::cell::Cell","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::net::SocketAddrV4","std::result::Result","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::option::Option","std::cell::RefCell","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::ops::Range","std::sync::RwLock","std::num::NonZeroU128","std::ops::RangeInclusive","std::string::String","std::net::SocketAddr","std::sync::Mutex","std::num::NonZeroI128","std::sync::atomic::AtomicI32"],"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"T":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::CStr","<T as std::borrow::ToOwned>","std::ffi::OsStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroIsize","std::ffi::CString","std::cell::Cell","std::num::NonZeroI64","std::option::Option","std::num::NonZeroI8","std::num::NonZeroU128","std::string::String","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroU8","std::cell::RefCell","std::sync::Arc","std::net::Ipv4Addr","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroU64","std::net::SocketAddrV4","std::net::IpAddr","std::net::SocketAddr","std::marker::PhantomData","std::time::Duration"],"V":["std::ffi::CString","std::path::PathBuf","std::collections::HashSet","std::sync::Mutex","std::collections::HashMap","std::collections::Bound","std::boxed::Box","std::ops::Range","std::sync::atomic::AtomicIsize","std::result::Result","std::sync::atomic::AtomicI16","std::sync::RwLock","std::num::NonZeroI128","std::num::NonZeroUsize","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::cell::Cell","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroU64","std::marker::PhantomData","std::net::Ipv6Addr","std::num::NonZeroIsize","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroI8","std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroI32","std::string::String","std::sync::atomic::AtomicBool","std::option::Option","std::net::SocketAddr","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::collections::BTreeMap","std::borrow::Cow","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::vec::Vec","std::sync::atomic::AtomicU8","std::time::SystemTime","std::num::NonZeroI64","std::cell::RefCell","std::num::NonZeroI16","std::collections::VecDeque","std::sync::Arc","std::time::Duration"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::ffi::CString","std::num::NonZeroU16","std::num::NonZeroI8","std::num::NonZeroI16","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroIsize","std::path::PathBuf","std::time::SystemTime","std::net::SocketAddrV4","std::cell::Cell","std::string::String","std::num::NonZeroI128","std::num::NonZeroU128","std::time::Duration","std::net::Ipv6Addr","std::marker::PhantomData","std::cell::RefCell","std::num::NonZeroI64","std::num::NonZeroU64","std::sync::Arc","std::net::SocketAddr","std::net::Ipv4Addr"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroI8","std::path::PathBuf","std::net::Ipv6Addr","std::num::NonZeroIsize","std::num::NonZeroU32","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroU16","std::num::NonZeroI32","std::net::Ipv4Addr","std::marker::PhantomData","std::num::NonZeroI128","std::time::Duration","std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroU8","std::time::SystemTime","std::rc::Rc","std::net::IpAddr","std::string::String","std::net::SocketAddrV4"]},"std::collections::Bound":{"T":["std::num::NonZeroI8","std::collections::HashMap","std::collections::BTreeSet","std::sync::RwLock","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::ops::RangeInclusive","std::num::NonZeroI16","std::vec::Vec","std::borrow::Cow","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::net::SocketAddrV6","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::cell::Cell","std::ops::Range","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::net::SocketAddr","std::num::NonZeroI128","std::net::Ipv4Addr","std::num::NonZeroU128","std::net::IpAddr","std::collections::Bound","std::collections::HashSet","std::path::PathBuf","std::num::NonZeroU16","std::boxed::Box","std::sync::Arc","std::option::Option","std::string::String","std::result::Result","std::rc::Rc","std::time::Duration","std::sync::Mutex","std::num::NonZeroU64","std::collections::BinaryHeap","std::num::NonZeroIsize","std::net::Ipv6Addr","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::num::NonZeroU8","std::ffi::CString","std::cell::RefCell","std::num::NonZeroU32"]},"std::collections::HashMap":{"K":["std::net::Ipv6Addr","std::sync::Arc","std::string::String","std::num::NonZeroI64","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroIsize","std::path::PathBuf","std::marker::PhantomData","std::collections::Bound","std::num::NonZeroU16","std::time::Duration","std::net::IpAddr","std::net::Ipv4Addr","std::num::NonZeroU64","std::time::SystemTime","std::net::SocketAddrV6","std::num::NonZeroI128","std::num::NonZeroI32","std::num::NonZeroU128","std::num::NonZeroU8"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroI32","std::boxed::Box","std::vec::Vec","std::num::NonZeroI8","std::net::IpAddr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::cell::Cell","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::net::SocketAddrV4","std::collections::BinaryHeap","std::num::NonZeroUsize","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::string::String","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::time::SystemTime","std::net::SocketAddrV6","std::sync::Arc","std::collections::HashMap","std::net::Ipv6Addr","std::result::Result","std::borrow::Cow","std::ops::Range","std::collections::Bound","std::time::Duration","std::path::PathBuf","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::sync::Mutex","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::num::NonZeroI128","std::collections::VecDeque","std::num::NonZeroI64","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::option::Option","std::cell::RefCell","std::sync::RwLock","std::collections::HashSet","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroU16","std::rc::Rc"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::string::String","std::net::SocketAddrV6","std::num::NonZeroUsize","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroU8","std::num::NonZeroI16","std::option::Option","std::ffi::CString","std::num::NonZeroI128","std::sync::Arc","std::num::NonZeroI64","std::num::NonZeroI32","std::net::IpAddr","std::net::Ipv6Addr","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroIsize","std::num::NonZeroU128"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::string::String","std::vec::Vec","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::time::Duration","std::marker::PhantomData","std::boxed::Box","std::cell::Cell","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroU128","std::rc::Rc","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::collections::VecDeque","std::num::NonZeroI128","std::cell::RefCell","std::sync::atomic::AtomicI16","std::collections::HashSet","std::sync::Mutex","std::net::Ipv4Addr","std::collections::BTreeMap","std::num::NonZeroIsize","std::collections::HashMap","std::ops::Range","std::num::NonZeroI8","std::option::Option","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::net::SocketAddrV6","std::path::PathBuf","std::sync::RwLock","std::ops::RangeInclusive","std::collections::BTreeSet","std::net::IpAddr","std::ffi::CString","std::num::NonZeroU64","std::borrow::Cow","std::sync::atomic::AtomicU32","std::result::Result","std::collections::Bound","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::num::NonZeroI16","std::num::NonZeroI64","std::sync::Arc","std::sync::atomic::AtomicU8","std::num::NonZeroU16"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::cell::Cell","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::net::IpAddr","std::borrow::Cow","std::vec::Vec","std::num::NonZeroI64","std::boxed::Box","std::ffi::CString","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::num::NonZeroU16","std::string::String","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::sync::RwLock","std::num::NonZeroU64","std::collections::BTreeSet","std::option::Option","std::net::SocketAddr","std::num::NonZeroUsize","std::path::PathBuf","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::net::SocketAddrV6","std::num::NonZeroU32","std::ops::Range","std::collections::HashMap","std::num::NonZeroU8","std::num::NonZeroI16","std::sync::Mutex","std::time::SystemTime","std::sync::Arc","std::collections::Bound","std::net::Ipv4Addr","std::rc::Rc","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::time::Duration","std::num::NonZeroI32","std::num::NonZeroIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::result::Result","std::ops::RangeInclusive"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroUsize","std::collections::VecDeque","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::time::Duration","std::time::SystemTime","std::cell::Cell","std::ops::Range","std::net::IpAddr","std::num::NonZeroI128","std::sync::Arc","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::num::NonZeroU16","std::num::NonZeroI32","std::result::Result","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::net::SocketAddrV6","std::rc::Rc","std::sync::atomic::AtomicI16","std::cell::RefCell","std::sync::atomic::AtomicI8","std::collections::HashSet","std::sync::atomic::AtomicU64","std::sync::RwLock","std::vec::Vec","std::num::NonZeroI8","std::borrow::Cow","std::net::SocketAddrV4","std::net::Ipv6Addr","std::path::PathBuf","std::num::NonZeroU128","std::ops::RangeInclusive","std::boxed::Box","std::collections::HashMap","std::option::Option","std::marker::PhantomData","std::num::NonZeroU8","std::string::String","std::sync::atomic::AtomicU16","std::ffi::CString","std::collections::BTreeSet","std::num::NonZeroU32","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::collections::Bound","std::num::NonZeroI16"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::net::SocketAddrV4","std::marker::PhantomData","std::ops::RangeInclusive","std::rc::Rc","std::sync::atomic::AtomicI8","std::boxed::Box","std::num::NonZeroI128","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::net::SocketAddrV6","std::net::Ipv4Addr","std::borrow::Cow","std::sync::atomic::AtomicI16","std::net::IpAddr","std::collections::HashSet","std::collections::BTreeMap","std::num::NonZeroI16","std::net::Ipv6Addr","std::option::Option","std::num::NonZeroI64","std::sync::Arc","std::sync::Mutex","std::sync::atomic::AtomicI64","std::cell::Cell","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::collections::Bound","std::num::NonZeroUsize","std::cell::RefCell","std::num::NonZeroI32","std::time::Duration","std::collections::HashMap","std::time::SystemTime","std::num::NonZeroIsize","std::sync::RwLock","std::num::NonZeroU16","std::num::NonZeroU128","std::ops::Range","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::result::Result","std::sync::atomic::AtomicU8","std::path::PathBuf","std::string::String","std::collections::VecDeque","std::collections::BinaryHeap","std::ffi::CString","std::vec::Vec"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'cow> for std::borrow::Cow<'cow, T>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'cow> for std::borrow::Cow<'cow, T>>::borrow_decode(p0);
+<std::borrow::Cow<'cow, T>>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl enc::Encode for std::borrow::Cow<'cow, T>>::encode
'cow
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::borrow::Cow<'cow, T>>::encode":{"&'a T":["enc::Encode"],"E":["std::marker::Sized","enc::Encoder"],"T":["std::borrow::ToOwned"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"K":["std::marker::Sized","enc::Encode","de::Decode","std::cmp::Ord","de::BorrowDecode"],"V":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::marker::Sized","std::cmp::Ord","de::Decode","enc::Encode"]},"std::collections::Bound":{"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::HashMap":{"K":["std::marker::Sized","std::cmp::Eq","de::BorrowDecode","de::Decode","enc::Encode","std::hash::Hash"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode","std::cmp::Eq","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::NoLimit","config::BigEndian","config::Configuration","std::clone::impls::<impl std::clone::Clone for &T>","config::Limit","config::Fixint","config::Varint"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SizeWriter","features::impl_std::IoWriter","enc::write::SliceWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::borrow::Cow<'cow, T>>::encode":{"&'a T":["std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::result::Result","std::net::IpAddr","std::marker::PhantomData","std::collections::Bound","std::time::Duration","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::num::NonZeroU32","std::option::Option","std::collections::BTreeMap","std::cell::RefCell","std::num::NonZeroI64","std::sync::RwLock","std::cell::Cell","std::sync::atomic::AtomicU8","std::sync::Arc","std::borrow::Cow","std::rc::Rc","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::num::NonZeroI16","std::net::SocketAddr","std::net::SocketAddrV4","std::ops::Range","std::time::SystemTime","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::num::NonZeroU8","std::collections::HashMap","std::sync::atomic::AtomicU16","std::string::String","std::sync::atomic::AtomicU32","std::boxed::Box","std::ops::RangeInclusive","std::num::NonZeroI32","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroIsize","std::num::NonZeroI128","std::sync::Mutex","std::num::NonZeroU16","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::vec::Vec","enc::impls::<impl enc::Encode for &'a T>","std::ffi::CString","std::collections::BinaryHeap","std::collections::HashSet"],"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"],"T":["std::ffi::OsStr","std::path::Path","std::ffi::CStr","<T as std::borrow::ToOwned>"]},"features::impl_std::IoWriter":{"W":["&std::io::Stderr","&std::process::ChildStdin","&'a std::os::unix::net::UnixStream","std::io::impls::<impl std::io::Write for &mut W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::fs::File","std::os::unix::net::UnixStream","std::fs::File","std::io::StderrLock<'_>","std::io::Stdout","&std::net::TcpStream","std::vec::Vec<u8, A>","std::io::Cursor<[u8; N]>","std::sys::unix::stdio::Stdout","std::collections::VecDeque<u8, A>","std::io::StdoutLock<'_>","std::io::stdio::StdoutRaw","std::io::BorrowedCursor<'a>","std::io::Cursor<&mut [u8]>","std::net::TcpStream","std::io::stdio::StderrRaw","std::io::LineWriter<W>","std::io::Stderr","std::process::ChildStdin","std::io::BufWriter<W>","&std::io::Stdout","std::io::Sink","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stderr","&std::io::Sink","std::io::Cursor<std::vec::Vec<u8, A>>","std::boxed::Box<W>"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroU8","std::rc::Rc","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroU128","std::cell::Cell","std::num::NonZeroU64","std::num::NonZeroUsize","std::net::Ipv6Addr","std::time::Duration","std::num::NonZeroU32","std::num::NonZeroI8","std::net::SocketAddrV6","std::net::SocketAddrV4","std::time::SystemTime","std::net::Ipv4Addr","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroI64","std::ffi::CString","std::num::NonZeroIsize","std::net::SocketAddr"],"V":["std::time::Duration","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::time::SystemTime","std::collections::BinaryHeap","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::ffi::CString","std::collections::Bound","std::sync::Arc","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::net::IpAddr","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::net::SocketAddrV4","std::cell::Cell","std::collections::HashMap","std::sync::Mutex","std::net::SocketAddr","std::num::NonZeroU64","std::boxed::Box","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroU128","std::num::NonZeroU32","std::cell::RefCell","std::borrow::Cow","std::sync::atomic::AtomicU8","std::rc::Rc","std::net::Ipv6Addr","std::ops::Range","std::num::NonZeroI8","std::result::Result","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::vec::Vec","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::collections::HashSet","std::option::Option","std::num::NonZeroI64","std::marker::PhantomData","std::string::String","std::sync::RwLock","std::num::NonZeroI32","std::num::NonZeroU16"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::marker::PhantomData","std::num::NonZeroI8","std::num::NonZeroU32","std::net::SocketAddrV4","std::num::NonZeroU16","std::option::Option","std::num::NonZeroIsize","std::path::PathBuf","std::num::NonZeroUsize","std::net::Ipv6Addr","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroI128","std::net::IpAddr","std::rc::Rc","std::time::SystemTime","std::string::String","std::num::NonZeroI16","std::num::NonZeroI32","std::ffi::CString","std::cell::RefCell","std::num::NonZeroU64","std::net::SocketAddr","std::net::SocketAddrV6"]},"std::collections::BinaryHeap":{"T":["std::sync::Arc","std::cell::Cell","std::ffi::CString","std::num::NonZeroU128","std::marker::PhantomData","std::time::Duration","std::num::NonZeroI128","std::num::NonZeroI8","std::net::Ipv6Addr","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroU32","std::string::String","std::time::SystemTime","std::rc::Rc","std::num::NonZeroI64","std::num::NonZeroU8","std::num::NonZeroUsize","std::net::Ipv4Addr","std::num::NonZeroI16","std::num::NonZeroIsize","std::cell::RefCell"]},"std::collections::Bound":{"T":["std::boxed::Box","std::rc::Rc","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::collections::HashMap","std::num::NonZeroU128","std::marker::PhantomData","std::vec::Vec","std::string::String","std::option::Option","std::sync::RwLock","std::num::NonZeroU8","std::ffi::CString","std::cell::Cell","std::result::Result","std::collections::BinaryHeap","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::borrow::Cow","std::net::Ipv6Addr","std::ops::Range","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::collections::BTreeMap","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroUsize","std::collections::VecDeque","std::num::NonZeroI128","std::num::NonZeroI32","std::collections::Bound","std::sync::Mutex","std::sync::Arc","std::time::Duration","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::time::SystemTime","std::net::SocketAddrV4","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroI8","std::cell::RefCell","std::collections::HashSet"]},"std::collections::HashMap":{"K":["std::time::Duration","std::num::NonZeroUsize","std::marker::PhantomData","std::string::String","std::ffi::CString","std::num::NonZeroI64","std::num::NonZeroI16","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroU8","std::net::Ipv4Addr","std::rc::Rc"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::result::Result","std::marker::PhantomData","std::collections::BTreeMap","std::option::Option","std::num::NonZeroI128","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::borrow::Cow","std::collections::BTreeSet","std::collections::Bound","std::sync::atomic::AtomicU32","std::sync::Arc","std::sync::atomic::AtomicU64","std::ops::Range","std::num::NonZeroU64","std::num::NonZeroU16","std::sync::Mutex","std::vec::Vec","std::collections::HashMap","std::ffi::CString","std::rc::Rc","std::num::NonZeroI8","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::net::SocketAddr","std::net::IpAddr","std::path::PathBuf","std::time::Duration","std::net::SocketAddrV6","std::collections::HashSet","std::boxed::Box","std::num::NonZeroU32","std::num::NonZeroIsize","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::time::SystemTime","std::cell::Cell","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::sync::RwLock","std::num::NonZeroI64","std::ops::RangeInclusive","std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::string::String"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::option::Option","std::num::NonZeroU32","std::num::NonZeroU128","std::num::NonZeroI64","std::net::SocketAddrV6","std::num::NonZeroI128","std::marker::PhantomData","std::collections::Bound","std::net::SocketAddrV4","std::num::NonZeroI8","std::sync::Arc","std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroI16"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::num::NonZeroIsize","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::num::NonZeroU8","std::boxed::Box","std::sync::RwLock","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::ops::Range","std::vec::Vec","std::option::Option","std::net::SocketAddrV4","std::marker::PhantomData","std::num::NonZeroI64","std::ops::RangeInclusive","std::cell::RefCell","std::num::NonZeroU64","std::collections::BinaryHeap","std::cell::Cell","std::borrow::Cow","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::time::Duration","std::num::NonZeroU32","std::net::SocketAddr","std::path::PathBuf","std::num::NonZeroU128","std::time::SystemTime","std::collections::HashMap","std::sync::Arc","std::rc::Rc","std::sync::Mutex","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::collections::Bound","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::ffi::CString","std::sync::atomic::AtomicI16","std::string::String","std::result::Result","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::num::NonZeroI128","std::num::NonZeroI8","std::net::Ipv4Addr"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroU16","std::collections::HashMap","std::num::NonZeroU64","std::time::Duration","std::borrow::Cow","std::ffi::CString","std::collections::Bound","std::ops::Range","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::collections::HashSet","std::num::NonZeroU32","std::net::Ipv4Addr","std::path::PathBuf","std::net::SocketAddr","std::num::NonZeroI64","std::string::String","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::time::SystemTime","std::option::Option","std::sync::Arc","std::num::NonZeroU128","std::net::SocketAddrV4","std::boxed::Box","std::net::SocketAddrV6","std::num::NonZeroUsize","std::net::IpAddr","std::ops::RangeInclusive","std::cell::RefCell","std::num::NonZeroI128","std::result::Result","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::vec::Vec","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::sync::Mutex","std::rc::Rc","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::cell::Cell","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::num::NonZeroIsize","std::sync::RwLock","std::sync::atomic::AtomicI32"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::RwLock","std::cell::Cell","std::net::Ipv4Addr","std::collections::Bound","std::collections::BinaryHeap","std::time::Duration","std::net::IpAddr","std::sync::Mutex","std::option::Option","std::num::NonZeroU16","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::ffi::CString","std::collections::BTreeSet","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::ops::RangeInclusive","std::borrow::Cow","std::net::SocketAddrV6","std::net::SocketAddr","std::result::Result","std::time::SystemTime","std::sync::Arc","std::num::NonZeroU128","std::vec::Vec","std::string::String","std::num::NonZeroU32","std::rc::Rc","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::collections::HashSet","std::num::NonZeroI8","std::boxed::Box","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::path::PathBuf","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::cell::RefCell","std::marker::PhantomData","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::net::SocketAddrV4","std::ops::Range","std::net::Ipv6Addr","std::sync::atomic::AtomicU16"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::net::SocketAddrV4","std::result::Result","std::num::NonZeroI64","std::num::NonZeroU64","std::vec::Vec","std::collections::BTreeMap","std::collections::BTreeSet","std::cell::Cell","std::string::String","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::num::NonZeroI32","std::sync::Arc","std::boxed::Box","std::ops::Range","std::collections::Bound","std::option::Option","std::collections::VecDeque","std::ffi::CString","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::num::NonZeroU8","std::rc::Rc","std::net::IpAddr","std::collections::HashMap","std::collections::HashSet","std::sync::atomic::AtomicI32","std::borrow::Cow","std::sync::atomic::AtomicU16","std::cell::RefCell","std::num::NonZeroI16","std::num::NonZeroU16","std::num::NonZeroU128","std::sync::RwLock","std::time::Duration","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::sync::Mutex","std::collections::BinaryHeap","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::path::PathBuf","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::marker::PhantomData"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::borrow::Cow<'cow, T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_alloc::<impl enc::Encode for std::borrow::Cow<'cow, T>>::encode(p0, p1);
+crate::features::impl_alloc::<impl enc::Encode for std::borrow::Cow<'cow, T>>::encode(p0, p1);
+<std::borrow::Cow<'cow, T>>::encode(p0, p1);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::rc::Rc<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"features::impl_alloc::<impl de::Decode for std::rc::Rc<T>>::decode":{"D":["de::Decoder","std::marker::Sized"],"T":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Ord"],"V":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["de::Decode","enc::Encode","std::cmp::Ord","de::BorrowDecode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","std::cmp::Ord","de::Decode"]},"std::collections::Bound":{"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::HashMap":{"K":["std::hash::Hash","std::marker::Sized","de::Decode","de::BorrowDecode","std::cmp::Eq","enc::Encode"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::marker::Sized","enc::Encode","de::Decode","std::cmp::Eq","std::hash::Hash","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Varint","std::clone::impls::<impl std::clone::Clone for &T>","config::LittleEndian","config::Limit","config::BigEndian","config::NoLimit","config::Configuration","config::Fixint"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::rc::Rc<T>>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"T":["std::collections::Bound","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::time::Duration","std::num::NonZeroU128","std::net::SocketAddrV6","std::ffi::CString","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::cell::Cell","std::rc::Rc","std::num::NonZeroI32","std::collections::BTreeMap","std::ops::Range","std::vec::Vec","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::string::String","std::sync::atomic::AtomicBool","std::result::Result","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::collections::HashSet","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::num::NonZeroU64","std::boxed::Box","std::num::NonZeroI8","std::num::NonZeroI16","std::num::NonZeroU8","std::num::NonZeroIsize","std::borrow::Cow","std::net::Ipv6Addr","std::num::NonZeroU16","std::cell::RefCell","std::sync::Arc","std::collections::HashMap","std::option::Option","std::sync::RwLock","std::num::NonZeroUsize","std::collections::BinaryHeap","std::net::IpAddr"]},"std::borrow::Cow":{"B":["std::path::Path","<T as std::borrow::ToOwned>","std::ffi::OsStr","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI32","std::time::SystemTime","std::sync::Arc","std::num::NonZeroI128","std::time::Duration","std::marker::PhantomData","std::num::NonZeroUsize","std::num::NonZeroU64","std::path::PathBuf","std::num::NonZeroU128","std::num::NonZeroIsize","std::num::NonZeroU32","std::num::NonZeroI16","std::num::NonZeroI64","std::rc::Rc","std::net::IpAddr","std::cell::RefCell","std::string::String"],"V":["std::cell::RefCell","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::net::SocketAddr","std::num::NonZeroI128","std::net::SocketAddrV4","std::result::Result","std::boxed::Box","std::collections::HashMap","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::vec::Vec","std::num::NonZeroU16","std::string::String","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::sync::Arc","std::num::NonZeroI8","std::cell::Cell","std::num::NonZeroI16","std::collections::BTreeMap","std::sync::Mutex","std::sync::atomic::AtomicBool","std::collections::Bound","std::marker::PhantomData","std::rc::Rc","std::collections::BTreeSet","std::time::Duration","std::collections::HashSet","std::path::PathBuf","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::sync::RwLock","std::borrow::Cow","std::ffi::CString","std::option::Option","std::net::SocketAddrV6","std::ops::Range","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::num::NonZeroU8","std::time::SystemTime"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::ffi::CString","std::net::SocketAddr","std::num::NonZeroI64","std::net::Ipv4Addr","std::cell::Cell","std::net::Ipv6Addr","std::num::NonZeroU128","std::num::NonZeroU32","std::path::PathBuf","std::net::SocketAddrV6","std::string::String","std::time::Duration","std::num::NonZeroI128","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroU16","std::time::SystemTime","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroI16"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddrV4","std::num::NonZeroU16","std::string::String","std::cell::RefCell","std::num::NonZeroU32","std::ffi::CString","std::num::NonZeroI128","std::num::NonZeroIsize","std::marker::PhantomData","std::num::NonZeroI8","std::num::NonZeroU64","std::rc::Rc","std::num::NonZeroI16","std::net::IpAddr","std::time::Duration","std::net::Ipv6Addr","std::num::NonZeroUsize","std::path::PathBuf","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroU8","std::num::NonZeroI32","std::option::Option"]},"std::collections::Bound":{"T":["std::marker::PhantomData","std::num::NonZeroI16","std::ops::RangeInclusive","std::net::Ipv4Addr","std::sync::Mutex","std::collections::BinaryHeap","std::num::NonZeroI32","std::collections::Bound","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::collections::HashMap","std::num::NonZeroUsize","std::ffi::CString","std::string::String","std::sync::atomic::AtomicI64","std::rc::Rc","std::option::Option","std::num::NonZeroU128","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::net::IpAddr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::vec::Vec","std::time::SystemTime","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::num::NonZeroU16","std::num::NonZeroU32","std::cell::Cell","std::boxed::Box","std::collections::BTreeMap","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::sync::RwLock","std::num::NonZeroU8","std::collections::BTreeSet","std::sync::Arc","std::collections::HashSet","std::sync::atomic::AtomicI32","std::time::Duration","std::collections::VecDeque","std::cell::RefCell","std::sync::atomic::AtomicU64","std::borrow::Cow","std::ops::Range","std::num::NonZeroI128","std::net::SocketAddrV6","std::num::NonZeroI8","std::result::Result","std::path::PathBuf"]},"std::collections::HashMap":{"K":["std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroU64","std::option::Option","std::net::SocketAddrV6","std::num::NonZeroUsize","std::rc::Rc","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroU32","std::num::NonZeroI64","std::num::NonZeroI16","std::num::NonZeroU8","std::num::NonZeroI8","std::string::String"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::marker::PhantomData","std::collections::Bound","std::net::IpAddr","std::boxed::Box","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::num::NonZeroI32","std::string::String","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::ops::RangeInclusive","std::cell::RefCell","std::vec::Vec","std::sync::Arc","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::borrow::Cow","std::time::SystemTime","std::num::NonZeroU16","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::rc::Rc","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroI128","std::num::NonZeroU128","std::collections::HashSet","std::collections::HashMap","std::collections::BTreeSet","std::net::Ipv6Addr","std::num::NonZeroIsize","std::cell::Cell","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::time::Duration","std::num::NonZeroU32","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::result::Result","std::sync::atomic::AtomicU8","std::sync::Mutex","std::num::NonZeroU64","std::sync::RwLock","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::option::Option","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::collections::BinaryHeap","std::ops::Range","std::ffi::CString"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::ffi::CString","std::num::NonZeroU16","std::num::NonZeroU32","std::net::SocketAddrV4","std::option::Option","std::num::NonZeroI16","std::num::NonZeroU8","std::marker::PhantomData","std::net::IpAddr","std::net::Ipv4Addr","std::sync::Arc","std::num::NonZeroU64","std::num::NonZeroUsize","std::rc::Rc","std::time::SystemTime","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroI32"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::collections::BinaryHeap","std::num::NonZeroU32","std::collections::HashSet","std::sync::atomic::AtomicU8","std::net::IpAddr","std::time::SystemTime","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::result::Result","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::num::NonZeroI8","std::net::Ipv6Addr","std::num::NonZeroI16","std::collections::HashMap","std::string::String","std::borrow::Cow","std::path::PathBuf","std::ops::RangeInclusive","std::net::SocketAddrV4","std::marker::PhantomData","std::boxed::Box","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::vec::Vec","std::sync::Mutex","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::cell::Cell","std::num::NonZeroU64","std::cell::RefCell","std::collections::BTreeSet","std::num::NonZeroI64","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::collections::Bound","std::num::NonZeroU16","std::sync::Arc","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::collections::BTreeMap","std::num::NonZeroU128","std::ffi::CString","std::option::Option","std::rc::Rc","std::ops::Range","std::time::Duration","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::num::NonZeroIsize"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::HashMap","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::sync::Mutex","std::result::Result","std::num::NonZeroU8","std::net::SocketAddrV4","std::net::SocketAddrV6","std::sync::Arc","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::num::NonZeroU64","std::num::NonZeroU128","std::ffi::CString","std::boxed::Box","std::ops::Range","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::num::NonZeroU16","std::time::Duration","std::net::IpAddr","std::collections::Bound","std::vec::Vec","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroI64","std::borrow::Cow","std::num::NonZeroIsize","std::sync::RwLock","std::marker::PhantomData","std::time::SystemTime","std::cell::Cell","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::rc::Rc","std::net::Ipv4Addr","std::net::SocketAddr","std::string::String","std::cell::RefCell","std::num::NonZeroUsize","std::collections::HashSet","std::collections::BTreeSet","std::collections::BinaryHeap","std::num::NonZeroU32","std::option::Option","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::option::Option","std::num::NonZeroI16","std::net::Ipv6Addr","std::cell::Cell","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::rc::Rc","std::collections::HashSet","std::num::NonZeroIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::result::Result","std::net::IpAddr","std::string::String","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::marker::PhantomData","std::vec::Vec","std::collections::BinaryHeap","std::borrow::Cow","std::collections::BTreeMap","std::ffi::CString","std::ops::Range","std::num::NonZeroI64","std::net::SocketAddrV4","std::boxed::Box","std::collections::VecDeque","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::path::PathBuf","std::num::NonZeroU8","std::collections::Bound","std::sync::atomic::AtomicU8","std::time::Duration","std::time::SystemTime","std::collections::BTreeSet","std::sync::Mutex","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::sync::RwLock","std::num::NonZeroI8","std::ops::RangeInclusive","std::num::NonZeroUsize","std::collections::HashMap","std::num::NonZeroU64","std::num::NonZeroI128","std::sync::Arc"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::num::NonZeroI16","std::borrow::Cow","std::sync::atomic::AtomicU32","std::option::Option","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroUsize","std::string::String","std::rc::Rc","std::num::NonZeroU32","std::ops::Range","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::num::NonZeroU64","std::collections::HashMap","std::net::SocketAddrV6","std::collections::HashSet","std::num::NonZeroU16","std::time::SystemTime","std::num::NonZeroU8","std::net::SocketAddr","std::sync::RwLock","std::time::Duration","std::collections::BinaryHeap","std::path::PathBuf","std::ffi::CString","std::boxed::Box","std::cell::Cell","std::sync::Arc","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::num::NonZeroU128","std::collections::VecDeque","std::vec::Vec","std::sync::atomic::AtomicI16","std::sync::Mutex","std::num::NonZeroI32","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::collections::Bound","std::marker::PhantomData","std::result::Result","std::net::Ipv6Addr","std::cell::RefCell","std::collections::BTreeMap","std::sync::atomic::AtomicU16"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::rc::Rc<T>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::rc::Rc<T>>::decode(p0);
+<std::rc::Rc<T>>::decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::rc::Rc<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::rc::Rc<T>>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"],"T":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::cmp::Ord","enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["enc::Encode","std::cmp::Ord","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::BorrowDecode","std::cmp::Ord","std::marker::Sized","de::Decode"]},"std::collections::Bound":{"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::HashMap":{"K":["de::Decode","std::marker::Sized","de::BorrowDecode","std::hash::Hash","enc::Encode","std::cmp::Eq"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::cmp::Eq","std::hash::Hash","enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::Configuration","std::clone::impls::<impl std::clone::Clone for *const T>","config::NoLimit","config::Varint","config::Limit","config::BigEndian","config::Fixint"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::rc::Rc<T>>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"T":["std::ffi::CString","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::rc::Rc","std::sync::Mutex","std::borrow::Cow","std::ops::RangeInclusive","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::time::SystemTime","std::sync::atomic::AtomicI32","std::vec::Vec","std::num::NonZeroU8","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::string::String","std::num::NonZeroU128","std::result::Result","std::sync::atomic::AtomicI16","std::ops::Range","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::cell::RefCell","std::net::SocketAddr","std::num::NonZeroI16","std::cell::Cell","std::num::NonZeroI8","std::sync::Arc","std::collections::Bound","std::net::SocketAddrV6","std::collections::BTreeSet","std::collections::HashMap","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::time::Duration","std::sync::RwLock","std::path::PathBuf","std::net::IpAddr","std::marker::PhantomData","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::collections::HashSet","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::num::NonZeroI64","std::collections::VecDeque","std::collections::BTreeMap","std::boxed::Box","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroUsize","std::option::Option"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroIsize","std::num::NonZeroI16","std::net::SocketAddrV6","std::path::PathBuf","std::cell::Cell","std::num::NonZeroU8","std::net::IpAddr","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroU64","std::rc::Rc","std::ffi::CString","std::num::NonZeroU128","std::time::Duration","std::num::NonZeroI8","std::num::NonZeroUsize","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroI64","std::net::Ipv6Addr","std::option::Option"],"V":["std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::ffi::CString","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::string::String","std::net::SocketAddrV4","std::sync::Arc","std::sync::RwLock","std::collections::HashSet","std::collections::BTreeSet","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::collections::HashMap","std::time::SystemTime","std::result::Result","std::num::NonZeroI32","std::num::NonZeroU64","std::num::NonZeroI64","std::time::Duration","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroU16","std::path::PathBuf","std::num::NonZeroU128","std::num::NonZeroI128","std::collections::Bound","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::vec::Vec","std::net::SocketAddrV6","std::net::IpAddr","std::collections::VecDeque","std::collections::BinaryHeap","std::net::Ipv6Addr","std::sync::Mutex","std::marker::PhantomData","std::rc::Rc","std::cell::Cell","std::ops::Range","std::ops::RangeInclusive","std::num::NonZeroIsize","std::option::Option","std::sync::atomic::AtomicU64","std::boxed::Box","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::cell::RefCell","std::sync::atomic::AtomicU8"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI128","std::net::Ipv4Addr","std::option::Option","std::num::NonZeroU32","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroUsize","std::net::Ipv6Addr","std::num::NonZeroU64","std::net::SocketAddrV6","std::time::SystemTime","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroI16","std::num::NonZeroI32","std::string::String","std::ffi::CString","std::sync::Arc","std::cell::RefCell","std::net::IpAddr","std::num::NonZeroI8","std::num::NonZeroIsize"]},"std::collections::BinaryHeap":{"T":["std::cell::RefCell","std::cell::Cell","std::ffi::CString","std::num::NonZeroU8","std::string::String","std::num::NonZeroIsize","std::net::SocketAddrV6","std::net::SocketAddrV4","std::net::SocketAddr","std::rc::Rc","std::option::Option","std::time::Duration","std::num::NonZeroU64","std::marker::PhantomData","std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroI8","std::num::NonZeroI128","std::num::NonZeroI16","std::net::IpAddr","std::sync::Arc"]},"std::collections::Bound":{"T":["std::collections::BTreeMap","std::collections::Bound","std::cell::Cell","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::net::SocketAddr","std::result::Result","std::path::PathBuf","std::boxed::Box","std::net::SocketAddrV6","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::cell::RefCell","std::time::Duration","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::vec::Vec","std::net::Ipv4Addr","std::num::NonZeroU16","std::ffi::CString","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::net::Ipv6Addr","std::collections::BTreeSet","std::num::NonZeroI128","std::collections::HashMap","std::sync::Arc","std::option::Option","std::num::NonZeroI32","std::time::SystemTime","std::string::String","std::ops::Range","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::collections::HashSet","std::borrow::Cow","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::sync::Mutex","std::rc::Rc","std::ops::RangeInclusive","std::sync::RwLock","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::num::NonZeroU128","std::num::NonZeroU32","std::num::NonZeroI64","std::num::NonZeroUsize"]},"std::collections::HashMap":{"K":["std::num::NonZeroI16","std::string::String","std::net::SocketAddrV6","std::path::PathBuf","std::sync::Arc","std::collections::Bound","std::marker::PhantomData","std::num::NonZeroU16","std::num::NonZeroI32","std::num::NonZeroU64","std::num::NonZeroU128","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroIsize"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicU32","std::ops::Range","std::net::Ipv6Addr","std::sync::Mutex","std::sync::RwLock","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::boxed::Box","std::net::SocketAddrV4","std::ops::RangeInclusive","std::result::Result","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::string::String","std::path::PathBuf","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::num::NonZeroU64","std::num::NonZeroU32","std::num::NonZeroI32","std::num::NonZeroI64","std::num::NonZeroUsize","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::option::Option","std::num::NonZeroU128","std::collections::HashMap","std::rc::Rc","std::ffi::CString","std::marker::PhantomData","std::collections::HashSet","std::cell::Cell","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::sync::Arc","std::net::SocketAddr","std::net::IpAddr","std::borrow::Cow","std::sync::atomic::AtomicU64","std::time::SystemTime","std::time::Duration","std::collections::Bound","std::vec::Vec","std::num::NonZeroU8","std::net::SocketAddrV6","std::collections::VecDeque","std::num::NonZeroU16"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::net::SocketAddr","std::num::NonZeroIsize","std::num::NonZeroI16","std::ffi::CString","std::sync::Arc","std::num::NonZeroU64","std::path::PathBuf","std::num::NonZeroU8","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroU16","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroI8","std::time::Duration","std::num::NonZeroI64","std::net::SocketAddrV6"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::net::Ipv6Addr","std::num::NonZeroI128","std::net::IpAddr","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::collections::Bound","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::cell::RefCell","std::marker::PhantomData","std::collections::BTreeMap","std::time::SystemTime","std::option::Option","std::string::String","std::path::PathBuf","std::time::Duration","std::net::SocketAddrV6","std::borrow::Cow","std::boxed::Box","std::num::NonZeroU8","std::ops::Range","std::num::NonZeroU32","std::sync::Arc","std::sync::atomic::AtomicI32","std::collections::HashMap","std::cell::Cell","std::net::Ipv4Addr","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::vec::Vec","std::collections::BTreeSet","std::num::NonZeroI32","std::collections::BinaryHeap","std::num::NonZeroI16","std::num::NonZeroI64","std::collections::HashSet","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::sync::RwLock","std::result::Result","std::net::SocketAddr","std::sync::Mutex","std::sync::atomic::AtomicI16","std::ffi::CString"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicU16","std::sync::Mutex","std::path::PathBuf","std::ops::RangeInclusive","std::num::NonZeroU16","std::num::NonZeroIsize","std::collections::VecDeque","std::num::NonZeroI64","std::time::SystemTime","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::ffi::CString","std::sync::atomic::AtomicUsize","std::collections::Bound","std::net::SocketAddrV4","std::collections::BTreeMap","std::collections::HashSet","std::num::NonZeroI128","std::sync::Arc","std::sync::RwLock","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::cell::RefCell","std::marker::PhantomData","std::result::Result","std::collections::BinaryHeap","std::collections::BTreeSet","std::num::NonZeroU8","std::option::Option","std::net::IpAddr","std::ops::Range","std::num::NonZeroU128","std::cell::Cell","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::boxed::Box","std::rc::Rc","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::net::SocketAddrV6","std::time::Duration","std::num::NonZeroU64","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::borrow::Cow","std::vec::Vec","std::sync::atomic::AtomicIsize","std::string::String","std::collections::HashMap","std::net::SocketAddr","std::net::Ipv4Addr"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroUsize","std::time::SystemTime","std::sync::atomic::AtomicU32","std::boxed::Box","std::path::PathBuf","std::num::NonZeroI64","std::collections::Bound","std::marker::PhantomData","std::collections::HashSet","std::sync::atomic::AtomicI32","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::net::Ipv4Addr","std::num::NonZeroU16","std::ffi::CString","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::num::NonZeroIsize","std::collections::VecDeque","std::collections::BTreeSet","std::ops::Range","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::sync::RwLock","std::net::IpAddr","std::num::NonZeroU64","std::result::Result","std::borrow::Cow","std::string::String","std::sync::Arc","std::option::Option","std::vec::Vec","std::time::Duration","std::num::NonZeroI32","std::net::Ipv6Addr","std::cell::RefCell","std::net::SocketAddrV4","std::rc::Rc","std::sync::atomic::AtomicU16","std::sync::Mutex","std::net::SocketAddr","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::cell::Cell","std::collections::BinaryHeap","std::num::NonZeroI128","std::collections::BTreeMap","std::ops::RangeInclusive"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::net::IpAddr","std::num::NonZeroU8","std::net::SocketAddrV6","std::collections::HashMap","std::sync::atomic::AtomicI64","std::ffi::CString","std::collections::BinaryHeap","std::time::SystemTime","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::vec::Vec","std::net::Ipv4Addr","std::cell::Cell","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::option::Option","std::num::NonZeroU32","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroIsize","std::num::NonZeroI32","std::cell::RefCell","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::collections::Bound","std::string::String","std::collections::VecDeque","std::sync::RwLock","std::num::NonZeroUsize","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::net::Ipv6Addr","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::result::Result","std::sync::atomic::AtomicI16","std::collections::HashSet","std::marker::PhantomData","std::collections::BTreeMap","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::net::SocketAddr","std::sync::Arc","std::time::Duration","std::num::NonZeroI8","std::boxed::Box","std::borrow::Cow","std::sync::Mutex","std::sync::atomic::AtomicI32","std::ops::Range","std::rc::Rc"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::rc::Rc<T>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::rc::Rc<T>>::borrow_decode(p0);
+<std::rc::Rc<T>>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl enc::Encode for std::rc::Rc<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::rc::Rc<T>>::encode":{"E":["enc::Encoder","std::marker::Sized"],"T":["enc::Encode"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized"],"V":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["de::BorrowDecode","std::cmp::Ord","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["enc::Encode","std::cmp::Eq","de::BorrowDecode","de::Decode","std::marker::Sized","std::hash::Hash"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["enc::Encode","std::cmp::Eq","std::hash::Hash","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Varint","config::Limit","std::clone::impls::<impl std::clone::Clone for &mut T>","config::BigEndian","config::NoLimit","config::Fixint","config::LittleEndian","config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SizeWriter","enc::write::SliceWriter","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::rc::Rc<T>>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"T":["std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::net::IpAddr","std::sync::atomic::AtomicU64","std::result::Result","std::rc::Rc","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::path::PathBuf","std::num::NonZeroU32","std::num::NonZeroI128","std::collections::Bound","std::vec::Vec","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::cell::RefCell","std::collections::BTreeMap","std::string::String","std::net::SocketAddrV4","std::borrow::Cow","std::num::NonZeroI16","enc::impls::<impl enc::Encode for &'a T>","std::net::SocketAddr","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::cell::Cell","std::ffi::CString","std::option::Option","std::collections::HashSet","std::sync::Mutex","std::net::SocketAddrV6","std::sync::Arc","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::collections::BinaryHeap","std::num::NonZeroI8","std::time::Duration","std::collections::BTreeSet","std::boxed::Box","std::sync::atomic::AtomicU32","std::ops::Range","std::net::Ipv4Addr","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::marker::PhantomData","std::time::SystemTime","std::sync::RwLock","std::num::NonZeroU8"]},"features::impl_std::IoWriter":{"W":["&std::io::Stdout","std::io::BorrowedCursor<'a>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::StdoutLock<'_>","std::io::StderrLock<'_>","std::io::Stdout","&std::io::Sink","std::io::impls::<impl std::io::Write for &mut W>","&std::net::TcpStream","std::io::LineWriter<W>","&std::fs::File","std::net::TcpStream","&std::process::ChildStdin","std::boxed::Box<W>","std::vec::Vec<u8, A>","std::io::Cursor<[u8; N]>","std::io::stdio::StderrRaw","std::io::Cursor<&mut [u8]>","std::io::stdio::StdoutRaw","std::io::Cursor<std::vec::Vec<u8, A>>","std::os::unix::net::UnixStream","std::collections::VecDeque<u8, A>","std::io::BufWriter<W>","std::sys::unix::stdio::Stderr","std::io::Stderr","std::io::Sink","std::io::Cursor<std::boxed::Box<[u8], A>>","&'a std::os::unix::net::UnixStream","&std::io::Stderr","std::sys::unix::stdio::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::fs::File","std::process::ChildStdin"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::path::Path","<T as std::borrow::ToOwned>","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::option::Option","std::net::Ipv6Addr","std::num::NonZeroUsize","std::path::PathBuf","std::net::IpAddr","std::time::Duration","std::num::NonZeroU16","std::num::NonZeroI8","std::marker::PhantomData","std::num::NonZeroU128","std::num::NonZeroU32","std::net::SocketAddr","std::num::NonZeroU64","std::cell::Cell","std::num::NonZeroI64","std::string::String","std::rc::Rc","std::net::SocketAddrV6","std::num::NonZeroU8"],"V":["std::net::Ipv6Addr","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::num::NonZeroU8","std::cell::RefCell","std::collections::BTreeMap","std::num::NonZeroUsize","std::collections::HashSet","std::net::Ipv4Addr","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::collections::HashMap","std::option::Option","std::num::NonZeroI32","std::marker::PhantomData","std::sync::Arc","std::ffi::CString","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::ops::Range","std::time::SystemTime","std::collections::Bound","std::sync::atomic::AtomicI16","std::time::Duration","std::cell::Cell","std::result::Result","std::net::SocketAddr","std::borrow::Cow","std::string::String","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroU64","std::net::SocketAddrV6","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::boxed::Box","std::collections::BinaryHeap","std::sync::RwLock","std::net::IpAddr","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroI64","std::rc::Rc","std::vec::Vec"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroI64","std::option::Option","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroU8","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroU16","std::num::NonZeroI32","std::net::IpAddr","std::cell::Cell","std::num::NonZeroI16","std::net::Ipv6Addr","std::time::Duration","std::num::NonZeroI128","std::rc::Rc","std::marker::PhantomData","std::num::NonZeroI8","std::sync::Arc"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddrV6","std::num::NonZeroU128","std::cell::Cell","std::net::SocketAddr","std::path::PathBuf","std::option::Option","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroU16","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroUsize","std::net::IpAddr","std::num::NonZeroIsize","std::num::NonZeroI128","std::marker::PhantomData","std::rc::Rc","std::sync::Arc","std::time::Duration","std::num::NonZeroI16","std::net::Ipv6Addr","std::string::String","std::num::NonZeroU64","std::num::NonZeroU32","std::net::Ipv4Addr","std::ffi::CString","std::cell::RefCell"]},"std::collections::Bound":{"T":["std::num::NonZeroI32","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::string::String","std::collections::BTreeMap","std::rc::Rc","std::net::IpAddr","std::collections::HashSet","std::sync::Mutex","std::sync::atomic::AtomicI32","std::vec::Vec","std::collections::BTreeSet","std::collections::BinaryHeap","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::sync::Arc","std::marker::PhantomData","std::num::NonZeroI128","std::num::NonZeroIsize","std::option::Option","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::ops::Range","std::net::Ipv6Addr","std::collections::Bound","std::cell::RefCell","std::path::PathBuf","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::cell::Cell","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::borrow::Cow","std::net::SocketAddrV6","std::num::NonZeroU16","std::time::SystemTime","std::num::NonZeroI8","std::result::Result","std::collections::VecDeque","std::boxed::Box","std::collections::HashMap","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::sync::RwLock","std::num::NonZeroUsize","std::ffi::CString","std::ops::RangeInclusive"]},"std::collections::HashMap":{"K":["std::net::SocketAddrV6","std::net::Ipv4Addr","std::sync::Arc","std::string::String","std::net::SocketAddrV4","std::rc::Rc","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroI128","std::marker::PhantomData","std::time::Duration","std::num::NonZeroI32","std::time::SystemTime","std::option::Option","std::num::NonZeroI16","std::num::NonZeroU16","std::num::NonZeroI64","std::ffi::CString","std::num::NonZeroIsize","std::num::NonZeroU64"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::collections::BinaryHeap","std::sync::Arc","std::collections::BTreeMap","std::result::Result","std::sync::atomic::AtomicU8","std::borrow::Cow","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::net::IpAddr","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::num::NonZeroI64","std::sync::Mutex","std::sync::atomic::AtomicU32","std::string::String","std::cell::Cell","std::path::PathBuf","std::sync::atomic::AtomicI16","std::boxed::Box","std::num::NonZeroI16","std::num::NonZeroU16","std::time::SystemTime","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::ops::RangeInclusive","std::time::Duration","std::vec::Vec","std::num::NonZeroI32","std::net::SocketAddrV4","std::num::NonZeroI8","std::ops::Range","std::rc::Rc","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::ffi::CString","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::collections::VecDeque","std::num::NonZeroUsize","std::num::NonZeroU32","std::collections::Bound","std::cell::RefCell","std::net::Ipv6Addr","std::sync::RwLock","std::collections::HashMap","std::num::NonZeroU64","std::num::NonZeroU128"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::string::String","std::ffi::CString","std::num::NonZeroU16","std::option::Option","std::net::Ipv6Addr","std::marker::PhantomData","std::num::NonZeroU64","std::num::NonZeroI64","std::num::NonZeroU128","std::net::SocketAddrV6","std::collections::Bound","std::net::Ipv4Addr","std::num::NonZeroU32"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::time::Duration","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::net::IpAddr","std::num::NonZeroIsize","std::option::Option","std::cell::RefCell","std::num::NonZeroUsize","std::sync::Arc","std::sync::atomic::AtomicUsize","std::vec::Vec","std::string::String","std::collections::Bound","std::num::NonZeroI16","std::net::Ipv4Addr","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::rc::Rc","std::collections::HashMap","std::sync::RwLock","std::sync::Mutex","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroU16","std::net::SocketAddrV4","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::collections::BinaryHeap","std::collections::HashSet","std::time::SystemTime","std::ffi::CString","std::ops::RangeInclusive","std::boxed::Box","std::num::NonZeroU64","std::borrow::Cow","std::num::NonZeroU8","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::net::SocketAddr","std::net::SocketAddrV6","std::result::Result","std::cell::Cell","std::ops::Range","std::sync::atomic::AtomicBool"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::cell::RefCell","std::collections::HashMap","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::num::NonZeroU16","std::time::SystemTime","std::collections::BinaryHeap","std::ops::Range","std::marker::PhantomData","std::sync::atomic::AtomicUsize","std::sync::Arc","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::boxed::Box","std::rc::Rc","std::num::NonZeroI128","std::sync::RwLock","std::sync::atomic::AtomicI16","std::borrow::Cow","std::ffi::CString","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::cell::Cell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::collections::HashSet","std::collections::VecDeque","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::option::Option","std::net::SocketAddrV4","std::num::NonZeroIsize","std::path::PathBuf","std::num::NonZeroU8","std::result::Result","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::string::String","std::sync::Mutex","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::collections::BTreeMap","std::num::NonZeroI16","std::net::SocketAddr","std::time::Duration","std::net::Ipv6Addr","std::vec::Vec","std::net::IpAddr","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::collections::Bound","std::num::NonZeroU128","std::num::NonZeroU64","std::num::NonZeroI64"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::collections::Bound","std::borrow::Cow","std::sync::Arc","std::net::SocketAddrV4","std::num::NonZeroI8","std::num::NonZeroI16","std::cell::RefCell","std::collections::HashMap","std::ops::Range","std::time::Duration","std::sync::Mutex","std::ops::RangeInclusive","std::string::String","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::vec::Vec","std::ffi::CString","std::num::NonZeroU64","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::path::PathBuf","std::sync::atomic::AtomicBool","std::collections::HashSet","std::net::Ipv6Addr","std::num::NonZeroU128","std::net::SocketAddrV6","std::collections::BinaryHeap","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::cell::Cell","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::net::IpAddr","std::boxed::Box","std::rc::Rc","std::option::Option","std::num::NonZeroI128","std::sync::RwLock","std::result::Result","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::net::Ipv4Addr","std::num::NonZeroU16","std::time::SystemTime","std::num::NonZeroUsize"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::rc::Rc","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::collections::Bound","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::ops::Range","std::collections::BinaryHeap","std::num::NonZeroU8","std::num::NonZeroI16","std::net::SocketAddrV4","std::num::NonZeroI8","std::vec::Vec","std::result::Result","std::marker::PhantomData","std::cell::Cell","std::num::NonZeroI32","std::num::NonZeroU128","std::ops::RangeInclusive","std::num::NonZeroUsize","std::time::SystemTime","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::net::IpAddr","std::ffi::CString","std::boxed::Box","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::sync::Mutex","std::num::NonZeroI128","std::sync::RwLock","std::collections::HashSet","std::net::Ipv4Addr","std::collections::HashMap","std::path::PathBuf","std::time::Duration","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::string::String","std::option::Option","std::cell::RefCell","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::collections::BTreeSet","std::num::NonZeroU64","std::borrow::Cow","std::sync::atomic::AtomicI16"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::rc::Rc<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_alloc::<impl enc::Encode for std::rc::Rc<T>>::encode(p0, p1);
+crate::features::impl_alloc::<impl enc::Encode for std::rc::Rc<T>>::encode(p0, p1);
+<std::rc::Rc<T>>::encode(p0, p1);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::rc::Rc<[T]>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"features::impl_alloc::<impl de::Decode for std::rc::Rc<[T]>>::decode":{"D":["de::Decoder","std::marker::Sized"],"T":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized"],"V":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::HashMap":{"K":["enc::Encode","de::Decode","std::cmp::Eq","std::marker::Sized","std::hash::Hash","de::BorrowDecode"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::hash::Hash","std::cmp::Eq","de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Varint","config::BigEndian","config::NoLimit","std::clone::impls::<impl std::clone::Clone for &T>","config::Configuration","config::Limit","config::LittleEndian","config::Fixint"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::rc::Rc<[T]>>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"T":["std::sync::RwLock","std::num::NonZeroI128","std::collections::HashMap","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::vec::Vec","std::collections::HashSet","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::net::Ipv4Addr","std::collections::BTreeSet","std::borrow::Cow","std::option::Option","std::sync::atomic::AtomicUsize","std::result::Result","std::num::NonZeroU128","std::ops::RangeInclusive","std::net::IpAddr","std::sync::Mutex","std::ops::Range","std::net::SocketAddrV4","std::num::NonZeroU64","std::collections::BTreeMap","std::string::String","std::sync::atomic::AtomicU32","std::rc::Rc","std::num::NonZeroIsize","std::cell::Cell","std::ffi::CString","std::time::SystemTime","std::sync::atomic::AtomicI16","std::sync::Arc","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::boxed::Box","std::time::Duration","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::net::Ipv6Addr","std::collections::Bound","std::num::NonZeroI64","std::cell::RefCell","std::collections::BinaryHeap","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroU8","std::marker::PhantomData"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::string::String","std::time::Duration","std::cell::Cell","std::num::NonZeroI8","std::num::NonZeroIsize","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroI16","std::cell::RefCell","std::net::SocketAddrV4","std::net::IpAddr","std::num::NonZeroU16","std::num::NonZeroU128","std::num::NonZeroI32","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroU64","std::path::PathBuf","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroU8"],"V":["std::net::IpAddr","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::cell::Cell","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::collections::HashSet","std::net::SocketAddr","std::net::SocketAddrV6","std::ops::Range","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::collections::BinaryHeap","std::ops::RangeInclusive","std::sync::Arc","std::string::String","std::sync::RwLock","std::result::Result","std::path::PathBuf","std::net::SocketAddrV4","std::collections::BTreeMap","std::rc::Rc","std::marker::PhantomData","std::collections::Bound","std::collections::VecDeque","std::borrow::Cow","std::sync::atomic::AtomicU32","std::option::Option","std::sync::atomic::AtomicBool","std::time::Duration","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::num::NonZeroU8","std::vec::Vec","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::ffi::CString","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::cell::RefCell","std::num::NonZeroU32","std::num::NonZeroUsize","std::boxed::Box","std::sync::Mutex","std::num::NonZeroI16"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroIsize","std::net::SocketAddr","std::rc::Rc","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroU16","std::num::NonZeroU8","std::num::NonZeroI32","std::net::Ipv4Addr","std::path::PathBuf","std::cell::RefCell","std::num::NonZeroUsize","std::num::NonZeroI128","std::num::NonZeroI64","std::cell::Cell","std::num::NonZeroU64","std::ffi::CString","std::string::String","std::net::SocketAddrV6","std::net::SocketAddrV4","std::time::SystemTime"]},"std::collections::BinaryHeap":{"T":["std::cell::Cell","std::net::SocketAddr","std::cell::RefCell","std::num::NonZeroU16","std::net::IpAddr","std::num::NonZeroIsize","std::num::NonZeroU8","std::net::SocketAddrV6","std::num::NonZeroUsize","std::num::NonZeroI16","std::option::Option","std::rc::Rc","std::net::SocketAddrV4","std::net::Ipv4Addr","std::num::NonZeroI8","std::marker::PhantomData","std::num::NonZeroI64","std::time::SystemTime","std::net::Ipv6Addr"]},"std::collections::Bound":{"T":["std::collections::HashSet","std::collections::Bound","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::rc::Rc","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::net::Ipv6Addr","std::num::NonZeroIsize","std::cell::Cell","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::boxed::Box","std::sync::Arc","std::collections::BTreeMap","std::sync::RwLock","std::num::NonZeroU8","std::net::IpAddr","std::collections::VecDeque","std::num::NonZeroI32","std::option::Option","std::vec::Vec","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::num::NonZeroUsize","std::num::NonZeroI8","std::num::NonZeroU64","std::string::String","std::collections::HashMap","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::ops::RangeInclusive","std::borrow::Cow","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::sync::Mutex","std::time::SystemTime","std::ffi::CString","std::sync::atomic::AtomicI32","std::ops::Range","std::net::SocketAddrV4","std::num::NonZeroI128","std::time::Duration","std::num::NonZeroU128","std::net::SocketAddrV6","std::collections::BinaryHeap","std::num::NonZeroI16","std::result::Result"]},"std::collections::HashMap":{"K":["std::num::NonZeroI32","std::collections::Bound","std::net::Ipv4Addr","std::num::NonZeroI128","std::num::NonZeroU8","std::option::Option","std::num::NonZeroIsize","std::sync::Arc","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroU64","std::num::NonZeroU32","std::time::Duration","std::num::NonZeroI8","std::net::SocketAddrV6","std::path::PathBuf","std::marker::PhantomData","std::net::SocketAddr","std::string::String","std::net::IpAddr","std::num::NonZeroI64"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::Mutex","std::collections::BTreeMap","std::collections::HashSet","std::string::String","std::boxed::Box","std::collections::BinaryHeap","std::rc::Rc","std::num::NonZeroI32","std::sync::Arc","std::sync::RwLock","std::num::NonZeroI64","std::cell::Cell","std::net::SocketAddrV6","std::ffi::CString","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroI16","std::num::NonZeroU128","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroU32","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::net::IpAddr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::ops::Range","std::num::NonZeroU8","std::net::SocketAddr","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::collections::HashMap","std::net::Ipv6Addr","std::borrow::Cow","std::collections::BTreeSet","std::num::NonZeroI128","std::ops::RangeInclusive","std::result::Result","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::collections::Bound","std::path::PathBuf","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::vec::Vec","std::option::Option","std::num::NonZeroUsize"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::net::SocketAddrV4","std::option::Option","std::num::NonZeroI64","std::num::NonZeroU8","std::num::NonZeroUsize","std::sync::Arc","std::collections::Bound","std::net::IpAddr","std::num::NonZeroI8","std::net::SocketAddr","std::num::NonZeroU64","std::time::Duration","std::string::String","std::num::NonZeroIsize","std::num::NonZeroI16","std::path::PathBuf","std::net::Ipv6Addr","std::net::Ipv4Addr"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::time::Duration","std::num::NonZeroIsize","std::marker::PhantomData","std::collections::BTreeMap","std::collections::HashSet","std::vec::Vec","std::num::NonZeroI128","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::net::SocketAddrV4","std::cell::Cell","std::sync::atomic::AtomicUsize","std::result::Result","std::num::NonZeroI64","std::sync::RwLock","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::collections::HashMap","std::num::NonZeroU128","std::boxed::Box","std::collections::BTreeSet","std::num::NonZeroI32","std::path::PathBuf","std::ops::Range","std::sync::Mutex","std::collections::VecDeque","std::ops::RangeInclusive","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::net::SocketAddr","std::num::NonZeroU32","std::collections::BinaryHeap","std::borrow::Cow","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::option::Option","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::sync::Arc","std::net::Ipv6Addr","std::rc::Rc","std::string::String","std::sync::atomic::AtomicI64","std::time::SystemTime","std::cell::RefCell","std::collections::Bound","std::ffi::CString","std::net::IpAddr"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroIsize","std::num::NonZeroI64","std::net::SocketAddrV4","std::net::Ipv4Addr","std::marker::PhantomData","std::collections::HashSet","std::collections::HashMap","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::sync::Mutex","std::ops::RangeInclusive","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::borrow::Cow","std::collections::BinaryHeap","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::cell::Cell","std::result::Result","std::sync::atomic::AtomicI32","std::boxed::Box","std::net::IpAddr","std::path::PathBuf","std::sync::Arc","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::sync::RwLock","std::time::Duration","std::vec::Vec","std::collections::BTreeMap","std::num::NonZeroI128","std::option::Option","std::time::SystemTime","std::ops::Range","std::net::Ipv6Addr","std::cell::RefCell","std::num::NonZeroU64","std::ffi::CString","std::rc::Rc","std::num::NonZeroU128","std::collections::VecDeque","std::collections::BTreeSet","std::string::String","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::collections::Bound","std::num::NonZeroI16","std::num::NonZeroU32","std::num::NonZeroI32"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::VecDeque","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::sync::Arc","std::num::NonZeroU16","std::ops::Range","std::option::Option","std::rc::Rc","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::result::Result","std::num::NonZeroU8","std::net::SocketAddr","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::time::SystemTime","std::num::NonZeroI32","std::cell::RefCell","std::sync::Mutex","std::vec::Vec","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::string::String","std::sync::atomic::AtomicI8","std::borrow::Cow","std::collections::BinaryHeap","std::path::PathBuf","std::collections::HashSet","std::num::NonZeroI128","std::num::NonZeroI64","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::sync::RwLock","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::time::Duration","std::boxed::Box","std::collections::HashMap","std::net::IpAddr","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroU128","std::ffi::CString","std::cell::Cell","std::sync::atomic::AtomicU64"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI128","std::collections::VecDeque","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroI8","std::net::IpAddr","std::collections::BTreeMap","std::sync::Arc","std::sync::atomic::AtomicI32","std::result::Result","std::ops::RangeInclusive","std::option::Option","std::cell::Cell","std::num::NonZeroU64","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::collections::HashMap","std::num::NonZeroU16","std::time::Duration","std::path::PathBuf","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::cell::RefCell","std::sync::atomic::AtomicI64","std::ops::Range","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::sync::Mutex","std::net::Ipv6Addr","std::collections::HashSet","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::boxed::Box","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::collections::Bound","std::collections::BinaryHeap","std::num::NonZeroI16","std::vec::Vec","std::marker::PhantomData","std::string::String","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::ffi::CString","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::rc::Rc","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::sync::RwLock"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::rc::Rc<[T]>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::rc::Rc<[T]>>::decode(p0);
+<std::rc::Rc<[T]>>::decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::rc::Rc<[T]>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::rc::Rc<[T]>>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["std::cmp::Ord","std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"],"V":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["std::cmp::Ord","std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized","std::cmp::Ord"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::HashMap":{"K":["enc::Encode","std::hash::Hash","de::Decode","std::cmp::Eq","de::BorrowDecode","std::marker::Sized"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["std::hash::Hash","std::cmp::Eq","de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","std::clone::impls::<impl std::clone::Clone for &T>","config::Configuration","config::Varint","config::NoLimit","config::Fixint","config::Limit","config::BigEndian"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::rc::Rc<[T]>>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"T":["std::result::Result","std::num::NonZeroIsize","std::option::Option","std::cell::RefCell","std::net::SocketAddr","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::collections::Bound","std::rc::Rc","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::string::String","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::collections::HashMap","std::collections::VecDeque","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::net::SocketAddrV4","std::net::SocketAddrV6","std::sync::Mutex","std::num::NonZeroU128","std::num::NonZeroI32","std::num::NonZeroU8","std::ffi::CString","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::sync::Arc","std::cell::Cell","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::borrow::Cow","std::time::Duration","std::boxed::Box","std::vec::Vec","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::sync::RwLock","std::ops::Range","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::collections::BinaryHeap","std::net::IpAddr","std::num::NonZeroU64"]},"std::borrow::Cow":{"B":["std::path::Path","<T as std::borrow::ToOwned>","std::ffi::OsStr","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::ffi::CString","std::net::IpAddr","std::num::NonZeroI16","std::time::Duration","std::sync::Arc","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroI128","std::num::NonZeroU32","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroUsize","std::option::Option","std::net::SocketAddrV4","std::string::String","std::num::NonZeroU8","std::num::NonZeroIsize","std::cell::RefCell","std::rc::Rc","std::num::NonZeroU16","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroU128"],"V":["std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::option::Option","std::num::NonZeroU32","std::net::Ipv6Addr","std::result::Result","std::net::Ipv4Addr","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::ffi::CString","std::num::NonZeroI8","std::collections::HashSet","std::net::SocketAddr","std::num::NonZeroUsize","std::collections::HashMap","std::string::String","std::collections::BTreeSet","std::net::IpAddr","std::sync::Arc","std::sync::atomic::AtomicI16","std::boxed::Box","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroI128","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::rc::Rc","std::cell::RefCell","std::num::NonZeroU64","std::vec::Vec","std::ops::RangeInclusive","std::sync::RwLock","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::ops::Range","std::num::NonZeroU128","std::num::NonZeroU16","std::time::SystemTime","std::sync::atomic::AtomicI32","std::cell::Cell","std::num::NonZeroIsize","std::time::Duration","std::sync::atomic::AtomicU64","std::collections::Bound","std::num::NonZeroI32","std::sync::Mutex","std::net::SocketAddrV4","std::borrow::Cow","std::path::PathBuf","std::sync::atomic::AtomicUsize"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroIsize","std::time::SystemTime","std::num::NonZeroU32","std::option::Option","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroI128","std::cell::Cell","std::sync::Arc","std::time::Duration","std::num::NonZeroU64","std::num::NonZeroU8","std::num::NonZeroI8","std::cell::RefCell","std::ffi::CString","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroU128","std::net::Ipv4Addr","std::rc::Rc","std::marker::PhantomData"]},"std::collections::BinaryHeap":{"T":["std::ffi::CString","std::num::NonZeroUsize","std::num::NonZeroI64","std::num::NonZeroI8","std::string::String","std::rc::Rc","std::num::NonZeroI32","std::net::IpAddr","std::num::NonZeroI16","std::cell::RefCell","std::net::Ipv4Addr","std::option::Option","std::net::SocketAddr","std::num::NonZeroIsize","std::sync::Arc","std::num::NonZeroU64","std::time::SystemTime","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI128","std::net::Ipv6Addr","std::cell::Cell","std::marker::PhantomData"]},"std::collections::Bound":{"T":["std::time::SystemTime","std::sync::Mutex","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::cell::Cell","std::rc::Rc","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::net::IpAddr","std::ops::Range","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::sync::Arc","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::ffi::CString","std::string::String","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::net::Ipv4Addr","std::num::NonZeroI8","std::result::Result","std::sync::atomic::AtomicI32","std::vec::Vec","std::time::Duration","std::option::Option","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::boxed::Box","std::sync::atomic::AtomicU16","std::cell::RefCell","std::collections::BinaryHeap","std::borrow::Cow","std::num::NonZeroI16","std::collections::HashSet","std::num::NonZeroI128","std::collections::VecDeque","std::marker::PhantomData","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::num::NonZeroIsize"]},"std::collections::HashMap":{"K":["std::net::Ipv6Addr","std::num::NonZeroI8","std::option::Option","std::ffi::CString","std::collections::Bound","std::num::NonZeroI64","std::net::Ipv4Addr","std::num::NonZeroI32","std::net::SocketAddrV4","std::num::NonZeroI16","std::rc::Rc","std::marker::PhantomData","std::time::Duration","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroU16","std::net::SocketAddrV6"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::cell::RefCell","std::net::IpAddr","std::collections::BTreeMap","std::boxed::Box","std::sync::atomic::AtomicBool","std::ops::Range","std::net::Ipv4Addr","std::time::SystemTime","std::collections::HashMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::sync::RwLock","std::ffi::CString","std::sync::atomic::AtomicI32","std::rc::Rc","std::num::NonZeroU16","std::collections::Bound","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::HashSet","std::result::Result","std::num::NonZeroU64","std::net::SocketAddr","std::ops::RangeInclusive","std::net::Ipv6Addr","std::cell::Cell","std::vec::Vec","std::string::String","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::path::PathBuf","std::num::NonZeroUsize","std::collections::BinaryHeap","std::collections::BTreeSet","std::num::NonZeroI128","std::time::Duration","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::marker::PhantomData","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::option::Option","std::sync::Mutex","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroU32","std::collections::VecDeque","std::num::NonZeroI8","std::num::NonZeroU8","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU32","std::time::Duration","std::net::SocketAddrV6","std::num::NonZeroUsize","std::string::String","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroI16","std::num::NonZeroIsize","std::collections::Bound","std::num::NonZeroU64","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroU8","std::time::SystemTime","std::option::Option","std::rc::Rc"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::sync::Mutex","std::cell::RefCell","std::cell::Cell","std::num::NonZeroI32","std::net::SocketAddr","std::net::SocketAddrV6","std::collections::BinaryHeap","std::num::NonZeroU16","std::collections::HashSet","std::num::NonZeroI128","std::num::NonZeroUsize","std::net::SocketAddrV4","std::net::IpAddr","std::num::NonZeroU64","std::sync::RwLock","std::num::NonZeroI64","std::collections::BTreeSet","std::time::SystemTime","std::borrow::Cow","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::ops::Range","std::num::NonZeroI16","std::collections::VecDeque","std::num::NonZeroU128","std::net::Ipv6Addr","std::path::PathBuf","std::collections::Bound","std::ffi::CString","std::num::NonZeroU8","std::rc::Rc","std::string::String","std::marker::PhantomData","std::net::Ipv4Addr","std::ops::RangeInclusive","std::sync::Arc","std::vec::Vec","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::boxed::Box","std::result::Result","std::sync::atomic::AtomicIsize","std::option::Option","std::time::Duration","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::collections::HashMap","std::sync::atomic::AtomicU64"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroU16","std::net::Ipv4Addr","std::result::Result","std::net::Ipv6Addr","std::string::String","std::sync::atomic::AtomicU64","std::cell::Cell","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::rc::Rc","std::collections::Bound","std::sync::Arc","std::num::NonZeroI16","std::sync::Mutex","std::ops::Range","std::collections::BinaryHeap","std::collections::VecDeque","std::collections::HashMap","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::ops::RangeInclusive","std::num::NonZeroUsize","std::num::NonZeroI128","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::vec::Vec","std::num::NonZeroIsize","std::cell::RefCell","std::num::NonZeroI64","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::time::Duration","std::sync::atomic::AtomicU32","std::path::PathBuf","std::option::Option","std::ffi::CString","std::collections::HashSet","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::sync::RwLock","std::boxed::Box","std::num::NonZeroU64","std::net::IpAddr","std::num::NonZeroI32","std::time::SystemTime","std::collections::BTreeMap","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::BTreeMap","std::string::String","std::num::NonZeroIsize","std::sync::Arc","std::time::SystemTime","std::sync::atomic::AtomicI16","std::cell::Cell","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::ops::Range","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::vec::Vec","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::net::SocketAddrV6","std::collections::BinaryHeap","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::boxed::Box","std::net::Ipv6Addr","std::num::NonZeroI16","std::ffi::CString","std::option::Option","std::collections::HashMap","std::num::NonZeroU32","std::sync::RwLock","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::cell::RefCell","std::collections::HashSet","std::borrow::Cow","std::sync::Mutex","std::net::IpAddr","std::collections::VecDeque","std::num::NonZeroU128","std::collections::Bound","std::num::NonZeroU8","std::net::SocketAddrV4","std::net::SocketAddr","std::marker::PhantomData","std::path::PathBuf","std::time::Duration","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroI32","std::num::NonZeroU16","std::result::Result","std::num::NonZeroI128"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::cell::Cell","std::net::SocketAddrV4","std::num::NonZeroI128","std::ops::RangeInclusive","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::vec::Vec","std::net::IpAddr","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::sync::Mutex","std::result::Result","std::cell::RefCell","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::num::NonZeroUsize","std::time::SystemTime","std::net::Ipv4Addr","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroU16","std::num::NonZeroI64","std::borrow::Cow","std::ops::Range","std::num::NonZeroI8","std::string::String","std::sync::atomic::AtomicIsize","std::time::Duration","std::net::Ipv6Addr","std::collections::HashMap","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::collections::BinaryHeap","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroU32","std::collections::VecDeque","std::collections::HashSet","std::sync::Arc","std::rc::Rc","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::sync::RwLock","std::collections::Bound","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::ffi::CString","std::boxed::Box"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::rc::Rc<[T]>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::rc::Rc<[T]>>::borrow_decode(p0);
+<std::rc::Rc<[T]>>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::sync::Arc<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"features::impl_alloc::<impl de::Decode for std::sync::Arc<T>>::decode":{"D":["de::Decoder","std::marker::Sized"],"T":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["std::marker::Sized","de::Decode","std::cmp::Ord","enc::Encode","de::BorrowDecode"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["de::Decode","std::cmp::Ord","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::HashMap":{"K":["enc::Encode","de::Decode","std::cmp::Eq","std::marker::Sized","std::hash::Hash","de::BorrowDecode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["de::BorrowDecode","std::cmp::Eq","enc::Encode","std::marker::Sized","std::hash::Hash","de::Decode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","config::Varint","std::clone::impls::<impl std::clone::Clone for *const T>","config::LittleEndian","config::BigEndian","config::Limit","config::Fixint","config::NoLimit"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::sync::Arc<T>>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"T":["std::net::SocketAddrV4","std::string::String","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::sync::RwLock","std::num::NonZeroU8","std::rc::Rc","std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroI8","std::ffi::CString","std::vec::Vec","std::collections::HashSet","std::path::PathBuf","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::time::SystemTime","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::sync::Mutex","std::option::Option","std::cell::Cell","std::sync::atomic::AtomicU8","std::collections::HashMap","std::num::NonZeroIsize","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::cell::RefCell","std::borrow::Cow","std::result::Result","std::marker::PhantomData","std::num::NonZeroU64","std::collections::BTreeSet","std::sync::Arc","std::num::NonZeroI64","std::time::Duration","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::ops::Range","std::num::NonZeroU32","std::num::NonZeroI32","std::net::IpAddr","std::boxed::Box","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::net::SocketAddr","std::collections::Bound","std::num::NonZeroI128"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI8","std::ffi::CString","std::num::NonZeroU64","std::time::SystemTime","std::rc::Rc","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroU128","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroU16","std::net::SocketAddrV4","std::sync::Arc","std::time::Duration","std::cell::RefCell","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroIsize","std::net::IpAddr"],"V":["std::num::NonZeroU8","std::net::SocketAddrV4","std::net::Ipv4Addr","std::boxed::Box","std::sync::atomic::AtomicU8","std::result::Result","std::borrow::Cow","std::sync::Arc","std::net::SocketAddr","std::string::String","std::ops::Range","std::path::PathBuf","std::time::SystemTime","std::net::Ipv6Addr","std::option::Option","std::collections::VecDeque","std::num::NonZeroI64","std::vec::Vec","std::sync::atomic::AtomicU16","std::sync::Mutex","std::num::NonZeroI16","std::collections::BTreeSet","std::collections::BinaryHeap","std::collections::HashSet","std::rc::Rc","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::collections::Bound","std::net::SocketAddrV6","std::cell::RefCell","std::sync::atomic::AtomicI32","std::cell::Cell","std::time::Duration","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::net::IpAddr","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::num::NonZeroU128","std::num::NonZeroU64","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::sync::RwLock","std::marker::PhantomData","std::collections::HashMap","std::ffi::CString","std::num::NonZeroI32","std::num::NonZeroI8"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI128","std::num::NonZeroU32","std::net::SocketAddr","std::num::NonZeroI32","std::num::NonZeroUsize","std::net::Ipv4Addr","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroU16","std::path::PathBuf","std::rc::Rc","std::option::Option","std::cell::RefCell","std::ffi::CString","std::num::NonZeroI64","std::marker::PhantomData","std::time::Duration","std::num::NonZeroU64"]},"std::collections::BinaryHeap":{"T":["std::ffi::CString","std::marker::PhantomData","std::option::Option","std::string::String","std::net::IpAddr","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroU128","std::num::NonZeroI16","std::rc::Rc","std::num::NonZeroUsize","std::num::NonZeroI128","std::path::PathBuf","std::num::NonZeroU32","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroIsize","std::net::Ipv6Addr","std::sync::Arc","std::time::SystemTime"]},"std::collections::Bound":{"T":["std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::boxed::Box","std::num::NonZeroU32","std::net::SocketAddrV6","std::ops::Range","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::num::NonZeroU64","std::cell::Cell","std::vec::Vec","std::sync::Arc","std::collections::BinaryHeap","std::path::PathBuf","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::num::NonZeroI64","std::net::IpAddr","std::option::Option","std::sync::RwLock","std::num::NonZeroI32","std::borrow::Cow","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::cell::RefCell","std::time::Duration","std::ffi::CString","std::collections::Bound","std::collections::HashSet","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::collections::HashMap","std::string::String","std::result::Result","std::num::NonZeroUsize","std::net::SocketAddr","std::num::NonZeroIsize","std::num::NonZeroI128","std::ops::RangeInclusive","std::collections::VecDeque","std::time::SystemTime","std::net::SocketAddrV4","std::net::Ipv6Addr","std::rc::Rc","std::sync::Mutex","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32"]},"std::collections::HashMap":{"K":["std::num::NonZeroU8","std::string::String","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroI32","std::ffi::CString","std::num::NonZeroUsize","std::collections::Bound","std::num::NonZeroIsize","std::num::NonZeroI8","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroI16","std::net::Ipv4Addr","std::time::SystemTime","std::num::NonZeroU16","std::option::Option"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::num::NonZeroU128","std::option::Option","std::net::IpAddr","std::collections::BTreeMap","std::ops::RangeInclusive","std::collections::BTreeSet","std::sync::RwLock","std::rc::Rc","std::sync::Arc","std::num::NonZeroI8","std::collections::BinaryHeap","std::num::NonZeroU32","std::collections::HashSet","std::net::SocketAddr","std::string::String","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::result::Result","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::path::PathBuf","std::ops::Range","std::num::NonZeroU8","std::cell::RefCell","std::sync::atomic::AtomicU64","std::cell::Cell","std::sync::atomic::AtomicU16","std::borrow::Cow","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::vec::Vec","std::collections::VecDeque","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::Mutex","std::num::NonZeroIsize","std::marker::PhantomData","std::collections::HashMap","std::num::NonZeroU16","std::ffi::CString","std::collections::Bound","std::time::SystemTime","std::boxed::Box","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::num::NonZeroU64","std::time::Duration","std::num::NonZeroI128"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::option::Option","std::num::NonZeroI64","std::num::NonZeroU16","std::num::NonZeroI128","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroU128","std::collections::Bound","std::num::NonZeroI16","std::time::Duration","std::net::Ipv4Addr","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroU8","std::net::Ipv6Addr","std::net::SocketAddrV6"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::net::Ipv4Addr","std::num::NonZeroU8","std::vec::Vec","std::collections::Bound","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroI64","std::marker::PhantomData","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::collections::VecDeque","std::time::Duration","std::sync::RwLock","std::borrow::Cow","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::boxed::Box","std::ops::RangeInclusive","std::collections::HashSet","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::ops::Range","std::num::NonZeroIsize","std::num::NonZeroU16","std::string::String","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::cell::Cell","std::num::NonZeroU128","std::rc::Rc","std::ffi::CString","std::option::Option","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::collections::BinaryHeap","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::result::Result","std::path::PathBuf","std::collections::HashMap","std::sync::atomic::AtomicU64","std::net::IpAddr","std::num::NonZeroI128","std::num::NonZeroI8","std::cell::RefCell","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::sync::Mutex"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::boxed::Box","std::option::Option","std::collections::Bound","std::num::NonZeroU16","std::path::PathBuf","std::result::Result","std::net::SocketAddrV6","std::net::IpAddr","std::borrow::Cow","std::marker::PhantomData","std::time::SystemTime","std::sync::Mutex","std::sync::Arc","std::ffi::CString","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::num::NonZeroU32","std::num::NonZeroI64","std::net::Ipv6Addr","std::net::Ipv4Addr","std::time::Duration","std::num::NonZeroI128","std::sync::RwLock","std::num::NonZeroIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::cell::Cell","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::vec::Vec","std::num::NonZeroI8","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::ops::Range","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::rc::Rc","std::num::NonZeroU8","std::collections::HashSet","std::string::String","std::num::NonZeroUsize","std::collections::VecDeque","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::collections::HashMap","std::net::SocketAddrV4","std::num::NonZeroI16","std::collections::BTreeSet","std::num::NonZeroU128"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::cell::RefCell","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::collections::HashMap","std::sync::atomic::AtomicI64","std::time::Duration","std::string::String","std::borrow::Cow","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::result::Result","std::time::SystemTime","std::net::SocketAddrV6","std::vec::Vec","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::rc::Rc","std::sync::RwLock","std::path::PathBuf","std::num::NonZeroU64","std::num::NonZeroU128","std::boxed::Box","std::collections::BTreeSet","std::collections::Bound","std::collections::BTreeMap","std::ops::RangeInclusive","std::ffi::CString","std::num::NonZeroU32","std::option::Option","std::num::NonZeroI128","std::sync::Mutex","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::collections::VecDeque","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::collections::HashSet","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::ops::Range","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroIsize","std::num::NonZeroI64","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::sync::Arc","std::cell::Cell","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::marker::PhantomData"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::num::NonZeroI32","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroU8","std::ffi::CString","std::net::SocketAddr","std::net::IpAddr","std::collections::HashSet","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::rc::Rc","std::net::Ipv6Addr","std::sync::Arc","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::num::NonZeroI64","std::vec::Vec","std::num::NonZeroI16","std::collections::HashMap","std::num::NonZeroI8","std::cell::RefCell","std::borrow::Cow","std::collections::BTreeMap","std::marker::PhantomData","std::time::Duration","std::path::PathBuf","std::num::NonZeroU128","std::sync::Mutex","std::sync::RwLock","std::num::NonZeroUsize","std::collections::VecDeque","std::option::Option","std::cell::Cell","std::ops::Range","std::num::NonZeroU32","std::num::NonZeroU64","std::string::String","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::boxed::Box","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::result::Result","std::collections::Bound"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::sync::Arc<T>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::sync::Arc<T>>::decode(p0);
+<std::sync::Arc<T>>::decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::sync::Arc<str>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_alloc::<impl de::Decode for std::sync::Arc<str>>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::sync::Arc<str>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::sync::Arc<str>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::sync::Arc<str>>::decode(p0);
+<std::sync::Arc<str>>::decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"L":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<T>>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"],"T":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode","std::cmp::Ord"],"V":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["std::marker::Sized","std::cmp::Ord","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::BinaryHeap":{"T":["de::Decode","std::marker::Sized","de::BorrowDecode","std::cmp::Ord","enc::Encode"]},"std::collections::Bound":{"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized","std::hash::Hash","std::cmp::Eq"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::marker::Sized","de::BorrowDecode","std::cmp::Eq","de::Decode","std::hash::Hash","enc::Encode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::BigEndian","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Fixint","config::Varint","config::Configuration","config::Limit","config::LittleEndian"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<T>>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"T":["std::sync::atomic::AtomicU64","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroU8","std::sync::Mutex","std::collections::Bound","std::net::SocketAddrV6","std::num::NonZeroU64","std::collections::BTreeSet","std::cell::RefCell","std::net::Ipv6Addr","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::collections::BinaryHeap","std::num::NonZeroU16","std::net::IpAddr","std::num::NonZeroI64","std::collections::VecDeque","std::ops::RangeInclusive","std::num::NonZeroU128","std::time::SystemTime","std::sync::RwLock","std::boxed::Box","std::num::NonZeroUsize","std::marker::PhantomData","std::vec::Vec","std::ops::Range","std::net::SocketAddrV4","std::option::Option","std::collections::BTreeMap","std::result::Result","std::sync::atomic::AtomicI8","std::collections::HashSet","std::sync::atomic::AtomicI16","std::path::PathBuf","std::ffi::CString","std::collections::HashMap","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::rc::Rc","std::cell::Cell","std::string::String","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::num::NonZeroI16"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI16","std::marker::PhantomData","std::path::PathBuf","std::net::SocketAddrV4","std::sync::Arc","std::ffi::CString","std::num::NonZeroU16","std::option::Option","std::num::NonZeroI32","std::time::SystemTime","std::num::NonZeroI8","std::num::NonZeroUsize","std::cell::RefCell","std::string::String","std::net::SocketAddrV6","std::num::NonZeroI64","std::cell::Cell","std::net::Ipv6Addr","std::num::NonZeroU64","std::num::NonZeroI128","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroIsize","std::num::NonZeroU8"],"V":["std::ffi::CString","std::num::NonZeroI16","std::result::Result","std::sync::atomic::AtomicI64","std::vec::Vec","std::sync::atomic::AtomicU64","std::sync::RwLock","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::ops::Range","std::marker::PhantomData","std::collections::VecDeque","std::sync::Mutex","std::sync::Arc","std::net::Ipv6Addr","std::collections::HashSet","std::path::PathBuf","std::net::Ipv4Addr","std::cell::RefCell","std::net::SocketAddr","std::collections::BinaryHeap","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::num::NonZeroU64","std::collections::HashMap","std::num::NonZeroU8","std::collections::Bound","std::net::SocketAddrV4","std::rc::Rc","std::boxed::Box","std::collections::BTreeSet","std::num::NonZeroUsize","std::time::SystemTime","std::sync::atomic::AtomicI8","std::string::String","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::borrow::Cow","std::time::Duration","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::num::NonZeroU16","std::net::IpAddr","std::option::Option","std::cell::Cell"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU64","std::num::NonZeroI128","std::string::String","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroIsize","std::net::Ipv4Addr","std::num::NonZeroU128","std::num::NonZeroI32","std::net::SocketAddrV6","std::marker::PhantomData","std::net::Ipv6Addr","std::num::NonZeroU8","std::cell::Cell","std::num::NonZeroI8","std::rc::Rc","std::ffi::CString","std::sync::Arc","std::net::IpAddr"]},"std::collections::BinaryHeap":{"T":["std::net::Ipv4Addr","std::option::Option","std::net::SocketAddr","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroI8","std::num::NonZeroI32","std::marker::PhantomData","std::time::Duration","std::string::String","std::rc::Rc","std::sync::Arc","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroU8","std::net::SocketAddrV4"]},"std::collections::Bound":{"T":["std::time::SystemTime","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::cell::RefCell","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::ffi::CString","std::time::Duration","std::collections::BinaryHeap","std::boxed::Box","std::num::NonZeroU64","std::borrow::Cow","std::string::String","std::sync::Mutex","std::collections::BTreeSet","std::net::Ipv4Addr","std::path::PathBuf","std::net::SocketAddr","std::num::NonZeroI16","std::result::Result","std::ops::Range","std::num::NonZeroI8","std::collections::HashSet","std::cell::Cell","std::option::Option","std::collections::HashMap","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::ops::RangeInclusive","std::num::NonZeroU16","std::collections::VecDeque","std::num::NonZeroU32","std::rc::Rc","std::collections::Bound","std::num::NonZeroI64","std::sync::RwLock","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::net::IpAddr","std::vec::Vec","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::sync::Arc"]},"std::collections::HashMap":{"K":["std::num::NonZeroI16","std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroU32","std::string::String","std::num::NonZeroI128","std::num::NonZeroI8","std::net::Ipv6Addr","std::ffi::CString","std::time::Duration","std::rc::Rc","std::num::NonZeroU8","std::time::SystemTime","std::collections::Bound","std::num::NonZeroIsize","std::option::Option","std::num::NonZeroU128","std::num::NonZeroU16","std::marker::PhantomData","std::num::NonZeroI64","std::net::Ipv4Addr"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::net::Ipv4Addr","std::num::NonZeroUsize","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::sync::Arc","std::sync::atomic::AtomicU32","std::vec::Vec","std::option::Option","std::net::IpAddr","std::num::NonZeroI32","std::net::SocketAddrV6","std::num::NonZeroI128","std::time::Duration","std::sync::atomic::AtomicIsize","std::result::Result","std::string::String","std::sync::RwLock","std::boxed::Box","std::num::NonZeroU64","std::ffi::CString","std::net::Ipv6Addr","std::collections::HashMap","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::collections::BinaryHeap","std::net::SocketAddr","std::ops::RangeInclusive","std::path::PathBuf","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::sync::Mutex","std::num::NonZeroU128","std::collections::BTreeSet","std::net::SocketAddrV4","std::cell::Cell","std::sync::atomic::AtomicI16","std::collections::HashSet","std::num::NonZeroIsize","std::num::NonZeroU8","std::collections::Bound","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::rc::Rc","std::sync::atomic::AtomicUsize","std::ops::Range","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::borrow::Cow","std::time::SystemTime","std::cell::RefCell","std::num::NonZeroU32"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroUsize","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroU32","std::sync::Arc","std::string::String","std::num::NonZeroI16","std::num::NonZeroI128","std::net::IpAddr","std::num::NonZeroIsize","std::num::NonZeroU8","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroU16","std::collections::Bound","std::option::Option","std::time::SystemTime"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::time::SystemTime","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::option::Option","std::collections::BTreeSet","std::ffi::CString","std::collections::Bound","std::num::NonZeroIsize","std::string::String","std::num::NonZeroU128","std::cell::RefCell","std::net::Ipv6Addr","std::time::Duration","std::borrow::Cow","std::sync::atomic::AtomicU16","std::result::Result","std::num::NonZeroI32","std::net::SocketAddrV4","std::num::NonZeroI64","std::collections::BinaryHeap","std::collections::BTreeMap","std::sync::Arc","std::ops::Range","std::boxed::Box","std::path::PathBuf","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::num::NonZeroU16","std::net::SocketAddr","std::collections::HashMap","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::net::Ipv4Addr","std::num::NonZeroU32","std::num::NonZeroUsize","std::cell::Cell","std::sync::Mutex","std::num::NonZeroI128","std::net::IpAddr","std::num::NonZeroU64","std::sync::RwLock","std::marker::PhantomData","std::collections::HashSet","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::vec::Vec","std::sync::atomic::AtomicU32"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::result::Result","std::num::NonZeroU16","std::num::NonZeroI16","std::collections::HashMap","std::string::String","std::vec::Vec","std::collections::BTreeSet","std::collections::BTreeMap","std::borrow::Cow","std::sync::Arc","std::option::Option","std::path::PathBuf","std::collections::VecDeque","std::time::Duration","std::num::NonZeroI8","std::num::NonZeroU32","std::net::Ipv6Addr","std::net::SocketAddr","std::rc::Rc","std::sync::atomic::AtomicU16","std::net::IpAddr","std::num::NonZeroI64","std::collections::BinaryHeap","std::boxed::Box","std::num::NonZeroUsize","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::sync::RwLock","std::sync::atomic::AtomicU32","std::cell::RefCell","std::sync::Mutex","std::sync::atomic::AtomicI8","std::cell::Cell","std::marker::PhantomData","std::collections::HashSet","std::sync::atomic::AtomicU64","std::time::SystemTime","std::net::Ipv4Addr","std::num::NonZeroI32","std::num::NonZeroU128","std::ops::Range","std::num::NonZeroIsize","std::collections::Bound","std::ffi::CString","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::ops::RangeInclusive"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::BinaryHeap","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::sync::Arc","std::path::PathBuf","std::num::NonZeroU128","std::num::NonZeroUsize","std::string::String","std::sync::RwLock","std::borrow::Cow","std::num::NonZeroI8","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::rc::Rc","std::net::SocketAddrV6","std::num::NonZeroU64","std::ops::Range","std::sync::atomic::AtomicU32","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::vec::Vec","std::collections::BTreeMap","std::option::Option","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::result::Result","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::collections::HashMap","std::collections::BTreeSet","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::cell::RefCell","std::num::NonZeroU32","std::num::NonZeroI16","std::boxed::Box","std::num::NonZeroU16","std::ops::RangeInclusive","std::collections::Bound","std::num::NonZeroI32","std::net::IpAddr","std::net::Ipv6Addr","std::cell::Cell","std::sync::Mutex","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::collections::HashSet","std::ffi::CString","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroI64"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::collections::BTreeSet","std::sync::RwLock","std::sync::Mutex","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::ops::RangeInclusive","std::time::SystemTime","std::num::NonZeroU64","std::borrow::Cow","std::collections::VecDeque","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::num::NonZeroI8","std::collections::HashMap","std::boxed::Box","std::num::NonZeroUsize","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::cell::RefCell","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::rc::Rc","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroIsize","std::num::NonZeroI32","std::num::NonZeroI64","std::cell::Cell","std::string::String","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::option::Option","std::path::PathBuf","std::time::Duration","std::collections::HashSet","std::num::NonZeroU16","std::vec::Vec","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::result::Result","std::ops::Range","std::net::IpAddr","std::net::SocketAddrV4","std::collections::BTreeMap","std::sync::Arc","std::collections::Bound","std::sync::atomic::AtomicBool"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<T>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<T>>::borrow_decode(p0);
+<std::sync::Arc<T>>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<str>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<str>>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<str>>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<str>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<str>>::borrow_decode(p0);
+<std::sync::Arc<str>>::borrow_decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl enc::Encode for std::sync::Arc<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::sync::Arc<T>>::encode":{"E":["std::marker::Sized","enc::Encoder"],"T":["enc::Encode"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::Decode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode","enc::Encode"],"V":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","std::cmp::Ord","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::Bound":{"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","enc::Encode","std::hash::Hash","de::Decode","std::cmp::Eq","std::marker::Sized"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["std::cmp::Eq","std::hash::Hash","de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Varint","config::Limit","config::BigEndian","config::Configuration","config::LittleEndian","config::NoLimit","config::Fixint","std::clone::impls::<impl std::clone::Clone for *mut T>"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","enc::write::SizeWriter","features::impl_alloc::VecWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_alloc::<impl enc::Encode for std::sync::Arc<T>>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"],"T":["std::num::NonZeroI8","std::result::Result","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::string::String","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::num::NonZeroUsize","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::borrow::Cow","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::time::Duration","std::num::NonZeroIsize","enc::impls::<impl enc::Encode for &'a T>","std::collections::Bound","std::num::NonZeroU64","std::vec::Vec","std::net::Ipv4Addr","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::boxed::Box","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::ops::Range","std::num::NonZeroI16","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::sync::RwLock","std::ops::RangeInclusive","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroU32","std::sync::Arc","std::option::Option","std::num::NonZeroI32","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroI128","std::collections::HashSet","std::sync::Mutex","std::marker::PhantomData","std::time::SystemTime","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::cell::RefCell","std::cell::Cell","std::net::SocketAddrV6","std::path::PathBuf","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::num::NonZeroU16","std::net::IpAddr"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<&mut [u8]>","std::io::LineWriter<W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::stdio::StderrRaw","std::io::Sink","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<[u8; N]>","std::io::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>","std::vec::Vec<u8, A>","std::io::stdio::StdoutRaw","&'a std::os::unix::net::UnixStream","std::sys::unix::stdio::Stderr","&std::io::Stderr","std::net::TcpStream","std::io::StderrLock<'_>","std::io::BorrowedCursor<'a>","std::sys::unix::stdio::Stdout","std::boxed::Box<W>","std::process::ChildStdin","std::io::BufWriter<W>","std::io::Stdout","&std::net::TcpStream","std::io::StdoutLock<'_>","&std::process::ChildStdin","std::os::unix::net::UnixStream","&std::fs::File","&std::io::Stdout","&std::io::Sink","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::fs::File","std::collections::VecDeque<u8, A>"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::path::Path","<T as std::borrow::ToOwned>","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU64","std::num::NonZeroUsize","std::num::NonZeroIsize","std::cell::RefCell","std::marker::PhantomData","std::time::SystemTime","std::ffi::CString","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroI128","std::net::Ipv6Addr","std::rc::Rc","std::num::NonZeroI8","std::string::String","std::option::Option","std::num::NonZeroI16","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroI32","std::cell::Cell","std::num::NonZeroU8","std::path::PathBuf","std::sync::Arc","std::net::Ipv4Addr"],"V":["std::num::NonZeroI64","std::num::NonZeroI32","std::net::SocketAddrV4","std::net::SocketAddrV6","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::time::Duration","std::sync::atomic::AtomicU32","std::time::SystemTime","std::sync::Mutex","std::boxed::Box","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::collections::BTreeMap","std::net::IpAddr","std::rc::Rc","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::string::String","std::path::PathBuf","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::vec::Vec","std::collections::HashMap","std::num::NonZeroI16","std::result::Result","std::num::NonZeroU16","std::num::NonZeroI128","std::cell::RefCell","std::ops::RangeInclusive","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroU64","std::sync::Arc","std::collections::Bound","std::collections::HashSet","std::ops::Range","std::num::NonZeroU128","std::num::NonZeroIsize","std::sync::RwLock","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::ffi::CString","std::option::Option","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::sync::atomic::AtomicI16","std::net::SocketAddr"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::path::PathBuf","std::num::NonZeroI64","std::string::String","std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroI128","std::time::Duration","std::net::SocketAddrV4","std::net::SocketAddr","std::net::Ipv6Addr","std::ffi::CString","std::net::IpAddr","std::num::NonZeroI16","std::marker::PhantomData","std::num::NonZeroIsize","std::num::NonZeroU8","std::cell::RefCell","std::rc::Rc","std::cell::Cell","std::net::Ipv4Addr","std::num::NonZeroUsize","std::num::NonZeroU64","std::time::SystemTime"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI16","std::net::IpAddr","std::net::SocketAddrV4","std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroU32","std::time::Duration","std::net::SocketAddr","std::option::Option","std::num::NonZeroI32","std::num::NonZeroI64","std::net::SocketAddrV6","std::path::PathBuf","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroUsize","std::ffi::CString","std::net::Ipv6Addr","std::net::Ipv4Addr","std::sync::Arc","std::num::NonZeroI128","std::time::SystemTime"]},"std::collections::Bound":{"T":["std::num::NonZeroUsize","std::cell::Cell","std::rc::Rc","std::borrow::Cow","std::num::NonZeroU16","std::collections::BTreeSet","std::num::NonZeroI8","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::ffi::CString","std::cell::RefCell","std::sync::atomic::AtomicI8","std::vec::Vec","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::collections::Bound","std::net::IpAddr","std::ops::Range","std::sync::atomic::AtomicI64","std::boxed::Box","std::num::NonZeroIsize","std::result::Result","std::net::SocketAddr","std::time::SystemTime","std::collections::HashMap","std::net::SocketAddrV6","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::string::String","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::sync::Arc","std::collections::BTreeMap","std::option::Option","std::num::NonZeroU64","std::time::Duration","std::sync::RwLock","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::sync::Mutex","std::num::NonZeroI32","std::collections::VecDeque","std::path::PathBuf","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::collections::HashSet"]},"std::collections::HashMap":{"K":["std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroU32","std::string::String","std::num::NonZeroU16","std::path::PathBuf","std::net::SocketAddrV6","std::num::NonZeroI32","std::net::Ipv4Addr","std::net::SocketAddr","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroU64"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::cell::RefCell","std::sync::atomic::AtomicU32","std::collections::HashMap","std::num::NonZeroU8","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::net::SocketAddrV4","std::sync::Mutex","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::collections::BTreeSet","std::result::Result","std::collections::HashSet","std::net::IpAddr","std::num::NonZeroU64","std::collections::BTreeMap","std::num::NonZeroI128","std::rc::Rc","std::sync::atomic::AtomicUsize","std::sync::Arc","std::option::Option","std::cell::Cell","std::collections::BinaryHeap","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::time::Duration","std::collections::VecDeque","std::marker::PhantomData","std::num::NonZeroU32","std::borrow::Cow","std::net::Ipv6Addr","std::collections::Bound","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::time::SystemTime","std::ops::Range","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::ops::RangeInclusive","std::num::NonZeroI8","std::ffi::CString","std::vec::Vec","std::string::String","std::sync::atomic::AtomicU64","std::boxed::Box","std::path::PathBuf","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::sync::atomic::AtomicBool"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroU16","std::time::Duration","std::option::Option","std::net::SocketAddrV4","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroI16","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroU64","std::net::SocketAddrV6","std::net::Ipv4Addr","std::collections::Bound","std::num::NonZeroIsize","std::num::NonZeroI64","std::num::NonZeroU32"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::cell::Cell","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::sync::Arc","std::time::Duration","std::string::String","std::net::SocketAddrV6","std::rc::Rc","std::num::NonZeroI16","std::collections::BinaryHeap","std::num::NonZeroU128","std::sync::RwLock","std::collections::Bound","std::sync::atomic::AtomicI32","std::cell::RefCell","std::ops::Range","std::num::NonZeroU64","std::net::Ipv4Addr","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::result::Result","std::sync::atomic::AtomicI64","std::path::PathBuf","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroI32","std::num::NonZeroU8","std::vec::Vec","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroUsize","std::collections::HashMap","std::collections::VecDeque","std::collections::BTreeSet","std::sync::Mutex","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::net::SocketAddr","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::collections::HashSet","std::option::Option","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::boxed::Box","std::net::SocketAddrV4","std::borrow::Cow","std::sync::atomic::AtomicI16"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::num::NonZeroUsize","std::rc::Rc","std::num::NonZeroI64","std::borrow::Cow","std::net::SocketAddr","std::path::PathBuf","std::num::NonZeroI128","std::ffi::CString","std::sync::Arc","std::sync::atomic::AtomicU64","std::option::Option","std::marker::PhantomData","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::time::SystemTime","std::cell::RefCell","std::sync::RwLock","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::time::Duration","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::sync::atomic::AtomicI16","std::collections::HashMap","std::collections::BTreeSet","std::result::Result","std::num::NonZeroI16","std::vec::Vec","std::ops::RangeInclusive","std::string::String","std::collections::HashSet","std::cell::Cell","std::collections::Bound","std::net::SocketAddrV4","std::num::NonZeroI8","std::boxed::Box","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::num::NonZeroU32","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::ops::Range","std::net::Ipv6Addr","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::net::IpAddr","std::num::NonZeroU16","std::sync::atomic::AtomicIsize"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::cell::Cell","std::num::NonZeroI16","std::sync::Mutex","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::num::NonZeroU32","std::sync::RwLock","std::boxed::Box","std::net::SocketAddrV6","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::option::Option","std::num::NonZeroI128","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::vec::Vec","std::collections::Bound","std::net::Ipv4Addr","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::string::String","std::time::Duration","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::time::SystemTime","std::num::NonZeroU8","std::net::IpAddr","std::collections::HashSet","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::path::PathBuf","std::borrow::Cow","std::num::NonZeroI64","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::ops::Range","std::result::Result","std::collections::HashMap","std::net::Ipv6Addr","std::num::NonZeroIsize","std::collections::BTreeSet","std::ffi::CString","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::sync::Arc","std::rc::Rc","std::num::NonZeroI32"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::option::Option","std::collections::Bound","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::result::Result","std::sync::Arc","std::collections::BinaryHeap","std::net::SocketAddrV6","std::ffi::CString","std::rc::Rc","std::collections::BTreeMap","std::marker::PhantomData","std::cell::RefCell","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::num::NonZeroI8","std::num::NonZeroU64","std::num::NonZeroU8","std::vec::Vec","std::sync::RwLock","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroU32","std::net::SocketAddr","std::net::IpAddr","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::collections::HashSet","std::collections::VecDeque","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::ops::RangeInclusive","std::collections::BTreeSet","std::string::String","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::num::NonZeroI16","std::collections::HashMap","std::sync::atomic::AtomicU8","std::boxed::Box","std::num::NonZeroU16","std::net::Ipv4Addr","std::ops::Range","std::time::SystemTime","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::cell::Cell","std::time::Duration"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::Arc<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_alloc::<impl enc::Encode for std::sync::Arc<T>>::encode(p0, p1);
+crate::features::impl_alloc::<impl enc::Encode for std::sync::Arc<T>>::encode(p0, p1);
+<std::sync::Arc<T>>::encode(p0, p1);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::Decode for std::sync::Arc<[T]>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_alloc::<impl de::Decode for std::sync::Arc<[T]>>::decode":{"D":["de::Decoder","std::marker::Sized"],"T":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"K":["de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Ord","std::marker::Sized"],"V":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","std::cmp::Ord","de::Decode","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Ord"]},"std::collections::Bound":{"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["std::hash::Hash","std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode","std::cmp::Eq"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["std::cmp::Eq","de::BorrowDecode","de::Decode","std::hash::Hash","std::marker::Sized","enc::Encode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Fixint","config::LittleEndian","config::BigEndian","std::clone::impls::<impl std::clone::Clone for &T>","config::NoLimit","config::Varint","config::Limit","config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::Decode for std::sync::Arc<[T]>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"T":["std::net::SocketAddrV4","std::collections::Bound","std::time::Duration","std::sync::atomic::AtomicI32","std::sync::Arc","std::ops::RangeInclusive","std::num::NonZeroI16","std::cell::RefCell","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::rc::Rc","std::num::NonZeroI8","std::collections::HashSet","std::num::NonZeroU64","std::net::IpAddr","std::collections::BinaryHeap","std::ffi::CString","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::sync::RwLock","std::string::String","std::result::Result","std::net::SocketAddrV6","std::num::NonZeroU16","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::collections::HashMap","std::num::NonZeroI64","std::path::PathBuf","std::sync::Mutex","std::ops::Range","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::net::Ipv6Addr","std::boxed::Box","std::cell::Cell","std::option::Option","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::time::SystemTime","std::collections::BTreeSet","std::num::NonZeroU128","std::num::NonZeroU32","std::vec::Vec","std::collections::BTreeMap","std::borrow::Cow","std::num::NonZeroU8","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::num::NonZeroIsize"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::CStr","std::ffi::OsStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroUsize","std::net::SocketAddrV6","std::net::IpAddr","std::net::Ipv4Addr","std::time::Duration","std::net::Ipv6Addr","std::option::Option","std::num::NonZeroI64","std::cell::Cell","std::net::SocketAddrV4","std::num::NonZeroI16","std::num::NonZeroU16","std::net::SocketAddr","std::sync::Arc","std::num::NonZeroU64","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroI32","std::rc::Rc","std::marker::PhantomData"],"V":["std::net::Ipv6Addr","std::rc::Rc","std::option::Option","std::net::SocketAddr","std::collections::BinaryHeap","std::collections::BTreeSet","std::ops::Range","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::collections::Bound","std::vec::Vec","std::collections::HashSet","std::num::NonZeroU16","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::result::Result","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::sync::Mutex","std::num::NonZeroI64","std::string::String","std::marker::PhantomData","std::num::NonZeroI128","std::net::Ipv4Addr","std::collections::VecDeque","std::num::NonZeroI8","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroU64","std::sync::RwLock","std::borrow::Cow","std::sync::Arc","std::sync::atomic::AtomicU16","std::cell::Cell","std::path::PathBuf","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::num::NonZeroUsize","std::ops::RangeInclusive","std::ffi::CString","std::time::Duration","std::num::NonZeroU8","std::net::IpAddr","std::sync::atomic::AtomicI64","std::boxed::Box","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::time::SystemTime","std::num::NonZeroU32"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::string::String","std::cell::Cell","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroI8","std::num::NonZeroI32","std::net::Ipv6Addr","std::marker::PhantomData","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroI128","std::net::SocketAddrV4","std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroU32","std::net::SocketAddr","std::ffi::CString","std::num::NonZeroU8","std::time::Duration","std::net::IpAddr","std::num::NonZeroIsize"]},"std::collections::BinaryHeap":{"T":["std::net::IpAddr","std::path::PathBuf","std::num::NonZeroI64","std::net::SocketAddr","std::option::Option","std::num::NonZeroI32","std::num::NonZeroU64","std::num::NonZeroU32","std::cell::RefCell","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroU8","std::marker::PhantomData","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroIsize","std::sync::Arc","std::string::String","std::time::Duration","std::net::Ipv6Addr","std::num::NonZeroU16"]},"std::collections::Bound":{"T":["std::sync::Mutex","std::string::String","std::marker::PhantomData","std::cell::Cell","std::num::NonZeroI64","std::num::NonZeroU64","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::collections::HashMap","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::option::Option","std::collections::Bound","std::num::NonZeroIsize","std::sync::Arc","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::sync::RwLock","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::net::IpAddr","std::num::NonZeroUsize","std::net::Ipv4Addr","std::ops::RangeInclusive","std::vec::Vec","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroI32","std::rc::Rc","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::time::SystemTime","std::ops::Range","std::net::SocketAddrV6","std::num::NonZeroU128","std::collections::BinaryHeap","std::result::Result","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::time::Duration","std::collections::HashSet","std::boxed::Box","std::sync::atomic::AtomicBool","std::ffi::CString","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::borrow::Cow","std::num::NonZeroI128"]},"std::collections::HashMap":{"K":["std::time::Duration","std::num::NonZeroI16","std::string::String","std::net::Ipv6Addr","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroU8","std::path::PathBuf","std::net::SocketAddrV6","std::net::Ipv4Addr","std::net::IpAddr","std::rc::Rc","std::collections::Bound","std::num::NonZeroU16","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroI128","std::time::SystemTime","std::num::NonZeroI64"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::boxed::Box","std::marker::PhantomData","std::time::SystemTime","std::num::NonZeroI32","std::collections::BTreeMap","std::collections::BTreeSet","std::num::NonZeroUsize","std::ops::RangeInclusive","std::collections::BinaryHeap","std::ffi::CString","std::vec::Vec","std::net::Ipv4Addr","std::collections::HashSet","std::num::NonZeroU16","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::result::Result","std::sync::Mutex","std::num::NonZeroI128","std::num::NonZeroU64","std::string::String","std::ops::Range","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::option::Option","std::sync::atomic::AtomicU64","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::cell::Cell","std::time::Duration","std::sync::atomic::AtomicU16","std::rc::Rc","std::cell::RefCell","std::num::NonZeroI8","std::net::SocketAddrV6","std::num::NonZeroU32","std::sync::Arc","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::sync::RwLock","std::num::NonZeroI64","std::net::IpAddr","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::net::Ipv6Addr","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::path::PathBuf","std::num::NonZeroU128","std::collections::Bound"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::net::SocketAddr","std::num::NonZeroI16","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroI32","std::marker::PhantomData","std::path::PathBuf","std::net::SocketAddrV6","std::rc::Rc","std::ffi::CString","std::num::NonZeroU128","std::collections::Bound","std::num::NonZeroUsize","std::num::NonZeroU32","std::time::Duration","std::num::NonZeroI64","std::net::Ipv4Addr","std::num::NonZeroU64","std::string::String","std::num::NonZeroU16","std::num::NonZeroU8","std::option::Option"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::net::SocketAddrV6","std::time::SystemTime","std::cell::RefCell","std::sync::Arc","std::sync::atomic::AtomicU8","std::rc::Rc","std::num::NonZeroI64","std::collections::HashSet","std::sync::atomic::AtomicU64","std::string::String","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroU64","std::cell::Cell","std::boxed::Box","std::sync::atomic::AtomicI8","std::sync::Mutex","std::collections::BTreeSet","std::path::PathBuf","std::net::IpAddr","std::ops::RangeInclusive","std::borrow::Cow","std::num::NonZeroI16","std::vec::Vec","std::ffi::CString","std::net::Ipv4Addr","std::collections::Bound","std::ops::Range","std::option::Option","std::net::SocketAddrV4","std::sync::RwLock","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::num::NonZeroI8","std::time::Duration","std::result::Result","std::net::SocketAddr","std::collections::VecDeque","std::collections::BinaryHeap","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::num::NonZeroI32","std::num::NonZeroUsize","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::collections::HashMap","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::marker::PhantomData"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroUsize","std::result::Result","std::sync::Arc","std::ffi::CString","std::num::NonZeroU64","std::marker::PhantomData","std::option::Option","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::sync::atomic::AtomicU8","std::boxed::Box","std::num::NonZeroU128","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::net::SocketAddr","std::num::NonZeroU16","std::borrow::Cow","std::cell::Cell","std::num::NonZeroI8","std::net::Ipv6Addr","std::sync::RwLock","std::collections::HashMap","std::num::NonZeroU32","std::net::SocketAddrV6","std::time::Duration","std::sync::atomic::AtomicU64","std::path::PathBuf","std::ops::Range","std::collections::BTreeSet","std::sync::Mutex","std::collections::HashSet","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::collections::Bound","std::num::NonZeroI16","std::collections::BTreeMap","std::rc::Rc","std::string::String","std::num::NonZeroIsize","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::time::SystemTime","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::vec::Vec"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::sync::Arc","std::net::SocketAddrV4","std::borrow::Cow","std::num::NonZeroU128","std::rc::Rc","std::sync::atomic::AtomicI64","std::vec::Vec","std::marker::PhantomData","std::ops::RangeInclusive","std::time::SystemTime","std::net::Ipv4Addr","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::net::SocketAddr","std::collections::BinaryHeap","std::num::NonZeroIsize","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::time::Duration","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::net::SocketAddrV6","std::num::NonZeroU32","std::collections::VecDeque","std::collections::HashSet","std::num::NonZeroI8","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::string::String","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::boxed::Box","std::num::NonZeroU16","std::num::NonZeroI64","std::ffi::CString","std::sync::atomic::AtomicI8","std::sync::RwLock","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::collections::Bound","std::collections::HashMap","std::ops::Range","std::collections::BTreeSet","std::cell::Cell","std::sync::Mutex","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::option::Option","std::path::PathBuf","std::num::NonZeroI16","std::result::Result"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::collections::HashMap","std::string::String","std::sync::atomic::AtomicU32","std::net::IpAddr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::net::Ipv6Addr","std::vec::Vec","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::result::Result","std::num::NonZeroUsize","std::net::Ipv4Addr","std::collections::VecDeque","std::ffi::CString","std::collections::Bound","std::sync::RwLock","std::sync::Arc","std::path::PathBuf","std::num::NonZeroU32","std::sync::Mutex","std::num::NonZeroI8","std::num::NonZeroU16","std::ops::RangeInclusive","std::net::SocketAddrV4","std::borrow::Cow","std::num::NonZeroU64","std::collections::HashSet","std::num::NonZeroU8","std::num::NonZeroI32","std::option::Option","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::cell::RefCell","std::num::NonZeroU128","std::rc::Rc","std::marker::PhantomData","std::ops::Range","std::cell::Cell","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::boxed::Box","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::time::Duration","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::num::NonZeroIsize"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::Decode for std::sync::Arc<[T]>>::decode(p0);
+crate::features::impl_alloc::<impl de::Decode for std::sync::Arc<[T]>>::decode(p0);
+<std::sync::Arc<[T]>>::decode(p0);
-----------------
src/features/impl_alloc.rs features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<[T]>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<[T]>>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"],"T":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode","std::cmp::Ord"],"V":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","std::cmp::Ord","enc::Encode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","std::cmp::Ord","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::Bound":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["enc::Encode","std::hash::Hash","de::Decode","de::BorrowDecode","std::marker::Sized","std::cmp::Eq"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["de::Decode","std::hash::Hash","enc::Encode","de::BorrowDecode","std::cmp::Eq","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::BigEndian","config::Fixint","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Varint","config::Configuration","config::LittleEndian","config::NoLimit","config::Limit"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<[T]>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"T":["std::collections::Bound","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::time::SystemTime","std::result::Result","std::sync::Arc","std::num::NonZeroI16","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::ffi::CString","std::cell::RefCell","std::collections::HashMap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::borrow::Cow","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::time::Duration","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::cell::Cell","std::collections::VecDeque","std::net::SocketAddrV4","std::collections::BTreeMap","std::rc::Rc","std::net::SocketAddr","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::num::NonZeroI32","std::string::String","std::sync::RwLock","std::sync::Mutex","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::net::Ipv6Addr","std::option::Option","std::boxed::Box","std::vec::Vec","std::num::NonZeroIsize","std::ops::Range","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::num::NonZeroU32","std::num::NonZeroUsize","std::net::IpAddr","std::collections::HashSet","std::collections::BTreeSet","std::net::Ipv4Addr","std::path::PathBuf"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::ffi::CStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroUsize","std::num::NonZeroU32","std::num::NonZeroU64","std::num::NonZeroU8","std::option::Option","std::ffi::CString","std::num::NonZeroI16","std::net::Ipv6Addr","std::sync::Arc","std::num::NonZeroIsize","std::net::Ipv4Addr","std::num::NonZeroI8","std::net::SocketAddr","std::num::NonZeroI128","std::time::SystemTime","std::path::PathBuf","std::marker::PhantomData","std::cell::RefCell","std::time::Duration","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroU16"],"V":["std::collections::VecDeque","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroI16","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::ops::Range","std::collections::HashMap","std::cell::Cell","std::sync::atomic::AtomicI64","std::boxed::Box","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::time::Duration","std::collections::BTreeSet","std::cell::RefCell","std::net::Ipv6Addr","std::sync::Arc","std::borrow::Cow","std::net::Ipv4Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::path::PathBuf","std::string::String","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::collections::Bound","std::rc::Rc","std::time::SystemTime","std::collections::BinaryHeap","std::collections::HashSet","std::sync::Mutex","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::option::Option","std::result::Result","std::sync::atomic::AtomicU64","std::vec::Vec","std::net::SocketAddrV6","std::collections::BTreeMap","std::sync::RwLock","std::ffi::CString","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::num::NonZeroU128","std::num::NonZeroIsize","std::net::IpAddr"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::net::SocketAddrV6","std::num::NonZeroI16","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroU64","std::net::Ipv4Addr","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroI8","std::net::SocketAddrV4","std::marker::PhantomData","std::ffi::CString","std::sync::Arc","std::num::NonZeroU32","std::string::String","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroUsize"]},"std::collections::BinaryHeap":{"T":["std::cell::RefCell","std::num::NonZeroU8","std::net::Ipv6Addr","std::num::NonZeroI32","std::time::SystemTime","std::num::NonZeroUsize","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroI16","std::rc::Rc","std::option::Option","std::net::IpAddr","std::num::NonZeroI128","std::sync::Arc","std::num::NonZeroU16","std::num::NonZeroIsize","std::num::NonZeroU64","std::string::String","std::net::Ipv4Addr","std::time::Duration","std::num::NonZeroU32"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::sync::Arc","std::sync::atomic::AtomicU8","std::borrow::Cow","std::num::NonZeroU64","std::num::NonZeroU16","std::ffi::CString","std::boxed::Box","std::num::NonZeroI64","std::collections::HashSet","std::rc::Rc","std::sync::Mutex","std::result::Result","std::sync::atomic::AtomicI64","std::option::Option","std::collections::BTreeSet","std::num::NonZeroU32","std::net::Ipv6Addr","std::net::Ipv4Addr","std::num::NonZeroUsize","std::net::IpAddr","std::num::NonZeroI8","std::collections::Bound","std::cell::RefCell","std::path::PathBuf","std::sync::RwLock","std::vec::Vec","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::time::SystemTime","std::sync::atomic::AtomicI32","std::string::String","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroI16","std::ops::Range","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::time::Duration","std::ops::RangeInclusive","std::num::NonZeroIsize","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::collections::VecDeque","std::num::NonZeroU8","std::marker::PhantomData","std::collections::HashMap","std::sync::atomic::AtomicU64","std::collections::BTreeMap"]},"std::collections::HashMap":{"K":["std::time::Duration","std::net::IpAddr","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroI16","std::collections::Bound","std::path::PathBuf","std::marker::PhantomData","std::num::NonZeroU32","std::num::NonZeroI64","std::net::Ipv4Addr","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroI128","std::num::NonZeroU16"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::boxed::Box","std::num::NonZeroU128","std::collections::BTreeMap","std::num::NonZeroI64","std::net::SocketAddrV4","std::result::Result","std::sync::Mutex","std::collections::BTreeSet","std::collections::HashMap","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::num::NonZeroU16","std::num::NonZeroUsize","std::ops::Range","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::borrow::Cow","std::net::IpAddr","std::num::NonZeroIsize","std::sync::Arc","std::path::PathBuf","std::cell::Cell","std::marker::PhantomData","std::time::SystemTime","std::sync::atomic::AtomicI16","std::rc::Rc","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::collections::Bound","std::collections::HashSet","std::option::Option","std::sync::atomic::AtomicI64","std::vec::Vec","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::ffi::CString","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::num::NonZeroI16","std::num::NonZeroU8","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::num::NonZeroI8","std::sync::RwLock","std::time::Duration","std::cell::RefCell","std::string::String","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::num::NonZeroI128","std::sync::atomic::AtomicI8"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::net::Ipv4Addr","std::time::SystemTime","std::rc::Rc","std::num::NonZeroU16","std::num::NonZeroIsize","std::num::NonZeroI32","std::ffi::CString","std::string::String","std::net::Ipv6Addr","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroI64"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroU16","std::ops::RangeInclusive","std::num::NonZeroU32","std::net::IpAddr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::collections::HashSet","std::cell::RefCell","std::net::Ipv6Addr","std::net::Ipv4Addr","std::num::NonZeroU128","std::cell::Cell","std::collections::BinaryHeap","std::num::NonZeroU64","std::time::Duration","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::collections::HashMap","std::result::Result","std::sync::RwLock","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::num::NonZeroI32","std::string::String","std::num::NonZeroI8","std::net::SocketAddrV6","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::ffi::CString","std::num::NonZeroU8","std::path::PathBuf","std::net::SocketAddr","std::rc::Rc","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::sync::Mutex","std::collections::Bound","std::sync::Arc","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::ops::Range","std::vec::Vec","std::net::SocketAddrV4","std::boxed::Box","std::num::NonZeroIsize","std::num::NonZeroI16","std::option::Option"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::ffi::CString","std::option::Option","std::net::SocketAddr","std::borrow::Cow","std::net::IpAddr","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::num::NonZeroI128","std::time::SystemTime","std::sync::atomic::AtomicI8","std::collections::Bound","std::net::Ipv6Addr","std::vec::Vec","std::cell::RefCell","std::num::NonZeroI32","std::collections::VecDeque","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::time::Duration","std::path::PathBuf","std::num::NonZeroU32","std::result::Result","std::collections::BinaryHeap","std::num::NonZeroI16","std::collections::BTreeSet","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::collections::HashSet","std::marker::PhantomData","std::sync::RwLock","std::boxed::Box","std::sync::Arc","std::sync::atomic::AtomicU16","std::string::String","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::ops::Range","std::sync::Mutex","std::rc::Rc","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::cell::Cell","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroI64","std::num::NonZeroU128"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::VecDeque","std::sync::atomic::AtomicBool","std::net::IpAddr","std::marker::PhantomData","std::ops::Range","std::num::NonZeroUsize","std::path::PathBuf","std::num::NonZeroI8","std::result::Result","std::num::NonZeroU32","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::cell::Cell","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::collections::HashMap","std::ffi::CString","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::net::SocketAddrV6","std::sync::Arc","std::collections::BinaryHeap","std::time::SystemTime","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::collections::Bound","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::string::String","std::net::Ipv4Addr","std::sync::RwLock","std::cell::RefCell","std::num::NonZeroI16","std::collections::HashSet","std::num::NonZeroU16","std::num::NonZeroI32","std::num::NonZeroU64","std::num::NonZeroI128","std::sync::Mutex","std::vec::Vec","std::sync::atomic::AtomicUsize","std::rc::Rc","std::sync::atomic::AtomicIsize","std::time::Duration","std::borrow::Cow","std::net::SocketAddrV4","std::net::SocketAddr","std::ops::RangeInclusive","std::num::NonZeroU128","std::boxed::Box","std::net::Ipv6Addr","std::option::Option"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::marker::PhantomData","std::num::NonZeroU64","std::num::NonZeroI32","std::path::PathBuf","std::cell::Cell","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::sync::RwLock","std::num::NonZeroI8","std::collections::BTreeSet","std::collections::Bound","std::num::NonZeroU8","std::collections::VecDeque","std::string::String","std::borrow::Cow","std::boxed::Box","std::num::NonZeroUsize","std::option::Option","std::time::Duration","std::sync::atomic::AtomicBool","std::time::SystemTime","std::net::SocketAddr","std::num::NonZeroU16","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::ops::RangeInclusive","std::net::IpAddr","std::net::Ipv6Addr","std::collections::BTreeMap","std::num::NonZeroU128","std::net::SocketAddrV6","std::collections::HashMap","std::result::Result","std::ffi::CString","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::vec::Vec","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::ops::Range","std::sync::Arc","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::collections::HashSet","std::rc::Rc","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::num::NonZeroI128","std::sync::atomic::AtomicI64"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<[T]>>::borrow_decode(p0);
+crate::features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<[T]>>::borrow_decode(p0);
+<std::sync::Arc<[T]>>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::IoReader::<R>::new
deps:{"features::impl_std::IoReader::<R>::new":{"R":["std::marker::Sized"]}}
candidates:{"features::impl_std::IoReader::<R>::new":{"R":["RUG_ANY"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // R
+features::impl_std::IoReader::<R>::new(p0);
+crate::features::impl_std::IoReader::<R>::new(p0);
+<features::impl_std::IoReader<R>>::new(p0);
-----------------
src/features/impl_std.rs <features::impl_std::IoReader<R> as de::read::Reader>::read
deps:{"<features::impl_std::IoReader<R> as de::read::Reader>::read":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"<features::impl_std::IoReader<R> as de::read::Reader>::read":{"R":["std::io::BufReader<R>","std::io::Take<T>","std::io::StdinLock<'_>","&std::net::TcpStream","std::io::Cursor<T>","std::os::unix::net::UnixStream","std::io::Repeat","std::process::ChildStdout","&std::fs::File","std::io::stdio::StdinRaw","std::collections::VecDeque<u8, A>","&'a std::os::unix::net::UnixStream","std::process::ChildStderr","std::net::TcpStream","std::io::Stdin","&'a std::sys::unix::fd::FileDesc","std::fs::File","std::io::Empty","std::sys::unix::stdio::Stdin","std::boxed::Box<R>","std::io::Chain<T, U>","std::io::impls::<impl std::io::Read for &mut R>"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // features::impl_std::IoReader<R>
let mut p1 = &mut [0u8].as_mut_slice(); // None+[u8]
+p0.read(p1);
+<features::impl_std::IoReader<R> as de::read::Reader>::read(p0, p1);
+crate::<features::impl_std::IoReader<R> as de::read::Reader>::read(p0, p1);
+<features::impl_std::IoReader<R>>::read(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::read
deps:{"features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::read":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::read":{"R":["std::io::Repeat","std::sys::unix::stdio::Stdin","std::net::TcpStream","std::io::stdio::StdinRaw","&'a std::sys::unix::fd::FileDesc","std::io::Empty","std::io::Chain<T, U>","std::io::StdinLock<'_>","std::boxed::Box<R>","std::collections::VecDeque<u8, A>","std::fs::File","std::process::ChildStdout","std::io::BufReader<R>","std::io::impls::<impl std::io::Read for &mut R>","std::io::Cursor<T>","&std::fs::File","&'a std::os::unix::net::UnixStream","std::os::unix::net::UnixStream","&std::net::TcpStream","std::process::ChildStderr","std::io::Stdin","std::io::Take<T>"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // std::io::BufReader<R>
let mut p1 = &mut [0u8].as_mut_slice(); // None+[u8]
+p0.read(p1);
+features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::read(p0, p1);
+crate::features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::read(p0, p1);
+<std::io::BufReader<R>>::read(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::peek_read
deps:{"features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::peek_read":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::peek_read":{"R":["std::process::ChildStdout","std::io::Empty","std::collections::VecDeque<u8, A>","std::io::stdio::StdinRaw","std::fs::File","&'a std::sys::unix::fd::FileDesc","std::io::StdinLock<'_>","std::io::Stdin","std::io::Chain<T, U>","std::io::Repeat","std::net::TcpStream","&std::fs::File","std::os::unix::net::UnixStream","std::boxed::Box<R>","&std::net::TcpStream","std::process::ChildStderr","std::io::impls::<impl std::io::Read for &mut R>","&'a std::os::unix::net::UnixStream","std::io::Cursor<T>","std::io::Take<T>","std::sys::unix::stdio::Stdin","std::io::BufReader<R>"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // std::io::BufReader<R>
let mut p1 = 0usize; // None+usize
+p0.peek_read(p1);
+features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::peek_read(p0, p1);
+crate::features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::peek_read(p0, p1);
+<std::io::BufReader<R>>::peek_read(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::consume
deps:{"features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::consume":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::consume":{"R":["std::io::Cursor<T>","std::io::stdio::StdinRaw","std::sys::unix::stdio::Stdin","std::io::impls::<impl std::io::Read for &mut R>","std::net::TcpStream","std::io::Take<T>","&'a std::os::unix::net::UnixStream","std::boxed::Box<R>","&'a std::sys::unix::fd::FileDesc","&std::fs::File","std::os::unix::net::UnixStream","std::io::StdinLock<'_>","std::io::BufReader<R>","std::process::ChildStderr","std::process::ChildStdout","&std::net::TcpStream","std::io::Stdin","std::io::Repeat","std::io::Chain<T, U>","std::fs::File","std::collections::VecDeque<u8, A>","std::io::Empty"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // std::io::BufReader<R>
let mut p1 = 0usize; // None+usize
+p0.consume(p1);
+features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::consume(p0, p1);
+crate::features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::consume(p0, p1);
+<std::io::BufReader<R>>::consume(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::IoWriter::<'a, W>::new
'a
deps:{"features::impl_std::IoWriter::<'a, W>::new":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"features::impl_std::IoWriter::<'a, W>::new":{"W":["std::io::Cursor<[u8; N]>","std::io::BufWriter<W>","std::io::LineWriter<W>","std::io::StderrLock<'_>","std::vec::Vec<u8, A>","std::io::Sink","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::net::TcpStream","&std::fs::File","std::fs::File","&std::net::TcpStream","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::stdio::StdoutRaw","&std::io::Sink","std::io::Stdout","std::os::unix::net::UnixStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::StdoutLock<'_>","std::io::BorrowedCursor<'a>","&std::io::Stdout","std::collections::VecDeque<u8, A>","std::io::Cursor<&mut [u8]>","&std::process::ChildStdin","std::io::stdio::StderrRaw","std::sys::unix::stdio::Stdout","std::io::Stderr","std::sys::unix::stdio::Stderr","std::process::ChildStdin","std::boxed::Box<W>","&std::io::Stderr","std::io::Cursor<std::vec::Vec<u8, A>>","&'a std::os::unix::net::UnixStream"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // W
+features::impl_std::IoWriter::<'a, W>::new(p0);
+crate::features::impl_std::IoWriter::<'a, W>::new(p0);
+<features::impl_std::IoWriter<'a, W>>::new(p0);
-----------------
src/features/impl_std.rs features::impl_std::IoWriter::<'a, W>::bytes_written
'a
deps:{"features::impl_std::IoWriter::<'a, W>::bytes_written":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"features::impl_std::IoWriter::<'a, W>::bytes_written":{"W":["&std::io::Stderr","std::net::TcpStream","std::io::impls::<impl std::io::Write for &mut W>","std::io::stdio::StderrRaw","std::io::Stdout","&std::fs::File","&'a std::os::unix::net::UnixStream","std::io::BorrowedCursor<'a>","&std::process::ChildStdin","std::vec::Vec<u8, A>","std::io::Sink","std::process::ChildStdin","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::BufWriter<W>","std::io::Stderr","std::io::StderrLock<'_>","std::collections::VecDeque<u8, A>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::LineWriter<W>","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>","std::fs::File","&std::io::Sink","std::os::unix::net::UnixStream","std::sys::unix::stdio::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::stdio::StdoutRaw","std::io::Cursor<[u8; N]>","std::io::StdoutLock<'_>","&std::net::TcpStream","std::boxed::Box<W>","&std::io::Stdout"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // features::impl_std::IoWriter<'a, W>
+p0.bytes_written();
+features::impl_std::IoWriter::<'a, W>::bytes_written(p0);
+crate::features::impl_std::IoWriter::<'a, W>::bytes_written(p0);
+<features::impl_std::IoWriter<'a, W>>::bytes_written(p0);
-----------------
src/features/impl_std.rs <features::impl_std::IoWriter<'storage, W> as enc::write::Writer>::write
'storage
deps:{"<features::impl_std::IoWriter<'storage, W> as enc::write::Writer>::write":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<features::impl_std::IoWriter<'storage, W> as enc::write::Writer>::write":{"W":["&std::io::Stdout","std::os::unix::net::UnixStream","std::io::StdoutLock<'_>","std::fs::File","std::process::ChildStdin","std::vec::Vec<u8, A>","std::io::Sink","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::stdio::StdoutRaw","&std::io::Stderr","&std::net::TcpStream","std::io::StderrLock<'_>","std::collections::VecDeque<u8, A>","std::io::impls::<impl std::io::Write for &mut W>","std::io::Stdout","&std::io::Sink","std::io::BorrowedCursor<'a>","std::net::TcpStream","std::sys::unix::stdio::Stdout","std::io::Cursor<[u8; N]>","&std::process::ChildStdin","&std::fs::File","std::io::BufWriter<W>","std::sys::unix::stdio::Stderr","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::stdio::StderrRaw","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&'a std::os::unix::net::UnixStream","std::boxed::Box<W>","std::io::LineWriter<W>","std::io::Cursor<&mut [u8]>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // features::impl_std::IoWriter<'storage, W>
let mut p1 = [0u8,0,0].as_mut_slice(); // None+&[u8]
+p0.write(p1);
+<features::impl_std::IoWriter<'storage, W> as enc::write::Writer>::write(p0, p1);
+crate::<features::impl_std::IoWriter<'storage, W> as enc::write::Writer>::write(p0, p1);
+<features::impl_std::IoWriter<'storage, W>>::write(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for &'a std::ffi::CStr>::encode
'a
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::<impl enc::Encode for &'a std::ffi::CStr>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","enc::write::SliceWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>"]},"features::impl_std::<impl enc::Encode for &'a std::ffi::CStr>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::collections::VecDeque<u8, A>","std::fs::File","std::os::unix::net::UnixStream","std::vec::Vec<u8, A>","std::io::stdio::StdoutRaw","std::io::Stdout","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::io::Stderr","&std::io::Stdout","&std::net::TcpStream","std::boxed::Box<W>","std::io::StdoutLock<'_>","std::io::Sink","&'a std::os::unix::net::UnixStream","std::io::LineWriter<W>","std::net::TcpStream","&std::io::Sink","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Stderr","std::io::Cursor<[u8; N]>","std::io::stdio::StderrRaw","std::io::StderrLock<'_>","std::sys::unix::stdio::Stderr","std::process::ChildStdin","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::BufWriter<W>","std::sys::unix::stdio::Stdout","std::io::Cursor<&mut [u8]>","&std::fs::File","std::io::impls::<impl std::io::Write for &mut W>","&std::process::ChildStdin","std::io::BorrowedCursor<'a>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & & MaybeUninit::uninit().assume_init(); // std::ffi::CStr
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for &'a std::ffi::CStr>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for &'a std::ffi::CStr>::encode(p0, p1);
+<&'a std::ffi::CStr>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for std::ffi::CString>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::<impl enc::Encode for std::ffi::CString>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_std::IoWriter","enc::write::SizeWriter"]},"features::impl_std::<impl enc::Encode for std::ffi::CString>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["&std::io::Stdout","std::fs::File","&std::fs::File","std::io::stdio::StderrRaw","std::net::TcpStream","std::io::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::BorrowedCursor<'a>","std::io::LineWriter<W>","&'a std::os::unix::net::UnixStream","std::os::unix::net::UnixStream","&std::io::Stderr","std::io::BufWriter<W>","&std::net::TcpStream","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<[u8; N]>","std::io::StderrLock<'_>","std::sys::unix::stdio::Stdout","std::io::Sink","std::io::StdoutLock<'_>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::collections::VecDeque<u8, A>","std::io::Cursor<std::vec::Vec<u8, A>>","&std::io::Sink","std::sys::unix::stdio::Stderr","std::io::Cursor<&mut [u8]>","std::io::stdio::StdoutRaw","&std::process::ChildStdin","std::process::ChildStdin","std::boxed::Box<W>","std::vec::Vec<u8, A>","std::io::Stdout"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::ffi::CString
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for std::ffi::CString>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for std::ffi::CString>::encode(p0, p1);
+<std::ffi::CString>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::Decode for std::ffi::CString>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"features::impl_std::<impl de::Decode for std::ffi::CString>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::Decode for std::ffi::CString>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::Decode for std::ffi::CString>::decode(p0);
+crate::features::impl_std::<impl de::Decode for std::ffi::CString>::decode(p0);
+<std::ffi::CString>::decode(p0);
-----------------
src/de/mod.rs features::impl_std::<impl de::BorrowDecode<'de> for std::ffi::CString>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::ffi::CString>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::ffi::CString>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for std::ffi::CString>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for std::ffi::CString>::borrow_decode(p0);
+<std::ffi::CString>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for std::sync::Mutex<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::<impl enc::Encode for std::sync::Mutex<T>>::encode":{"E":["enc::Encoder","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::cmp::Ord","de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"],"V":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","std::cmp::Ord","enc::Encode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::Bound":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["de::Decode","enc::Encode","de::BorrowDecode","std::hash::Hash","std::marker::Sized","std::cmp::Eq"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["std::hash::Hash","de::BorrowDecode","enc::Encode","std::marker::Sized","std::cmp::Eq","de::Decode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::LittleEndian","config::Varint","config::Configuration","config::BigEndian","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Fixint","config::Limit"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_std::IoWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::<impl enc::Encode for std::sync::Mutex<T>>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"],"T":["std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::option::Option","std::sync::Arc","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::time::SystemTime","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::net::SocketAddr","std::path::PathBuf","std::num::NonZeroI64","std::num::NonZeroI16","std::num::NonZeroIsize","std::num::NonZeroU128","std::net::IpAddr","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::num::NonZeroU32","std::num::NonZeroI128","std::collections::HashMap","std::num::NonZeroUsize","std::collections::Bound","std::result::Result","std::time::Duration","std::cell::RefCell","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::marker::PhantomData","std::rc::Rc","std::sync::RwLock","std::collections::BTreeMap","std::ops::RangeInclusive","std::vec::Vec","enc::impls::<impl enc::Encode for &'a T>","std::ops::Range","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::string::String","std::ffi::CString","std::borrow::Cow","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::sync::Mutex","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::cell::Cell","std::num::NonZeroU16","std::collections::HashSet","std::boxed::Box"]},"features::impl_std::IoWriter":{"W":["std::fs::File","std::io::Stderr","std::boxed::Box<W>","&std::fs::File","&std::io::Sink","std::io::Cursor<std::vec::Vec<u8, A>>","std::net::TcpStream","std::io::StderrLock<'_>","std::io::stdio::StderrRaw","&std::io::Stderr","std::process::ChildStdin","&std::process::ChildStdin","std::sys::unix::stdio::Stderr","&'a std::os::unix::net::UnixStream","std::collections::VecDeque<u8, A>","std::io::BorrowedCursor<'a>","std::sys::unix::stdio::Stdout","std::os::unix::net::UnixStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::io::Stdout","std::io::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::stdio::StdoutRaw","std::vec::Vec<u8, A>","std::io::StdoutLock<'_>","std::io::LineWriter<W>","&std::net::TcpStream","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<[u8; N]>","std::io::Cursor<&mut [u8]>","std::io::Sink","std::io::impls::<impl std::io::Write for &mut W>","std::io::BufWriter<W>"]},"std::borrow::Cow":{"B":["std::path::Path","<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroU16","std::path::PathBuf","std::option::Option","std::net::SocketAddr","std::time::Duration","std::net::IpAddr","std::marker::PhantomData","std::ffi::CString","std::rc::Rc"],"V":["std::time::SystemTime","std::collections::HashSet","std::string::String","std::rc::Rc","std::collections::HashMap","std::num::NonZeroUsize","std::vec::Vec","std::net::Ipv4Addr","std::num::NonZeroI8","std::path::PathBuf","std::ffi::CString","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::sync::RwLock","std::net::IpAddr","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::net::SocketAddrV6","std::ops::Range","std::num::NonZeroI128","std::marker::PhantomData","std::time::Duration","std::collections::BinaryHeap","std::num::NonZeroU32","std::ops::RangeInclusive","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroU128","std::boxed::Box","std::collections::BTreeMap","std::cell::RefCell","std::num::NonZeroU8","std::collections::Bound","std::option::Option","std::num::NonZeroIsize","std::result::Result","std::cell::Cell","std::net::SocketAddrV4","std::collections::BTreeSet","std::num::NonZeroU64","std::collections::VecDeque","std::sync::Arc","std::borrow::Cow","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::sync::Arc","std::rc::Rc","std::time::Duration","std::num::NonZeroU8","std::net::Ipv4Addr","std::num::NonZeroU128","std::num::NonZeroI16","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroIsize","std::option::Option","std::num::NonZeroI8","std::num::NonZeroI32","std::net::SocketAddr","std::cell::Cell","std::path::PathBuf","std::net::SocketAddrV6","std::time::SystemTime","std::num::NonZeroU16","std::num::NonZeroU32","std::cell::RefCell","std::num::NonZeroU64","std::num::NonZeroUsize","std::string::String","std::net::Ipv6Addr","std::marker::PhantomData"]},"std::collections::BinaryHeap":{"T":["std::time::SystemTime","std::path::PathBuf","std::cell::RefCell","std::net::SocketAddrV6","std::num::NonZeroI64","std::ffi::CString","std::num::NonZeroI8","std::num::NonZeroI32","std::net::SocketAddrV4","std::marker::PhantomData","std::sync::Arc","std::num::NonZeroI16","std::net::IpAddr","std::num::NonZeroIsize","std::num::NonZeroU32","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroU64","std::time::Duration","std::string::String","std::net::SocketAddr","std::rc::Rc","std::num::NonZeroU16"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::sync::Arc","std::option::Option","std::sync::atomic::AtomicI32","std::rc::Rc","std::num::NonZeroI128","std::net::SocketAddrV4","std::ops::Range","std::ffi::CString","std::sync::RwLock","std::sync::atomic::AtomicI8","std::vec::Vec","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::time::SystemTime","std::num::NonZeroIsize","std::boxed::Box","std::net::IpAddr","std::collections::HashMap","std::net::SocketAddrV6","std::num::NonZeroI64","std::num::NonZeroUsize","std::num::NonZeroU128","std::borrow::Cow","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::string::String","std::path::PathBuf","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroU32","std::collections::BinaryHeap","std::net::Ipv4Addr","std::collections::BTreeMap","std::net::Ipv6Addr","std::collections::Bound","std::num::NonZeroI8","std::sync::atomic::AtomicUsize","std::result::Result","std::time::Duration","std::net::SocketAddr","std::num::NonZeroU16","std::cell::Cell","std::num::NonZeroI16","std::num::NonZeroU64","std::collections::HashSet","std::sync::atomic::AtomicBool","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::collections::BTreeSet"]},"std::collections::HashMap":{"K":["std::num::NonZeroU8","std::string::String","std::num::NonZeroI128","std::net::SocketAddrV4","std::collections::Bound","std::num::NonZeroI64","std::num::NonZeroI8","std::rc::Rc","std::path::PathBuf","std::marker::PhantomData","std::net::IpAddr","std::num::NonZeroIsize","std::num::NonZeroU128","std::option::Option","std::sync::Arc"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::marker::PhantomData","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::time::SystemTime","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::rc::Rc","std::sync::Mutex","std::num::NonZeroU8","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::option::Option","std::num::NonZeroU128","std::num::NonZeroI32","std::path::PathBuf","std::collections::BTreeMap","std::collections::HashMap","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::boxed::Box","std::ops::Range","std::num::NonZeroI16","std::borrow::Cow","std::sync::atomic::AtomicU32","std::vec::Vec","std::ffi::CString","std::collections::HashSet","std::time::Duration","std::string::String","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::num::NonZeroU64","std::collections::Bound","std::collections::VecDeque","std::net::SocketAddrV6","std::num::NonZeroI8","std::sync::Arc","std::num::NonZeroUsize","std::collections::BTreeSet","std::net::Ipv6Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::net::SocketAddrV4","std::result::Result","std::cell::Cell","std::cell::RefCell","std::num::NonZeroU32","std::sync::RwLock","std::net::IpAddr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU32","std::path::PathBuf","std::collections::Bound","std::num::NonZeroU64","std::rc::Rc","std::net::Ipv4Addr","std::net::IpAddr","std::num::NonZeroI16","std::net::SocketAddrV4","std::num::NonZeroI32","std::time::SystemTime","std::option::Option","std::num::NonZeroU16","std::string::String","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroI64","std::num::NonZeroI128","std::num::NonZeroIsize"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroI64","std::num::NonZeroIsize","std::num::NonZeroUsize","std::time::SystemTime","std::ops::Range","std::collections::HashSet","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::string::String","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::vec::Vec","std::cell::Cell","std::sync::atomic::AtomicBool","std::result::Result","std::collections::VecDeque","std::collections::Bound","std::net::SocketAddrV4","std::sync::Mutex","std::sync::RwLock","std::cell::RefCell","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::sync::Arc","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::collections::HashMap","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::boxed::Box","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::collections::BTreeSet","std::path::PathBuf","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::net::IpAddr","std::ffi::CString","std::collections::BTreeMap","std::borrow::Cow","std::net::Ipv4Addr","std::time::Duration","std::ops::RangeInclusive","std::option::Option"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::boxed::Box","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroI8","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::num::NonZeroU16","std::option::Option","std::collections::HashMap","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::string::String","std::rc::Rc","std::time::SystemTime","std::num::NonZeroU32","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::collections::Bound","std::num::NonZeroI32","std::time::Duration","std::sync::RwLock","std::sync::Mutex","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::cell::RefCell","std::num::NonZeroU64","std::path::PathBuf","std::num::NonZeroUsize","std::num::NonZeroI16","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::ffi::CString","std::sync::atomic::AtomicIsize","std::sync::Arc","std::sync::atomic::AtomicU64","std::collections::HashSet","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::num::NonZeroU8","std::net::SocketAddr","std::marker::PhantomData","std::borrow::Cow","std::cell::Cell","std::ops::Range","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::vec::Vec","std::collections::BTreeSet","std::result::Result","std::sync::atomic::AtomicI32","std::collections::VecDeque"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicI16","std::cell::RefCell","std::ops::Range","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::num::NonZeroI8","std::vec::Vec","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroU64","std::borrow::Cow","std::cell::Cell","std::sync::atomic::AtomicU64","std::net::IpAddr","std::net::Ipv6Addr","std::marker::PhantomData","std::ffi::CString","std::collections::BinaryHeap","std::ops::RangeInclusive","std::num::NonZeroIsize","std::sync::RwLock","std::collections::Bound","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::time::SystemTime","std::collections::BTreeSet","std::num::NonZeroUsize","std::path::PathBuf","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::collections::HashSet","std::net::SocketAddrV4","std::collections::HashMap","std::sync::Mutex","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroI64","std::result::Result","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::net::Ipv4Addr","std::net::SocketAddr","std::string::String","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::sync::Arc","std::rc::Rc","std::sync::atomic::AtomicUsize","std::boxed::Box","std::option::Option"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::Mutex","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::time::SystemTime","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::path::PathBuf","std::sync::atomic::AtomicI16","std::cell::RefCell","std::vec::Vec","std::ffi::CString","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::cell::Cell","std::collections::BTreeMap","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::sync::RwLock","std::num::NonZeroU8","std::collections::BTreeSet","std::boxed::Box","std::num::NonZeroIsize","std::collections::VecDeque","std::net::SocketAddrV6","std::collections::BinaryHeap","std::result::Result","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::option::Option","std::num::NonZeroI64","std::time::Duration","std::sync::Arc","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::collections::Bound","std::ops::Range","std::collections::HashSet","std::net::IpAddr","std::marker::PhantomData","std::string::String","std::borrow::Cow","std::ops::RangeInclusive","std::num::NonZeroU128","std::num::NonZeroI32","std::num::NonZeroU16","std::num::NonZeroI8","std::collections::HashMap","std::rc::Rc","std::num::NonZeroUsize","std::net::Ipv6Addr"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::Mutex<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for std::sync::Mutex<T>>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for std::sync::Mutex<T>>::encode(p0, p1);
+<std::sync::Mutex<T>>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::Decode for std::sync::Mutex<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"features::impl_std::<impl de::Decode for std::sync::Mutex<T>>::decode":{"D":["std::marker::Sized","de::Decoder"],"T":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"K":["enc::Encode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode","de::Decode"],"V":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["std::marker::Sized","std::cmp::Ord","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode","std::cmp::Ord"]},"std::collections::Bound":{"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::HashMap":{"K":["std::hash::Hash","de::Decode","std::marker::Sized","enc::Encode","std::cmp::Eq","de::BorrowDecode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["std::hash::Hash","de::Decode","de::BorrowDecode","std::cmp::Eq","enc::Encode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for &mut T>","config::Limit","config::Configuration","config::Varint","config::LittleEndian","config::Fixint","config::NoLimit","config::BigEndian"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::Decode for std::sync::Mutex<T>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"T":["std::net::SocketAddr","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::cell::Cell","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::sync::Arc","std::num::NonZeroU32","std::collections::HashSet","std::num::NonZeroU16","std::string::String","std::sync::RwLock","std::result::Result","std::option::Option","std::collections::BinaryHeap","std::collections::BTreeSet","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::path::PathBuf","std::sync::Mutex","std::ops::Range","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::borrow::Cow","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::collections::BTreeMap","std::collections::HashMap","std::num::NonZeroIsize","std::vec::Vec","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::num::NonZeroUsize","std::boxed::Box","std::ffi::CString","std::num::NonZeroU64","std::num::NonZeroI16","std::marker::PhantomData","std::net::SocketAddrV6","std::time::Duration","std::net::IpAddr","std::rc::Rc","std::num::NonZeroU128","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::collections::Bound","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::net::Ipv6Addr"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::ffi::OsStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroU128","std::num::NonZeroI64","std::net::Ipv6Addr","std::net::SocketAddrV6","std::num::NonZeroU64","std::num::NonZeroUsize","std::num::NonZeroU32","std::num::NonZeroI32","std::cell::RefCell","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroU8","std::time::Duration","std::cell::Cell","std::num::NonZeroI16","std::ffi::CString","std::time::SystemTime","std::marker::PhantomData","std::sync::Arc","std::num::NonZeroIsize"],"V":["std::time::SystemTime","std::cell::RefCell","std::num::NonZeroI128","std::ffi::CString","std::num::NonZeroUsize","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::borrow::Cow","std::sync::atomic::AtomicI8","std::collections::HashMap","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::vec::Vec","std::net::SocketAddrV6","std::num::NonZeroU128","std::sync::RwLock","std::num::NonZeroI32","std::num::NonZeroI8","std::collections::BinaryHeap","std::net::Ipv6Addr","std::num::NonZeroU32","std::ops::Range","std::sync::Mutex","std::collections::HashSet","std::num::NonZeroU16","std::result::Result","std::cell::Cell","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::rc::Rc","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::marker::PhantomData","std::string::String","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::option::Option","std::boxed::Box","std::time::Duration","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::collections::Bound","std::ops::RangeInclusive","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::collections::BTreeMap","std::sync::Arc","std::net::SocketAddrV4","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::net::SocketAddr"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU16","std::string::String","std::time::Duration","std::path::PathBuf","std::num::NonZeroU8","std::time::SystemTime","std::sync::Arc","std::net::Ipv6Addr","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroU32","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroI128","std::num::NonZeroIsize","std::num::NonZeroU64","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroI64","std::num::NonZeroI8","std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroU128"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU8","std::num::NonZeroI8","std::option::Option","std::path::PathBuf","std::net::IpAddr","std::num::NonZeroI32","std::num::NonZeroI16","std::marker::PhantomData","std::num::NonZeroI64","std::net::SocketAddrV6","std::num::NonZeroIsize","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroI128","std::sync::Arc","std::rc::Rc","std::num::NonZeroUsize","std::net::Ipv4Addr","std::string::String"]},"std::collections::Bound":{"T":["std::num::NonZeroU16","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::ffi::CString","std::result::Result","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::sync::Arc","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::collections::BinaryHeap","std::sync::RwLock","std::string::String","std::collections::HashSet","std::time::Duration","std::ops::Range","std::net::SocketAddrV6","std::cell::RefCell","std::boxed::Box","std::rc::Rc","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::net::IpAddr","std::collections::BTreeSet","std::time::SystemTime","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::borrow::Cow","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::sync::Mutex","std::num::NonZeroU64","std::net::Ipv4Addr","std::num::NonZeroU128","std::cell::Cell","std::net::Ipv6Addr","std::num::NonZeroI64","std::vec::Vec","std::marker::PhantomData","std::option::Option","std::path::PathBuf","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::collections::HashMap","std::num::NonZeroU32","std::collections::Bound","std::num::NonZeroI16","std::num::NonZeroI8"]},"std::collections::HashMap":{"K":["std::num::NonZeroIsize","std::net::SocketAddrV4","std::net::SocketAddrV6","std::num::NonZeroU32","std::num::NonZeroI64","std::ffi::CString","std::option::Option","std::net::Ipv4Addr","std::num::NonZeroI128","std::sync::Arc","std::num::NonZeroUsize","std::num::NonZeroU128","std::num::NonZeroU8","std::num::NonZeroU64"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::cell::Cell","std::num::NonZeroU32","std::num::NonZeroI8","std::sync::Mutex","std::sync::atomic::AtomicI64","std::option::Option","std::collections::HashSet","std::num::NonZeroU128","std::num::NonZeroU64","std::ops::Range","std::net::Ipv6Addr","std::num::NonZeroI64","std::num::NonZeroI32","std::borrow::Cow","std::vec::Vec","std::net::IpAddr","std::cell::RefCell","std::rc::Rc","std::num::NonZeroIsize","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroI16","std::ops::RangeInclusive","std::collections::BinaryHeap","std::num::NonZeroUsize","std::string::String","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::collections::Bound","std::ffi::CString","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::result::Result","std::num::NonZeroU8","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::sync::atomic::AtomicI32","std::boxed::Box","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::net::SocketAddrV4","std::net::SocketAddrV6","std::collections::BTreeMap","std::sync::Arc","std::sync::RwLock","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::time::Duration","std::num::NonZeroI128","std::collections::HashMap"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroUsize","std::num::NonZeroU64","std::net::IpAddr","std::rc::Rc","std::time::SystemTime","std::num::NonZeroU128","std::option::Option","std::num::NonZeroI16","std::net::SocketAddr","std::string::String","std::time::Duration","std::net::Ipv6Addr","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroI8","std::num::NonZeroIsize","std::net::SocketAddrV6","std::ffi::CString","std::sync::Arc","std::num::NonZeroU32"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::vec::Vec","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::collections::HashSet","std::num::NonZeroUsize","std::num::NonZeroU32","std::borrow::Cow","std::cell::RefCell","std::num::NonZeroU8","std::rc::Rc","std::num::NonZeroI64","std::num::NonZeroU64","std::time::Duration","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::string::String","std::net::SocketAddr","std::cell::Cell","std::ffi::CString","std::sync::Arc","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::boxed::Box","std::ops::RangeInclusive","std::collections::Bound","std::result::Result","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::collections::HashMap","std::collections::BinaryHeap","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroI8","std::ops::Range","std::net::IpAddr","std::sync::RwLock","std::time::SystemTime","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroI128","std::option::Option","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::marker::PhantomData","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::sync::Mutex","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::ffi::CString","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::num::NonZeroI128","std::sync::RwLock","std::collections::Bound","std::num::NonZeroIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::net::Ipv4Addr","std::net::SocketAddrV6","std::cell::RefCell","std::time::SystemTime","std::net::SocketAddr","std::num::NonZeroI64","std::collections::BinaryHeap","std::collections::VecDeque","std::num::NonZeroU8","std::num::NonZeroU64","std::marker::PhantomData","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::time::Duration","std::sync::atomic::AtomicU64","std::net::IpAddr","std::collections::HashMap","std::cell::Cell","std::collections::BTreeSet","std::num::NonZeroU16","std::num::NonZeroI32","std::vec::Vec","std::borrow::Cow","std::path::PathBuf","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::sync::Mutex","std::collections::BTreeMap","std::result::Result","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::sync::Arc","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::ops::Range","std::string::String"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::string::String","std::num::NonZeroU128","std::net::Ipv6Addr","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::num::NonZeroU8","std::marker::PhantomData","std::result::Result","std::num::NonZeroI32","std::collections::BTreeMap","std::rc::Rc","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::collections::HashSet","std::collections::BTreeSet","std::boxed::Box","std::cell::RefCell","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::time::Duration","std::collections::BinaryHeap","std::ops::Range","std::sync::atomic::AtomicU16","std::path::PathBuf","std::num::NonZeroUsize","std::borrow::Cow","std::vec::Vec","std::num::NonZeroU64","std::collections::VecDeque","std::collections::Bound","std::cell::Cell","std::sync::Mutex","std::sync::Arc","std::sync::RwLock","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::ffi::CString","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::time::SystemTime","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::num::NonZeroI16","std::collections::HashMap","std::num::NonZeroIsize","std::option::Option","std::num::NonZeroU32"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::ops::Range","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::path::PathBuf","std::boxed::Box","std::num::NonZeroU64","std::marker::PhantomData","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::num::NonZeroI64","std::sync::Arc","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::collections::HashSet","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::time::SystemTime","std::result::Result","std::num::NonZeroU16","std::num::NonZeroI16","std::sync::RwLock","std::sync::atomic::AtomicI64","std::vec::Vec","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::cell::Cell","std::net::IpAddr","std::time::Duration","std::collections::HashMap","std::string::String","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroIsize","std::collections::BTreeMap","std::net::Ipv6Addr","std::collections::Bound","std::sync::Mutex","std::ops::RangeInclusive","std::num::NonZeroUsize","std::ffi::CString","std::net::SocketAddrV6","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::cell::RefCell","std::option::Option","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::borrow::Cow","std::sync::atomic::AtomicU8"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::Decode for std::sync::Mutex<T>>::decode(p0);
+crate::features::impl_std::<impl de::Decode for std::sync::Mutex<T>>::decode(p0);
+<std::sync::Mutex<T>>::decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::BorrowDecode<'de> for std::sync::Mutex<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::sync::Mutex<T>>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"],"T":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"K":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord"],"V":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["std::marker::Sized","std::cmp::Ord","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::Decode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::Bound":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","de::Decode","std::marker::Sized","std::hash::Hash","de::BorrowDecode","enc::Encode"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["enc::Encode","std::cmp::Eq","de::BorrowDecode","de::Decode","std::hash::Hash","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::BigEndian","config::NoLimit","config::Varint","config::Limit","config::Fixint","config::Configuration","config::LittleEndian","std::clone::impls::<impl std::clone::Clone for *const T>"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::sync::Mutex<T>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"T":["std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::ffi::CString","std::num::NonZeroUsize","std::collections::HashSet","std::num::NonZeroU32","std::num::NonZeroU16","std::num::NonZeroI8","std::net::Ipv6Addr","std::marker::PhantomData","std::borrow::Cow","std::sync::atomic::AtomicI8","std::sync::Arc","std::num::NonZeroI64","std::result::Result","std::time::SystemTime","std::sync::atomic::AtomicU32","std::cell::Cell","std::ops::Range","std::sync::Mutex","std::string::String","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::collections::BinaryHeap","std::boxed::Box","std::num::NonZeroI16","std::num::NonZeroI128","std::sync::RwLock","std::path::PathBuf","std::collections::BTreeSet","std::vec::Vec","std::time::Duration","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::collections::Bound","std::collections::BTreeMap","std::net::SocketAddrV4","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::rc::Rc","std::option::Option","std::num::NonZeroIsize","std::collections::HashMap","std::net::SocketAddrV6","std::cell::RefCell","std::net::IpAddr","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::sync::atomic::AtomicU8"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::ffi::OsStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroI128","std::ffi::CString","std::net::IpAddr","std::num::NonZeroU32","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroI32","std::cell::RefCell","std::path::PathBuf","std::net::SocketAddrV6","std::time::Duration","std::option::Option","std::sync::Arc","std::num::NonZeroIsize","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroU8","std::string::String","std::net::Ipv4Addr"],"V":["std::sync::atomic::AtomicU8","std::time::Duration","std::sync::atomic::AtomicI8","std::sync::Mutex","std::collections::HashMap","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::collections::HashSet","std::sync::Arc","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::num::NonZeroU32","std::option::Option","std::num::NonZeroU128","std::string::String","std::sync::RwLock","std::sync::atomic::AtomicU64","std::ops::Range","std::collections::Bound","std::marker::PhantomData","std::net::IpAddr","std::num::NonZeroU8","std::rc::Rc","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::num::NonZeroU64","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::ffi::CString","std::net::SocketAddr","std::vec::Vec","std::cell::RefCell","std::collections::BTreeSet","std::collections::VecDeque","std::num::NonZeroI128","std::num::NonZeroI16","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::result::Result","std::time::SystemTime","std::borrow::Cow","std::num::NonZeroI8","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::num::NonZeroIsize","std::boxed::Box","std::cell::Cell"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::marker::PhantomData","std::num::NonZeroU32","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroI128","std::cell::RefCell","std::net::Ipv4Addr","std::num::NonZeroUsize","std::num::NonZeroI16","std::string::String","std::ffi::CString","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroU16","std::cell::Cell","std::option::Option","std::sync::Arc","std::time::SystemTime","std::num::NonZeroU128","std::net::IpAddr"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI64","std::option::Option","std::num::NonZeroI16","std::net::SocketAddr","std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroU32","std::num::NonZeroI32","std::time::SystemTime","std::time::Duration","std::sync::Arc","std::cell::RefCell","std::num::NonZeroU16","std::cell::Cell","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroU64","std::net::Ipv6Addr","std::string::String"]},"std::collections::Bound":{"T":["std::cell::Cell","std::cell::RefCell","std::num::NonZeroI32","std::net::SocketAddrV6","std::net::SocketAddr","std::time::SystemTime","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::vec::Vec","std::collections::BTreeMap","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::ffi::CString","std::borrow::Cow","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::time::Duration","std::collections::BTreeSet","std::collections::VecDeque","std::num::NonZeroU8","std::num::NonZeroU64","std::net::IpAddr","std::num::NonZeroI128","std::num::NonZeroUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::sync::Mutex","std::num::NonZeroU128","std::sync::Arc","std::sync::atomic::AtomicI8","std::collections::HashSet","std::collections::Bound","std::sync::RwLock","std::boxed::Box","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::string::String","std::ops::Range","std::num::NonZeroU16","std::num::NonZeroI64","std::collections::HashMap","std::num::NonZeroU32","std::ops::RangeInclusive","std::num::NonZeroI16","std::path::PathBuf","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::marker::PhantomData","std::result::Result"]},"std::collections::HashMap":{"K":["std::num::NonZeroU64","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroU16","std::num::NonZeroUsize","std::time::SystemTime","std::num::NonZeroU128","std::collections::Bound","std::sync::Arc","std::net::SocketAddrV6","std::ffi::CString","std::net::Ipv6Addr","std::net::Ipv4Addr","std::num::NonZeroI32","std::marker::PhantomData"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicI16","std::option::Option","std::sync::atomic::AtomicI32","std::cell::RefCell","std::result::Result","std::path::PathBuf","std::num::NonZeroI32","std::collections::HashMap","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::string::String","std::num::NonZeroI64","std::num::NonZeroI8","std::sync::Arc","std::num::NonZeroI128","std::collections::BTreeSet","std::ffi::CString","std::collections::HashSet","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::boxed::Box","std::cell::Cell","std::num::NonZeroU16","std::num::NonZeroU32","std::ops::Range","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::num::NonZeroUsize","std::num::NonZeroU8","std::net::Ipv6Addr","std::collections::Bound","std::vec::Vec","std::borrow::Cow","std::time::Duration","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::rc::Rc","std::collections::VecDeque","std::sync::RwLock","std::collections::BinaryHeap","std::collections::BTreeMap","std::sync::atomic::AtomicI64"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroI16","std::option::Option","std::num::NonZeroU32","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroI8","std::num::NonZeroU8","std::net::Ipv4Addr","std::rc::Rc","std::ffi::CString","std::net::Ipv6Addr","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroU16"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::time::SystemTime","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::num::NonZeroIsize","std::net::IpAddr","std::num::NonZeroU32","std::time::Duration","std::rc::Rc","std::num::NonZeroU8","std::ops::RangeInclusive","std::sync::Arc","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::num::NonZeroI32","std::num::NonZeroI128","std::sync::RwLock","std::net::SocketAddr","std::ffi::CString","std::collections::Bound","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::ops::Range","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::cell::RefCell","std::num::NonZeroU128","std::net::SocketAddrV6","std::borrow::Cow","std::result::Result","std::collections::BTreeSet","std::num::NonZeroU64","std::boxed::Box","std::path::PathBuf","std::net::Ipv6Addr","std::string::String","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::collections::BTreeMap","std::collections::HashSet","std::num::NonZeroUsize","std::num::NonZeroI16","std::option::Option","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::cell::Cell","std::num::NonZeroU16","std::vec::Vec"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroU64","std::vec::Vec","std::cell::RefCell","std::option::Option","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::sync::Mutex","std::num::NonZeroU8","std::collections::HashSet","std::ffi::CString","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::string::String","std::ops::RangeInclusive","std::num::NonZeroIsize","std::num::NonZeroI128","std::num::NonZeroI64","std::sync::RwLock","std::collections::BinaryHeap","std::result::Result","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroUsize","std::borrow::Cow","std::sync::atomic::AtomicI64","std::time::SystemTime","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::num::NonZeroU128","std::net::Ipv4Addr","std::boxed::Box","std::path::PathBuf","std::num::NonZeroI32","std::collections::HashMap","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::ops::Range","std::net::Ipv6Addr","std::collections::VecDeque","std::rc::Rc","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::net::IpAddr","std::cell::Cell","std::sync::Arc","std::num::NonZeroI16","std::collections::BTreeMap","std::collections::Bound","std::marker::PhantomData","std::time::Duration","std::net::SocketAddrV6","std::sync::atomic::AtomicU16"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroI8","std::option::Option","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::time::Duration","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::result::Result","std::num::NonZeroU32","std::borrow::Cow","std::sync::RwLock","std::num::NonZeroI16","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::ops::Range","std::collections::HashSet","std::vec::Vec","std::sync::atomic::AtomicI16","std::ffi::CString","std::sync::atomic::AtomicU8","std::string::String","std::net::Ipv6Addr","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::sync::Mutex","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::time::SystemTime","std::num::NonZeroU64","std::collections::Bound","std::sync::atomic::AtomicU32","std::sync::Arc","std::rc::Rc","std::boxed::Box","std::collections::BTreeMap","std::ops::RangeInclusive","std::cell::Cell","std::num::NonZeroU16","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::path::PathBuf","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::collections::BinaryHeap","std::num::NonZeroUsize","std::collections::BTreeSet","std::num::NonZeroI64","std::collections::HashMap","std::cell::RefCell","std::num::NonZeroU128"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::collections::HashSet","std::sync::atomic::AtomicI32","std::sync::Mutex","std::sync::Arc","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::time::Duration","std::sync::atomic::AtomicU32","std::option::Option","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::net::SocketAddrV4","std::num::NonZeroI64","std::ops::Range","std::net::SocketAddr","std::marker::PhantomData","std::collections::BTreeMap","std::rc::Rc","std::ffi::CString","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::net::IpAddr","std::collections::BTreeSet","std::num::NonZeroI128","std::sync::RwLock","std::sync::atomic::AtomicU64","std::collections::Bound","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::result::Result","std::string::String","std::vec::Vec","std::boxed::Box","std::num::NonZeroI8","std::cell::RefCell","std::collections::VecDeque","std::time::SystemTime","std::ops::RangeInclusive","std::net::SocketAddrV6","std::borrow::Cow","std::num::NonZeroU64","std::cell::Cell","std::sync::atomic::AtomicU8","std::path::PathBuf","std::sync::atomic::AtomicU16","std::collections::HashMap","std::num::NonZeroU8","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroUsize"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for std::sync::Mutex<T>>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for std::sync::Mutex<T>>::borrow_decode(p0);
+<std::sync::Mutex<T>>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for std::sync::RwLock<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::<impl enc::Encode for std::sync::RwLock<T>>::encode":{"E":["std::marker::Sized","enc::Encoder"],"T":["enc::Encode","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["de::Decode","de::BorrowDecode","std::cmp::Ord","std::marker::Sized","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord"]},"std::collections::Bound":{"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashMap":{"K":["de::BorrowDecode","de::Decode","std::hash::Hash","std::marker::Sized","std::cmp::Eq","enc::Encode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","std::cmp::Eq","enc::Encode","std::hash::Hash","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::Configuration","std::clone::impls::<impl std::clone::Clone for *mut T>","config::BigEndian","config::Fixint","config::Varint","config::NoLimit","config::LittleEndian"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SizeWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::<impl enc::Encode for std::sync::RwLock<T>>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"T":["std::collections::Bound","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::result::Result","std::collections::VecDeque","std::vec::Vec","std::collections::BinaryHeap","std::collections::HashSet","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::sync::Arc","std::sync::atomic::AtomicI16","std::rc::Rc","std::ops::Range","std::num::NonZeroI8","std::collections::HashMap","std::net::SocketAddrV4","std::num::NonZeroI32","std::net::IpAddr","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::cell::RefCell","std::string::String","std::cell::Cell","std::borrow::Cow","std::ops::RangeInclusive","std::ffi::CString","std::net::Ipv4Addr","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::num::NonZeroU32","std::num::NonZeroI16","std::sync::atomic::AtomicBool","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroIsize","std::boxed::Box","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::sync::Mutex","std::num::NonZeroU128","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::collections::BTreeSet","std::sync::RwLock","std::marker::PhantomData","std::option::Option","std::sync::atomic::AtomicU64","std::time::SystemTime","std::time::Duration","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::num::NonZeroI64"]},"features::impl_std::IoWriter":{"W":["std::collections::VecDeque<u8, A>","std::process::ChildStdin","std::io::BufWriter<W>","std::io::StderrLock<'_>","std::io::Cursor<[u8; N]>","std::sys::unix::stdio::Stderr","std::io::Stdout","std::io::Cursor<std::boxed::Box<[u8], A>>","std::os::unix::net::UnixStream","std::vec::Vec<u8, A>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Cursor<&mut [u8]>","&std::io::Sink","&std::net::TcpStream","std::boxed::Box<W>","std::net::TcpStream","std::sys::unix::stdio::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::io::Stdout","std::io::Sink","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&'a std::os::unix::net::UnixStream","&std::io::Stderr","&std::fs::File","std::io::LineWriter<W>","std::io::Stderr","&std::process::ChildStdin","std::io::stdio::StdoutRaw","std::io::impls::<impl std::io::Write for &mut W>","std::fs::File","std::io::StdoutLock<'_>","std::io::stdio::StderrRaw","std::io::BorrowedCursor<'a>"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::path::Path","std::ffi::CStr","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroU16","std::string::String","std::num::NonZeroI16","std::option::Option","std::num::NonZeroU64","std::num::NonZeroU32","std::num::NonZeroUsize","std::time::SystemTime","std::num::NonZeroI32","std::net::SocketAddrV6","std::num::NonZeroI8","std::net::SocketAddrV4","std::ffi::CString","std::net::Ipv6Addr","std::num::NonZeroIsize","std::cell::Cell","std::sync::Arc","std::time::Duration","std::num::NonZeroU8","std::net::Ipv4Addr","std::net::SocketAddr"],"V":["std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::collections::HashSet","std::net::SocketAddrV6","std::boxed::Box","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::collections::Bound","std::net::IpAddr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::option::Option","std::num::NonZeroI8","std::num::NonZeroIsize","std::sync::Arc","std::sync::Mutex","std::time::SystemTime","std::ffi::CString","std::num::NonZeroU8","std::num::NonZeroI64","std::result::Result","std::num::NonZeroUsize","std::net::Ipv4Addr","std::path::PathBuf","std::marker::PhantomData","std::num::NonZeroI32","std::collections::BTreeSet","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::collections::HashMap","std::net::SocketAddrV4","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::sync::RwLock","std::collections::VecDeque","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroU16","std::cell::Cell","std::ops::Range","std::rc::Rc","std::borrow::Cow","std::cell::RefCell","std::sync::atomic::AtomicU16","std::string::String","std::vec::Vec","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::time::Duration","std::net::Ipv6Addr","std::num::NonZeroU32","std::num::NonZeroI16","std::sync::atomic::AtomicIsize"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI16","std::time::Duration","std::net::Ipv6Addr","std::string::String","std::num::NonZeroU128","std::sync::Arc","std::net::SocketAddrV4","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroI32","std::num::NonZeroU64","std::path::PathBuf","std::cell::Cell","std::rc::Rc","std::num::NonZeroU8","std::num::NonZeroI8","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroIsize","std::num::NonZeroI64","std::time::SystemTime","std::cell::RefCell"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU16","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroU128","std::option::Option","std::num::NonZeroU32","std::net::IpAddr","std::cell::Cell","std::num::NonZeroI128","std::sync::Arc","std::net::Ipv4Addr","std::num::NonZeroU8","std::num::NonZeroI8","std::net::SocketAddr","std::num::NonZeroIsize","std::num::NonZeroI16","std::cell::RefCell","std::rc::Rc","std::marker::PhantomData"]},"std::collections::Bound":{"T":["std::string::String","std::num::NonZeroU128","std::num::NonZeroU16","std::sync::RwLock","std::marker::PhantomData","std::num::NonZeroI128","std::net::SocketAddrV6","std::borrow::Cow","std::collections::BTreeSet","std::path::PathBuf","std::cell::RefCell","std::collections::Bound","std::sync::atomic::AtomicU16","std::collections::HashMap","std::rc::Rc","std::collections::BinaryHeap","std::cell::Cell","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::boxed::Box","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::num::NonZeroUsize","std::net::Ipv4Addr","std::time::Duration","std::ops::RangeInclusive","std::sync::Mutex","std::num::NonZeroU32","std::ffi::CString","std::sync::atomic::AtomicI32","std::time::SystemTime","std::num::NonZeroI32","std::collections::HashSet","std::net::SocketAddrV4","std::net::IpAddr","std::sync::Arc","std::sync::atomic::AtomicU8","std::ops::Range","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::option::Option","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::collections::VecDeque","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::vec::Vec","std::result::Result","std::num::NonZeroU8","std::sync::atomic::AtomicUsize"]},"std::collections::HashMap":{"K":["std::option::Option","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroU64","std::net::IpAddr","std::collections::Bound","std::sync::Arc","std::num::NonZeroU32","std::net::Ipv4Addr","std::num::NonZeroI32","std::num::NonZeroU8","std::time::SystemTime","std::string::String","std::ffi::CString","std::marker::PhantomData","std::rc::Rc"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::collections::BTreeSet","std::net::IpAddr","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::net::Ipv4Addr","std::net::SocketAddr","std::collections::HashMap","std::sync::atomic::AtomicI8","std::sync::RwLock","std::num::NonZeroU64","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::collections::HashSet","std::collections::VecDeque","std::borrow::Cow","std::net::SocketAddrV6","std::rc::Rc","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::num::NonZeroI32","std::path::PathBuf","std::net::SocketAddrV4","std::string::String","std::ffi::CString","std::num::NonZeroU32","std::sync::Mutex","std::cell::RefCell","std::net::Ipv6Addr","std::ops::Range","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::num::NonZeroI128","std::num::NonZeroIsize","std::result::Result","std::time::Duration","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::vec::Vec","std::collections::BinaryHeap","std::num::NonZeroU128","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::option::Option","std::time::SystemTime","std::collections::Bound","std::sync::atomic::AtomicIsize","std::sync::Arc","std::ops::RangeInclusive","std::boxed::Box","std::cell::Cell","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::num::NonZeroI16","std::num::NonZeroU8","std::sync::atomic::AtomicUsize"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::net::SocketAddr","std::net::SocketAddrV6","std::time::Duration","std::num::NonZeroU8","std::num::NonZeroI16","std::rc::Rc","std::collections::Bound","std::num::NonZeroU32","std::marker::PhantomData","std::num::NonZeroU16","std::num::NonZeroUsize","std::time::SystemTime","std::string::String","std::option::Option","std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroIsize"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::ffi::CString","std::num::NonZeroU32","std::cell::RefCell","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::num::NonZeroI64","std::collections::HashSet","std::string::String","std::marker::PhantomData","std::ops::Range","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::time::SystemTime","std::sync::RwLock","std::net::Ipv6Addr","std::time::Duration","std::option::Option","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroU128","std::sync::Mutex","std::collections::Bound","std::num::NonZeroU8","std::net::SocketAddrV6","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::vec::Vec","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::rc::Rc","std::collections::HashMap","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::num::NonZeroU64","std::collections::VecDeque","std::borrow::Cow","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::net::Ipv4Addr","std::cell::Cell","std::net::IpAddr","std::boxed::Box","std::result::Result","std::collections::BTreeSet","std::num::NonZeroI128"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::vec::Vec","std::num::NonZeroUsize","std::collections::BTreeMap","std::collections::BTreeSet","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::cell::RefCell","std::num::NonZeroI8","std::collections::VecDeque","std::ops::Range","std::num::NonZeroIsize","std::collections::HashSet","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::time::SystemTime","std::result::Result","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroU16","std::string::String","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroI128","std::boxed::Box","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::sync::RwLock","std::sync::Arc","std::time::Duration","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::rc::Rc","std::num::NonZeroU128","std::option::Option","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::net::SocketAddrV6","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::cell::Cell","std::sync::atomic::AtomicI32","std::collections::Bound","std::net::SocketAddr","std::borrow::Cow","std::collections::HashMap"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroI128","std::cell::RefCell","std::sync::atomic::AtomicI8","std::time::SystemTime","std::borrow::Cow","std::cell::Cell","std::net::SocketAddrV6","std::num::NonZeroIsize","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::ops::Range","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::collections::HashSet","std::sync::atomic::AtomicU32","std::option::Option","std::num::NonZeroU128","std::net::Ipv4Addr","std::ffi::CString","std::collections::BinaryHeap","std::ops::RangeInclusive","std::result::Result","std::sync::Mutex","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::path::PathBuf","std::vec::Vec","std::num::NonZeroI32","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::string::String","std::collections::HashMap","std::collections::BTreeSet","std::num::NonZeroI64","std::num::NonZeroI16","std::marker::PhantomData","std::rc::Rc","std::collections::BTreeMap","std::net::IpAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::boxed::Box","std::net::Ipv6Addr","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroI8","std::collections::Bound","std::sync::Arc","std::sync::RwLock","std::num::NonZeroU32"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroI128","std::ops::Range","std::num::NonZeroU16","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::string::String","std::time::Duration","std::num::NonZeroU64","std::collections::VecDeque","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::vec::Vec","std::num::NonZeroI16","std::net::SocketAddrV6","std::net::IpAddr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::cell::Cell","std::sync::atomic::AtomicI32","std::sync::Arc","std::path::PathBuf","std::result::Result","std::collections::HashSet","std::ops::RangeInclusive","std::collections::BTreeSet","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::time::SystemTime","std::collections::BTreeMap","std::num::NonZeroI32","std::borrow::Cow","std::sync::Mutex","std::net::Ipv6Addr","std::option::Option","std::sync::RwLock","std::boxed::Box","std::num::NonZeroI64","std::rc::Rc","std::collections::Bound","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::sync::atomic::AtomicU64","std::num::NonZeroIsize"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::sync::RwLock<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for std::sync::RwLock<T>>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for std::sync::RwLock<T>>::encode(p0, p1);
+<std::sync::RwLock<T>>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::Decode for std::sync::RwLock<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"features::impl_std::<impl de::Decode for std::sync::RwLock<T>>::decode":{"D":["std::marker::Sized","de::Decoder"],"T":["de::Decode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"K":["de::BorrowDecode","std::marker::Sized","std::cmp::Ord","de::Decode","enc::Encode"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["de::Decode","std::cmp::Ord","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::Decode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode"]},"std::collections::Bound":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::marker::Sized","de::Decode","std::cmp::Eq","std::hash::Hash","de::BorrowDecode","enc::Encode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["de::Decode","std::cmp::Eq","de::BorrowDecode","std::marker::Sized","std::hash::Hash","enc::Encode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","config::NoLimit","config::LittleEndian","config::Fixint","config::Varint","std::clone::impls::<impl std::clone::Clone for *mut T>","config::BigEndian","config::Limit"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::Decode for std::sync::RwLock<T>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"T":["std::boxed::Box","std::ops::RangeInclusive","std::time::Duration","std::collections::BTreeSet","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::collections::HashMap","std::option::Option","std::num::NonZeroI8","std::num::NonZeroUsize","std::sync::Arc","std::collections::HashSet","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroU8","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::cell::Cell","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::time::SystemTime","std::num::NonZeroU16","std::net::Ipv6Addr","std::sync::Mutex","std::num::NonZeroU32","std::net::SocketAddrV4","std::net::SocketAddr","std::num::NonZeroI64","std::vec::Vec","std::net::IpAddr","std::num::NonZeroI32","std::sync::RwLock","std::ffi::CString","std::string::String","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::result::Result","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::net::SocketAddrV6","std::path::PathBuf","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::ops::Range","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::cell::RefCell","std::borrow::Cow","std::num::NonZeroIsize","std::collections::Bound","std::sync::atomic::AtomicU8"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroIsize","std::num::NonZeroU32","std::net::Ipv4Addr","std::time::Duration","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroU8","std::num::NonZeroI16","std::sync::Arc","std::path::PathBuf","std::net::SocketAddr","std::rc::Rc","std::time::SystemTime","std::num::NonZeroUsize","std::cell::RefCell","std::num::NonZeroU128","std::option::Option","std::num::NonZeroU16","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroI8"],"V":["std::net::Ipv6Addr","std::option::Option","std::time::Duration","std::sync::atomic::AtomicU16","std::string::String","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::cell::RefCell","std::sync::atomic::AtomicI16","std::borrow::Cow","std::sync::atomic::AtomicU32","std::collections::Bound","std::path::PathBuf","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::boxed::Box","std::vec::Vec","std::num::NonZeroU8","std::net::IpAddr","std::sync::Arc","std::ops::RangeInclusive","std::net::Ipv4Addr","std::net::SocketAddrV4","std::collections::VecDeque","std::ffi::CString","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::sync::RwLock","std::ops::Range","std::num::NonZeroUsize","std::rc::Rc","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::collections::HashSet","std::collections::BTreeSet","std::num::NonZeroU16","std::num::NonZeroI32","std::time::SystemTime","std::collections::BTreeMap","std::collections::HashMap","std::cell::Cell","std::num::NonZeroIsize","std::net::SocketAddrV6","std::result::Result","std::num::NonZeroI128","std::num::NonZeroU128","std::num::NonZeroU64"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroI128","std::net::IpAddr","std::marker::PhantomData","std::cell::RefCell","std::num::NonZeroIsize","std::num::NonZeroU64","std::net::Ipv4Addr","std::string::String","std::num::NonZeroU8","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroI16","std::num::NonZeroUsize","std::net::Ipv6Addr"]},"std::collections::BinaryHeap":{"T":["std::net::Ipv6Addr","std::num::NonZeroU8","std::num::NonZeroI32","std::path::PathBuf","std::num::NonZeroU32","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroU16","std::net::Ipv4Addr","std::num::NonZeroI64","std::net::SocketAddrV6","std::num::NonZeroI128","std::ffi::CString","std::num::NonZeroI8","std::sync::Arc","std::cell::RefCell","std::time::SystemTime","std::string::String","std::net::SocketAddr"]},"std::collections::Bound":{"T":["std::cell::Cell","std::num::NonZeroU32","std::collections::Bound","std::net::Ipv4Addr","std::num::NonZeroI64","std::sync::Mutex","std::num::NonZeroU8","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::ffi::CString","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::boxed::Box","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::ops::Range","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::collections::HashSet","std::rc::Rc","std::num::NonZeroU16","std::option::Option","std::sync::atomic::AtomicI64","std::collections::HashMap","std::net::Ipv6Addr","std::collections::BTreeSet","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::vec::Vec","std::cell::RefCell","std::sync::atomic::AtomicI32","std::borrow::Cow","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::collections::BTreeMap","std::num::NonZeroU64","std::sync::Arc","std::num::NonZeroUsize","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::string::String","std::net::IpAddr","std::result::Result","std::num::NonZeroIsize","std::sync::RwLock","std::time::Duration","std::time::SystemTime","std::collections::VecDeque","std::num::NonZeroI8","std::num::NonZeroI32"]},"std::collections::HashMap":{"K":["std::net::IpAddr","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroU32","std::collections::Bound","std::num::NonZeroIsize","std::net::Ipv4Addr","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroU16","std::time::SystemTime","std::num::NonZeroU64","std::path::PathBuf"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::ffi::CString","std::sync::atomic::AtomicU32","std::time::SystemTime","std::result::Result","std::sync::atomic::AtomicBool","std::sync::Arc","std::num::NonZeroU8","std::vec::Vec","std::collections::BTreeSet","std::num::NonZeroU128","std::option::Option","std::ops::Range","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::marker::PhantomData","std::net::IpAddr","std::collections::HashSet","std::num::NonZeroIsize","std::net::Ipv6Addr","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::net::SocketAddrV6","std::boxed::Box","std::num::NonZeroUsize","std::sync::Mutex","std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroI16","std::cell::Cell","std::string::String","std::num::NonZeroI128","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::collections::Bound","std::path::PathBuf","std::cell::RefCell","std::num::NonZeroI64","std::time::Duration","std::sync::atomic::AtomicI8","std::rc::Rc","std::net::SocketAddrV4","std::borrow::Cow","std::collections::BTreeMap","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::sync::RwLock","std::num::NonZeroU16","std::sync::atomic::AtomicI32"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::option::Option","std::net::SocketAddr","std::net::SocketAddrV4","std::marker::PhantomData","std::num::NonZeroI64","std::time::SystemTime","std::sync::Arc","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroI128","std::net::IpAddr","std::num::NonZeroUsize","std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroIsize","std::string::String","std::num::NonZeroU16","std::net::Ipv4Addr","std::path::PathBuf"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::path::PathBuf","std::net::Ipv4Addr","std::ops::Range","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::string::String","std::collections::BinaryHeap","std::sync::Mutex","std::result::Result","std::ffi::CString","std::boxed::Box","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::num::NonZeroU8","std::net::Ipv6Addr","std::num::NonZeroIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::option::Option","std::cell::Cell","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::borrow::Cow","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroI64","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::vec::Vec","std::num::NonZeroU128","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::rc::Rc","std::time::Duration","std::collections::HashMap","std::sync::atomic::AtomicU16","std::collections::HashSet","std::net::SocketAddr","std::num::NonZeroI128","std::sync::RwLock","std::sync::atomic::AtomicI32","std::collections::Bound","std::sync::atomic::AtomicI64","std::cell::RefCell","std::sync::Arc","std::collections::VecDeque","std::num::NonZeroI32","std::net::SocketAddrV4","std::num::NonZeroI8","std::ops::RangeInclusive"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroI8","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::borrow::Cow","std::time::SystemTime","std::vec::Vec","std::ops::RangeInclusive","std::cell::RefCell","std::path::PathBuf","std::option::Option","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::collections::HashSet","std::time::Duration","std::num::NonZeroI128","std::rc::Rc","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::collections::BinaryHeap","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::string::String","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::ffi::CString","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::boxed::Box","std::collections::BTreeSet","std::sync::Arc","std::collections::Bound","std::sync::Mutex","std::net::IpAddr","std::ops::Range","std::sync::RwLock","std::net::Ipv6Addr","std::collections::HashMap","std::num::NonZeroI16","std::cell::Cell","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::result::Result"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::time::Duration","std::num::NonZeroU8","std::string::String","std::num::NonZeroU16","std::sync::Mutex","std::net::SocketAddr","std::num::NonZeroUsize","std::ops::Range","std::num::NonZeroI64","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::collections::HashSet","std::sync::atomic::AtomicU64","std::collections::Bound","std::collections::HashMap","std::num::NonZeroIsize","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::boxed::Box","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::rc::Rc","std::collections::BTreeSet","std::num::NonZeroI32","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::num::NonZeroU128","std::result::Result","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::sync::RwLock","std::borrow::Cow","std::sync::Arc","std::time::SystemTime","std::ffi::CString","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::net::Ipv4Addr","std::vec::Vec","std::ops::RangeInclusive","std::cell::Cell","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::cell::RefCell","std::path::PathBuf","std::marker::PhantomData","std::net::Ipv6Addr","std::net::IpAddr"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::Arc","std::time::Duration","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::option::Option","std::net::IpAddr","std::collections::VecDeque","std::time::SystemTime","std::ffi::CString","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::num::NonZeroI32","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::cell::Cell","std::vec::Vec","std::sync::atomic::AtomicI8","std::path::PathBuf","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::string::String","std::num::NonZeroU16","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroI16","std::collections::BTreeSet","std::collections::HashSet","std::collections::BTreeMap","std::num::NonZeroI64","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::num::NonZeroU128","std::borrow::Cow","std::sync::Mutex","std::collections::Bound","std::cell::RefCell","std::collections::BinaryHeap","std::result::Result","std::num::NonZeroIsize","std::ops::Range","std::num::NonZeroU32","std::rc::Rc","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::boxed::Box","std::collections::HashMap"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::Decode for std::sync::RwLock<T>>::decode(p0);
+crate::features::impl_std::<impl de::Decode for std::sync::RwLock<T>>::decode(p0);
+<std::sync::RwLock<T>>::decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::BorrowDecode<'de> for std::sync::RwLock<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::sync::RwLock<T>>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::marker::Sized","std::cmp::Ord","de::BorrowDecode","enc::Encode","de::Decode"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["de::Decode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","std::cmp::Ord","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::HashMap":{"K":["std::marker::Sized","enc::Encode","std::hash::Hash","de::BorrowDecode","de::Decode","std::cmp::Eq"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["enc::Encode","std::marker::Sized","std::cmp::Eq","de::Decode","std::hash::Hash","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::Configuration","config::Fixint","config::Varint","config::NoLimit","config::BigEndian","config::LittleEndian","std::clone::impls::<impl std::clone::Clone for *mut T>"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::sync::RwLock<T>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"T":["std::num::NonZeroI32","std::result::Result","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::cell::Cell","std::boxed::Box","std::borrow::Cow","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::sync::RwLock","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::net::Ipv6Addr","std::ops::Range","std::rc::Rc","std::vec::Vec","std::net::SocketAddrV4","std::num::NonZeroU8","std::string::String","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::num::NonZeroIsize","std::cell::RefCell","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::sync::Mutex","std::net::IpAddr","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroI8","std::num::NonZeroI128","std::time::Duration","std::path::PathBuf","std::collections::Bound","std::net::SocketAddr","std::sync::Arc","std::time::SystemTime","std::option::Option","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::collections::HashMap","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::net::SocketAddrV6","std::ops::RangeInclusive","std::num::NonZeroU32","std::collections::BinaryHeap","std::ffi::CString"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI16","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroU64","std::path::PathBuf","std::option::Option","std::net::SocketAddrV4","std::num::NonZeroUsize","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroU128","std::rc::Rc","std::time::Duration","std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroU8","std::num::NonZeroI64","std::net::IpAddr","std::string::String","std::num::NonZeroI32","std::num::NonZeroI128","std::marker::PhantomData","std::num::NonZeroIsize"],"V":["std::net::IpAddr","std::num::NonZeroIsize","std::rc::Rc","std::path::PathBuf","std::sync::atomic::AtomicU16","std::borrow::Cow","std::num::NonZeroI16","std::cell::Cell","std::num::NonZeroI8","std::collections::HashSet","std::num::NonZeroI64","std::collections::HashMap","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::net::SocketAddrV4","std::net::Ipv6Addr","std::collections::Bound","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::result::Result","std::boxed::Box","std::net::SocketAddrV6","std::collections::BTreeMap","std::option::Option","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::num::NonZeroU32","std::time::SystemTime","std::sync::Arc","std::vec::Vec","std::num::NonZeroU16","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroI128","std::sync::RwLock","std::sync::atomic::AtomicU8","std::ops::Range","std::collections::BTreeSet","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::num::NonZeroU128","std::sync::Mutex","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::collections::VecDeque","std::num::NonZeroUsize","std::net::SocketAddr","std::ffi::CString","std::time::Duration","std::sync::atomic::AtomicI32","std::string::String"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::ffi::CString","std::net::SocketAddr","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroU16","std::num::NonZeroI128","std::sync::Arc","std::net::SocketAddrV4","std::net::Ipv4Addr","std::net::Ipv6Addr","std::time::Duration","std::num::NonZeroI32","std::option::Option","std::time::SystemTime","std::cell::RefCell","std::rc::Rc","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroIsize","std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroU128","std::string::String"]},"std::collections::BinaryHeap":{"T":["std::option::Option","std::num::NonZeroI8","std::num::NonZeroU64","std::num::NonZeroU32","std::marker::PhantomData","std::num::NonZeroU16","std::num::NonZeroUsize","std::cell::RefCell","std::ffi::CString","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroI16","std::num::NonZeroI32","std::time::Duration","std::time::SystemTime","std::num::NonZeroI64","std::cell::Cell","std::net::Ipv6Addr","std::net::SocketAddrV6","std::string::String","std::path::PathBuf","std::net::IpAddr"]},"std::collections::Bound":{"T":["std::boxed::Box","std::rc::Rc","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::num::NonZeroI128","std::cell::RefCell","std::num::NonZeroU64","std::path::PathBuf","std::net::Ipv4Addr","std::result::Result","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::sync::RwLock","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::sync::Arc","std::cell::Cell","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::time::Duration","std::ops::RangeInclusive","std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::string::String","std::sync::atomic::AtomicU16","std::option::Option","std::collections::VecDeque","std::time::SystemTime","std::sync::Mutex","std::borrow::Cow","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::ops::Range","std::collections::Bound","std::num::NonZeroI64","std::net::SocketAddrV6","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::ffi::CString","std::num::NonZeroU8","std::vec::Vec","std::num::NonZeroU16","std::num::NonZeroUsize","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap"]},"std::collections::HashMap":{"K":["std::time::Duration","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroI16","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroU128","std::option::Option","std::num::NonZeroIsize","std::net::SocketAddr","std::num::NonZeroUsize","std::collections::Bound"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::num::NonZeroI128","std::collections::BinaryHeap","std::num::NonZeroU64","std::num::NonZeroIsize","std::rc::Rc","std::string::String","std::collections::VecDeque","std::borrow::Cow","std::net::SocketAddrV6","std::net::SocketAddr","std::collections::BTreeSet","std::collections::HashMap","std::ops::Range","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroU32","std::num::NonZeroU8","std::num::NonZeroU16","std::option::Option","std::path::PathBuf","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::time::Duration","std::sync::atomic::AtomicIsize","std::vec::Vec","std::sync::RwLock","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::collections::HashSet","std::num::NonZeroI64","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::cell::Cell","std::time::SystemTime","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::sync::Arc","std::boxed::Box","std::num::NonZeroU128","std::result::Result","std::net::Ipv4Addr","std::ops::RangeInclusive","std::ffi::CString","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::collections::Bound","std::cell::RefCell","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::net::IpAddr"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroU64","std::num::NonZeroU16","std::string::String","std::num::NonZeroU32","std::net::SocketAddr","std::net::IpAddr","std::path::PathBuf","std::ffi::CString","std::net::SocketAddrV4","std::net::SocketAddrV6","std::num::NonZeroI64","std::num::NonZeroUsize","std::num::NonZeroI8","std::marker::PhantomData","std::time::Duration"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::net::Ipv4Addr","std::rc::Rc","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::ops::Range","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroU64","std::collections::VecDeque","std::net::SocketAddr","std::borrow::Cow","std::sync::atomic::AtomicBool","std::sync::Mutex","std::boxed::Box","std::marker::PhantomData","std::net::SocketAddrV4","std::result::Result","std::collections::HashMap","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::option::Option","std::net::Ipv6Addr","std::ops::RangeInclusive","std::collections::HashSet","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::num::NonZeroU128","std::string::String","std::num::NonZeroI128","std::path::PathBuf","std::num::NonZeroI32","std::collections::BinaryHeap","std::num::NonZeroU32","std::ffi::CString","std::num::NonZeroUsize","std::collections::BTreeMap","std::net::IpAddr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::num::NonZeroI8","std::sync::RwLock","std::collections::Bound","std::sync::atomic::AtomicU16","std::vec::Vec","std::num::NonZeroIsize","std::sync::Arc","std::cell::Cell"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::vec::Vec","std::ops::Range","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::num::NonZeroI32","std::result::Result","std::sync::atomic::AtomicI16","std::cell::Cell","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::cell::RefCell","std::rc::Rc","std::net::Ipv6Addr","std::time::Duration","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::string::String","std::sync::RwLock","std::collections::HashSet","std::num::NonZeroUsize","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::boxed::Box","std::borrow::Cow","std::path::PathBuf","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::num::NonZeroI64","std::num::NonZeroU64","std::net::SocketAddrV4","std::sync::Arc","std::ffi::CString","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::collections::Bound","std::time::SystemTime","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::sync::Mutex","std::num::NonZeroU8","std::collections::BTreeSet","std::num::NonZeroIsize","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::collections::HashMap","std::num::NonZeroU128","std::num::NonZeroU16","std::option::Option"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::Arc","std::num::NonZeroI64","std::num::NonZeroIsize","std::borrow::Cow","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::num::NonZeroU8","std::sync::Mutex","std::vec::Vec","std::collections::HashSet","std::num::NonZeroI32","std::sync::RwLock","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::net::SocketAddrV4","std::rc::Rc","std::net::Ipv4Addr","std::ffi::CString","std::sync::atomic::AtomicI64","std::ops::Range","std::string::String","std::net::SocketAddrV6","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::time::SystemTime","std::collections::Bound","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::option::Option","std::collections::HashMap","std::num::NonZeroUsize","std::result::Result","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::collections::BinaryHeap","std::num::NonZeroU128","std::time::Duration","std::collections::BTreeMap","std::boxed::Box","std::marker::PhantomData","std::path::PathBuf","std::cell::Cell","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::net::IpAddr","std::sync::atomic::AtomicI8"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::num::NonZeroU8","std::cell::Cell","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::ffi::CString","std::num::NonZeroU64","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::time::Duration","std::path::PathBuf","std::collections::BTreeSet","std::num::NonZeroI32","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::result::Result","std::vec::Vec","std::sync::RwLock","std::net::Ipv4Addr","std::num::NonZeroIsize","std::net::SocketAddr","std::time::SystemTime","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::num::NonZeroU16","std::sync::Arc","std::borrow::Cow","std::cell::RefCell","std::ops::Range","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::collections::Bound","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::collections::HashMap","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroI16","std::boxed::Box","std::collections::HashSet","std::num::NonZeroU128","std::rc::Rc","std::string::String","std::collections::BTreeMap","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroU32"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for std::sync::RwLock<T>>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for std::sync::RwLock<T>>::borrow_decode(p0);
+<std::sync::RwLock<T>>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for std::time::SystemTime>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::<impl enc::Encode for std::time::SystemTime>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SliceWriter"]},"features::impl_std::<impl enc::Encode for std::time::SystemTime>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::collections::VecDeque<u8, A>","&'a std::os::unix::net::UnixStream","std::vec::Vec<u8, A>","std::io::StdoutLock<'_>","&std::io::Sink","&std::fs::File","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::process::ChildStdin","std::io::Sink","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::fs::File","std::io::Stderr","&std::net::TcpStream","&std::io::Stdout","std::io::Cursor<[u8; N]>","std::io::stdio::StderrRaw","std::net::TcpStream","&std::process::ChildStdin","std::io::impls::<impl std::io::Write for &mut W>","std::sys::unix::stdio::Stderr","std::io::BufWriter<W>","std::io::Stdout","std::boxed::Box<W>","std::sys::unix::stdio::Stdout","std::io::stdio::StdoutRaw","std::os::unix::net::UnixStream","std::io::Cursor<std::vec::Vec<u8, A>>","&std::io::Stderr","std::io::StderrLock<'_>","std::io::BorrowedCursor<'a>","std::io::LineWriter<W>","std::io::Cursor<&mut [u8]>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::time::SystemTime
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for std::time::SystemTime>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for std::time::SystemTime>::encode(p0, p1);
+<std::time::SystemTime>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::Decode for std::time::SystemTime>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"features::impl_std::<impl de::Decode for std::time::SystemTime>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::Decode for std::time::SystemTime>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::Decode for std::time::SystemTime>::decode(p0);
+crate::features::impl_std::<impl de::Decode for std::time::SystemTime>::decode(p0);
+<std::time::SystemTime>::decode(p0);
-----------------
src/de/mod.rs features::impl_std::<impl de::BorrowDecode<'de> for std::time::SystemTime>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::time::SystemTime>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::time::SystemTime>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for std::time::SystemTime>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for std::time::SystemTime>::borrow_decode(p0);
+<std::time::SystemTime>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for &std::path::Path>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::<impl enc::Encode for &std::path::Path>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","features::impl_std::IoWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter"]},"features::impl_std::<impl enc::Encode for &std::path::Path>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["&'a std::os::unix::net::UnixStream","std::io::Stdout","std::sys::unix::stdio::Stdout","std::io::Stderr","std::io::StderrLock<'_>","std::io::BufWriter<W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::os::unix::net::UnixStream","std::io::StdoutLock<'_>","std::boxed::Box<W>","&std::io::Sink","&std::io::Stderr","std::io::BorrowedCursor<'a>","std::sys::unix::stdio::Stderr","std::io::impls::<impl std::io::Write for &mut W>","&std::net::TcpStream","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<&mut [u8]>","std::fs::File","std::net::TcpStream","std::vec::Vec<u8, A>","std::io::stdio::StdoutRaw","std::process::ChildStdin","std::collections::VecDeque<u8, A>","std::io::LineWriter<W>","std::io::Sink","std::io::Cursor<std::vec::Vec<u8, A>>","&std::process::ChildStdin","&std::fs::File","std::io::Cursor<[u8; N]>","std::io::stdio::StderrRaw","&std::io::Stdout"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & & MaybeUninit::uninit().assume_init(); // std::path::Path
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for &std::path::Path>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for &std::path::Path>::encode(p0, p1);
+<&std::path::Path>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::BorrowDecode<'de> for &'de std::path::Path>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"features::impl_std::<impl de::BorrowDecode<'de> for &'de std::path::Path>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for &'de std::path::Path>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for &'de std::path::Path>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for &'de std::path::Path>::borrow_decode(p0);
+<&'de std::path::Path>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for std::path::PathBuf>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::<impl enc::Encode for std::path::PathBuf>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SliceWriter","features::impl_std::IoWriter","enc::write::SizeWriter"]},"features::impl_std::<impl enc::Encode for std::path::PathBuf>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stderr","std::io::Stderr","std::io::BorrowedCursor<'a>","std::net::TcpStream","std::io::StdoutLock<'_>","std::sys::unix::stdio::Stdout","&std::io::Stdout","std::io::LineWriter<W>","&std::io::Stderr","std::os::unix::net::UnixStream","std::io::Stdout","&std::net::TcpStream","std::io::impls::<impl std::io::Write for &mut W>","std::io::Sink","std::process::ChildStdin","std::fs::File","std::io::stdio::StderrRaw","std::collections::VecDeque<u8, A>","std::io::BufWriter<W>","&'a std::os::unix::net::UnixStream","std::io::stdio::StdoutRaw","std::io::Cursor<[u8; N]>","std::io::Cursor<&mut [u8]>","&std::io::Sink","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::boxed::Box<W>","std::io::Cursor<std::vec::Vec<u8, A>>","&std::fs::File","&std::process::ChildStdin","std::vec::Vec<u8, A>","std::io::StderrLock<'_>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::path::PathBuf
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for std::path::PathBuf>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for std::path::PathBuf>::encode(p0, p1);
+<std::path::PathBuf>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::Decode for std::path::PathBuf>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"features::impl_std::<impl de::Decode for std::path::PathBuf>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::Decode for std::path::PathBuf>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::Decode for std::path::PathBuf>::decode(p0);
+crate::features::impl_std::<impl de::Decode for std::path::PathBuf>::decode(p0);
+<std::path::PathBuf>::decode(p0);
-----------------
src/de/mod.rs features::impl_std::<impl de::BorrowDecode<'de> for std::path::PathBuf>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::path::PathBuf>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::path::PathBuf>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for std::path::PathBuf>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for std::path::PathBuf>::borrow_decode(p0);
+<std::path::PathBuf>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for std::net::IpAddr>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::<impl enc::Encode for std::net::IpAddr>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SliceWriter","features::impl_alloc::VecWriter"]},"features::impl_std::<impl enc::Encode for std::net::IpAddr>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::io::StderrLock<'_>","std::vec::Vec<u8, A>","&std::io::Stdout","std::boxed::Box<W>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::StdoutLock<'_>","std::io::Cursor<[u8; N]>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::os::unix::net::UnixStream","std::io::Cursor<&mut [u8]>","std::net::TcpStream","&std::io::Sink","std::io::LineWriter<W>","std::sys::unix::stdio::Stdout","std::collections::VecDeque<u8, A>","std::fs::File","std::io::BorrowedCursor<'a>","&std::fs::File","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::process::ChildStdin","std::io::BufWriter<W>","&std::process::ChildStdin","std::sys::unix::stdio::Stderr","&std::io::Stderr","std::io::impls::<impl std::io::Write for &mut W>","std::io::Stderr","std::io::Sink","&'a std::os::unix::net::UnixStream","&std::net::TcpStream","std::io::stdio::StdoutRaw","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::stdio::StderrRaw","std::io::Stdout"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::net::IpAddr
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for std::net::IpAddr>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for std::net::IpAddr>::encode(p0, p1);
+<std::net::IpAddr>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::Decode for std::net::IpAddr>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_std::<impl de::Decode for std::net::IpAddr>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::Decode for std::net::IpAddr>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::Decode for std::net::IpAddr>::decode(p0);
+crate::features::impl_std::<impl de::Decode for std::net::IpAddr>::decode(p0);
+<std::net::IpAddr>::decode(p0);
-----------------
src/de/mod.rs features::impl_std::<impl de::BorrowDecode<'de> for std::net::IpAddr>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::net::IpAddr>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::net::IpAddr>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for std::net::IpAddr>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for std::net::IpAddr>::borrow_decode(p0);
+<std::net::IpAddr>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for std::net::Ipv4Addr>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::<impl enc::Encode for std::net::Ipv4Addr>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>"]},"features::impl_std::<impl enc::Encode for std::net::Ipv4Addr>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<std::boxed::Box<[u8], A>>","std::fs::File","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stderr","std::io::stdio::StderrRaw","std::io::BorrowedCursor<'a>","std::io::Sink","std::io::impls::<impl std::io::Write for &mut W>","std::io::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::process::ChildStdin","&std::process::ChildStdin","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::fs::File","std::os::unix::net::UnixStream","std::io::StdoutLock<'_>","std::vec::Vec<u8, A>","std::io::Cursor<[u8; N]>","std::collections::VecDeque<u8, A>","std::io::stdio::StdoutRaw","&'a std::os::unix::net::UnixStream","std::sys::unix::stdio::Stdout","std::boxed::Box<W>","std::io::Stdout","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::LineWriter<W>","&std::io::Stdout","std::io::BufWriter<W>","std::io::StderrLock<'_>","&std::io::Sink","std::net::TcpStream","&std::io::Stderr","&std::net::TcpStream"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::net::Ipv4Addr
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for std::net::Ipv4Addr>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for std::net::Ipv4Addr>::encode(p0, p1);
+<std::net::Ipv4Addr>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::Decode for std::net::Ipv4Addr>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"features::impl_std::<impl de::Decode for std::net::Ipv4Addr>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::Decode for std::net::Ipv4Addr>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::Decode for std::net::Ipv4Addr>::decode(p0);
+crate::features::impl_std::<impl de::Decode for std::net::Ipv4Addr>::decode(p0);
+<std::net::Ipv4Addr>::decode(p0);
-----------------
src/de/mod.rs features::impl_std::<impl de::BorrowDecode<'de> for std::net::Ipv4Addr>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::net::Ipv4Addr>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::net::Ipv4Addr>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for std::net::Ipv4Addr>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for std::net::Ipv4Addr>::borrow_decode(p0);
+<std::net::Ipv4Addr>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for std::net::Ipv6Addr>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::<impl enc::Encode for std::net::Ipv6Addr>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SizeWriter","enc::write::SliceWriter"]},"features::impl_std::<impl enc::Encode for std::net::Ipv6Addr>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::io::impls::<impl std::io::Write for &mut W>","std::sys::unix::stdio::Stdout","std::fs::File","std::os::unix::net::UnixStream","std::io::Stdout","std::io::Sink","&std::io::Stdout","&std::io::Sink","std::io::Cursor<std::vec::Vec<u8, A>>","std::boxed::Box<W>","std::io::stdio::StdoutRaw","std::sys::unix::stdio::Stderr","std::io::StderrLock<'_>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<&mut [u8]>","std::io::Stderr","std::collections::VecDeque<u8, A>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::process::ChildStdin","std::io::LineWriter<W>","std::io::BufWriter<W>","&std::fs::File","&std::io::Stderr","std::io::StdoutLock<'_>","std::net::TcpStream","&std::process::ChildStdin","&'a std::os::unix::net::UnixStream","std::io::Cursor<[u8; N]>","std::io::stdio::StderrRaw","&std::net::TcpStream","std::vec::Vec<u8, A>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::BorrowedCursor<'a>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::net::Ipv6Addr
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for std::net::Ipv6Addr>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for std::net::Ipv6Addr>::encode(p0, p1);
+<std::net::Ipv6Addr>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::Decode for std::net::Ipv6Addr>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_std::<impl de::Decode for std::net::Ipv6Addr>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::Decode for std::net::Ipv6Addr>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::Decode for std::net::Ipv6Addr>::decode(p0);
+crate::features::impl_std::<impl de::Decode for std::net::Ipv6Addr>::decode(p0);
+<std::net::Ipv6Addr>::decode(p0);
-----------------
src/de/mod.rs features::impl_std::<impl de::BorrowDecode<'de> for std::net::Ipv6Addr>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::net::Ipv6Addr>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::net::Ipv6Addr>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for std::net::Ipv6Addr>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for std::net::Ipv6Addr>::borrow_decode(p0);
+<std::net::Ipv6Addr>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for std::net::SocketAddr>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::<impl enc::Encode for std::net::SocketAddr>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>"]},"features::impl_std::<impl enc::Encode for std::net::SocketAddr>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::os::unix::net::UnixStream","std::io::stdio::StdoutRaw","&std::io::Sink","std::sys::unix::stdio::Stdout","&'a std::os::unix::net::UnixStream","std::io::stdio::StderrRaw","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::BorrowedCursor<'a>","&std::process::ChildStdin","std::io::LineWriter<W>","&std::io::Stdout","std::io::Cursor<[u8; N]>","std::io::Sink","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::BufWriter<W>","std::boxed::Box<W>","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Stderr","std::io::StdoutLock<'_>","std::collections::VecDeque<u8, A>","std::process::ChildStdin","&std::net::TcpStream","std::io::StderrLock<'_>","std::io::Stdout","std::fs::File","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stderr","std::vec::Vec<u8, A>","&std::fs::File","&std::io::Stderr","std::net::TcpStream","std::io::Cursor<std::vec::Vec<u8, A>>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::net::SocketAddr
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for std::net::SocketAddr>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for std::net::SocketAddr>::encode(p0, p1);
+<std::net::SocketAddr>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::Decode for std::net::SocketAddr>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"features::impl_std::<impl de::Decode for std::net::SocketAddr>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::Decode for std::net::SocketAddr>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::Decode for std::net::SocketAddr>::decode(p0);
+crate::features::impl_std::<impl de::Decode for std::net::SocketAddr>::decode(p0);
+<std::net::SocketAddr>::decode(p0);
-----------------
src/de/mod.rs features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddr>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddr>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddr>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddr>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddr>::borrow_decode(p0);
+<std::net::SocketAddr>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for std::net::SocketAddrV4>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::<impl enc::Encode for std::net::SocketAddrV4>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","enc::write::SizeWriter","features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SliceWriter"]},"features::impl_std::<impl enc::Encode for std::net::SocketAddrV4>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::net::TcpStream","std::io::StdoutLock<'_>","std::fs::File","std::io::stdio::StdoutRaw","&std::io::Stderr","std::io::Stderr","std::io::Cursor<[u8; N]>","std::io::BorrowedCursor<'a>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::StderrLock<'_>","std::process::ChildStdin","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<std::vec::Vec<u8, A>>","&std::net::TcpStream","std::io::Stdout","std::io::LineWriter<W>","std::io::stdio::StderrRaw","std::io::BufWriter<W>","std::sys::unix::stdio::Stdout","std::io::Cursor<&mut [u8]>","std::io::Sink","std::os::unix::net::UnixStream","&std::process::ChildStdin","&std::io::Sink","&std::io::Stdout","std::boxed::Box<W>","&'a std::os::unix::net::UnixStream","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::fs::File","std::collections::VecDeque<u8, A>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stderr","std::vec::Vec<u8, A>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::net::SocketAddrV4
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for std::net::SocketAddrV4>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for std::net::SocketAddrV4>::encode(p0, p1);
+<std::net::SocketAddrV4>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::Decode for std::net::SocketAddrV4>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_std::<impl de::Decode for std::net::SocketAddrV4>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::Decode for std::net::SocketAddrV4>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::Decode for std::net::SocketAddrV4>::decode(p0);
+crate::features::impl_std::<impl de::Decode for std::net::SocketAddrV4>::decode(p0);
+<std::net::SocketAddrV4>::decode(p0);
-----------------
src/de/mod.rs features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddrV4>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddrV4>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddrV4>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddrV4>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddrV4>::borrow_decode(p0);
+<std::net::SocketAddrV4>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for std::net::SocketAddrV6>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::<impl enc::Encode for std::net::SocketAddrV6>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_alloc::VecWriter"]},"features::impl_std::<impl enc::Encode for std::net::SocketAddrV6>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["&std::net::TcpStream","std::io::impls::<impl std::io::Write for &mut W>","std::io::StderrLock<'_>","std::io::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::boxed::Box<W>","std::net::TcpStream","std::fs::File","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stdout","&'a std::os::unix::net::UnixStream","&std::fs::File","std::io::Sink","std::vec::Vec<u8, A>","std::sys::unix::stdio::Stderr","std::io::Stdout","&std::io::Stderr","std::io::stdio::StdoutRaw","&std::io::Stdout","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::StdoutLock<'_>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::BorrowedCursor<'a>","&std::process::ChildStdin","std::collections::VecDeque<u8, A>","std::io::Cursor<[u8; N]>","std::io::BufWriter<W>","std::process::ChildStdin","std::os::unix::net::UnixStream","std::io::LineWriter<W>","std::io::stdio::StderrRaw","&std::io::Sink"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::net::SocketAddrV6
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for std::net::SocketAddrV6>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for std::net::SocketAddrV6>::encode(p0, p1);
+<std::net::SocketAddrV6>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::Decode for std::net::SocketAddrV6>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"features::impl_std::<impl de::Decode for std::net::SocketAddrV6>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::Decode for std::net::SocketAddrV6>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::Decode for std::net::SocketAddrV6>::decode(p0);
+crate::features::impl_std::<impl de::Decode for std::net::SocketAddrV6>::decode(p0);
+<std::net::SocketAddrV6>::decode(p0);
-----------------
src/de/mod.rs features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddrV6>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddrV6>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddrV6>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddrV6>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddrV6>::borrow_decode(p0);
+<std::net::SocketAddrV6>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl std::error::Error for error::EncodeError>::source
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // error::EncodeError
+p0.source();
+features::impl_std::<impl std::error::Error for error::EncodeError>::source(p0);
+crate::features::impl_std::<impl std::error::Error for error::EncodeError>::source(p0);
+<error::EncodeError>::source(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl std::error::Error for error::DecodeError>::source
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // error::DecodeError
+p0.source();
+features::impl_std::<impl std::error::Error for error::DecodeError>::source(p0);
+crate::features::impl_std::<impl std::error::Error for error::DecodeError>::source(p0);
+<error::DecodeError>::source(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for std::collections::HashMap<K, V, S>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::<impl enc::Encode for std::collections::HashMap<K, V, S>>::encode":{"E":["enc::Encoder","std::marker::Sized"],"K":["std::marker::Sized","enc::Encode"],"S":["std::marker::Sized"],"V":["enc::Encode","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["de::Decode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode","enc::Encode"],"V":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["enc::Encode","std::cmp::Ord","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::Decode","std::cmp::Ord","de::BorrowDecode","std::marker::Sized"]},"std::collections::Bound":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode","std::cmp::Eq","std::hash::Hash"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::hash::Hash","std::cmp::Eq","de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for &T>","config::BigEndian","config::LittleEndian","config::Limit","config::Varint","config::Configuration","config::Fixint","config::NoLimit"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::<impl enc::Encode for std::collections::HashMap<K, V, S>>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"K":["std::num::NonZeroU32","std::option::Option","std::sync::atomic::AtomicU16","std::collections::HashMap","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::cell::Cell","std::sync::atomic::AtomicBool","std::num::NonZeroI8","enc::impls::<impl enc::Encode for &'a T>","std::time::SystemTime","std::num::NonZeroU128","std::cell::RefCell","std::string::String","std::num::NonZeroI32","std::rc::Rc","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::sync::RwLock","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroI128","std::num::NonZeroU16","std::sync::Mutex","std::net::Ipv4Addr","std::collections::BinaryHeap","std::borrow::Cow","std::time::Duration","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::ffi::CString","std::collections::HashSet","std::net::SocketAddr","std::collections::Bound","std::boxed::Box","std::sync::Arc","std::ops::RangeInclusive","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::vec::Vec","std::ops::Range","std::num::NonZeroU8","std::path::PathBuf","std::result::Result","std::num::NonZeroU64","std::net::IpAddr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize"],"S":["RUG_ANY"],"V":["std::num::NonZeroI128","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::vec::Vec","std::time::SystemTime","std::borrow::Cow","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::net::SocketAddrV6","std::collections::HashSet","std::num::NonZeroU32","std::time::Duration","std::ffi::CString","std::num::NonZeroUsize","std::result::Result","std::sync::atomic::AtomicI32","std::sync::RwLock","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::net::SocketAddrV4","std::net::IpAddr","std::rc::Rc","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::collections::Bound","std::num::NonZeroI16","std::num::NonZeroU16","std::sync::Arc","std::path::PathBuf","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU8","std::collections::BTreeMap","std::string::String","std::option::Option","std::collections::BTreeSet","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::cell::Cell","std::ops::RangeInclusive","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::ops::Range","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::boxed::Box","std::num::NonZeroU64","std::collections::VecDeque","std::num::NonZeroU128","std::num::NonZeroI32","std::sync::Mutex","std::sync::atomic::AtomicI16"]},"features::impl_std::IoWriter":{"W":["std::io::BufWriter<W>","std::collections::VecDeque<u8, A>","std::net::TcpStream","&std::net::TcpStream","std::io::StdoutLock<'_>","std::io::Stdout","&std::io::Stdout","std::sys::unix::stdio::Stdout","&std::io::Sink","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Sink","std::io::StderrLock<'_>","std::sys::unix::stdio::Stderr","std::io::impls::<impl std::io::Write for &mut W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Stderr","&std::fs::File","&std::process::ChildStdin","&'a std::os::unix::net::UnixStream","&std::io::Stderr","std::vec::Vec<u8, A>","std::io::Cursor<&mut [u8]>","std::io::BorrowedCursor<'a>","std::process::ChildStdin","std::fs::File","std::io::stdio::StdoutRaw","std::io::stdio::StderrRaw","std::os::unix::net::UnixStream","std::io::Cursor<[u8; N]>","std::io::LineWriter<W>","std::boxed::Box<W>"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::ffi::CStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroU128","std::num::NonZeroU8","std::num::NonZeroI32","std::option::Option","std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroI8","std::net::Ipv4Addr","std::sync::Arc","std::net::IpAddr","std::num::NonZeroI16","std::num::NonZeroU32","std::cell::RefCell","std::ffi::CString","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroIsize","std::marker::PhantomData","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroI64","std::string::String"],"V":["std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::ops::RangeInclusive","std::sync::Arc","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroI32","std::sync::Mutex","std::boxed::Box","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::net::SocketAddr","std::option::Option","std::string::String","std::cell::Cell","std::marker::PhantomData","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroI128","std::rc::Rc","std::num::NonZeroUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::sync::RwLock","std::time::Duration","std::result::Result","std::num::NonZeroU16","std::collections::Bound","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::net::SocketAddrV6","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::time::SystemTime","std::collections::BTreeMap","std::num::NonZeroU64","std::num::NonZeroIsize","std::borrow::Cow","std::collections::HashMap","std::num::NonZeroU8","std::net::IpAddr","std::collections::BTreeSet","std::collections::HashSet","std::vec::Vec","std::ops::Range","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::num::NonZeroU32"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI16","std::net::SocketAddr","std::num::NonZeroU128","std::net::SocketAddrV6","std::cell::Cell","std::num::NonZeroU64","std::rc::Rc","std::path::PathBuf","std::time::Duration","std::num::NonZeroI128","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroU16","std::num::NonZeroI8","std::num::NonZeroU32","std::sync::Arc","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroI64"]},"std::collections::BinaryHeap":{"T":["std::net::Ipv4Addr","std::num::NonZeroI128","std::time::Duration","std::cell::Cell","std::num::NonZeroU16","std::net::SocketAddr","std::option::Option","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroI32","std::net::SocketAddrV4","std::num::NonZeroIsize","std::num::NonZeroI64","std::ffi::CString","std::num::NonZeroU8","std::num::NonZeroU128","std::string::String","std::net::SocketAddrV6","std::rc::Rc","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroU32","std::num::NonZeroI16"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicU64","std::cell::Cell","std::num::NonZeroI64","std::sync::RwLock","std::string::String","std::cell::RefCell","std::sync::Mutex","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::collections::HashSet","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::marker::PhantomData","std::boxed::Box","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroU128","std::net::Ipv6Addr","std::collections::HashMap","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::option::Option","std::num::NonZeroU64","std::result::Result","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::collections::BinaryHeap","std::rc::Rc","std::borrow::Cow","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::vec::Vec","std::path::PathBuf","std::net::IpAddr","std::net::SocketAddr","std::collections::Bound","std::time::Duration","std::time::SystemTime","std::collections::BTreeSet","std::ops::Range"]},"std::collections::HashMap":{"K":["std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroI8","std::num::NonZeroI128","std::path::PathBuf","std::net::SocketAddrV6","std::rc::Rc","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroU64","std::sync::Arc","std::num::NonZeroU16","std::net::IpAddr"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicU32","std::boxed::Box","std::time::SystemTime","std::collections::HashSet","std::cell::RefCell","std::net::IpAddr","std::num::NonZeroU16","std::marker::PhantomData","std::collections::BinaryHeap","std::sync::Mutex","std::num::NonZeroI16","std::collections::HashMap","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::sync::RwLock","std::collections::BTreeMap","std::num::NonZeroU128","std::option::Option","std::num::NonZeroI8","std::num::NonZeroU32","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::rc::Rc","std::sync::atomic::AtomicIsize","std::cell::Cell","std::ffi::CString","std::borrow::Cow","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroI128","std::net::Ipv4Addr","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::result::Result","std::ops::Range","std::path::PathBuf","std::collections::BTreeSet","std::vec::Vec","std::string::String","std::collections::Bound","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::ops::RangeInclusive","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::sync::Arc","std::sync::atomic::AtomicI8","std::time::Duration","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::collections::VecDeque"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU128","std::num::NonZeroUsize","std::net::SocketAddrV4","std::marker::PhantomData","std::ffi::CString","std::num::NonZeroI64","std::option::Option","std::string::String","std::num::NonZeroI32","std::net::Ipv6Addr","std::num::NonZeroU8","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroIsize","std::rc::Rc","std::num::NonZeroI16","std::time::Duration","std::net::IpAddr"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::num::NonZeroI8","std::cell::Cell","std::sync::Mutex","std::sync::atomic::AtomicI32","std::boxed::Box","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::borrow::Cow","std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::collections::HashSet","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::cell::RefCell","std::result::Result","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::string::String","std::num::NonZeroI32","std::num::NonZeroIsize","std::path::PathBuf","std::time::SystemTime","std::num::NonZeroU128","std::sync::Arc","std::sync::atomic::AtomicUsize","std::option::Option","std::collections::BinaryHeap","std::sync::RwLock","std::num::NonZeroUsize","std::time::Duration","std::sync::atomic::AtomicI8","std::ops::Range","std::net::SocketAddrV6","std::num::NonZeroI64","std::num::NonZeroU32","std::num::NonZeroU64","std::ffi::CString","std::net::IpAddr","std::num::NonZeroU16","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::collections::HashMap","std::net::SocketAddrV4","std::ops::RangeInclusive","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::vec::Vec","std::collections::Bound","std::marker::PhantomData"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::BinaryHeap","std::path::PathBuf","std::collections::HashMap","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::net::IpAddr","std::rc::Rc","std::string::String","std::sync::atomic::AtomicU16","std::sync::Mutex","std::num::NonZeroU64","std::sync::RwLock","std::net::SocketAddrV6","std::boxed::Box","std::ops::Range","std::collections::HashSet","std::ffi::CString","std::marker::PhantomData","std::collections::BTreeMap","std::vec::Vec","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::option::Option","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::num::NonZeroU32","std::ops::RangeInclusive","std::collections::Bound","std::time::SystemTime","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::cell::RefCell","std::cell::Cell","std::num::NonZeroI64","std::num::NonZeroUsize","std::num::NonZeroI32","std::time::Duration","std::collections::BTreeSet","std::collections::VecDeque","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::borrow::Cow","std::result::Result","std::sync::Arc"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::rc::Rc","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroU16","std::collections::BTreeSet","std::net::Ipv4Addr","std::cell::Cell","std::collections::BTreeMap","std::collections::VecDeque","std::net::SocketAddr","std::sync::Arc","std::sync::atomic::AtomicBool","std::sync::RwLock","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::sync::Mutex","std::borrow::Cow","std::sync::atomic::AtomicI16","std::vec::Vec","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::num::NonZeroI32","std::time::Duration","std::path::PathBuf","std::time::SystemTime","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::num::NonZeroUsize","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::ops::Range","std::collections::Bound","std::result::Result","std::net::IpAddr","std::num::NonZeroI16","std::string::String","std::num::NonZeroI64","std::net::SocketAddrV4","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroI8","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::cell::RefCell","std::num::NonZeroI128"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::collections::HashSet","std::num::NonZeroUsize","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::collections::Bound","std::time::SystemTime","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::path::PathBuf","std::num::NonZeroU128","std::result::Result","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::rc::Rc","std::marker::PhantomData","std::net::IpAddr","std::collections::BTreeMap","std::vec::Vec","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::collections::BTreeSet","std::num::NonZeroI8","std::sync::RwLock","std::time::Duration","std::sync::Mutex","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::num::NonZeroIsize","std::borrow::Cow","std::boxed::Box","std::cell::RefCell","std::option::Option","std::cell::Cell","std::num::NonZeroU8","std::string::String","std::net::SocketAddr","std::collections::VecDeque","std::ops::Range","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::num::NonZeroI16","std::sync::Arc","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroI32","std::num::NonZeroI128","std::net::SocketAddrV4"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::collections::HashMap<K, V, S>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for std::collections::HashMap<K, V, S>>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for std::collections::HashMap<K, V, S>>::encode(p0, p1);
+<std::collections::HashMap<K, V, S>>::encode(p0, p1);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::Decode for std::collections::HashMap<K, V, S>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"features::impl_std::<impl de::Decode for std::collections::HashMap<K, V, S>>::decode":{"D":["std::marker::Sized","de::Decoder"],"K":["std::cmp::Eq","std::hash::Hash","std::marker::Sized","de::Decode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["de::Decode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["enc::Encode","std::cmp::Ord","de::Decode","de::BorrowDecode","std::marker::Sized"],"V":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["de::Decode","std::cmp::Ord","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","std::hash::Hash","de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["de::BorrowDecode","de::Decode","std::cmp::Eq","std::marker::Sized","std::hash::Hash","enc::Encode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::BigEndian","std::clone::impls::<impl std::clone::Clone for *mut T>","config::NoLimit","config::Limit","config::Configuration","config::Varint","config::Fixint","config::LittleEndian"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::Decode for std::collections::HashMap<K, V, S>>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"K":["std::num::NonZeroU64","std::collections::Bound","std::net::SocketAddrV6","std::net::Ipv6Addr","std::sync::Arc","std::net::SocketAddrV4","std::net::Ipv4Addr","std::net::IpAddr","std::num::NonZeroU8","std::num::NonZeroI32","std::string::String","std::time::Duration","std::net::SocketAddr","std::option::Option","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroI8","std::num::NonZeroI128","std::ffi::CString","std::num::NonZeroI64","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroI16"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::ffi::CString","std::num::NonZeroU64","std::num::NonZeroU32","std::num::NonZeroU16","std::collections::BinaryHeap","std::num::NonZeroI64","std::collections::VecDeque","std::net::SocketAddrV4","std::num::NonZeroU128","std::vec::Vec","std::cell::Cell","std::sync::atomic::AtomicI64","std::time::SystemTime","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::num::NonZeroU8","std::net::SocketAddr","std::num::NonZeroI8","std::path::PathBuf","std::sync::RwLock","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::string::String","std::borrow::Cow","std::num::NonZeroIsize","std::ops::RangeInclusive","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::sync::Mutex","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::boxed::Box","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroI32","std::collections::BTreeSet","std::sync::Arc","std::sync::atomic::AtomicU8","std::rc::Rc","std::net::IpAddr","std::result::Result","std::num::NonZeroUsize","std::num::NonZeroI128","std::time::Duration","std::option::Option","std::net::SocketAddrV6","std::collections::Bound","std::ops::Range","std::collections::HashSet"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::ffi::OsStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::net::SocketAddr","std::string::String","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroIsize","std::num::NonZeroU16","std::time::SystemTime","std::net::Ipv6Addr","std::cell::Cell","std::num::NonZeroU32","std::marker::PhantomData","std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroI128","std::sync::Arc","std::ffi::CString","std::num::NonZeroU64","std::num::NonZeroU128","std::path::PathBuf","std::net::Ipv4Addr"],"V":["std::num::NonZeroUsize","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::boxed::Box","std::cell::RefCell","std::option::Option","std::collections::HashSet","std::collections::Bound","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroI128","std::net::SocketAddrV4","std::net::IpAddr","std::collections::HashMap","std::path::PathBuf","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::time::Duration","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::marker::PhantomData","std::sync::RwLock","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroI32","std::sync::Mutex","std::collections::BTreeMap","std::num::NonZeroI64","std::time::SystemTime","std::num::NonZeroI16","std::string::String","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::net::Ipv4Addr","std::net::SocketAddrV6","std::borrow::Cow","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::vec::Vec","std::rc::Rc","std::ops::Range","std::collections::BinaryHeap","std::num::NonZeroIsize","std::num::NonZeroU64","std::ops::RangeInclusive","std::result::Result"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::time::Duration","std::num::NonZeroI16","std::marker::PhantomData","std::ffi::CString","std::cell::RefCell","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroI128","std::num::NonZeroU32","std::rc::Rc","std::option::Option","std::num::NonZeroU64","std::net::SocketAddrV6","std::num::NonZeroU128","std::net::SocketAddrV4","std::string::String","std::net::Ipv6Addr","std::time::SystemTime","std::path::PathBuf","std::num::NonZeroU8"]},"std::collections::BinaryHeap":{"T":["std::time::SystemTime","std::num::NonZeroI128","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroU16","std::net::Ipv4Addr","std::string::String","std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroIsize","std::num::NonZeroU32","std::sync::Arc","std::path::PathBuf","std::num::NonZeroI32","std::marker::PhantomData","std::net::Ipv6Addr","std::option::Option","std::cell::Cell","std::num::NonZeroU64","std::net::SocketAddrV6"]},"std::collections::Bound":{"T":["std::net::SocketAddr","std::borrow::Cow","std::collections::BTreeSet","std::collections::BTreeMap","std::string::String","std::sync::RwLock","std::marker::PhantomData","std::collections::HashSet","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::net::IpAddr","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroI128","std::cell::Cell","std::ffi::CString","std::collections::Bound","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::num::NonZeroI16","std::vec::Vec","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::sync::Arc","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::cell::RefCell","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::result::Result","std::num::NonZeroU32","std::net::SocketAddrV6","std::num::NonZeroI64","std::num::NonZeroIsize","std::sync::Mutex","std::boxed::Box","std::net::Ipv4Addr","std::num::NonZeroU64","std::ops::Range","std::option::Option","std::num::NonZeroU8","std::time::Duration","std::time::SystemTime","std::num::NonZeroI8"]},"std::collections::HashMap":{"K":["std::num::NonZeroI16","std::rc::Rc","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroUsize","std::sync::Arc","std::marker::PhantomData","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroU64","std::option::Option","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroU16","std::path::PathBuf","std::num::NonZeroIsize","std::num::NonZeroI64"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::option::Option","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::rc::Rc","std::sync::atomic::AtomicU32","std::borrow::Cow","std::sync::RwLock","std::num::NonZeroI16","std::time::SystemTime","std::collections::BinaryHeap","std::net::SocketAddrV6","std::collections::HashMap","std::sync::Arc","std::sync::atomic::AtomicUsize","std::string::String","std::collections::VecDeque","std::boxed::Box","std::sync::atomic::AtomicBool","std::path::PathBuf","std::ffi::CString","std::ops::Range","std::num::NonZeroU32","std::net::SocketAddr","std::collections::BTreeMap","std::num::NonZeroI32","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroU8","std::net::Ipv4Addr","std::time::Duration","std::num::NonZeroI8","std::collections::HashSet","std::vec::Vec","std::collections::BTreeSet","std::sync::Mutex","std::cell::Cell","std::ops::RangeInclusive","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::collections::Bound","std::cell::RefCell","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::result::Result","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::net::Ipv6Addr","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::num::NonZeroIsize"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroU64","std::net::Ipv4Addr","std::net::SocketAddr","std::net::Ipv6Addr","std::time::Duration","std::path::PathBuf","std::sync::Arc","std::option::Option","std::num::NonZeroU32","std::num::NonZeroUsize","std::net::SocketAddrV6"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::cell::Cell","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::num::NonZeroI64","std::ffi::CString","std::num::NonZeroIsize","std::num::NonZeroU32","std::boxed::Box","std::num::NonZeroI8","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::num::NonZeroU16","std::collections::BinaryHeap","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::net::IpAddr","std::path::PathBuf","std::borrow::Cow","std::time::SystemTime","std::num::NonZeroUsize","std::collections::Bound","std::ops::Range","std::net::SocketAddrV6","std::sync::RwLock","std::rc::Rc","std::net::Ipv4Addr","std::string::String","std::option::Option","std::sync::atomic::AtomicI64","std::cell::RefCell","std::time::Duration","std::sync::Arc","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::marker::PhantomData","std::net::SocketAddr","std::collections::BTreeMap","std::result::Result","std::net::Ipv6Addr","std::vec::Vec","std::num::NonZeroI16","std::collections::HashSet","std::sync::Mutex","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::collections::HashMap"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroUsize","std::option::Option","std::sync::atomic::AtomicI32","std::sync::RwLock","std::collections::BTreeMap","std::sync::Mutex","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroI32","std::num::NonZeroI128","std::net::SocketAddrV6","std::result::Result","std::sync::Arc","std::marker::PhantomData","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::vec::Vec","std::net::IpAddr","std::time::Duration","std::collections::BTreeSet","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::collections::HashMap","std::collections::Bound","std::sync::atomic::AtomicU16","std::borrow::Cow","std::ops::RangeInclusive","std::ops::Range","std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroI64","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::path::PathBuf","std::cell::RefCell","std::net::SocketAddr","std::collections::HashSet","std::collections::VecDeque","std::cell::Cell","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::ffi::CString","std::sync::atomic::AtomicUsize","std::string::String","std::num::NonZeroI16","std::net::SocketAddrV4","std::collections::BinaryHeap","std::boxed::Box","std::sync::atomic::AtomicI8","std::time::SystemTime","std::num::NonZeroU64"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::ops::RangeInclusive","std::result::Result","std::num::NonZeroI64","std::collections::HashMap","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::net::SocketAddrV4","std::rc::Rc","std::cell::Cell","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::borrow::Cow","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroI32","std::sync::Mutex","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::collections::HashSet","std::net::SocketAddrV6","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::collections::Bound","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::time::SystemTime","std::num::NonZeroIsize","std::option::Option","std::marker::PhantomData","std::collections::BinaryHeap","std::vec::Vec","std::string::String","std::num::NonZeroU8","std::sync::RwLock","std::ffi::CString","std::num::NonZeroI16","std::path::PathBuf","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::ops::Range","std::time::Duration","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::num::NonZeroI128","std::collections::VecDeque","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroUsize","std::boxed::Box","std::cell::RefCell","std::sync::atomic::AtomicI16","std::num::NonZeroU16"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::collections::BinaryHeap","std::collections::BTreeMap","std::ops::Range","std::collections::BTreeSet","std::option::Option","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::cell::Cell","std::num::NonZeroU8","std::collections::HashMap","std::sync::RwLock","std::time::SystemTime","std::net::IpAddr","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::vec::Vec","std::net::Ipv6Addr","std::time::Duration","std::result::Result","std::collections::HashSet","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::rc::Rc","std::collections::VecDeque","std::num::NonZeroI16","std::net::SocketAddrV6","std::sync::Arc","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::path::PathBuf","std::boxed::Box","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::num::NonZeroI8","std::string::String","std::collections::Bound","std::num::NonZeroI32","std::sync::Mutex","std::borrow::Cow","std::cell::RefCell","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::num::NonZeroU128","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::ffi::CString"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::Decode for std::collections::HashMap<K, V, S>>::decode(p0);
+crate::features::impl_std::<impl de::Decode for std::collections::HashMap<K, V, S>>::decode(p0);
+<std::collections::HashMap<K, V, S>>::decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::BorrowDecode<'de> for std::collections::HashMap<K, V, S>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::collections::HashMap<K, V, S>>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"],"K":["de::BorrowDecode","std::cmp::Eq","std::marker::Sized","std::hash::Hash"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["enc::Encode","de::Decode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode","std::cmp::Ord"]},"std::collections::Bound":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","de::BorrowDecode","std::marker::Sized","de::Decode","std::hash::Hash","enc::Encode"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","std::hash::Hash","std::cmp::Eq","de::Decode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::NoLimit","config::BigEndian","config::Fixint","config::Configuration","std::clone::impls::<impl std::clone::Clone for *const T>","config::LittleEndian","config::Varint"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::collections::HashMap<K, V, S>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"K":["std::marker::PhantomData","std::net::SocketAddr","std::ffi::CString","std::num::NonZeroU8","std::num::NonZeroIsize","std::string::String","std::num::NonZeroU128","std::path::PathBuf","std::rc::Rc","std::net::Ipv4Addr","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroI64","std::num::NonZeroI16","std::num::NonZeroI128","std::option::Option","std::num::NonZeroU64","std::net::SocketAddrV4","std::net::Ipv6Addr","std::sync::Arc","std::collections::Bound","std::num::NonZeroI8","std::time::SystemTime"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::collections::Bound","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::collections::HashMap","std::collections::BTreeSet","std::net::Ipv4Addr","std::cell::Cell","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::sync::RwLock","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::time::Duration","std::sync::Mutex","std::marker::PhantomData","std::collections::HashSet","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::num::NonZeroI128","std::num::NonZeroIsize","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::net::IpAddr","std::vec::Vec","std::result::Result","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::option::Option","std::ops::RangeInclusive","std::ffi::CString","std::rc::Rc","std::sync::Arc","std::cell::RefCell","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::boxed::Box","std::num::NonZeroUsize","std::collections::BinaryHeap","std::collections::BTreeMap","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroU32","std::string::String","std::borrow::Cow","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroI16","std::ops::Range","std::num::NonZeroI32","std::time::SystemTime"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI16","std::num::NonZeroUsize","std::option::Option","std::net::SocketAddrV4","std::net::SocketAddr","std::marker::PhantomData","std::net::SocketAddrV6","std::time::Duration","std::num::NonZeroU32","std::net::Ipv4Addr","std::sync::Arc","std::cell::Cell","std::net::IpAddr","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroU128","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroI64","std::string::String","std::num::NonZeroU8","std::num::NonZeroI32"],"V":["std::collections::BinaryHeap","std::ops::RangeInclusive","std::marker::PhantomData","std::collections::HashMap","std::collections::VecDeque","std::boxed::Box","std::collections::BTreeMap","std::net::SocketAddrV4","std::net::Ipv4Addr","std::ops::Range","std::time::SystemTime","std::sync::Mutex","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::cell::RefCell","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::sync::Arc","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::option::Option","std::num::NonZeroU8","std::result::Result","std::num::NonZeroI8","std::collections::Bound","std::num::NonZeroUsize","std::borrow::Cow","std::sync::RwLock","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::cell::Cell","std::ffi::CString","std::collections::HashSet","std::num::NonZeroU32","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::time::Duration","std::num::NonZeroI32","std::vec::Vec","std::net::IpAddr","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::rc::Rc","std::num::NonZeroI16","std::string::String","std::net::SocketAddr","std::path::PathBuf"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::ffi::CString","std::cell::RefCell","std::rc::Rc","std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroU128","std::num::NonZeroI64","std::option::Option","std::net::Ipv4Addr","std::time::Duration","std::net::SocketAddrV4","std::string::String","std::net::SocketAddrV6","std::sync::Arc","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroI16","std::num::NonZeroU64","std::net::Ipv6Addr","std::num::NonZeroI8","std::marker::PhantomData"]},"std::collections::BinaryHeap":{"T":["std::cell::RefCell","std::num::NonZeroU64","std::num::NonZeroU16","std::net::IpAddr","std::net::SocketAddrV6","std::path::PathBuf","std::marker::PhantomData","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroUsize","std::string::String","std::option::Option","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroI16","std::num::NonZeroU32","std::rc::Rc","std::num::NonZeroI128","std::num::NonZeroU8","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroI32"]},"std::collections::Bound":{"T":["std::path::PathBuf","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::sync::atomic::AtomicU32","std::borrow::Cow","std::time::SystemTime","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::ops::Range","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::num::NonZeroU32","std::cell::RefCell","std::num::NonZeroUsize","std::rc::Rc","std::num::NonZeroI32","std::sync::RwLock","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::cell::Cell","std::net::SocketAddr","std::boxed::Box","std::net::SocketAddrV4","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::net::Ipv4Addr","std::num::NonZeroIsize","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroI16","std::collections::HashSet","std::num::NonZeroU16","std::string::String","std::sync::Mutex","std::sync::Arc","std::ops::RangeInclusive","std::num::NonZeroU128","std::marker::PhantomData","std::net::IpAddr","std::collections::Bound","std::sync::atomic::AtomicU8","std::time::Duration","std::vec::Vec","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::result::Result","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicU16"]},"std::collections::HashMap":{"K":["std::num::NonZeroI8","std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroU16","std::num::NonZeroU64","std::path::PathBuf","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroI128","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroI16"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::option::Option","std::collections::BTreeSet","std::collections::HashSet","std::net::Ipv4Addr","std::borrow::Cow","std::num::NonZeroU128","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::ops::Range","std::sync::atomic::AtomicU64","std::path::PathBuf","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroIsize","std::num::NonZeroU8","std::boxed::Box","std::cell::RefCell","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::num::NonZeroU32","std::result::Result","std::num::NonZeroI32","std::sync::Mutex","std::num::NonZeroUsize","std::string::String","std::num::NonZeroU16","std::sync::Arc","std::num::NonZeroI8","std::net::SocketAddrV4","std::collections::Bound","std::ffi::CString","std::num::NonZeroI128","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::rc::Rc","std::sync::RwLock","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::vec::Vec","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::ops::RangeInclusive","std::time::Duration","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::collections::BinaryHeap"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroU8","std::num::NonZeroI8","std::ffi::CString","std::num::NonZeroI128","std::option::Option","std::time::SystemTime","std::rc::Rc","std::num::NonZeroI64","std::net::SocketAddrV4","std::collections::Bound","std::num::NonZeroU16"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicI8","std::rc::Rc","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::boxed::Box","std::collections::BTreeMap","std::collections::Bound","std::collections::HashSet","std::sync::atomic::AtomicU16","std::sync::RwLock","std::net::Ipv6Addr","std::collections::BTreeSet","std::ops::Range","std::string::String","std::collections::BinaryHeap","std::collections::VecDeque","std::net::SocketAddr","std::num::NonZeroI16","std::num::NonZeroI32","std::collections::HashMap","std::num::NonZeroU128","std::vec::Vec","std::option::Option","std::sync::Arc","std::sync::atomic::AtomicI16","std::time::Duration","std::cell::RefCell","std::cell::Cell","std::num::NonZeroU64","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::sync::Mutex","std::time::SystemTime","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::ops::RangeInclusive","std::net::IpAddr","std::path::PathBuf","std::borrow::Cow","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::ffi::CString","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::result::Result","std::marker::PhantomData","std::num::NonZeroI8","std::net::SocketAddrV6"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::BTreeMap","std::net::SocketAddrV4","std::net::Ipv4Addr","std::ops::RangeInclusive","std::net::SocketAddrV6","std::borrow::Cow","std::rc::Rc","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::collections::Bound","std::num::NonZeroIsize","std::net::Ipv6Addr","std::num::NonZeroU8","std::vec::Vec","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::ffi::CString","std::num::NonZeroU16","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::sync::Arc","std::num::NonZeroI16","std::num::NonZeroI8","std::sync::RwLock","std::collections::HashMap","std::time::Duration","std::sync::Mutex","std::net::SocketAddr","std::path::PathBuf","std::time::SystemTime","std::collections::HashSet","std::option::Option","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::result::Result","std::sync::atomic::AtomicI32","std::cell::Cell","std::collections::BinaryHeap","std::num::NonZeroUsize","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::ops::Range","std::string::String","std::marker::PhantomData","std::net::IpAddr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::boxed::Box"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroU128","std::net::Ipv6Addr","std::time::Duration","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::collections::HashMap","std::collections::Bound","std::net::SocketAddr","std::vec::Vec","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::collections::BTreeSet","std::result::Result","std::sync::atomic::AtomicI8","std::boxed::Box","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::sync::RwLock","std::num::NonZeroI8","std::num::NonZeroUsize","std::net::SocketAddrV6","std::ops::Range","std::cell::RefCell","std::num::NonZeroI16","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::rc::Rc","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::cell::Cell","std::borrow::Cow","std::num::NonZeroU8","std::num::NonZeroI32","std::num::NonZeroIsize","std::num::NonZeroU64","std::num::NonZeroU16","std::net::IpAddr","std::time::SystemTime","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::sync::Mutex","std::sync::Arc","std::net::SocketAddrV4","std::collections::HashSet","std::string::String","std::ffi::CString"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::rc::Rc","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::option::Option","std::sync::atomic::AtomicI8","std::time::Duration","std::vec::Vec","std::num::NonZeroUsize","std::cell::RefCell","std::collections::BTreeSet","std::num::NonZeroU8","std::net::Ipv6Addr","std::num::NonZeroI8","std::sync::RwLock","std::num::NonZeroIsize","std::ffi::CString","std::borrow::Cow","std::sync::atomic::AtomicU32","std::boxed::Box","std::sync::atomic::AtomicBool","std::time::SystemTime","std::collections::Bound","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::sync::Mutex","std::num::NonZeroU64","std::sync::Arc","std::collections::HashMap","std::net::SocketAddr","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::cell::Cell","std::net::IpAddr","std::result::Result","std::collections::VecDeque","std::string::String","std::path::PathBuf","std::collections::HashSet","std::ops::Range","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for std::collections::HashMap<K, V, S>>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for std::collections::HashMap<K, V, S>>::borrow_decode(p0);
+<std::collections::HashMap<K, V, S>>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::Decode for std::collections::HashSet<T, S>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"features::impl_std::<impl de::Decode for std::collections::HashSet<T, S>>::decode":{"D":["de::Decoder","std::marker::Sized"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::marker::Sized","std::hash::Hash","std::cmp::Eq","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"K":["std::cmp::Ord","de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"],"V":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["std::cmp::Ord","de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::Decode","enc::Encode","de::BorrowDecode","std::cmp::Ord","std::marker::Sized"]},"std::collections::Bound":{"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["de::Decode","std::cmp::Eq","std::hash::Hash","de::BorrowDecode","enc::Encode","std::marker::Sized"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","std::hash::Hash","enc::Encode","de::Decode","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for &T>","config::LittleEndian","config::Limit","config::Fixint","config::BigEndian","config::Configuration","config::Varint","config::NoLimit"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::Decode for std::collections::HashSet<T, S>>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroU8","std::path::PathBuf","std::collections::Bound","std::num::NonZeroI16","std::num::NonZeroI8","std::num::NonZeroUsize","std::num::NonZeroU32","std::net::SocketAddrV4","std::net::Ipv6Addr","std::sync::Arc","std::num::NonZeroI64","std::net::Ipv4Addr","std::marker::PhantomData","std::num::NonZeroI128","std::net::IpAddr","std::ffi::CString","std::time::Duration","std::num::NonZeroU64","std::string::String","std::num::NonZeroI32","std::time::SystemTime"]},"std::borrow::Cow":{"B":["std::path::Path","<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::cell::RefCell","std::num::NonZeroI32","std::net::SocketAddr","std::string::String","std::num::NonZeroI128","std::path::PathBuf","std::num::NonZeroUsize","std::net::IpAddr","std::time::Duration","std::ffi::CString","std::num::NonZeroI8","std::time::SystemTime","std::net::Ipv4Addr","std::num::NonZeroI16","std::rc::Rc","std::net::SocketAddrV6","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroIsize","std::num::NonZeroU8","std::sync::Arc","std::num::NonZeroU64"],"V":["std::sync::RwLock","std::num::NonZeroIsize","std::num::NonZeroU128","std::net::IpAddr","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::result::Result","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::time::Duration","std::sync::atomic::AtomicI64","std::boxed::Box","std::num::NonZeroU8","std::ops::Range","std::num::NonZeroI64","std::collections::HashMap","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::sync::Arc","std::vec::Vec","std::num::NonZeroI8","std::time::SystemTime","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::cell::RefCell","std::num::NonZeroI128","std::rc::Rc","std::cell::Cell","std::option::Option","std::string::String","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::collections::BTreeSet","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroU16","std::borrow::Cow","std::num::NonZeroI32","std::ffi::CString","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::net::Ipv4Addr","std::collections::Bound","std::collections::HashSet","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroI16","std::num::NonZeroUsize","std::sync::Mutex"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::option::Option","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroU16","std::num::NonZeroUsize","std::num::NonZeroI8","std::num::NonZeroU64","std::cell::Cell","std::num::NonZeroI64","std::num::NonZeroI128","std::cell::RefCell","std::rc::Rc","std::net::IpAddr","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroU128","std::net::Ipv4Addr","std::num::NonZeroI16","std::path::PathBuf","std::string::String"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroIsize","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroU64","std::num::NonZeroU8","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroU16","std::net::IpAddr","std::num::NonZeroU32","std::time::Duration","std::num::NonZeroI16","std::net::Ipv6Addr","std::net::Ipv4Addr","std::time::SystemTime","std::cell::RefCell","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI8","std::string::String","std::option::Option","std::cell::Cell"]},"std::collections::Bound":{"T":["std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::ffi::CString","std::result::Result","std::string::String","std::sync::atomic::AtomicUsize","std::collections::Bound","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::num::NonZeroI128","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::vec::Vec","std::num::NonZeroUsize","std::sync::Mutex","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroI16","std::collections::BinaryHeap","std::cell::Cell","std::net::Ipv4Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::borrow::Cow","std::collections::HashMap","std::sync::atomic::AtomicI8","std::ops::Range","std::num::NonZeroU64","std::time::SystemTime","std::net::SocketAddr","std::time::Duration","std::sync::Arc","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::net::IpAddr","std::collections::BTreeMap","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::path::PathBuf","std::num::NonZeroIsize","std::collections::HashSet","std::cell::RefCell","std::boxed::Box","std::sync::RwLock","std::marker::PhantomData"]},"std::collections::HashMap":{"K":["std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroU128","std::rc::Rc","std::ffi::CString","std::net::Ipv4Addr","std::num::NonZeroIsize","std::net::SocketAddrV4","std::string::String","std::time::Duration","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroI8","std::num::NonZeroI16","std::num::NonZeroU16","std::net::IpAddr","std::num::NonZeroU32","std::marker::PhantomData","std::option::Option","std::path::PathBuf"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicU32","std::cell::RefCell","std::sync::Mutex","std::cell::Cell","std::net::SocketAddrV4","std::time::Duration","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::option::Option","std::borrow::Cow","std::vec::Vec","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::marker::PhantomData","std::collections::HashMap","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::string::String","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::boxed::Box","std::net::Ipv4Addr","std::num::NonZeroI32","std::rc::Rc","std::collections::BTreeSet","std::ops::Range","std::sync::RwLock","std::time::SystemTime","std::net::Ipv6Addr","std::collections::HashSet","std::sync::Arc","std::sync::atomic::AtomicUsize","std::result::Result","std::net::SocketAddr","std::path::PathBuf","std::num::NonZeroI8","std::collections::BTreeMap","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::collections::Bound","std::num::NonZeroU16","std::ops::RangeInclusive","std::ffi::CString","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::net::SocketAddrV6"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::rc::Rc","std::num::NonZeroU16","std::option::Option","std::num::NonZeroU64","std::num::NonZeroUsize","std::marker::PhantomData","std::ffi::CString","std::sync::Arc","std::num::NonZeroU8","std::num::NonZeroI16","std::num::NonZeroIsize","std::path::PathBuf","std::net::IpAddr","std::time::Duration","std::net::Ipv6Addr","std::net::SocketAddrV4","std::num::NonZeroU128"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::net::IpAddr","std::sync::RwLock","std::cell::Cell","std::boxed::Box","std::num::NonZeroU16","std::num::NonZeroU32","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::time::Duration","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::collections::HashSet","std::num::NonZeroU8","std::collections::HashMap","std::path::PathBuf","std::string::String","std::num::NonZeroU128","std::cell::RefCell","std::net::Ipv4Addr","std::borrow::Cow","std::collections::BinaryHeap","std::num::NonZeroUsize","std::net::SocketAddrV6","std::vec::Vec","std::num::NonZeroI128","std::ffi::CString","std::sync::atomic::AtomicI32","std::sync::Arc","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::num::NonZeroIsize","std::num::NonZeroI32","std::option::Option","std::ops::RangeInclusive","std::result::Result","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::rc::Rc","std::collections::Bound","std::time::SystemTime","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::collections::BTreeSet","std::collections::BTreeMap","std::ops::Range","std::net::SocketAddrV4","std::net::SocketAddr"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::string::String","std::net::Ipv6Addr","std::sync::Mutex","std::time::SystemTime","std::num::NonZeroI128","std::path::PathBuf","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::net::SocketAddrV6","std::collections::BinaryHeap","std::sync::Arc","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::num::NonZeroIsize","std::borrow::Cow","std::rc::Rc","std::vec::Vec","std::cell::RefCell","std::collections::VecDeque","std::num::NonZeroI64","std::option::Option","std::time::Duration","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::num::NonZeroI8","std::net::SocketAddr","std::collections::HashSet","std::num::NonZeroU64","std::net::SocketAddrV4","std::ffi::CString","std::sync::atomic::AtomicI64","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::collections::Bound","std::marker::PhantomData","std::num::NonZeroU16","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::cell::Cell","std::boxed::Box","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::collections::HashMap","std::net::IpAddr","std::result::Result","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::ops::Range"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::vec::Vec","std::net::IpAddr","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::boxed::Box","std::path::PathBuf","std::num::NonZeroI32","std::ffi::CString","std::num::NonZeroU128","std::ops::Range","std::rc::Rc","std::sync::RwLock","std::collections::HashSet","std::net::SocketAddr","std::num::NonZeroU64","std::num::NonZeroU8","std::result::Result","std::collections::Bound","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::net::SocketAddrV4","std::num::NonZeroI8","std::sync::Arc","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::collections::HashMap","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroI64","std::net::Ipv4Addr","std::net::SocketAddrV6","std::option::Option","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::sync::Mutex","std::collections::BTreeSet","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::time::SystemTime","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::cell::RefCell","std::sync::atomic::AtomicI16","std::string::String","std::cell::Cell"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::collections::VecDeque","std::collections::BinaryHeap","std::ffi::CString","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::num::NonZeroI128","std::num::NonZeroU32","std::num::NonZeroU8","std::cell::Cell","std::boxed::Box","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::time::Duration","std::path::PathBuf","std::sync::RwLock","std::time::SystemTime","std::collections::Bound","std::ops::RangeInclusive","std::num::NonZeroU16","std::net::IpAddr","std::sync::atomic::AtomicU8","std::cell::RefCell","std::sync::atomic::AtomicBool","std::sync::Mutex","std::net::SocketAddrV4","std::string::String","std::rc::Rc","std::result::Result","std::borrow::Cow","std::net::SocketAddrV6","std::ops::Range","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::vec::Vec","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::num::NonZeroI32","std::option::Option","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::collections::BTreeSet","std::num::NonZeroI8","std::num::NonZeroI16","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::collections::HashSet"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::Decode for std::collections::HashSet<T, S>>::decode(p0);
+crate::features::impl_std::<impl de::Decode for std::collections::HashSet<T, S>>::decode(p0);
+<std::collections::HashSet<T, S>>::decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl de::BorrowDecode<'de> for std::collections::HashSet<T, S>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::collections::HashSet<T, S>>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::hash::Hash","std::marker::Sized","std::cmp::Eq","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode","std::cmp::Ord"],"V":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["std::cmp::Ord","de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::Bound":{"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","std::hash::Hash","de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","de::Decode","std::cmp::Eq","std::hash::Hash","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Fixint","config::NoLimit","config::Limit","std::clone::impls::<impl std::clone::Clone for &T>","config::Configuration","config::BigEndian","config::Varint","config::LittleEndian"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"features::impl_std::<impl de::BorrowDecode<'de> for std::collections::HashSet<T, S>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroI8","std::ffi::CString","std::net::SocketAddrV6","std::option::Option","std::collections::Bound","std::time::SystemTime","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroI32","std::net::IpAddr","std::string::String","std::num::NonZeroU128","std::num::NonZeroI16","std::sync::Arc","std::time::Duration","std::net::Ipv6Addr","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroI64"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI16","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroI64","std::num::NonZeroIsize","std::net::Ipv4Addr","std::num::NonZeroU8","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroU16","std::marker::PhantomData","std::net::SocketAddr","std::option::Option","std::cell::Cell","std::num::NonZeroU64","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroI32","std::ffi::CString","std::num::NonZeroI8","std::num::NonZeroI128","std::rc::Rc","std::cell::RefCell"],"V":["std::vec::Vec","std::num::NonZeroU128","std::collections::BTreeSet","std::ops::Range","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::collections::HashSet","std::path::PathBuf","std::rc::Rc","std::sync::atomic::AtomicUsize","std::cell::Cell","std::time::Duration","std::net::IpAddr","std::sync::RwLock","std::num::NonZeroU64","std::marker::PhantomData","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::borrow::Cow","std::sync::Mutex","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::net::Ipv4Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::cell::RefCell","std::option::Option","std::result::Result","std::sync::atomic::AtomicIsize","std::collections::Bound","std::num::NonZeroI16","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::time::SystemTime","std::sync::atomic::AtomicI16","std::sync::Arc","std::net::SocketAddrV4","std::net::SocketAddrV6","std::num::NonZeroUsize","std::num::NonZeroU16","std::collections::HashMap","std::boxed::Box","std::sync::atomic::AtomicU8","std::ffi::CString","std::num::NonZeroU8","std::string::String","std::num::NonZeroI32","std::num::NonZeroIsize","std::collections::BTreeMap","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::num::NonZeroI128"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI128","std::num::NonZeroIsize","std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroI64","std::sync::Arc","std::num::NonZeroU16","std::num::NonZeroU64","std::net::Ipv4Addr","std::cell::Cell","std::rc::Rc","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroU32","std::net::SocketAddr","std::num::NonZeroI8","std::string::String","std::option::Option","std::time::Duration","std::num::NonZeroU128","std::net::Ipv6Addr","std::net::SocketAddrV4","std::path::PathBuf"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI128","std::num::NonZeroU64","std::rc::Rc","std::marker::PhantomData","std::time::SystemTime","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroU128","std::net::IpAddr","std::net::SocketAddrV4","std::cell::RefCell","std::net::Ipv6Addr","std::path::PathBuf","std::ffi::CString","std::num::NonZeroI8","std::num::NonZeroIsize","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroI32"]},"std::collections::Bound":{"T":["std::num::NonZeroIsize","std::time::Duration","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::num::NonZeroUsize","std::num::NonZeroU16","std::net::IpAddr","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroI128","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::num::NonZeroI64","std::cell::Cell","std::sync::Mutex","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::ops::Range","std::marker::PhantomData","std::borrow::Cow","std::sync::Arc","std::ffi::CString","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::cell::RefCell","std::sync::RwLock","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::net::Ipv4Addr","std::boxed::Box","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::path::PathBuf","std::collections::Bound","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::collections::BinaryHeap","std::string::String","std::vec::Vec","std::collections::BTreeMap","std::num::NonZeroI16","std::result::Result","std::time::SystemTime","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::net::SocketAddr","std::collections::HashSet"]},"std::collections::HashMap":{"K":["std::num::NonZeroU64","std::num::NonZeroI128","std::num::NonZeroI8","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroI32","std::time::Duration","std::num::NonZeroUsize","std::num::NonZeroU8","std::string::String","std::net::SocketAddrV4","std::time::SystemTime","std::ffi::CString","std::num::NonZeroIsize","std::num::NonZeroU32","std::sync::Arc","std::num::NonZeroU16","std::rc::Rc","std::net::SocketAddr"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::RwLock","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroI32","std::boxed::Box","std::collections::HashMap","std::sync::Mutex","std::rc::Rc","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::net::IpAddr","std::collections::Bound","std::collections::BinaryHeap","std::num::NonZeroI64","std::net::SocketAddrV6","std::collections::HashSet","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroU16","std::net::SocketAddr","std::option::Option","std::sync::atomic::AtomicU32","std::borrow::Cow","std::time::Duration","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::result::Result","std::path::PathBuf","std::ops::Range","std::num::NonZeroU64","std::string::String","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::sync::Arc","std::collections::BTreeMap","std::ffi::CString","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::cell::RefCell","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::time::SystemTime","std::vec::Vec","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroUsize","std::num::NonZeroU128","std::net::Ipv6Addr","std::option::Option","std::marker::PhantomData","std::num::NonZeroIsize","std::num::NonZeroU8","std::num::NonZeroI64","std::string::String","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroU32","std::num::NonZeroI16","std::num::NonZeroU64","std::time::SystemTime","std::net::SocketAddrV6","std::num::NonZeroI32","std::net::Ipv4Addr","std::time::Duration","std::net::IpAddr","std::num::NonZeroI8","std::ffi::CString","std::net::SocketAddr","std::sync::Arc"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::time::Duration","std::cell::Cell","std::cell::RefCell","std::collections::BTreeMap","std::collections::Bound","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::path::PathBuf","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::ffi::CString","std::num::NonZeroIsize","std::num::NonZeroI128","std::net::SocketAddrV6","std::ops::Range","std::ops::RangeInclusive","std::sync::Mutex","std::num::NonZeroU16","std::marker::PhantomData","std::borrow::Cow","std::vec::Vec","std::num::NonZeroU8","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::string::String","std::rc::Rc","std::net::Ipv4Addr","std::net::IpAddr","std::sync::RwLock","std::num::NonZeroU32","std::collections::HashSet","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::option::Option","std::sync::Arc","std::result::Result","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::collections::VecDeque","std::collections::HashMap","std::boxed::Box","std::collections::BinaryHeap","std::net::Ipv6Addr","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::time::SystemTime","std::num::NonZeroI8","std::sync::atomic::AtomicU8"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::time::SystemTime","std::num::NonZeroI128","std::ops::RangeInclusive","std::sync::RwLock","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::rc::Rc","std::num::NonZeroU8","std::result::Result","std::sync::atomic::AtomicU8","std::net::IpAddr","std::num::NonZeroUsize","std::sync::Arc","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::borrow::Cow","std::vec::Vec","std::num::NonZeroU16","std::collections::BinaryHeap","std::collections::BTreeMap","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::collections::HashSet","std::net::SocketAddrV6","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::ops::Range","std::collections::HashMap","std::cell::Cell","std::num::NonZeroI32","std::num::NonZeroI64","std::string::String","std::num::NonZeroIsize","std::net::Ipv4Addr","std::boxed::Box","std::cell::RefCell","std::path::PathBuf","std::time::Duration","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::option::Option","std::sync::Mutex","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::num::NonZeroI16","std::num::NonZeroU64","std::collections::Bound","std::ffi::CString","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::num::NonZeroU128"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::Bound","std::net::SocketAddrV6","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::time::Duration","std::collections::BinaryHeap","std::rc::Rc","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::num::NonZeroUsize","std::net::SocketAddrV4","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::boxed::Box","std::sync::Arc","std::collections::HashSet","std::ops::Range","std::num::NonZeroU32","std::net::IpAddr","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::num::NonZeroU64","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::collections::BTreeSet","std::option::Option","std::vec::Vec","std::result::Result","std::num::NonZeroU16","std::num::NonZeroI64","std::time::SystemTime","std::cell::RefCell","std::borrow::Cow","std::collections::VecDeque","std::net::SocketAddr","std::sync::Mutex","std::sync::atomic::AtomicI8","std::sync::RwLock","std::ffi::CString","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::cell::Cell","std::string::String","std::path::PathBuf","std::collections::BTreeMap","std::ops::RangeInclusive"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroU128","std::num::NonZeroI8","std::time::SystemTime","std::cell::Cell","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::boxed::Box","std::num::NonZeroUsize","std::vec::Vec","std::sync::atomic::AtomicI64","std::path::PathBuf","std::collections::BTreeMap","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::net::IpAddr","std::borrow::Cow","std::time::Duration","std::num::NonZeroI16","std::net::Ipv6Addr","std::sync::RwLock","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::ffi::CString","std::string::String","std::net::Ipv4Addr","std::num::NonZeroU64","std::option::Option","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroU16","std::num::NonZeroU8","std::marker::PhantomData","std::collections::Bound","std::collections::HashMap","std::cell::RefCell","std::ops::Range","std::result::Result","std::collections::HashSet","std::sync::Arc","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::sync::Mutex","std::rc::Rc"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+features::impl_std::<impl de::BorrowDecode<'de> for std::collections::HashSet<T, S>>::borrow_decode(p0);
+crate::features::impl_std::<impl de::BorrowDecode<'de> for std::collections::HashSet<T, S>>::borrow_decode(p0);
+<std::collections::HashSet<T, S>>::borrow_decode(p0);
-----------------
src/features/impl_std.rs features::impl_std::<impl enc::Encode for std::collections::HashSet<T, S>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::<impl enc::Encode for std::collections::HashSet<T, S>>::encode":{"E":["enc::Encoder","std::marker::Sized"],"S":["std::marker::Sized"],"T":["std::marker::Sized","enc::Encode"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::Decode","de::BorrowDecode","std::cmp::Ord","std::marker::Sized","enc::Encode"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::Bound":{"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashMap":{"K":["de::BorrowDecode","std::hash::Hash","std::marker::Sized","enc::Encode","de::Decode","std::cmp::Eq"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::marker::Sized","enc::Encode","de::Decode","std::cmp::Eq","std::hash::Hash","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::Configuration","config::NoLimit","config::Limit","config::BigEndian","config::Varint","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Fixint"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_std::IoWriter","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::<impl enc::Encode for std::collections::HashSet<T, S>>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"],"S":["RUG_ANY"],"T":["std::sync::atomic::AtomicI32","std::borrow::Cow","std::num::NonZeroI32","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::time::Duration","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::rc::Rc","std::cell::RefCell","enc::impls::<impl enc::Encode for &'a T>","std::collections::VecDeque","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::ops::Range","std::net::SocketAddrV6","std::net::Ipv4Addr","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::collections::Bound","std::time::SystemTime","std::cell::Cell","std::num::NonZeroU8","std::sync::Mutex","std::num::NonZeroUsize","std::num::NonZeroI16","std::sync::Arc","std::num::NonZeroU16","std::path::PathBuf","std::net::SocketAddrV4","std::sync::RwLock","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::collections::HashMap","std::num::NonZeroI128","std::collections::BTreeMap","std::string::String","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::num::NonZeroU128","std::net::IpAddr","std::vec::Vec","std::ffi::CString","std::result::Result","std::sync::atomic::AtomicU8","std::collections::HashSet","std::collections::BTreeSet","std::num::NonZeroI8","std::num::NonZeroIsize","std::net::SocketAddr","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16"]},"features::impl_std::IoWriter":{"W":["std::io::stdio::StderrRaw","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stderr","&std::io::Sink","&std::fs::File","std::io::Stderr","&'a std::os::unix::net::UnixStream","std::os::unix::net::UnixStream","std::io::Sink","&std::net::TcpStream","&std::io::Stderr","std::io::impls::<impl std::io::Write for &mut W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::process::ChildStdin","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::StderrLock<'_>","std::io::BorrowedCursor<'a>","std::vec::Vec<u8, A>","std::io::StdoutLock<'_>","std::collections::VecDeque<u8, A>","std::io::LineWriter<W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::BufWriter<W>","std::net::TcpStream","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::process::ChildStdin","&std::io::Stdout","std::boxed::Box<W>","std::io::Stdout","std::sys::unix::stdio::Stdout","std::io::stdio::StdoutRaw","std::io::Cursor<[u8; N]>","std::fs::File"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::path::Path","std::ffi::CStr","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::net::Ipv4Addr","std::string::String","std::net::Ipv6Addr","std::net::SocketAddrV6","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroU16","std::sync::Arc","std::cell::Cell","std::num::NonZeroUsize","std::num::NonZeroI32","std::option::Option","std::num::NonZeroI8","std::time::Duration","std::net::SocketAddr","std::net::SocketAddrV4","std::num::NonZeroU64","std::path::PathBuf","std::ffi::CString","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroU32"],"V":["std::ops::Range","std::collections::BTreeSet","std::collections::VecDeque","std::collections::BinaryHeap","std::time::SystemTime","std::net::IpAddr","std::sync::Mutex","std::time::Duration","std::cell::RefCell","std::sync::atomic::AtomicU32","std::result::Result","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::collections::Bound","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::sync::Arc","std::marker::PhantomData","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::num::NonZeroI16","std::net::SocketAddrV4","std::ffi::CString","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::num::NonZeroI32","std::net::Ipv6Addr","std::rc::Rc","std::net::SocketAddrV6","std::num::NonZeroI128","std::num::NonZeroU64","std::boxed::Box","std::collections::HashSet","std::collections::HashMap","std::num::NonZeroU8","std::cell::Cell","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::string::String","std::num::NonZeroU16","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::sync::RwLock","std::num::NonZeroI8","std::num::NonZeroU128","std::vec::Vec","std::sync::atomic::AtomicI16","std::option::Option","std::sync::atomic::AtomicU16","std::borrow::Cow","std::num::NonZeroU32","std::path::PathBuf"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::cell::Cell","std::net::SocketAddrV6","std::num::NonZeroUsize","std::num::NonZeroIsize","std::num::NonZeroU128","std::time::Duration","std::num::NonZeroI64","std::net::SocketAddrV4","std::option::Option","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroI32","std::path::PathBuf","std::ffi::CString","std::num::NonZeroU64","std::num::NonZeroI8","std::sync::Arc","std::time::SystemTime","std::num::NonZeroU16","std::num::NonZeroI128","std::net::IpAddr"]},"std::collections::BinaryHeap":{"T":["std::time::Duration","std::num::NonZeroU8","std::sync::Arc","std::net::SocketAddrV6","std::time::SystemTime","std::num::NonZeroI16","std::num::NonZeroIsize","std::ffi::CString","std::path::PathBuf","std::option::Option","std::num::NonZeroU64","std::num::NonZeroI8","std::marker::PhantomData","std::num::NonZeroUsize","std::num::NonZeroI32","std::net::SocketAddrV4","std::net::IpAddr","std::string::String","std::net::SocketAddr","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroU128","std::cell::Cell"]},"std::collections::Bound":{"T":["std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::string::String","std::collections::HashSet","std::num::NonZeroU8","std::cell::RefCell","std::result::Result","std::boxed::Box","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::sync::Mutex","std::sync::atomic::AtomicI64","std::net::IpAddr","std::num::NonZeroU128","std::collections::BTreeMap","std::borrow::Cow","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::ops::Range","std::collections::BTreeSet","std::ops::RangeInclusive","std::net::SocketAddrV4","std::vec::Vec","std::sync::atomic::AtomicU8","std::option::Option","std::marker::PhantomData","std::rc::Rc","std::time::Duration","std::net::SocketAddr","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::ffi::CString","std::num::NonZeroI128","std::num::NonZeroI32","std::num::NonZeroU64","std::path::PathBuf","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::sync::Arc","std::time::SystemTime","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::num::NonZeroIsize","std::num::NonZeroI8","std::collections::Bound","std::collections::VecDeque","std::collections::BinaryHeap","std::net::SocketAddrV6","std::net::Ipv4Addr","std::collections::HashMap","std::num::NonZeroI64","std::num::NonZeroI16","std::cell::Cell","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize"]},"std::collections::HashMap":{"K":["std::time::Duration","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroI64","std::option::Option","std::num::NonZeroI32","std::marker::PhantomData","std::net::Ipv6Addr","std::sync::Arc","std::path::PathBuf","std::num::NonZeroI8","std::rc::Rc","std::num::NonZeroI128","std::num::NonZeroU64","std::num::NonZeroU128","std::net::SocketAddr"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroU16","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::ffi::CString","std::marker::PhantomData","std::collections::HashSet","std::num::NonZeroI128","std::collections::BTreeMap","std::collections::VecDeque","std::num::NonZeroU32","std::collections::HashMap","std::time::SystemTime","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::path::PathBuf","std::rc::Rc","std::ops::Range","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::cell::RefCell","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::cell::Cell","std::num::NonZeroU8","std::borrow::Cow","std::num::NonZeroI8","std::string::String","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::collections::Bound","std::num::NonZeroI64","std::net::Ipv6Addr","std::sync::Arc","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::boxed::Box","std::sync::RwLock","std::net::IpAddr","std::option::Option","std::sync::Mutex","std::collections::BTreeSet","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::result::Result","std::vec::Vec"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::option::Option","std::num::NonZeroU8","std::net::SocketAddrV6","std::ffi::CString","std::string::String","std::net::IpAddr","std::net::SocketAddrV4","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroU64","std::rc::Rc","std::num::NonZeroU16","std::num::NonZeroIsize","std::net::Ipv4Addr","std::time::Duration","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroU128"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::rc::Rc","std::num::NonZeroU8","std::sync::Mutex","std::sync::RwLock","std::collections::BTreeMap","std::marker::PhantomData","std::borrow::Cow","std::collections::Bound","std::net::SocketAddrV4","std::net::SocketAddr","std::collections::HashMap","std::path::PathBuf","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::net::Ipv6Addr","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::ffi::CString","std::time::Duration","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::cell::RefCell","std::sync::atomic::AtomicU32","std::time::SystemTime","std::num::NonZeroI16","std::boxed::Box","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::collections::VecDeque","std::num::NonZeroU64","std::collections::HashSet","std::vec::Vec","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::result::Result","std::option::Option","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::cell::Cell","std::sync::Arc","std::net::IpAddr","std::string::String","std::ops::RangeInclusive","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::ops::Range","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::num::NonZeroU128","std::collections::BinaryHeap"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicUsize","std::borrow::Cow","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroI16","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::num::NonZeroI128","std::string::String","std::time::Duration","std::path::PathBuf","std::option::Option","std::ffi::CString","std::collections::HashMap","std::num::NonZeroU128","std::num::NonZeroUsize","std::time::SystemTime","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::collections::Bound","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::net::IpAddr","std::sync::Arc","std::collections::BTreeSet","std::net::SocketAddrV6","std::ops::RangeInclusive","std::net::Ipv6Addr","std::net::SocketAddr","std::boxed::Box","std::sync::atomic::AtomicI32","std::result::Result","std::collections::HashSet","std::num::NonZeroU64","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::cell::Cell","std::sync::Mutex","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::vec::Vec","std::ops::Range","std::cell::RefCell","std::collections::VecDeque","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::sync::RwLock","std::sync::atomic::AtomicI64","std::num::NonZeroIsize"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::string::String","std::num::NonZeroI32","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::time::Duration","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::path::PathBuf","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroU64","std::ops::Range","std::sync::RwLock","std::num::NonZeroU128","std::rc::Rc","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::vec::Vec","std::collections::VecDeque","std::collections::HashMap","std::marker::PhantomData","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::sync::Arc","std::collections::BTreeSet","std::collections::Bound","std::sync::Mutex","std::borrow::Cow","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::result::Result","std::option::Option","std::time::SystemTime","std::cell::Cell","std::num::NonZeroU16","std::num::NonZeroUsize","std::boxed::Box","std::net::SocketAddrV4","std::num::NonZeroI8","std::num::NonZeroIsize","std::cell::RefCell"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::RwLock","std::net::Ipv4Addr","std::net::IpAddr","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::collections::HashMap","std::net::Ipv6Addr","std::sync::Mutex","std::sync::atomic::AtomicBool","std::borrow::Cow","std::time::Duration","std::sync::atomic::AtomicIsize","std::ffi::CString","std::num::NonZeroU8","std::cell::Cell","std::sync::atomic::AtomicI16","std::ops::Range","std::collections::BTreeSet","std::num::NonZeroI8","std::boxed::Box","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::vec::Vec","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::collections::Bound","std::num::NonZeroU32","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::collections::BinaryHeap","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::rc::Rc","std::path::PathBuf","std::collections::BTreeMap","std::ops::RangeInclusive","std::net::SocketAddr","std::net::SocketAddrV4","std::cell::RefCell","std::collections::HashSet","std::sync::atomic::AtomicI64","std::time::SystemTime","std::string::String","std::num::NonZeroI128","std::marker::PhantomData","std::num::NonZeroU128","std::sync::Arc","std::result::Result","std::num::NonZeroIsize","std::net::SocketAddrV6","std::option::Option"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::collections::HashSet<T, S>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+features::impl_std::<impl enc::Encode for std::collections::HashSet<T, S>>::encode(p0, p1);
+crate::features::impl_std::<impl enc::Encode for std::collections::HashSet<T, S>>::encode(p0, p1);
+<std::collections::HashSet<T, S>>::encode(p0, p1);
-----------------
src/config.rs <config::Configuration<E, I, L> as std::clone::Clone>::clone
deps:{"<config::Configuration<E, I, L> as std::clone::Clone>::clone":{"E":["std::marker::Sized","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Sized"],"L":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{}}
candidates:{"<config::Configuration<E, I, L> as std::clone::Clone>::clone":{"E":["config::Limit","config::Varint","config::BigEndian","config::Configuration","std::clone::impls::<impl std::clone::Clone for &mut T>","config::NoLimit","std::clone::impls::<impl std::clone::Clone for &T>","config::LittleEndian","config::Fixint"],"I":["config::Varint","config::Configuration","std::clone::impls::<impl std::clone::Clone for *const T>","config::Fixint","std::clone::impls::<impl std::clone::Clone for &mut T>","config::LittleEndian","config::Limit","config::NoLimit","config::BigEndian"],"L":["std::clone::impls::<impl std::clone::Clone for &mut T>","config::Fixint","config::LittleEndian","config::Varint","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Configuration","config::Limit","config::BigEndian","config::NoLimit"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // config::Configuration<E, I, L>
+p0.clone();
+<config::Configuration<E, I, L> as std::clone::Clone>::clone(p0);
+crate::<config::Configuration<E, I, L> as std::clone::Clone>::clone(p0);
+<config::Configuration<E, I, L>>::clone(p0);
-----------------
src/config.rs <config::Configuration<E, I, L> as std::default::Default>::default
deps:{"<config::Configuration<E, I, L> as std::default::Default>::default":{"E":["std::marker::Sized"],"I":["std::marker::Sized"],"L":["std::marker::Sized"]}}
candidates:{"<config::Configuration<E, I, L> as std::default::Default>::default":{"E":["RUG_ANY"],"I":["RUG_ANY"],"L":["RUG_ANY"]}}
+<config::Configuration<E, I, L> as std::default::Default>::default();
+crate::<config::Configuration<E, I, L> as std::default::Default>::default();
+<config::Configuration<E, I, L>>::default();
-----------------
src/config.rs config::Configuration::<E, I, L>::with_big_endian
deps:{"config::Configuration::<E, I, L>::with_big_endian":{"E":["std::marker::Sized"],"I":["std::marker::Sized"],"L":["std::marker::Sized"]}}
candidates:{"config::Configuration::<E, I, L>::with_big_endian":{"E":["RUG_ANY"],"I":["RUG_ANY"],"L":["RUG_ANY"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // config::Configuration<E, I, L>
+p0.with_big_endian();
+config::Configuration::<E, I, L>::with_big_endian(p0);
+crate::config::Configuration::<E, I, L>::with_big_endian(p0);
+<config::Configuration<E, I, L>>::with_big_endian(p0);
-----------------
src/config.rs config::Configuration::<E, I, L>::with_little_endian
deps:{"config::Configuration::<E, I, L>::with_little_endian":{"E":["std::marker::Sized"],"I":["std::marker::Sized"],"L":["std::marker::Sized"]}}
candidates:{"config::Configuration::<E, I, L>::with_little_endian":{"E":["RUG_ANY"],"I":["RUG_ANY"],"L":["RUG_ANY"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // config::Configuration<E, I, L>
+p0.with_little_endian();
+config::Configuration::<E, I, L>::with_little_endian(p0);
+crate::config::Configuration::<E, I, L>::with_little_endian(p0);
+<config::Configuration<E, I, L>>::with_little_endian(p0);
-----------------
src/config.rs config::Configuration::<E, I, L>::with_variable_int_encoding
deps:{"config::Configuration::<E, I, L>::with_variable_int_encoding":{"E":["std::marker::Sized"],"I":["std::marker::Sized"],"L":["std::marker::Sized"]}}
candidates:{"config::Configuration::<E, I, L>::with_variable_int_encoding":{"E":["RUG_ANY"],"I":["RUG_ANY"],"L":["RUG_ANY"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // config::Configuration<E, I, L>
+p0.with_variable_int_encoding();
+config::Configuration::<E, I, L>::with_variable_int_encoding(p0);
+crate::config::Configuration::<E, I, L>::with_variable_int_encoding(p0);
+<config::Configuration<E, I, L>>::with_variable_int_encoding(p0);
-----------------
src/config.rs config::Configuration::<E, I, L>::with_fixed_int_encoding
deps:{"config::Configuration::<E, I, L>::with_fixed_int_encoding":{"E":["std::marker::Sized"],"I":["std::marker::Sized"],"L":["std::marker::Sized"]}}
candidates:{"config::Configuration::<E, I, L>::with_fixed_int_encoding":{"E":["RUG_ANY"],"I":["RUG_ANY"],"L":["RUG_ANY"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // config::Configuration<E, I, L>
+p0.with_fixed_int_encoding();
+config::Configuration::<E, I, L>::with_fixed_int_encoding(p0);
+crate::config::Configuration::<E, I, L>::with_fixed_int_encoding(p0);
+<config::Configuration<E, I, L>>::with_fixed_int_encoding(p0);
-----------------
src/config.rs config::Configuration::<E, I, L>::with_limit
deps:{"config::Configuration::<E, I, L>::with_limit":{"E":["std::marker::Sized"],"I":["std::marker::Sized"],"L":["std::marker::Sized"]}}
candidates:{"config::Configuration::<E, I, L>::with_limit":{"E":["RUG_ANY"],"I":["RUG_ANY"],"L":["RUG_ANY"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // config::Configuration<E, I, L>
+p0.with_limit();
+config::Configuration::<E, I, L>::with_limit(p0);
+crate::config::Configuration::<E, I, L>::with_limit(p0);
+<config::Configuration<E, I, L>>::with_limit(p0);
-----------------
src/config.rs config::Configuration::<E, I, L>::with_no_limit
deps:{"config::Configuration::<E, I, L>::with_no_limit":{"E":["std::marker::Sized"],"I":["std::marker::Sized"],"L":["std::marker::Sized"]}}
candidates:{"config::Configuration::<E, I, L>::with_no_limit":{"E":["RUG_ANY"],"I":["RUG_ANY"],"L":["RUG_ANY"]}}
let mut p0 = MaybeUninit::uninit().assume_init(); // config::Configuration<E, I, L>
+p0.with_no_limit();
+config::Configuration::<E, I, L>::with_no_limit(p0);
+crate::config::Configuration::<E, I, L>::with_no_limit(p0);
+<config::Configuration<E, I, L>>::with_no_limit(p0);
-----------------
src/config.rs <config::BigEndian as std::clone::Clone>::clone
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // config::BigEndian
+p0.clone();
+<config::BigEndian as std::clone::Clone>::clone(p0);
+crate::<config::BigEndian as std::clone::Clone>::clone(p0);
+<config::BigEndian>::clone(p0);
-----------------
src/config.rs <config::LittleEndian as std::clone::Clone>::clone
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // config::LittleEndian
+p0.clone();
+<config::LittleEndian as std::clone::Clone>::clone(p0);
+crate::<config::LittleEndian as std::clone::Clone>::clone(p0);
+<config::LittleEndian>::clone(p0);
-----------------
src/config.rs <config::Fixint as std::clone::Clone>::clone
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // config::Fixint
+p0.clone();
+<config::Fixint as std::clone::Clone>::clone(p0);
+crate::<config::Fixint as std::clone::Clone>::clone(p0);
+<config::Fixint>::clone(p0);
-----------------
src/config.rs <config::Varint as std::clone::Clone>::clone
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // config::Varint
+p0.clone();
+<config::Varint as std::clone::Clone>::clone(p0);
+crate::<config::Varint as std::clone::Clone>::clone(p0);
+<config::Varint>::clone(p0);
-----------------
src/config.rs <config::NoLimit as std::clone::Clone>::clone
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // config::NoLimit
+p0.clone();
+<config::NoLimit as std::clone::Clone>::clone(p0);
+crate::<config::NoLimit as std::clone::Clone>::clone(p0);
+<config::NoLimit>::clone(p0);
-----------------
src/config.rs <config::Limit<N> as std::clone::Clone>::clone
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // config::Limit<N>
+p0.clone();
+<config::Limit<N> as std::clone::Clone>::clone(p0);
+crate::<config::Limit<N> as std::clone::Clone>::clone(p0);
+<config::Limit<N>>::clone(p0);
-----------------
src/config.rs <config::internal::Endian as std::cmp::PartialEq>::eq
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // config::internal::Endian
let mut p1 = & MaybeUninit::uninit().assume_init(); // config::internal::Endian
+p0.eq(p1);
+<config::internal::Endian as std::cmp::PartialEq>::eq(p0, p1);
+crate::<config::internal::Endian as std::cmp::PartialEq>::eq(p0, p1);
+<config::internal::Endian>::eq(p0, p1);
-----------------
src/config.rs <config::internal::Endian as std::cmp::Eq>::assert_receiver_is_total_eq
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // config::internal::Endian
+p0.assert_receiver_is_total_eq();
+<config::internal::Endian as std::cmp::Eq>::assert_receiver_is_total_eq(p0);
+crate::<config::internal::Endian as std::cmp::Eq>::assert_receiver_is_total_eq(p0);
+<config::internal::Endian>::assert_receiver_is_total_eq(p0);
-----------------
src/config.rs <config::internal::IntEncoding as std::cmp::PartialEq>::eq
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // config::internal::IntEncoding
let mut p1 = & MaybeUninit::uninit().assume_init(); // config::internal::IntEncoding
+p0.eq(p1);
+<config::internal::IntEncoding as std::cmp::PartialEq>::eq(p0, p1);
+crate::<config::internal::IntEncoding as std::cmp::PartialEq>::eq(p0, p1);
+<config::internal::IntEncoding>::eq(p0, p1);
-----------------
src/config.rs <config::internal::IntEncoding as std::cmp::Eq>::assert_receiver_is_total_eq
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // config::internal::IntEncoding
+p0.assert_receiver_is_total_eq();
+<config::internal::IntEncoding as std::cmp::Eq>::assert_receiver_is_total_eq(p0);
+crate::<config::internal::IntEncoding as std::cmp::Eq>::assert_receiver_is_total_eq(p0);
+<config::internal::IntEncoding>::assert_receiver_is_total_eq(p0);
-----------------
src/de/decoder.rs de::decoder::DecoderImpl::<R, C>::new
deps:{"<&mut T as de::read::Reader>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl::<R, C>::new":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader"]},"features::impl_std::IoReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::BufReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"<&mut T as de::read::Reader>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl::<R, C>::new":{"C":["<T as config::Config>"],"R":["de::read::SliceReader","features::impl_std::IoReader","<&mut T as de::read::Reader>","std::io::BufReader"]},"features::impl_std::IoReader":{"R":["std::io::Take<T>","std::net::TcpStream","std::io::StdinLock<'_>","std::collections::VecDeque<u8, A>","std::process::ChildStderr","std::io::Chain<T, U>","std::io::impls::<impl std::io::Read for &mut R>","std::io::Stdin","std::os::unix::net::UnixStream","&std::fs::File","std::io::BufReader<R>","std::io::stdio::StdinRaw","std::io::Empty","&'a std::os::unix::net::UnixStream","&std::net::TcpStream","std::boxed::Box<R>","std::fs::File","&'a std::sys::unix::fd::FileDesc","std::sys::unix::stdio::Stdin","std::io::Cursor<T>","std::process::ChildStdout","std::io::Repeat"]},"std::io::BufReader":{"R":["std::sys::unix::stdio::Stdin","std::io::stdio::StdinRaw","&std::net::TcpStream","std::io::StdinLock<'_>","std::collections::VecDeque<u8, A>","std::fs::File","std::process::ChildStderr","std::io::BufReader<R>","std::net::TcpStream","std::io::Cursor<T>","&'a std::sys::unix::fd::FileDesc","&'a std::os::unix::net::UnixStream","std::process::ChildStdout","std::io::Take<T>","std::boxed::Box<R>","std::io::Empty","std::io::Stdin","std::io::Chain<T, U>","std::io::Repeat","&std::fs::File","std::io::impls::<impl std::io::Read for &mut R>","std::os::unix::net::UnixStream"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = MaybeUninit::uninit().assume_init(); // R
let mut p1 = MaybeUninit::uninit().assume_init(); // C
+de::decoder::DecoderImpl::<R, C>::new(p0, p1);
+crate::de::decoder::DecoderImpl::<R, C>::new(p0, p1);
+<de::decoder::DecoderImpl<R, C>>::new(p0, p1);
-----------------
src/de/decoder.rs <de::decoder::DecoderImpl<R, C> as de::BorrowDecoder<'de>>::borrow_reader
'de
deps:{"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"<de::decoder::DecoderImpl<R, C> as de::BorrowDecoder<'de>>::borrow_reader":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"]}}
candidates:{"<T as config::Config>":{"T":["config::Configuration"]},"<de::decoder::DecoderImpl<R, C> as de::BorrowDecoder<'de>>::borrow_reader":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // de::decoder::DecoderImpl<R, C>
+p0.borrow_reader();
+<de::decoder::DecoderImpl<R, C> as de::BorrowDecoder<'de>>::borrow_reader(p0);
+crate::<de::decoder::DecoderImpl<R, C> as de::BorrowDecoder<'de>>::borrow_reader(p0);
+<de::decoder::DecoderImpl<R, C>>::borrow_reader(p0);
-----------------
src/de/decoder.rs <de::decoder::DecoderImpl<R, C> as de::Decoder>::reader
deps:{"<&mut T as de::read::Reader>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"<de::decoder::DecoderImpl<R, C> as de::Decoder>::reader":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy"]},"features::impl_std::IoReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::BufReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"<&mut T as de::read::Reader>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<de::decoder::DecoderImpl<R, C> as de::Decoder>::reader":{"C":["<T as config::Config>"],"R":["<&mut T as de::read::Reader>","de::read::SliceReader","features::impl_std::IoReader","std::io::BufReader"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"features::impl_std::IoReader":{"R":["std::collections::VecDeque<u8, A>","std::process::ChildStdout","std::os::unix::net::UnixStream","std::sys::unix::stdio::Stdin","std::io::Repeat","std::net::TcpStream","std::io::Empty","std::io::Cursor<T>","std::process::ChildStderr","std::io::impls::<impl std::io::Read for &mut R>","std::boxed::Box<R>","std::io::stdio::StdinRaw","&'a std::sys::unix::fd::FileDesc","std::io::Take<T>","std::io::StdinLock<'_>","std::io::Stdin","std::io::Chain<T, U>","std::io::BufReader<R>","&std::net::TcpStream","&std::fs::File","&'a std::os::unix::net::UnixStream","std::fs::File"]},"std::io::BufReader":{"R":["std::io::Cursor<T>","std::io::Take<T>","std::io::impls::<impl std::io::Read for &mut R>","std::fs::File","std::sys::unix::stdio::Stdin","std::boxed::Box<R>","std::io::Stdin","&'a std::os::unix::net::UnixStream","std::io::StdinLock<'_>","std::io::stdio::StdinRaw","std::net::TcpStream","std::process::ChildStderr","&'a std::sys::unix::fd::FileDesc","std::collections::VecDeque<u8, A>","std::io::Empty","std::io::BufReader<R>","std::os::unix::net::UnixStream","&std::net::TcpStream","std::process::ChildStdout","&std::fs::File","std::io::Chain<T, U>","std::io::Repeat"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // de::decoder::DecoderImpl<R, C>
+p0.reader();
+<de::decoder::DecoderImpl<R, C> as de::Decoder>::reader(p0);
+crate::<de::decoder::DecoderImpl<R, C> as de::Decoder>::reader(p0);
+<de::decoder::DecoderImpl<R, C>>::reader(p0);
-----------------
src/de/decoder.rs <de::decoder::DecoderImpl<R, C> as de::Decoder>::config
deps:{"<&mut T as de::read::Reader>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy"]},"<de::decoder::DecoderImpl<R, C> as de::Decoder>::config":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"features::impl_std::IoReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::BufReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"<&mut T as de::read::Reader>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<de::decoder::DecoderImpl<R, C> as de::Decoder>::config":{"C":["<T as config::Config>"],"R":["<&mut T as de::read::Reader>","de::read::SliceReader","features::impl_std::IoReader","std::io::BufReader"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"features::impl_std::IoReader":{"R":["std::os::unix::net::UnixStream","std::io::impls::<impl std::io::Read for &mut R>","std::io::stdio::StdinRaw","std::io::Chain<T, U>","std::collections::VecDeque<u8, A>","std::io::BufReader<R>","std::boxed::Box<R>","std::io::Take<T>","std::io::Empty","std::process::ChildStdout","std::io::Cursor<T>","std::sys::unix::stdio::Stdin","&std::fs::File","&'a std::os::unix::net::UnixStream","std::net::TcpStream","&'a std::sys::unix::fd::FileDesc","std::process::ChildStderr","std::fs::File","std::io::StdinLock<'_>","std::io::Repeat","&std::net::TcpStream","std::io::Stdin"]},"std::io::BufReader":{"R":["&'a std::os::unix::net::UnixStream","std::io::BufReader<R>","std::net::TcpStream","std::os::unix::net::UnixStream","std::process::ChildStdout","std::fs::File","std::sys::unix::stdio::Stdin","std::io::Cursor<T>","std::io::Repeat","std::io::stdio::StdinRaw","std::io::Stdin","std::process::ChildStderr","&std::fs::File","std::io::StdinLock<'_>","std::io::Chain<T, U>","std::io::impls::<impl std::io::Read for &mut R>","std::collections::VecDeque<u8, A>","&'a std::sys::unix::fd::FileDesc","std::io::Take<T>","std::boxed::Box<R>","std::io::Empty","&std::net::TcpStream"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // de::decoder::DecoderImpl<R, C>
+p0.config();
+<de::decoder::DecoderImpl<R, C> as de::Decoder>::config(p0);
+crate::<de::decoder::DecoderImpl<R, C> as de::Decoder>::config(p0);
+<de::decoder::DecoderImpl<R, C>>::config(p0);
-----------------
src/de/decoder.rs <de::decoder::DecoderImpl<R, C> as de::Decoder>::claim_bytes_read
deps:{"<&mut T as de::read::Reader>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig"]},"<de::decoder::DecoderImpl<R, C> as de::Decoder>::claim_bytes_read":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"<&mut T as de::read::Reader>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<de::decoder::DecoderImpl<R, C> as de::Decoder>::claim_bytes_read":{"C":["<T as config::Config>"],"R":["<&mut T as de::read::Reader>","std::io::BufReader","de::read::SliceReader","features::impl_std::IoReader"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"features::impl_std::IoReader":{"R":["std::os::unix::net::UnixStream","std::process::ChildStdout","std::collections::VecDeque<u8, A>","std::io::Chain<T, U>","&'a std::os::unix::net::UnixStream","&std::net::TcpStream","std::io::BufReader<R>","std::sys::unix::stdio::Stdin","std::net::TcpStream","std::io::Cursor<T>","std::boxed::Box<R>","std::io::stdio::StdinRaw","std::io::Stdin","std::io::impls::<impl std::io::Read for &mut R>","&'a std::sys::unix::fd::FileDesc","std::io::StdinLock<'_>","std::io::Empty","std::io::Take<T>","std::fs::File","std::process::ChildStderr","&std::fs::File","std::io::Repeat"]},"std::io::BufReader":{"R":["std::process::ChildStderr","std::sys::unix::stdio::Stdin","std::fs::File","std::net::TcpStream","std::os::unix::net::UnixStream","std::io::Repeat","std::io::Chain<T, U>","&std::fs::File","&'a std::sys::unix::fd::FileDesc","std::io::BufReader<R>","std::io::Cursor<T>","std::process::ChildStdout","std::io::Empty","std::io::Stdin","std::collections::VecDeque<u8, A>","&std::net::TcpStream","&'a std::os::unix::net::UnixStream","std::io::StdinLock<'_>","std::io::Take<T>","std::io::impls::<impl std::io::Read for &mut R>","std::boxed::Box<R>","std::io::stdio::StdinRaw"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // de::decoder::DecoderImpl<R, C>
let mut p1 = 0usize; // None+usize
+p0.claim_bytes_read(p1);
+<de::decoder::DecoderImpl<R, C> as de::Decoder>::claim_bytes_read(p0, p1);
+crate::<de::decoder::DecoderImpl<R, C> as de::Decoder>::claim_bytes_read(p0, p1);
+<de::decoder::DecoderImpl<R, C>>::claim_bytes_read(p0, p1);
-----------------
src/de/decoder.rs <de::decoder::DecoderImpl<R, C> as de::Decoder>::unclaim_bytes_read
deps:{"<&mut T as de::read::Reader>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig"]},"<de::decoder::DecoderImpl<R, C> as de::Decoder>::unclaim_bytes_read":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"<&mut T as de::read::Reader>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<de::decoder::DecoderImpl<R, C> as de::Decoder>::unclaim_bytes_read":{"C":["<T as config::Config>"],"R":["<&mut T as de::read::Reader>","std::io::BufReader","de::read::SliceReader","features::impl_std::IoReader"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"features::impl_std::IoReader":{"R":["&std::fs::File","std::io::Empty","std::io::Take<T>","std::io::stdio::StdinRaw","std::fs::File","std::io::BufReader<R>","&'a std::os::unix::net::UnixStream","std::io::Cursor<T>","std::process::ChildStdout","std::process::ChildStderr","&std::net::TcpStream","std::sys::unix::stdio::Stdin","std::boxed::Box<R>","std::net::TcpStream","std::io::Repeat","std::os::unix::net::UnixStream","std::io::Stdin","std::io::StdinLock<'_>","std::io::Chain<T, U>","std::io::impls::<impl std::io::Read for &mut R>","&'a std::sys::unix::fd::FileDesc","std::collections::VecDeque<u8, A>"]},"std::io::BufReader":{"R":["std::process::ChildStdout","&std::fs::File","std::io::Empty","std::sys::unix::stdio::Stdin","std::net::TcpStream","std::io::Stdin","std::process::ChildStderr","std::boxed::Box<R>","std::collections::VecDeque<u8, A>","std::fs::File","std::os::unix::net::UnixStream","&'a std::sys::unix::fd::FileDesc","std::io::stdio::StdinRaw","std::io::BufReader<R>","&std::net::TcpStream","std::io::Chain<T, U>","std::io::StdinLock<'_>","std::io::Cursor<T>","&'a std::os::unix::net::UnixStream","std::io::Take<T>","std::io::Repeat","std::io::impls::<impl std::io::Read for &mut R>"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // de::decoder::DecoderImpl<R, C>
let mut p1 = 0usize; // None+usize
+p0.unclaim_bytes_read(p1);
+<de::decoder::DecoderImpl<R, C> as de::Decoder>::unclaim_bytes_read(p0, p1);
+crate::<de::decoder::DecoderImpl<R, C> as de::Decoder>::unclaim_bytes_read(p0, p1);
+<de::decoder::DecoderImpl<R, C>>::unclaim_bytes_read(p0, p1);
-----------------
src/de/impl_core.rs <de::impl_core::collect_into_array::Guard<'_, T, N> as std::ops::Drop>::drop
deps:{"<de::impl_core::collect_into_array::Guard<'_, T, N> as std::ops::Drop>::drop":{"T":["std::marker::Sized"]}}
candidates:{"<de::impl_core::collect_into_array::Guard<'_, T, N> as std::ops::Drop>::drop":{"T":["RUG_ANY"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // de::impl_core::collect_into_array::Guard<'_, T, N>
+p0.drop();
+<de::impl_core::collect_into_array::Guard<'_, T, N> as std::ops::Drop>::drop(p0);
+crate::<de::impl_core::collect_into_array::Guard<'_, T, N> as std::ops::Drop>::drop(p0);
+<de::impl_core::collect_into_array::Guard<'_, T, N>>::drop(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A,)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A,)>::borrow_decode":{"A":["de::BorrowDecode","std::marker::Sized"],"BD":["de::BorrowDecoder","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::Decode","de::BorrowDecode","std::cmp::Ord","std::marker::Sized","enc::Encode"],"V":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["std::cmp::Ord","de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Ord","enc::Encode"]},"std::collections::Bound":{"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::marker::Sized","enc::Encode","std::cmp::Eq","de::BorrowDecode","de::Decode","std::hash::Hash"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::hash::Hash","enc::Encode","std::cmp::Eq","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Fixint","config::Limit","std::clone::impls::<impl std::clone::Clone for *mut T>","config::LittleEndian","config::Varint","config::BigEndian","config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A,)>::borrow_decode":{"A":["std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::option::Option","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::string::String","std::borrow::Cow","std::num::NonZeroI128","std::time::Duration","std::ffi::CString","std::cell::Cell","std::result::Result","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroI32","std::num::NonZeroI8","std::rc::Rc","std::ops::Range","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::collections::HashSet","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::path::PathBuf","std::vec::Vec","std::num::NonZeroU16","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::cell::RefCell","std::sync::RwLock","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::num::NonZeroI64","std::collections::BinaryHeap","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::sync::Arc","std::net::SocketAddr","std::collections::BTreeSet","std::collections::Bound","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::num::NonZeroUsize","std::time::SystemTime","std::net::SocketAddrV6","std::net::IpAddr","std::boxed::Box","std::ops::RangeInclusive","std::marker::PhantomData"],"BD":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::CStr","std::ffi::OsStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroI8","std::num::NonZeroU128","std::string::String","std::net::IpAddr","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroU8","std::rc::Rc","std::time::Duration","std::net::Ipv6Addr","std::net::SocketAddrV6","std::time::SystemTime","std::num::NonZeroI64"],"V":["std::num::NonZeroU128","std::ops::RangeInclusive","std::cell::RefCell","std::result::Result","std::boxed::Box","std::ffi::CString","std::num::NonZeroUsize","std::collections::BTreeMap","std::cell::Cell","std::num::NonZeroU64","std::num::NonZeroI128","std::net::Ipv6Addr","std::collections::VecDeque","std::net::SocketAddr","std::ops::Range","std::sync::atomic::AtomicI8","std::rc::Rc","std::net::IpAddr","std::marker::PhantomData","std::borrow::Cow","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::time::Duration","std::num::NonZeroI32","std::time::SystemTime","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::BTreeSet","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::net::SocketAddrV6","std::collections::Bound","std::sync::atomic::AtomicU16","std::sync::Mutex","std::option::Option","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::net::SocketAddrV4","std::collections::HashSet","std::vec::Vec","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::num::NonZeroU16","std::path::PathBuf","std::net::Ipv4Addr","std::collections::HashMap","std::num::NonZeroIsize","std::string::String"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroI32","std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroU32","std::string::String","std::num::NonZeroUsize","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroI64","std::time::Duration","std::rc::Rc","std::marker::PhantomData","std::net::SocketAddr","std::num::NonZeroIsize","std::net::IpAddr","std::sync::Arc","std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroI8","std::option::Option"]},"std::collections::BinaryHeap":{"T":["std::net::IpAddr","std::num::NonZeroUsize","std::cell::Cell","std::cell::RefCell","std::net::Ipv4Addr","std::num::NonZeroI32","std::string::String","std::num::NonZeroU128","std::num::NonZeroU32","std::net::Ipv6Addr","std::num::NonZeroU64","std::marker::PhantomData","std::option::Option","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::Arc","std::path::PathBuf","std::time::Duration","std::num::NonZeroI64","std::net::SocketAddr","std::time::SystemTime","std::num::NonZeroU8","std::net::SocketAddrV6","std::rc::Rc","std::num::NonZeroI8"]},"std::collections::Bound":{"T":["std::marker::PhantomData","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::net::Ipv4Addr","std::result::Result","std::net::IpAddr","std::ops::Range","std::collections::BTreeMap","std::vec::Vec","std::collections::BinaryHeap","std::num::NonZeroU64","std::num::NonZeroUsize","std::num::NonZeroU16","std::sync::Arc","std::cell::RefCell","std::sync::atomic::AtomicI32","std::sync::RwLock","std::num::NonZeroU8","std::string::String","std::time::SystemTime","std::sync::Mutex","std::ffi::CString","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::num::NonZeroU32","std::num::NonZeroI32","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::boxed::Box","std::rc::Rc","std::num::NonZeroU128","std::collections::HashMap","std::option::Option","std::collections::HashSet","std::collections::BTreeSet","std::collections::Bound","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::cell::Cell","std::time::Duration","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::borrow::Cow","std::num::NonZeroI16"]},"std::collections::HashMap":{"K":["std::num::NonZeroI64","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroIsize","std::marker::PhantomData","std::net::SocketAddrV4","std::string::String","std::option::Option","std::num::NonZeroI128","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroU8","std::num::NonZeroUsize","std::net::Ipv6Addr","std::net::IpAddr","std::sync::Arc"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::time::Duration","std::collections::VecDeque","std::net::SocketAddrV6","std::vec::Vec","std::ffi::CString","std::marker::PhantomData","std::ops::RangeInclusive","std::num::NonZeroI64","std::collections::Bound","std::collections::HashSet","std::num::NonZeroIsize","std::net::Ipv6Addr","std::collections::BTreeMap","std::time::SystemTime","std::rc::Rc","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::string::String","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::num::NonZeroI16","std::net::Ipv4Addr","std::collections::BinaryHeap","std::net::SocketAddrV4","std::boxed::Box","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::num::NonZeroI8","std::path::PathBuf","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::ops::Range","std::result::Result","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::borrow::Cow","std::cell::Cell","std::sync::atomic::AtomicU32","std::net::IpAddr","std::num::NonZeroU64","std::sync::Mutex","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::sync::Arc","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::collections::HashMap","std::sync::RwLock","std::net::SocketAddr","std::option::Option"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI64","std::string::String","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroU32","std::time::SystemTime","std::sync::Arc","std::num::NonZeroU8","std::rc::Rc","std::net::Ipv4Addr","std::net::IpAddr","std::marker::PhantomData","std::num::NonZeroI128"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::option::Option","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::collections::VecDeque","std::net::SocketAddrV6","std::collections::BTreeMap","std::ops::RangeInclusive","std::num::NonZeroI8","std::vec::Vec","std::net::IpAddr","std::collections::HashMap","std::ffi::CString","std::time::Duration","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::num::NonZeroI128","std::num::NonZeroU128","std::collections::HashSet","std::num::NonZeroIsize","std::collections::Bound","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::ops::Range","std::sync::atomic::AtomicU32","std::rc::Rc","std::cell::RefCell","std::sync::Mutex","std::sync::RwLock","std::collections::BTreeSet","std::num::NonZeroU16","std::num::NonZeroU64","std::num::NonZeroI32","std::sync::Arc","std::net::SocketAddr","std::cell::Cell","std::string::String","std::num::NonZeroU32","std::boxed::Box","std::time::SystemTime","std::net::Ipv4Addr","std::result::Result","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::net::Ipv6Addr","std::path::PathBuf","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::collections::BinaryHeap","std::sync::atomic::AtomicU16"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::path::PathBuf","std::sync::RwLock","std::ffi::CString","std::cell::Cell","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroI128","std::collections::BTreeSet","std::collections::HashSet","std::collections::Bound","std::collections::BTreeMap","std::net::SocketAddr","std::net::Ipv6Addr","std::collections::VecDeque","std::num::NonZeroI32","std::num::NonZeroU64","std::num::NonZeroUsize","std::time::Duration","std::string::String","std::num::NonZeroU16","std::time::SystemTime","std::num::NonZeroIsize","std::collections::HashMap","std::net::SocketAddrV4","std::borrow::Cow","std::net::SocketAddrV6","std::net::IpAddr","std::ops::Range","std::num::NonZeroU128","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::num::NonZeroU32","std::result::Result","std::sync::Arc","std::vec::Vec","std::net::Ipv4Addr","std::rc::Rc","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::cell::RefCell"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::ops::Range","std::sync::Mutex","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::collections::Bound","std::num::NonZeroI8","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroIsize","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::num::NonZeroU32","std::sync::RwLock","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::time::Duration","std::num::NonZeroI64","std::boxed::Box","std::collections::HashSet","std::sync::Arc","std::rc::Rc","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::option::Option","std::ffi::CString","std::time::SystemTime","std::string::String","std::cell::RefCell","std::cell::Cell","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::ops::RangeInclusive","std::net::SocketAddrV6","std::num::NonZeroU16","std::borrow::Cow","std::vec::Vec","std::num::NonZeroI128","std::result::Result","std::collections::VecDeque","std::num::NonZeroU64","std::collections::BinaryHeap","std::net::IpAddr","std::net::Ipv4Addr","std::net::SocketAddr","std::net::SocketAddrV4"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU8","std::sync::Mutex","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::sync::RwLock","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::vec::Vec","std::result::Result","std::boxed::Box","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::sync::Arc","std::borrow::Cow","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::net::Ipv4Addr","std::collections::BinaryHeap","std::string::String","std::rc::Rc","std::num::NonZeroI128","std::collections::Bound","std::net::IpAddr","std::path::PathBuf","std::cell::Cell","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::time::SystemTime","std::sync::atomic::AtomicI64","std::ops::Range","std::num::NonZeroI16","std::time::Duration","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::cell::RefCell","std::collections::BTreeMap","std::net::SocketAddr","std::num::NonZeroU64","std::num::NonZeroU128","std::option::Option","std::collections::HashSet","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::marker::PhantomData","std::net::SocketAddrV6","std::collections::HashMap","std::ffi::CString"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A,)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A,)>::borrow_decode(p0);
+<(A,)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A,)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impl_tuples::<impl de::Decode for (A,)>::decode":{"A":["de::Decode","std::marker::Sized"],"DE":["std::marker::Sized","de::Decoder"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["std::marker::Sized","std::cmp::Ord","de::BorrowDecode","enc::Encode","de::Decode"],"V":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["std::marker::Sized","std::cmp::Ord","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode","std::cmp::Ord"]},"std::collections::Bound":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","std::marker::Sized","de::Decode","std::hash::Hash","enc::Encode","de::BorrowDecode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["std::cmp::Eq","enc::Encode","std::marker::Sized","de::Decode","std::hash::Hash","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","config::LittleEndian","config::BigEndian","std::clone::impls::<impl std::clone::Clone for *const T>","config::Limit","config::Fixint","config::NoLimit","config::Varint"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A,)>::decode":{"A":["std::num::NonZeroU32","std::num::NonZeroI128","std::sync::Arc","std::net::SocketAddrV4","std::num::NonZeroU16","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::num::NonZeroIsize","std::net::SocketAddrV6","std::collections::HashSet","std::collections::Bound","std::collections::VecDeque","std::collections::HashMap","std::num::NonZeroI64","std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroI8","std::marker::PhantomData","std::cell::Cell","std::time::Duration","std::sync::atomic::AtomicU8","std::ffi::CString","std::sync::Mutex","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::time::SystemTime","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::vec::Vec","std::boxed::Box","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::net::IpAddr","std::num::NonZeroU64","std::net::SocketAddr","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::string::String","std::option::Option","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::ops::Range","std::collections::BTreeSet","std::path::PathBuf","std::result::Result","std::net::Ipv6Addr","std::borrow::Cow","std::num::NonZeroU128"],"DE":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::path::Path","std::ffi::OsStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroU8","std::num::NonZeroI16","std::num::NonZeroI128","std::sync::Arc","std::num::NonZeroI64","std::time::SystemTime","std::option::Option","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroI32","std::net::IpAddr","std::time::Duration","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroI8","std::ffi::CString","std::cell::RefCell"],"V":["std::option::Option","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::result::Result","std::num::NonZeroU32","std::borrow::Cow","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::rc::Rc","std::sync::RwLock","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::sync::Mutex","std::net::Ipv4Addr","std::time::Duration","std::num::NonZeroU128","std::collections::Bound","std::net::SocketAddr","std::collections::BTreeMap","std::collections::VecDeque","std::num::NonZeroU64","std::path::PathBuf","std::sync::atomic::AtomicU64","std::time::SystemTime","std::cell::Cell","std::ops::Range","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroI32","std::cell::RefCell","std::collections::BinaryHeap","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::vec::Vec","std::sync::atomic::AtomicU32","std::boxed::Box","std::collections::HashMap","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::sync::Arc","std::collections::HashSet","std::num::NonZeroI128","std::num::NonZeroI64","std::ffi::CString","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::num::NonZeroU16","std::string::String","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::net::SocketAddrV6"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI8","std::num::NonZeroU64","std::option::Option","std::num::NonZeroU128","std::num::NonZeroI16","std::marker::PhantomData","std::cell::Cell","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroI32","std::net::SocketAddrV6","std::num::NonZeroI64","std::net::Ipv4Addr","std::time::SystemTime","std::ffi::CString","std::string::String","std::num::NonZeroI128","std::cell::RefCell","std::num::NonZeroU8","std::path::PathBuf","std::time::Duration"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI16","std::net::SocketAddrV6","std::sync::Arc","std::cell::RefCell","std::num::NonZeroU128","std::ffi::CString","std::option::Option","std::net::Ipv4Addr","std::num::NonZeroI8","std::cell::Cell","std::num::NonZeroU64","std::rc::Rc","std::num::NonZeroI128","std::net::IpAddr","std::num::NonZeroU16","std::net::SocketAddr","std::num::NonZeroUsize","std::path::PathBuf","std::time::Duration","std::marker::PhantomData","std::net::Ipv6Addr","std::time::SystemTime"]},"std::collections::Bound":{"T":["std::num::NonZeroI8","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::sync::Arc","std::boxed::Box","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::num::NonZeroUsize","std::net::SocketAddr","std::num::NonZeroIsize","std::collections::BinaryHeap","std::num::NonZeroI128","std::sync::Mutex","std::ffi::CString","std::sync::atomic::AtomicBool","std::collections::HashSet","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::rc::Rc","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::net::Ipv4Addr","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::time::Duration","std::num::NonZeroI32","std::collections::BTreeMap","std::marker::PhantomData","std::num::NonZeroU64","std::vec::Vec","std::cell::Cell","std::ops::Range","std::path::PathBuf","std::borrow::Cow","std::num::NonZeroU8","std::net::IpAddr","std::option::Option","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::string::String","std::sync::atomic::AtomicU16","std::time::SystemTime","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::collections::Bound","std::sync::RwLock","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::num::NonZeroI16","std::net::SocketAddrV4","std::result::Result"]},"std::collections::HashMap":{"K":["std::rc::Rc","std::num::NonZeroU8","std::num::NonZeroI128","std::option::Option","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroI16","std::net::IpAddr","std::net::Ipv4Addr","std::num::NonZeroI64","std::string::String","std::path::PathBuf","std::num::NonZeroU128","std::collections::Bound","std::ffi::CString","std::num::NonZeroI8","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroUsize","std::time::SystemTime"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::cell::RefCell","std::net::SocketAddrV4","std::sync::Mutex","std::ops::Range","std::collections::HashSet","std::string::String","std::path::PathBuf","std::sync::RwLock","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::net::Ipv4Addr","std::num::NonZeroU32","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::cell::Cell","std::sync::atomic::AtomicI64","std::net::IpAddr","std::num::NonZeroIsize","std::collections::HashMap","std::time::Duration","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::collections::Bound","std::net::SocketAddrV6","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::num::NonZeroI8","std::num::NonZeroU64","std::num::NonZeroI16","std::result::Result","std::net::SocketAddr","std::num::NonZeroI32","std::marker::PhantomData","std::ffi::CString","std::borrow::Cow","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroI64","std::net::Ipv6Addr","std::collections::BTreeSet","std::sync::Arc","std::boxed::Box","std::rc::Rc","std::vec::Vec","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::option::Option","std::sync::atomic::AtomicU8","std::ops::RangeInclusive"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroUsize","std::num::NonZeroU128","std::net::SocketAddrV4","std::time::Duration","std::sync::Arc","std::net::SocketAddr","std::time::SystemTime","std::ffi::CString","std::net::SocketAddrV6","std::num::NonZeroIsize","std::num::NonZeroU64","std::num::NonZeroI32","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroU32","std::marker::PhantomData","std::num::NonZeroI8","std::net::Ipv4Addr","std::option::Option","std::string::String","std::num::NonZeroU8","std::path::PathBuf"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::rc::Rc","std::collections::HashSet","std::time::Duration","std::sync::Mutex","std::vec::Vec","std::net::SocketAddrV4","std::ops::Range","std::net::Ipv6Addr","std::num::NonZeroI8","std::collections::BinaryHeap","std::string::String","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroU32","std::num::NonZeroUsize","std::net::SocketAddr","std::num::NonZeroU64","std::marker::PhantomData","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::time::SystemTime","std::num::NonZeroU16","std::result::Result","std::sync::Arc","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::cell::Cell","std::sync::atomic::AtomicI8","std::option::Option","std::ffi::CString","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::sync::RwLock","std::num::NonZeroU8","std::num::NonZeroI16","std::net::SocketAddrV6","std::boxed::Box","std::ops::RangeInclusive","std::net::IpAddr","std::collections::Bound","std::path::PathBuf","std::num::NonZeroI32","std::collections::BTreeSet","std::num::NonZeroIsize","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::collections::HashMap","std::sync::atomic::AtomicU32","std::borrow::Cow","std::num::NonZeroI128","std::collections::VecDeque","std::sync::atomic::AtomicU16"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::boxed::Box","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroIsize","std::result::Result","std::string::String","std::ops::Range","std::ops::RangeInclusive","std::net::SocketAddrV6","std::num::NonZeroI8","std::num::NonZeroUsize","std::time::Duration","std::sync::RwLock","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::net::Ipv6Addr","std::sync::Arc","std::time::SystemTime","std::collections::Bound","std::num::NonZeroU16","std::num::NonZeroU128","std::borrow::Cow","std::marker::PhantomData","std::num::NonZeroU8","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::ffi::CString","std::collections::HashSet","std::collections::BTreeSet","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::option::Option","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::cell::Cell","std::collections::BTreeMap","std::net::IpAddr","std::sync::atomic::AtomicI64","std::rc::Rc","std::vec::Vec","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::num::NonZeroI128"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::HashSet","std::sync::atomic::AtomicU64","std::option::Option","std::sync::RwLock","std::num::NonZeroI32","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::collections::BinaryHeap","std::collections::Bound","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::net::Ipv6Addr","std::string::String","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::path::PathBuf","std::num::NonZeroU64","std::vec::Vec","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::sync::atomic::AtomicI16","std::result::Result","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::num::NonZeroI16","std::collections::BTreeSet","std::sync::Arc","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::rc::Rc","std::net::SocketAddrV6","std::ops::Range","std::cell::Cell","std::time::SystemTime","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::num::NonZeroI64","std::marker::PhantomData","std::net::SocketAddrV4","std::collections::VecDeque","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroU16","std::num::NonZeroI8","std::num::NonZeroUsize","std::time::Duration","std::boxed::Box","std::borrow::Cow","std::sync::Mutex","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::net::IpAddr"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::Mutex","std::num::NonZeroUsize","std::borrow::Cow","std::vec::Vec","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::string::String","std::sync::Arc","std::path::PathBuf","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::collections::HashSet","std::result::Result","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::num::NonZeroU8","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::cell::RefCell","std::rc::Rc","std::num::NonZeroU64","std::cell::Cell","std::time::SystemTime","std::ffi::CString","std::time::Duration","std::net::SocketAddrV6","std::net::SocketAddrV4","std::collections::BinaryHeap","std::sync::RwLock","std::collections::HashMap","std::ops::RangeInclusive","std::option::Option","std::boxed::Box","std::collections::VecDeque","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::num::NonZeroI64","std::num::NonZeroI8","std::collections::BTreeMap","std::num::NonZeroU128","std::ops::Range","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::collections::Bound","std::net::IpAddr","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A,)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A,)>::decode(p0);
+<(A,)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B)>::borrow_decode":{"A":["de::BorrowDecode","std::marker::Sized"],"B":["std::marker::Sized","de::BorrowDecode"],"BD":["de::BorrowDecoder","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["std::marker::Sized","de::BorrowDecode","de::Decode","std::cmp::Ord","enc::Encode"],"V":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Ord","std::marker::Sized"]},"std::collections::Bound":{"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashMap":{"K":["std::cmp::Eq","std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode","std::hash::Hash"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["de::BorrowDecode","de::Decode","std::cmp::Eq","std::marker::Sized","enc::Encode","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Varint","config::BigEndian","config::Fixint","config::NoLimit","config::LittleEndian","config::Configuration","std::clone::impls::<impl std::clone::Clone for &mut T>","config::Limit"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B)>::borrow_decode":{"A":["std::collections::BTreeMap","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::rc::Rc","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::collections::BinaryHeap","std::net::SocketAddrV6","std::num::NonZeroU64","std::path::PathBuf","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::collections::HashMap","std::cell::RefCell","std::string::String","std::collections::BTreeSet","std::num::NonZeroUsize","std::net::SocketAddr","std::num::NonZeroI32","std::collections::VecDeque","std::ops::Range","std::borrow::Cow","std::vec::Vec","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::time::SystemTime","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::sync::RwLock","std::cell::Cell","std::num::NonZeroI64","std::sync::Arc","std::collections::Bound","std::sync::atomic::AtomicI16","std::option::Option","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::boxed::Box","std::ffi::CString","std::num::NonZeroIsize","std::result::Result","std::num::NonZeroU32","std::marker::PhantomData","std::sync::Mutex","std::time::Duration","std::sync::atomic::AtomicU64"],"B":["std::sync::RwLock","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::option::Option","std::cell::Cell","std::collections::BTreeMap","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::vec::Vec","std::collections::HashMap","std::rc::Rc","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroU8","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::boxed::Box","std::ops::RangeInclusive","std::collections::Bound","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::num::NonZeroI32","std::net::SocketAddrV6","std::ops::Range","std::net::IpAddr","std::num::NonZeroU16","std::num::NonZeroU64","std::num::NonZeroI8","std::ffi::CString","std::time::SystemTime","std::num::NonZeroI128","std::path::PathBuf","std::string::String","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::collections::BinaryHeap","std::num::NonZeroU32","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::result::Result","std::time::Duration","std::sync::Arc","std::sync::atomic::AtomicI8","std::borrow::Cow","std::collections::HashSet","std::sync::Mutex","std::cell::RefCell"],"BD":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::path::Path","std::ffi::OsStr","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::string::String","std::net::Ipv6Addr","std::num::NonZeroU128","std::num::NonZeroU16","std::num::NonZeroI32","std::time::SystemTime","std::path::PathBuf","std::marker::PhantomData","std::rc::Rc","std::num::NonZeroI64","std::num::NonZeroIsize","std::num::NonZeroI16","std::cell::Cell","std::cell::RefCell","std::time::Duration","std::ffi::CString","std::net::IpAddr","std::sync::Arc","std::net::SocketAddrV4","std::net::Ipv4Addr","std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroU32","std::num::NonZeroUsize"],"V":["std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::collections::HashMap","std::cell::RefCell","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::option::Option","std::net::IpAddr","std::num::NonZeroU8","std::sync::Arc","std::cell::Cell","std::net::Ipv6Addr","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::net::SocketAddrV4","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::ops::Range","std::collections::Bound","std::net::Ipv4Addr","std::num::NonZeroIsize","std::num::NonZeroI8","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::string::String","std::result::Result","std::borrow::Cow","std::time::Duration","std::num::NonZeroI64","std::ffi::CString","std::num::NonZeroU64","std::net::SocketAddrV6","std::rc::Rc","std::num::NonZeroU16","std::sync::Mutex","std::marker::PhantomData","std::collections::VecDeque","std::boxed::Box","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::path::PathBuf","std::sync::RwLock","std::collections::BTreeSet","std::num::NonZeroUsize","std::num::NonZeroI128","std::time::SystemTime","std::vec::Vec"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::ffi::CString","std::net::Ipv4Addr","std::num::NonZeroIsize","std::time::SystemTime","std::num::NonZeroU16","std::num::NonZeroU64","std::num::NonZeroI8","std::net::SocketAddrV4","std::time::Duration","std::net::SocketAddr","std::cell::RefCell","std::net::IpAddr","std::option::Option","std::path::PathBuf","std::num::NonZeroI128","std::num::NonZeroI32","std::net::SocketAddrV6","std::sync::Arc","std::rc::Rc","std::num::NonZeroU32","std::string::String","std::num::NonZeroUsize"]},"std::collections::BinaryHeap":{"T":["std::marker::PhantomData","std::num::NonZeroU16","std::cell::Cell","std::time::SystemTime","std::string::String","std::ffi::CString","std::num::NonZeroU32","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroUsize","std::rc::Rc","std::num::NonZeroI32","std::num::NonZeroI128","std::num::NonZeroU64","std::sync::Arc","std::num::NonZeroI64","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroIsize","std::num::NonZeroI8","std::cell::RefCell"]},"std::collections::Bound":{"T":["std::num::NonZeroI16","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::ops::RangeInclusive","std::num::NonZeroI128","std::net::Ipv6Addr","std::net::Ipv4Addr","std::borrow::Cow","std::path::PathBuf","std::collections::BTreeMap","std::ops::Range","std::sync::atomic::AtomicI8","std::result::Result","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::option::Option","std::sync::atomic::AtomicU16","std::collections::HashMap","std::cell::Cell","std::sync::Arc","std::sync::Mutex","std::vec::Vec","std::collections::Bound","std::num::NonZeroI32","std::num::NonZeroU64","std::marker::PhantomData","std::collections::BinaryHeap","std::time::Duration","std::num::NonZeroU8","std::sync::RwLock","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::collections::VecDeque","std::num::NonZeroI64","std::time::SystemTime","std::collections::HashSet","std::rc::Rc","std::num::NonZeroU32","std::ffi::CString","std::boxed::Box","std::collections::BTreeSet","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroUsize","std::cell::RefCell","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::string::String"]},"std::collections::HashMap":{"K":["std::num::NonZeroUsize","std::string::String","std::collections::Bound","std::num::NonZeroU64","std::time::SystemTime","std::net::Ipv6Addr","std::rc::Rc","std::sync::Arc","std::marker::PhantomData","std::net::SocketAddrV4","std::net::Ipv4Addr","std::option::Option","std::net::SocketAddrV6","std::num::NonZeroU32"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroI128","std::boxed::Box","std::net::SocketAddr","std::result::Result","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::option::Option","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::sync::atomic::AtomicI8","std::collections::HashSet","std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroI16","std::ops::Range","std::sync::atomic::AtomicI32","std::vec::Vec","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::collections::BTreeSet","std::collections::BinaryHeap","std::collections::Bound","std::string::String","std::ops::RangeInclusive","std::net::Ipv4Addr","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::num::NonZeroI8","std::num::NonZeroU32","std::time::Duration","std::cell::RefCell","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::time::SystemTime","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::path::PathBuf","std::sync::Arc","std::sync::RwLock","std::borrow::Cow","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::ffi::CString","std::net::IpAddr","std::rc::Rc"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::sync::Arc","std::net::IpAddr","std::num::NonZeroU32","std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroUsize","std::time::SystemTime","std::string::String","std::time::Duration","std::marker::PhantomData","std::num::NonZeroU8","std::option::Option","std::collections::Bound","std::num::NonZeroU64","std::num::NonZeroI32","std::num::NonZeroU16","std::num::NonZeroI128","std::rc::Rc","std::path::PathBuf","std::num::NonZeroIsize"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::rc::Rc","std::path::PathBuf","std::net::SocketAddrV6","std::marker::PhantomData","std::net::SocketAddr","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::collections::HashMap","std::collections::BTreeSet","std::time::SystemTime","std::num::NonZeroU16","std::collections::BinaryHeap","std::string::String","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::vec::Vec","std::cell::RefCell","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::net::IpAddr","std::sync::atomic::AtomicI64","std::ffi::CString","std::result::Result","std::ops::RangeInclusive","std::sync::Mutex","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroUsize","std::cell::Cell","std::time::Duration","std::sync::atomic::AtomicI32","std::collections::HashSet","std::sync::Arc","std::ops::Range","std::sync::atomic::AtomicI16","std::boxed::Box","std::sync::atomic::AtomicU8","std::collections::Bound","std::num::NonZeroI64","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::collections::VecDeque","std::num::NonZeroI8","std::num::NonZeroI16","std::option::Option","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::net::Ipv6Addr","std::borrow::Cow","std::sync::RwLock"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::ops::Range","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::cell::Cell","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::sync::RwLock","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::num::NonZeroI128","std::num::NonZeroU128","std::net::SocketAddr","std::string::String","std::ops::RangeInclusive","std::net::SocketAddrV4","std::cell::RefCell","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::option::Option","std::sync::atomic::AtomicBool","std::collections::HashSet","std::sync::atomic::AtomicI64","std::time::Duration","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::collections::BinaryHeap","std::num::NonZeroI8","std::collections::HashMap","std::boxed::Box","std::ffi::CString","std::net::SocketAddrV6","std::result::Result","std::path::PathBuf","std::rc::Rc","std::net::Ipv4Addr","std::collections::Bound","std::collections::BTreeMap","std::time::SystemTime","std::num::NonZeroUsize","std::borrow::Cow","std::num::NonZeroIsize","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::num::NonZeroI16","std::sync::Mutex","std::sync::Arc","std::vec::Vec","std::collections::VecDeque","std::num::NonZeroU64","std::net::IpAddr"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicU32","std::cell::Cell","std::ops::RangeInclusive","std::net::IpAddr","std::num::NonZeroI128","std::string::String","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::boxed::Box","std::num::NonZeroU32","std::sync::Mutex","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::num::NonZeroI8","std::cell::RefCell","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::vec::Vec","std::num::NonZeroU128","std::collections::Bound","std::num::NonZeroUsize","std::ffi::CString","std::sync::RwLock","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::ops::Range","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::marker::PhantomData","std::time::Duration","std::num::NonZeroU8","std::sync::Arc","std::result::Result","std::net::Ipv4Addr","std::collections::BTreeSet","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::option::Option","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::collections::HashSet","std::time::SystemTime","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroI64","std::net::SocketAddrV4","std::collections::HashMap"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::cell::RefCell","std::option::Option","std::net::Ipv6Addr","std::collections::HashMap","std::collections::Bound","std::sync::atomic::AtomicI8","std::borrow::Cow","std::net::Ipv4Addr","std::sync::RwLock","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::collections::HashSet","std::num::NonZeroU32","std::time::Duration","std::collections::BinaryHeap","std::marker::PhantomData","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::vec::Vec","std::num::NonZeroI128","std::num::NonZeroUsize","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroI8","std::ops::RangeInclusive","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::time::SystemTime","std::path::PathBuf","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::num::NonZeroIsize","std::net::IpAddr","std::ops::Range","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::cell::Cell","std::sync::Mutex","std::num::NonZeroI64","std::sync::Arc","std::collections::BTreeSet","std::rc::Rc","std::sync::atomic::AtomicU32","std::result::Result","std::sync::atomic::AtomicU64","std::boxed::Box","std::string::String","std::num::NonZeroU16","std::net::SocketAddr","std::num::NonZeroU64","std::net::SocketAddrV4","std::ffi::CString"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B)>::borrow_decode(p0);
+<(A, B)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impl_tuples::<impl de::Decode for (A, B)>::decode":{"A":["de::Decode","std::marker::Sized"],"B":["std::marker::Sized","de::Decode"],"DE":["std::marker::Sized","de::Decoder"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["std::cmp::Ord","std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Ord"]},"std::collections::Bound":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::marker::Sized","enc::Encode","std::hash::Hash","de::Decode","std::cmp::Eq","de::BorrowDecode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized","std::cmp::Eq","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","config::Varint","config::Fixint","config::LittleEndian","config::BigEndian","config::Limit","config::NoLimit","std::clone::impls::<impl std::clone::Clone for &T>"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B)>::decode":{"A":["std::rc::Rc","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::vec::Vec","std::num::NonZeroU8","std::boxed::Box","std::ffi::CString","std::string::String","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroU16","std::num::NonZeroU128","std::num::NonZeroIsize","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::sync::RwLock","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::collections::HashMap","std::sync::atomic::AtomicU64","std::borrow::Cow","std::ops::RangeInclusive","std::cell::Cell","std::collections::BinaryHeap","std::net::IpAddr","std::net::SocketAddrV6","std::sync::Mutex","std::net::Ipv6Addr","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::net::SocketAddr","std::option::Option","std::num::NonZeroUsize","std::ops::Range","std::sync::atomic::AtomicU8","std::result::Result","std::cell::RefCell","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::time::SystemTime","std::sync::Arc","std::time::Duration","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::num::NonZeroU64","std::net::SocketAddrV4","std::collections::BTreeMap","std::collections::Bound","std::collections::HashSet","std::collections::VecDeque"],"B":["std::cell::Cell","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::num::NonZeroU32","std::marker::PhantomData","std::collections::HashSet","std::num::NonZeroI64","std::collections::BTreeMap","std::sync::Mutex","std::result::Result","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::time::Duration","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::sync::RwLock","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroI128","std::net::SocketAddrV6","std::borrow::Cow","std::num::NonZeroU128","std::collections::VecDeque","std::ops::Range","std::net::IpAddr","std::ffi::CString","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::option::Option","std::string::String","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::rc::Rc","std::time::SystemTime","std::num::NonZeroU8","std::vec::Vec","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::num::NonZeroUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::collections::HashMap","std::boxed::Box","std::collections::BinaryHeap","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::num::NonZeroI8","std::net::SocketAddr","std::collections::Bound","std::num::NonZeroI16","std::sync::Arc"],"DE":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]},"std::borrow::Cow":{"B":["std::path::Path","<T as std::borrow::ToOwned>","std::ffi::OsStr","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI16","std::net::SocketAddrV4","std::num::NonZeroU8","std::net::Ipv4Addr","std::time::Duration","std::option::Option","std::num::NonZeroI8","std::num::NonZeroI128","std::num::NonZeroUsize","std::num::NonZeroU64","std::path::PathBuf","std::string::String","std::rc::Rc","std::net::SocketAddr","std::cell::RefCell","std::cell::Cell","std::marker::PhantomData","std::sync::Arc","std::ffi::CString","std::num::NonZeroU32"],"V":["std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::vec::Vec","std::option::Option","std::num::NonZeroI128","std::path::PathBuf","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::collections::HashSet","std::num::NonZeroU16","std::cell::Cell","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::ffi::CString","std::time::Duration","std::marker::PhantomData","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::collections::HashMap","std::ops::RangeInclusive","std::net::Ipv4Addr","std::num::NonZeroU64","std::rc::Rc","std::num::NonZeroI32","std::time::SystemTime","std::collections::Bound","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::string::String","std::ops::Range","std::net::SocketAddrV6","std::sync::Mutex","std::collections::VecDeque","std::result::Result","std::num::NonZeroU32","std::cell::RefCell","std::net::IpAddr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::num::NonZeroU128","std::net::SocketAddrV4","std::boxed::Box","std::net::Ipv6Addr","std::borrow::Cow","std::collections::BTreeMap","std::sync::Arc","std::collections::BTreeSet","std::num::NonZeroI8","std::num::NonZeroI16","std::sync::RwLock"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::option::Option","std::time::Duration","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroI8","std::cell::RefCell","std::net::Ipv6Addr","std::cell::Cell","std::num::NonZeroI128","std::num::NonZeroU8","std::net::SocketAddr","std::num::NonZeroU32","std::string::String","std::marker::PhantomData","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroIsize","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroI64"]},"std::collections::BinaryHeap":{"T":["std::rc::Rc","std::num::NonZeroU32","std::time::SystemTime","std::marker::PhantomData","std::net::SocketAddr","std::num::NonZeroU16","std::num::NonZeroI128","std::option::Option","std::num::NonZeroUsize","std::cell::RefCell","std::num::NonZeroU64","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI8","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroI32","std::time::Duration","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroI64"]},"std::collections::Bound":{"T":["std::marker::PhantomData","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::num::NonZeroI64","std::collections::VecDeque","std::num::NonZeroU32","std::net::Ipv6Addr","std::net::Ipv4Addr","std::rc::Rc","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::ffi::CString","std::net::IpAddr","std::net::SocketAddr","std::borrow::Cow","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::collections::BTreeMap","std::time::SystemTime","std::sync::Arc","std::net::SocketAddrV4","std::collections::HashMap","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::path::PathBuf","std::collections::BinaryHeap","std::time::Duration","std::collections::HashSet","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroI32","std::ops::RangeInclusive","std::collections::Bound","std::cell::RefCell","std::num::NonZeroU8","std::boxed::Box","std::vec::Vec","std::result::Result","std::sync::atomic::AtomicI64","std::string::String","std::ops::Range","std::num::NonZeroI8","std::num::NonZeroI16","std::sync::Mutex","std::cell::Cell","std::num::NonZeroI128","std::num::NonZeroU64","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::option::Option"]},"std::collections::HashMap":{"K":["std::net::Ipv6Addr","std::net::SocketAddrV6","std::num::NonZeroU64","std::net::Ipv4Addr","std::net::IpAddr","std::sync::Arc","std::net::SocketAddrV4","std::marker::PhantomData","std::collections::Bound","std::path::PathBuf","std::num::NonZeroI16","std::string::String","std::num::NonZeroI128","std::num::NonZeroU8","std::time::Duration","std::num::NonZeroIsize"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicU32","std::collections::Bound","std::num::NonZeroI16","std::ops::Range","std::collections::VecDeque","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::sync::Arc","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::time::SystemTime","std::net::SocketAddrV6","std::num::NonZeroI32","std::collections::BTreeMap","std::sync::RwLock","std::num::NonZeroU16","std::boxed::Box","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::rc::Rc","std::net::SocketAddr","std::cell::Cell","std::collections::BTreeSet","std::collections::BinaryHeap","std::option::Option","std::num::NonZeroI128","std::num::NonZeroI8","std::string::String","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::time::Duration","std::num::NonZeroU32","std::net::IpAddr","std::ops::RangeInclusive","std::collections::HashSet","std::sync::atomic::AtomicU8","std::ffi::CString","std::num::NonZeroI64","std::num::NonZeroU64","std::path::PathBuf","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::cell::RefCell","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::sync::Mutex","std::result::Result","std::vec::Vec"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::time::Duration","std::num::NonZeroIsize","std::path::PathBuf","std::ffi::CString","std::num::NonZeroUsize","std::collections::Bound","std::net::SocketAddr","std::num::NonZeroU64","std::net::Ipv4Addr","std::num::NonZeroI128","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroI64","std::marker::PhantomData"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::time::Duration","std::net::Ipv6Addr","std::ops::RangeInclusive","std::rc::Rc","std::num::NonZeroIsize","std::sync::RwLock","std::boxed::Box","std::option::Option","std::collections::HashMap","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::cell::RefCell","std::net::SocketAddrV6","std::net::SocketAddr","std::net::Ipv4Addr","std::collections::BTreeSet","std::num::NonZeroI32","std::borrow::Cow","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::collections::Bound","std::num::NonZeroI64","std::vec::Vec","std::cell::Cell","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::result::Result","std::net::SocketAddrV4","std::sync::Mutex","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::path::PathBuf","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::collections::BinaryHeap","std::collections::VecDeque","std::string::String","std::collections::HashSet","std::num::NonZeroU16","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroI8","std::ffi::CString","std::ops::Range","std::num::NonZeroU8","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::net::IpAddr","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::sync::Arc"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::SocketAddrV4","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::collections::Bound","std::cell::RefCell","std::ops::RangeInclusive","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroU64","std::vec::Vec","std::sync::atomic::AtomicBool","std::sync::Arc","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::time::SystemTime","std::num::NonZeroI64","std::result::Result","std::path::PathBuf","std::net::SocketAddrV6","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::collections::HashMap","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::marker::PhantomData","std::time::Duration","std::cell::Cell","std::string::String","std::collections::VecDeque","std::num::NonZeroI16","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroU128","std::num::NonZeroI128","std::sync::RwLock","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::net::SocketAddr","std::sync::Mutex","std::collections::BTreeSet","std::ffi::CString","std::collections::HashSet","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::boxed::Box","std::ops::Range"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::Arc","std::time::Duration","std::collections::HashSet","std::result::Result","std::collections::Bound","std::sync::atomic::AtomicBool","std::sync::RwLock","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::option::Option","std::collections::VecDeque","std::collections::HashMap","std::num::NonZeroI8","std::ffi::CString","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::path::PathBuf","std::borrow::Cow","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::string::String","std::net::SocketAddrV6","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::time::SystemTime","std::collections::BTreeSet","std::ops::RangeInclusive","std::num::NonZeroI128","std::sync::Mutex","std::collections::BTreeMap","std::rc::Rc","std::collections::BinaryHeap","std::num::NonZeroU8","std::ops::Range","std::net::SocketAddrV4","std::cell::Cell","std::num::NonZeroU32","std::num::NonZeroIsize","std::num::NonZeroU128","std::boxed::Box","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::net::IpAddr","std::cell::RefCell","std::vec::Vec","std::num::NonZeroU64","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::sync::atomic::AtomicI64"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroU16","std::collections::HashSet","std::num::NonZeroUsize","std::sync::Arc","std::string::String","std::cell::Cell","std::collections::HashMap","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::collections::VecDeque","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::ops::Range","std::num::NonZeroIsize","std::collections::BTreeSet","std::vec::Vec","std::time::Duration","std::sync::RwLock","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::option::Option","std::boxed::Box","std::rc::Rc","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::num::NonZeroU64","std::path::PathBuf","std::marker::PhantomData","std::ffi::CString","std::net::IpAddr","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::borrow::Cow","std::ops::RangeInclusive","std::net::SocketAddrV6","std::net::Ipv4Addr","std::sync::Mutex","std::num::NonZeroI8","std::result::Result","std::time::SystemTime","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::collections::Bound","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::cell::RefCell","std::num::NonZeroI16"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B)>::decode(p0);
+<(A, B)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C)>::borrow_decode":{"A":["de::BorrowDecode","std::marker::Sized"],"B":["std::marker::Sized","de::BorrowDecode"],"BD":["de::BorrowDecoder","std::marker::Sized"],"C":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized","std::cmp::Ord"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::BorrowDecode","std::cmp::Ord","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::Bound":{"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","std::marker::Sized","enc::Encode","std::hash::Hash","std::cmp::Eq","de::Decode"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::cmp::Eq","de::Decode","std::hash::Hash","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::BigEndian","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Varint","config::NoLimit","config::Configuration","config::Limit","config::Fixint"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C)>::borrow_decode":{"A":["std::borrow::Cow","std::sync::Mutex","std::sync::Arc","std::collections::Bound","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroI128","std::collections::HashMap","std::num::NonZeroUsize","std::cell::RefCell","std::ops::Range","std::result::Result","std::boxed::Box","std::collections::BTreeMap","std::num::NonZeroIsize","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::path::PathBuf","std::collections::HashSet","std::ops::RangeInclusive","std::num::NonZeroU32","std::collections::BinaryHeap","std::net::Ipv6Addr","std::net::IpAddr","std::cell::Cell","std::collections::BTreeSet","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroU128","std::sync::RwLock","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::num::NonZeroI16","std::rc::Rc","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::marker::PhantomData","std::string::String","std::sync::atomic::AtomicU32","std::vec::Vec","std::ffi::CString","std::time::SystemTime","std::sync::atomic::AtomicI16","std::time::Duration","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::option::Option"],"B":["std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::net::IpAddr","std::sync::RwLock","std::collections::HashMap","std::num::NonZeroI128","std::sync::Mutex","std::num::NonZeroU8","std::vec::Vec","std::collections::Bound","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::time::Duration","std::rc::Rc","std::net::Ipv4Addr","std::string::String","std::num::NonZeroI64","std::collections::BTreeMap","std::net::SocketAddrV4","std::ops::Range","std::result::Result","std::collections::VecDeque","std::num::NonZeroI16","std::num::NonZeroU32","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::num::NonZeroIsize","std::ops::RangeInclusive","std::time::SystemTime","std::option::Option","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::cell::Cell","std::collections::HashSet","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::num::NonZeroU128","std::sync::Arc","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::boxed::Box","std::ffi::CString","std::path::PathBuf","std::num::NonZeroUsize","std::num::NonZeroI8","std::borrow::Cow"],"BD":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"C":["std::num::NonZeroI16","std::collections::VecDeque","std::net::Ipv4Addr","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::net::IpAddr","std::cell::RefCell","std::ffi::CString","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::time::Duration","std::sync::Mutex","std::collections::HashSet","std::path::PathBuf","std::cell::Cell","std::boxed::Box","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::collections::HashMap","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::time::SystemTime","std::collections::Bound","std::collections::BTreeSet","std::option::Option","std::sync::RwLock","std::rc::Rc","std::num::NonZeroI128","std::num::NonZeroU16","std::net::Ipv6Addr","std::num::NonZeroI8","std::result::Result","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::string::String","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::borrow::Cow","std::num::NonZeroIsize","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroI32","std::net::SocketAddrV6","std::collections::BTreeMap","std::num::NonZeroI64","std::ops::Range","std::vec::Vec"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::path::Path","std::ffi::CStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroI32","std::time::SystemTime","std::net::SocketAddrV6","std::string::String","std::num::NonZeroU16","std::num::NonZeroU32","std::net::SocketAddrV4","std::cell::RefCell","std::num::NonZeroUsize","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroI16","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroI64","std::net::Ipv6Addr","std::option::Option","std::path::PathBuf","std::net::IpAddr","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroI128"],"V":["std::marker::PhantomData","std::collections::VecDeque","std::cell::Cell","std::time::SystemTime","std::num::NonZeroU128","std::collections::HashMap","std::collections::HashSet","std::collections::BTreeSet","std::sync::Mutex","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::string::String","std::num::NonZeroI64","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::boxed::Box","std::vec::Vec","std::net::IpAddr","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::num::NonZeroI8","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::time::Duration","std::borrow::Cow","std::net::Ipv4Addr","std::num::NonZeroU8","std::rc::Rc","std::collections::Bound","std::sync::Arc","std::collections::BTreeMap","std::num::NonZeroUsize","std::ops::RangeInclusive","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::result::Result","std::sync::RwLock","std::option::Option","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::num::NonZeroU16","std::path::PathBuf","std::net::Ipv6Addr","std::num::NonZeroI32","std::ffi::CString","std::ops::Range","std::num::NonZeroI128","std::num::NonZeroU64","std::sync::atomic::AtomicI64"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI8","std::num::NonZeroU64","std::net::Ipv6Addr","std::marker::PhantomData","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroU16","std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroI128","std::net::SocketAddr","std::net::IpAddr","std::num::NonZeroI16","std::num::NonZeroI64","std::string::String","std::option::Option","std::cell::RefCell","std::time::Duration","std::num::NonZeroU128","std::ffi::CString","std::net::SocketAddrV6","std::num::NonZeroIsize","std::time::SystemTime"]},"std::collections::BinaryHeap":{"T":["std::net::IpAddr","std::time::Duration","std::num::NonZeroI64","std::time::SystemTime","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroU64","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroI16","std::num::NonZeroU32","std::net::SocketAddrV6","std::cell::Cell","std::cell::RefCell","std::num::NonZeroIsize","std::sync::Arc","std::rc::Rc","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroUsize","std::net::Ipv6Addr","std::string::String","std::option::Option","std::path::PathBuf","std::num::NonZeroU16"]},"std::collections::Bound":{"T":["std::collections::BTreeMap","std::collections::HashMap","std::option::Option","std::sync::atomic::AtomicI8","std::boxed::Box","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::collections::BinaryHeap","std::num::NonZeroI64","std::cell::Cell","std::net::SocketAddrV6","std::collections::Bound","std::num::NonZeroI128","std::collections::VecDeque","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::sync::RwLock","std::num::NonZeroI32","std::time::Duration","std::rc::Rc","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::string::String","std::net::SocketAddrV4","std::sync::Mutex","std::ops::Range","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::collections::BTreeSet","std::net::IpAddr","std::num::NonZeroU8","std::ops::RangeInclusive","std::borrow::Cow","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::time::SystemTime","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroU32","std::vec::Vec","std::num::NonZeroI16","std::num::NonZeroU128","std::sync::Arc","std::sync::atomic::AtomicU16","std::result::Result","std::num::NonZeroU64","std::collections::HashSet","std::cell::RefCell","std::path::PathBuf","std::sync::atomic::AtomicU8","std::num::NonZeroUsize"]},"std::collections::HashMap":{"K":["std::net::IpAddr","std::num::NonZeroU32","std::num::NonZeroU64","std::num::NonZeroIsize","std::net::SocketAddr","std::net::Ipv4Addr","std::rc::Rc","std::marker::PhantomData","std::num::NonZeroU128","std::time::Duration","std::num::NonZeroU8","std::net::Ipv6Addr","std::num::NonZeroUsize","std::num::NonZeroU16","std::sync::Arc","std::net::SocketAddrV6"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::net::SocketAddrV6","std::boxed::Box","std::collections::HashSet","std::ffi::CString","std::result::Result","std::sync::Arc","std::rc::Rc","std::string::String","std::net::Ipv4Addr","std::num::NonZeroU128","std::ops::RangeInclusive","std::borrow::Cow","std::net::SocketAddr","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::collections::Bound","std::collections::HashMap","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::net::IpAddr","std::collections::BinaryHeap","std::time::SystemTime","std::ops::Range","std::sync::Mutex","std::num::NonZeroU64","std::time::Duration","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::cell::RefCell","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::sync::RwLock","std::num::NonZeroI16","std::net::Ipv6Addr","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::cell::Cell","std::option::Option","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::vec::Vec","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroI64","std::sync::atomic::AtomicI16"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroI8","std::path::PathBuf","std::net::IpAddr","std::net::SocketAddrV4","std::num::NonZeroU128","std::rc::Rc","std::num::NonZeroU16","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroU32","std::sync::Arc"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::sync::RwLock","std::num::NonZeroUsize","std::collections::HashMap","std::collections::VecDeque","std::net::SocketAddrV4","std::num::NonZeroI64","std::net::IpAddr","std::cell::RefCell","std::num::NonZeroU16","std::option::Option","std::result::Result","std::num::NonZeroIsize","std::marker::PhantomData","std::boxed::Box","std::rc::Rc","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::collections::HashSet","std::string::String","std::borrow::Cow","std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroI32","std::net::Ipv4Addr","std::path::PathBuf","std::net::Ipv6Addr","std::ffi::CString","std::ops::Range","std::net::SocketAddr","std::vec::Vec","std::collections::BTreeSet","std::sync::Mutex","std::cell::Cell","std::num::NonZeroI16","std::sync::Arc","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::time::Duration","std::sync::atomic::AtomicI32","std::collections::Bound","std::sync::atomic::AtomicU16","std::net::SocketAddrV6"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::num::NonZeroIsize","std::net::SocketAddrV4","std::collections::BinaryHeap","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::boxed::Box","std::collections::BTreeMap","std::net::Ipv6Addr","std::vec::Vec","std::cell::RefCell","std::sync::atomic::AtomicU8","std::collections::Bound","std::num::NonZeroU32","std::time::Duration","std::ops::RangeInclusive","std::net::SocketAddrV6","std::collections::HashSet","std::ffi::CString","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::num::NonZeroI16","std::path::PathBuf","std::net::IpAddr","std::collections::BTreeSet","std::num::NonZeroI32","std::time::SystemTime","std::option::Option","std::marker::PhantomData","std::collections::HashMap","std::num::NonZeroU128","std::num::NonZeroUsize","std::sync::RwLock","std::num::NonZeroI64","std::borrow::Cow","std::ops::Range","std::result::Result","std::cell::Cell","std::string::String","std::sync::atomic::AtomicU32","std::sync::Arc","std::rc::Rc","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::sync::Mutex","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::net::Ipv4Addr"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicU8","std::vec::Vec","std::num::NonZeroI32","std::sync::RwLock","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::num::NonZeroI16","std::collections::BTreeSet","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::path::PathBuf","std::collections::HashSet","std::sync::Arc","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::rc::Rc","std::time::Duration","std::net::SocketAddr","std::num::NonZeroU32","std::collections::BTreeMap","std::num::NonZeroU128","std::ops::RangeInclusive","std::net::Ipv4Addr","std::collections::HashMap","std::collections::BinaryHeap","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroU16","std::option::Option","std::ops::Range","std::boxed::Box","std::time::SystemTime","std::cell::Cell","std::sync::atomic::AtomicU32","std::result::Result","std::num::NonZeroUsize","std::collections::Bound","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::net::IpAddr","std::string::String","std::collections::VecDeque","std::net::SocketAddrV4","std::borrow::Cow","std::cell::RefCell","std::sync::Mutex"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::vec::Vec","std::num::NonZeroI64","std::num::NonZeroU16","std::time::SystemTime","std::num::NonZeroU8","std::ops::RangeInclusive","std::collections::BTreeMap","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::cell::RefCell","std::collections::VecDeque","std::sync::Arc","std::num::NonZeroI16","std::result::Result","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::string::String","std::option::Option","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::collections::HashMap","std::sync::RwLock","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::path::PathBuf","std::net::Ipv6Addr","std::boxed::Box","std::num::NonZeroI32","std::borrow::Cow","std::collections::BTreeSet","std::rc::Rc","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::sync::Mutex","std::net::SocketAddrV6","std::cell::Cell","std::sync::atomic::AtomicU16","std::collections::Bound","std::ffi::CString","std::num::NonZeroUsize","std::num::NonZeroU64","std::ops::Range","std::marker::PhantomData","std::collections::HashSet","std::net::SocketAddr","std::time::Duration","std::collections::BinaryHeap"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C)>::borrow_decode(p0);
+<(A, B, C)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impl_tuples::<impl de::Decode for (A, B, C)>::decode":{"A":["std::marker::Sized","de::Decode"],"B":["std::marker::Sized","de::Decode"],"C":["de::Decode","std::marker::Sized"],"DE":["std::marker::Sized","de::Decoder"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"K":["de::BorrowDecode","std::cmp::Ord","enc::Encode","de::Decode","std::marker::Sized"],"V":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["enc::Encode","de::Decode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","std::cmp::Ord","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::HashMap":{"K":["std::hash::Hash","std::marker::Sized","de::Decode","std::cmp::Eq","enc::Encode","de::BorrowDecode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["std::marker::Sized","std::hash::Hash","de::BorrowDecode","de::Decode","std::cmp::Eq","enc::Encode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Fixint","config::Configuration","config::Varint","std::clone::impls::<impl std::clone::Clone for *const T>","config::NoLimit","config::LittleEndian","config::Limit","config::BigEndian"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C)>::decode":{"A":["std::sync::Mutex","std::net::SocketAddr","std::num::NonZeroI32","std::ops::RangeInclusive","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::num::NonZeroIsize","std::vec::Vec","std::num::NonZeroI16","std::num::NonZeroU64","std::sync::RwLock","std::path::PathBuf","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroU32","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::collections::Bound","std::ops::Range","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::rc::Rc","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::time::SystemTime","std::cell::Cell","std::collections::HashMap","std::collections::HashSet","std::marker::PhantomData","std::boxed::Box","std::net::Ipv4Addr","std::net::IpAddr","std::sync::atomic::AtomicU32","std::ffi::CString","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::sync::Arc","std::collections::VecDeque","std::time::Duration","std::string::String","std::result::Result","std::net::SocketAddrV4","std::collections::BTreeSet","std::borrow::Cow","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::option::Option","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::cell::RefCell","std::collections::BinaryHeap"],"B":["std::collections::BinaryHeap","std::collections::BTreeSet","std::cell::RefCell","std::collections::Bound","std::net::IpAddr","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::boxed::Box","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroU64","std::result::Result","std::net::Ipv6Addr","std::sync::RwLock","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::time::Duration","std::num::NonZeroI16","std::net::SocketAddr","std::path::PathBuf","std::borrow::Cow","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::option::Option","std::time::SystemTime","std::ops::Range","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::string::String","std::sync::Mutex","std::ffi::CString","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::collections::HashSet","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroU32","std::collections::HashMap","std::num::NonZeroI32","std::vec::Vec","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroI8","std::sync::Arc","std::num::NonZeroI64","std::num::NonZeroU8"],"C":["std::borrow::Cow","std::ops::RangeInclusive","std::time::SystemTime","std::option::Option","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::ffi::CString","std::time::Duration","std::num::NonZeroI128","std::num::NonZeroU8","std::boxed::Box","std::sync::Mutex","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::ops::Range","std::num::NonZeroU128","std::sync::Arc","std::sync::RwLock","std::num::NonZeroIsize","std::string::String","std::net::SocketAddrV6","std::num::NonZeroUsize","std::collections::HashSet","std::net::SocketAddr","std::cell::Cell","std::collections::HashMap","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::num::NonZeroI16","std::net::SocketAddrV4","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::path::PathBuf","std::num::NonZeroI8","std::num::NonZeroI32","std::vec::Vec","std::collections::BTreeSet","std::result::Result","std::rc::Rc","std::cell::RefCell","std::collections::Bound","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::collections::VecDeque","std::net::Ipv6Addr","std::net::IpAddr","std::sync::atomic::AtomicUsize"],"DE":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::ffi::CStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU64","std::net::Ipv4Addr","std::rc::Rc","std::ffi::CString","std::sync::Arc","std::string::String","std::net::Ipv6Addr","std::time::SystemTime","std::net::SocketAddr","std::num::NonZeroIsize","std::num::NonZeroUsize","std::net::SocketAddrV6","std::cell::Cell","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroI16","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroI128","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroU16"],"V":["std::num::NonZeroIsize","std::num::NonZeroU32","std::collections::Bound","std::ops::Range","std::sync::atomic::AtomicI32","std::time::SystemTime","std::sync::atomic::AtomicU8","std::cell::RefCell","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::rc::Rc","std::sync::atomic::AtomicU32","std::collections::HashMap","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroU16","std::cell::Cell","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::vec::Vec","std::sync::RwLock","std::result::Result","std::ops::RangeInclusive","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::marker::PhantomData","std::net::Ipv6Addr","std::sync::Arc","std::num::NonZeroI32","std::sync::Mutex","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::collections::HashSet","std::net::SocketAddrV6","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::boxed::Box","std::net::Ipv4Addr","std::net::IpAddr","std::ffi::CString","std::borrow::Cow","std::num::NonZeroI16","std::string::String","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::time::Duration"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::rc::Rc","std::sync::Arc","std::option::Option","std::num::NonZeroI128","std::num::NonZeroI32","std::time::Duration","std::net::Ipv6Addr","std::num::NonZeroUsize","std::path::PathBuf","std::time::SystemTime","std::num::NonZeroU64","std::cell::RefCell","std::num::NonZeroU8","std::num::NonZeroI8","std::num::NonZeroU32","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroI64","std::cell::Cell","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroI16","std::net::IpAddr","std::net::SocketAddrV6"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI8","std::num::NonZeroI32","std::num::NonZeroI64","std::time::Duration","std::net::Ipv4Addr","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroUsize","std::num::NonZeroU64","std::net::SocketAddrV4","std::cell::Cell","std::num::NonZeroU128","std::string::String","std::net::IpAddr","std::num::NonZeroU32","std::marker::PhantomData","std::rc::Rc","std::time::SystemTime","std::net::SocketAddrV6","std::net::SocketAddr","std::path::PathBuf"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::rc::Rc","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::boxed::Box","std::sync::atomic::AtomicI64","std::collections::Bound","std::string::String","std::net::Ipv4Addr","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::collections::VecDeque","std::num::NonZeroIsize","std::num::NonZeroU8","std::num::NonZeroU128","std::time::SystemTime","std::sync::Mutex","std::sync::RwLock","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::path::PathBuf","std::num::NonZeroI32","std::cell::RefCell","std::num::NonZeroU16","std::net::Ipv6Addr","std::ops::Range","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::option::Option","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::time::Duration","std::ops::RangeInclusive","std::borrow::Cow","std::net::IpAddr","std::num::NonZeroI64","std::ffi::CString","std::collections::BTreeSet","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::cell::Cell","std::collections::HashSet","std::result::Result","std::num::NonZeroI128","std::collections::BTreeMap","std::collections::BinaryHeap","std::num::NonZeroU64","std::sync::Arc","std::collections::HashMap","std::net::SocketAddrV4","std::vec::Vec"]},"std::collections::HashMap":{"K":["std::num::NonZeroI32","std::num::NonZeroU8","std::num::NonZeroI64","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroI8","std::net::SocketAddrV6","std::num::NonZeroUsize","std::rc::Rc","std::net::Ipv6Addr","std::net::Ipv4Addr","std::string::String","std::collections::Bound","std::num::NonZeroIsize","std::time::Duration"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::time::Duration","std::ops::Range","std::time::SystemTime","std::sync::atomic::AtomicI8","std::ffi::CString","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::cell::Cell","std::path::PathBuf","std::net::Ipv6Addr","std::collections::HashSet","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::sync::RwLock","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::collections::HashMap","std::collections::BTreeSet","std::cell::RefCell","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::option::Option","std::vec::Vec","std::result::Result","std::num::NonZeroU16","std::ops::RangeInclusive","std::rc::Rc","std::net::Ipv4Addr","std::sync::Mutex","std::num::NonZeroU64","std::collections::Bound","std::sync::atomic::AtomicU8","std::boxed::Box","std::num::NonZeroUsize","std::num::NonZeroI128","std::num::NonZeroI8","std::collections::VecDeque","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::string::String","std::sync::Arc","std::num::NonZeroIsize","std::collections::BinaryHeap","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroU8","std::borrow::Cow"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU64","std::net::SocketAddrV4","std::num::NonZeroUsize","std::net::Ipv6Addr","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroI64","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroU8","std::time::Duration","std::sync::Arc","std::path::PathBuf","std::collections::Bound","std::marker::PhantomData","std::num::NonZeroI8","std::num::NonZeroIsize","std::num::NonZeroI128","std::option::Option"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::ops::Range","std::num::NonZeroUsize","std::borrow::Cow","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::collections::Bound","std::num::NonZeroU8","std::num::NonZeroIsize","std::collections::VecDeque","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::option::Option","std::sync::atomic::AtomicU8","std::boxed::Box","std::num::NonZeroI32","std::sync::Mutex","std::sync::Arc","std::num::NonZeroI64","std::collections::BTreeMap","std::ops::RangeInclusive","std::collections::HashMap","std::ffi::CString","std::time::Duration","std::num::NonZeroI128","std::cell::RefCell","std::collections::BinaryHeap","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::num::NonZeroI16","std::net::IpAddr","std::string::String","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::vec::Vec","std::path::PathBuf","std::num::NonZeroU16","std::time::SystemTime","std::net::SocketAddrV6","std::cell::Cell","std::net::Ipv6Addr","std::rc::Rc","std::num::NonZeroU64","std::sync::RwLock","std::result::Result","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::collections::HashSet"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::IpAddr","std::net::SocketAddr","std::borrow::Cow","std::path::PathBuf","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::vec::Vec","std::net::Ipv6Addr","std::num::NonZeroI8","std::cell::Cell","std::collections::Bound","std::num::NonZeroUsize","std::string::String","std::net::SocketAddrV6","std::time::SystemTime","std::ffi::CString","std::num::NonZeroU32","std::net::SocketAddrV4","std::num::NonZeroI64","std::boxed::Box","std::rc::Rc","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::sync::RwLock","std::num::NonZeroU8","std::collections::BTreeMap","std::collections::HashMap","std::cell::RefCell","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::num::NonZeroI32","std::num::NonZeroI128","std::marker::PhantomData","std::ops::Range","std::num::NonZeroU16","std::collections::HashSet","std::num::NonZeroIsize","std::collections::BTreeSet","std::result::Result","std::time::Duration","std::sync::Arc","std::sync::Mutex","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::option::Option"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::Ipv4Addr","std::result::Result","std::num::NonZeroIsize","std::net::SocketAddrV6","std::sync::Mutex","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::string::String","std::sync::atomic::AtomicI16","std::net::IpAddr","std::path::PathBuf","std::vec::Vec","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::time::Duration","std::sync::atomic::AtomicI64","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroU64","std::num::NonZeroU32","std::net::SocketAddr","std::collections::Bound","std::borrow::Cow","std::collections::BTreeSet","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::boxed::Box","std::num::NonZeroU8","std::num::NonZeroU16","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::sync::Arc","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::rc::Rc","std::collections::HashMap","std::marker::PhantomData","std::num::NonZeroI128","std::collections::BinaryHeap","std::net::SocketAddrV4","std::ffi::CString","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::time::SystemTime","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::option::Option","std::sync::atomic::AtomicBool","std::ops::Range","std::ops::RangeInclusive","std::sync::RwLock","std::num::NonZeroI8","std::cell::Cell"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::rc::Rc","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::boxed::Box","std::num::NonZeroUsize","std::collections::BinaryHeap","std::time::Duration","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::path::PathBuf","std::cell::Cell","std::collections::Bound","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::net::Ipv4Addr","std::sync::RwLock","std::collections::BTreeSet","std::result::Result","std::num::NonZeroIsize","std::collections::HashMap","std::vec::Vec","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::sync::Arc","std::sync::Mutex","std::num::NonZeroI8","std::num::NonZeroU64","std::ops::Range","std::num::NonZeroI16","std::option::Option","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::marker::PhantomData","std::ops::RangeInclusive","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::collections::HashSet","std::num::NonZeroU32","std::ffi::CString","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::net::SocketAddr","std::cell::RefCell","std::net::IpAddr","std::num::NonZeroU128","std::string::String","std::net::SocketAddrV4","std::num::NonZeroU16"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C)>::decode(p0);
+<(A, B, C)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D)>::borrow_decode":{"A":["std::marker::Sized","de::BorrowDecode"],"B":["de::BorrowDecode","std::marker::Sized"],"BD":["de::BorrowDecoder","std::marker::Sized"],"C":["std::marker::Sized","de::BorrowDecode"],"D":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode","std::cmp::Ord"],"V":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["std::cmp::Ord","std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::cmp::Ord","std::marker::Sized","de::Decode","enc::Encode"]},"std::collections::Bound":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode","std::cmp::Eq","std::hash::Hash"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["enc::Encode","de::Decode","std::cmp::Eq","de::BorrowDecode","std::marker::Sized","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::Varint","config::BigEndian","config::Configuration","config::Fixint","config::NoLimit","config::Limit","std::clone::impls::<impl std::clone::Clone for *mut T>"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D)>::borrow_decode":{"A":["std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::num::NonZeroI32","std::collections::HashMap","std::option::Option","std::rc::Rc","std::boxed::Box","std::net::Ipv4Addr","std::collections::BTreeSet","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::string::String","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::num::NonZeroI64","std::borrow::Cow","std::ffi::CString","std::net::SocketAddr","std::net::IpAddr","std::sync::RwLock","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::collections::Bound","std::cell::Cell","std::time::SystemTime","std::sync::atomic::AtomicI16","std::path::PathBuf","std::collections::HashSet","std::num::NonZeroI128","std::sync::Arc","std::num::NonZeroU64","std::sync::Mutex","std::collections::BinaryHeap","std::time::Duration","std::collections::BTreeMap","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroI16","std::vec::Vec","std::num::NonZeroU128","std::num::NonZeroU32","std::ops::Range","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::result::Result"],"B":["std::net::SocketAddr","std::sync::atomic::AtomicU16","std::collections::HashSet","std::sync::Arc","std::num::NonZeroUsize","std::boxed::Box","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::num::NonZeroU128","std::result::Result","std::ops::RangeInclusive","std::option::Option","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::vec::Vec","std::sync::atomic::AtomicI8","std::cell::Cell","std::time::SystemTime","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::collections::BTreeSet","std::collections::HashMap","std::collections::BinaryHeap","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::num::NonZeroI8","std::num::NonZeroI16","std::cell::RefCell","std::sync::atomic::AtomicI32","std::path::PathBuf","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::ffi::CString","std::collections::Bound","std::net::IpAddr","std::string::String","std::net::SocketAddrV6","std::ops::Range","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::num::NonZeroU64","std::num::NonZeroU32","std::sync::Mutex","std::sync::RwLock","std::num::NonZeroU8","std::time::Duration","std::collections::VecDeque","std::num::NonZeroU16","std::rc::Rc","std::marker::PhantomData","std::borrow::Cow"],"BD":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"C":["std::sync::Mutex","std::num::NonZeroI32","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::string::String","std::sync::atomic::AtomicI32","std::collections::HashSet","std::sync::Arc","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::result::Result","std::cell::Cell","std::num::NonZeroI64","std::collections::BinaryHeap","std::marker::PhantomData","std::rc::Rc","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroI128","std::collections::HashMap","std::num::NonZeroI16","std::collections::BTreeSet","std::net::Ipv6Addr","std::path::PathBuf","std::boxed::Box","std::collections::VecDeque","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::vec::Vec","std::num::NonZeroU128","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::num::NonZeroIsize","std::ops::Range","std::net::IpAddr","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::option::Option","std::borrow::Cow","std::cell::RefCell","std::time::SystemTime","std::sync::atomic::AtomicU16","std::collections::Bound","std::time::Duration","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::sync::RwLock","std::num::NonZeroU64"],"D":["std::num::NonZeroU64","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::sync::RwLock","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::borrow::Cow","std::num::NonZeroI32","std::net::IpAddr","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::collections::VecDeque","std::ops::Range","std::num::NonZeroUsize","std::string::String","std::result::Result","std::sync::atomic::AtomicU64","std::rc::Rc","std::collections::BTreeMap","std::num::NonZeroU16","std::sync::Arc","std::net::SocketAddrV6","std::vec::Vec","std::ffi::CString","std::path::PathBuf","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::num::NonZeroU32","std::option::Option","std::num::NonZeroI64","std::collections::HashSet","std::sync::atomic::AtomicI64","std::boxed::Box","std::time::Duration","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::net::SocketAddr","std::cell::RefCell","std::time::SystemTime","std::sync::Mutex","std::num::NonZeroIsize","std::collections::Bound","std::cell::Cell","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::collections::HashMap","std::collections::BTreeSet"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","<T as std::borrow::ToOwned>","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::string::String","std::net::IpAddr","std::num::NonZeroI32","std::num::NonZeroI128","std::cell::RefCell","std::option::Option","std::rc::Rc","std::num::NonZeroUsize","std::net::SocketAddr","std::net::SocketAddrV6","std::net::Ipv4Addr","std::marker::PhantomData","std::net::Ipv6Addr","std::num::NonZeroI8","std::num::NonZeroU64","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroI16","std::ffi::CString","std::num::NonZeroU8","std::time::SystemTime","std::sync::Arc","std::path::PathBuf"],"V":["std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::sync::Mutex","std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroU32","std::num::NonZeroI128","std::collections::BTreeSet","std::option::Option","std::sync::atomic::AtomicI64","std::collections::Bound","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::num::NonZeroI64","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::result::Result","std::num::NonZeroUsize","std::rc::Rc","std::collections::BinaryHeap","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::string::String","std::cell::RefCell","std::sync::Arc","std::collections::HashSet","std::num::NonZeroI32","std::num::NonZeroU128","std::cell::Cell","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::borrow::Cow","std::num::NonZeroI8","std::num::NonZeroI16","std::net::Ipv6Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::boxed::Box","std::collections::HashMap","std::sync::RwLock","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::vec::Vec","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::ffi::CString","std::marker::PhantomData","std::ops::Range"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU128","std::sync::Arc","std::option::Option","std::num::NonZeroU8","std::net::SocketAddr","std::num::NonZeroI64","std::time::Duration","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroIsize","std::cell::Cell","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroI16","std::net::SocketAddrV4","std::net::IpAddr","std::num::NonZeroU16","std::time::SystemTime"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU16","std::ffi::CString","std::rc::Rc","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroI32","std::num::NonZeroUsize","std::num::NonZeroU128","std::num::NonZeroI64","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroIsize","std::option::Option","std::path::PathBuf","std::sync::Arc","std::net::IpAddr","std::num::NonZeroI8","std::num::NonZeroU64","std::cell::RefCell","std::num::NonZeroU8","std::net::SocketAddr","std::time::SystemTime","std::string::String","std::num::NonZeroU32"]},"std::collections::Bound":{"T":["std::num::NonZeroU64","std::rc::Rc","std::collections::HashMap","std::collections::BTreeSet","std::borrow::Cow","std::time::SystemTime","std::num::NonZeroU128","std::collections::BinaryHeap","std::result::Result","std::collections::Bound","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::net::SocketAddrV4","std::num::NonZeroU16","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::num::NonZeroUsize","std::collections::VecDeque","std::sync::RwLock","std::num::NonZeroI64","std::time::Duration","std::net::IpAddr","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::num::NonZeroI16","std::num::NonZeroI8","std::vec::Vec","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::cell::Cell","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::option::Option","std::string::String","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::boxed::Box","std::sync::Mutex","std::ops::Range","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::ffi::CString","std::num::NonZeroI32","std::sync::Arc","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::collections::HashSet","std::path::PathBuf","std::sync::atomic::AtomicU32","std::net::Ipv6Addr"]},"std::collections::HashMap":{"K":["std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroI32","std::num::NonZeroI128","std::net::Ipv6Addr","std::rc::Rc","std::net::SocketAddrV4","std::string::String","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroI8","std::path::PathBuf","std::net::SocketAddr","std::num::NonZeroIsize","std::num::NonZeroI64","std::net::SocketAddrV6","std::marker::PhantomData","std::num::NonZeroU16","std::num::NonZeroU8","std::net::Ipv4Addr","std::num::NonZeroI16","std::time::Duration"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::ops::RangeInclusive","std::collections::BTreeMap","std::num::NonZeroI128","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::option::Option","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::time::Duration","std::num::NonZeroIsize","std::borrow::Cow","std::cell::RefCell","std::collections::VecDeque","std::net::IpAddr","std::sync::atomic::AtomicU32","std::collections::Bound","std::num::NonZeroI8","std::num::NonZeroU16","std::result::Result","std::boxed::Box","std::sync::atomic::AtomicU16","std::cell::Cell","std::ffi::CString","std::rc::Rc","std::time::SystemTime","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::marker::PhantomData","std::sync::Arc","std::num::NonZeroU64","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::collections::HashMap","std::num::NonZeroU8","std::collections::BTreeSet","std::num::NonZeroI64","std::string::String","std::net::Ipv4Addr","std::sync::RwLock","std::collections::HashSet","std::ops::Range","std::sync::atomic::AtomicIsize","std::vec::Vec","std::net::SocketAddrV4","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::path::PathBuf","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::sync::Mutex"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI8","std::num::NonZeroU8","std::ffi::CString","std::net::SocketAddrV4","std::num::NonZeroI16","std::num::NonZeroU16","std::num::NonZeroU128","std::rc::Rc","std::collections::Bound","std::time::SystemTime","std::string::String","std::path::PathBuf","std::marker::PhantomData","std::num::NonZeroU64","std::net::IpAddr","std::net::Ipv6Addr","std::option::Option"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::sync::atomic::AtomicIsize","std::boxed::Box","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::net::Ipv4Addr","std::collections::BTreeMap","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroU8","std::num::NonZeroU32","std::sync::RwLock","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::Bound","std::sync::Mutex","std::collections::HashMap","std::num::NonZeroI16","std::num::NonZeroU16","std::net::SocketAddr","std::option::Option","std::string::String","std::rc::Rc","std::cell::Cell","std::ffi::CString","std::borrow::Cow","std::collections::BinaryHeap","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::collections::BTreeSet","std::net::SocketAddrV6","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::result::Result","std::sync::atomic::AtomicU16","std::path::PathBuf","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::cell::RefCell","std::net::IpAddr","std::ops::Range","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::vec::Vec","std::num::NonZeroI128","std::time::Duration","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::collections::HashSet","std::num::NonZeroUsize"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::rc::Rc","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::num::NonZeroI16","std::ffi::CString","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::ops::RangeInclusive","std::collections::BinaryHeap","std::collections::HashMap","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::option::Option","std::sync::Mutex","std::num::NonZeroUsize","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::num::NonZeroU8","std::boxed::Box","std::sync::atomic::AtomicI64","std::time::SystemTime","std::num::NonZeroIsize","std::collections::BTreeSet","std::marker::PhantomData","std::net::SocketAddr","std::path::PathBuf","std::net::SocketAddrV4","std::time::Duration","std::sync::RwLock","std::vec::Vec","std::sync::atomic::AtomicU8","std::collections::HashSet","std::cell::RefCell","std::cell::Cell","std::num::NonZeroU32","std::result::Result","std::num::NonZeroI8","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::net::IpAddr","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::net::SocketAddrV6","std::sync::Arc","std::ops::Range","std::string::String"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::vec::Vec","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::ffi::CString","std::boxed::Box","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::string::String","std::result::Result","std::num::NonZeroI16","std::option::Option","std::num::NonZeroI128","std::collections::HashSet","std::num::NonZeroI64","std::num::NonZeroU8","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::marker::PhantomData","std::sync::RwLock","std::time::SystemTime","std::cell::Cell","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::num::NonZeroUsize","std::net::SocketAddrV4","std::net::Ipv6Addr","std::collections::BTreeMap","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::path::PathBuf","std::num::NonZeroU16","std::net::SocketAddrV6","std::collections::HashMap","std::borrow::Cow","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::rc::Rc","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::cell::RefCell","std::ops::RangeInclusive","std::ops::Range","std::sync::Mutex","std::num::NonZeroI32","std::sync::Arc","std::time::Duration","std::collections::Bound"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::ops::Range","std::collections::BinaryHeap","std::collections::Bound","std::net::Ipv6Addr","std::rc::Rc","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::sync::Arc","std::vec::Vec","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::result::Result","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::num::NonZeroU128","std::marker::PhantomData","std::option::Option","std::boxed::Box","std::time::SystemTime","std::num::NonZeroI16","std::cell::Cell","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::path::PathBuf","std::net::Ipv4Addr","std::collections::BTreeMap","std::ffi::CString","std::net::IpAddr","std::cell::RefCell","std::sync::atomic::AtomicI8","std::sync::Mutex","std::num::NonZeroI128","std::string::String","std::num::NonZeroU8","std::sync::RwLock","std::num::NonZeroU64","std::num::NonZeroUsize","std::num::NonZeroU16","std::ops::RangeInclusive","std::num::NonZeroIsize","std::num::NonZeroI8","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::num::NonZeroI32","std::time::Duration"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D)>::borrow_decode(p0);
+<(A, B, C, D)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C, D)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D)>::decode":{"A":["std::marker::Sized","de::Decode"],"B":["de::Decode","std::marker::Sized"],"C":["de::Decode","std::marker::Sized"],"D":["de::Decode","std::marker::Sized"],"DE":["std::marker::Sized","de::Decoder"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["std::cmp::Ord","enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"],"V":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["enc::Encode","std::marker::Sized","std::cmp::Ord","de::Decode","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::Decode","std::cmp::Ord","enc::Encode","de::BorrowDecode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::marker::Sized","enc::Encode","std::cmp::Eq","std::hash::Hash","de::Decode","de::BorrowDecode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::cmp::Eq","std::hash::Hash","de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::BigEndian","config::Limit","config::NoLimit","config::Fixint","config::Varint","config::Configuration","std::clone::impls::<impl std::clone::Clone for &T>"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D)>::decode":{"A":["std::num::NonZeroI64","std::num::NonZeroU16","std::num::NonZeroU32","std::cell::RefCell","std::vec::Vec","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::option::Option","std::sync::Arc","std::marker::PhantomData","std::borrow::Cow","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::boxed::Box","std::collections::BTreeMap","std::result::Result","std::path::PathBuf","std::num::NonZeroU128","std::ops::RangeInclusive","std::net::SocketAddrV4","std::sync::RwLock","std::ffi::CString","std::sync::Mutex","std::net::Ipv4Addr","std::rc::Rc","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::string::String","std::num::NonZeroI16","std::time::Duration","std::net::SocketAddrV6","std::num::NonZeroU64","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::sync::atomic::AtomicI32","std::collections::HashSet","std::collections::Bound","std::collections::BinaryHeap","std::num::NonZeroIsize","std::net::Ipv6Addr","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::ops::Range","std::sync::atomic::AtomicU64"],"B":["std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::string::String","std::path::PathBuf","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::time::Duration","std::marker::PhantomData","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::net::Ipv4Addr","std::sync::Arc","std::num::NonZeroU32","std::net::Ipv6Addr","std::vec::Vec","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::net::IpAddr","std::sync::Mutex","std::collections::HashSet","std::boxed::Box","std::cell::RefCell","std::cell::Cell","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::time::SystemTime","std::num::NonZeroI32","std::ffi::CString","std::net::SocketAddrV4","std::net::SocketAddr","std::ops::Range","std::ops::RangeInclusive","std::rc::Rc","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::option::Option","std::num::NonZeroI16","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::collections::HashMap","std::collections::VecDeque","std::num::NonZeroIsize","std::sync::RwLock","std::num::NonZeroU8","std::collections::Bound","std::result::Result","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::num::NonZeroI8","std::collections::BTreeSet","std::borrow::Cow","std::sync::atomic::AtomicIsize"],"C":["std::sync::Arc","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::num::NonZeroU8","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::collections::HashMap","std::result::Result","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::sync::Mutex","std::rc::Rc","std::collections::BTreeSet","std::num::NonZeroU32","std::num::NonZeroI64","std::num::NonZeroU16","std::net::Ipv4Addr","std::cell::Cell","std::collections::HashSet","std::sync::atomic::AtomicU64","std::path::PathBuf","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::string::String","std::num::NonZeroI16","std::option::Option","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::sync::RwLock","std::collections::Bound","std::num::NonZeroU64","std::borrow::Cow","std::num::NonZeroI32","std::boxed::Box","std::cell::RefCell","std::collections::VecDeque","std::vec::Vec","std::sync::atomic::AtomicU32","std::time::SystemTime","std::ffi::CString","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::net::IpAddr","std::ops::Range","std::num::NonZeroU128","std::marker::PhantomData","std::time::Duration","std::collections::BinaryHeap","std::collections::BTreeMap"],"D":["std::collections::HashMap","std::vec::Vec","std::sync::atomic::AtomicUsize","std::collections::Bound","std::time::SystemTime","std::sync::atomic::AtomicI16","std::sync::Mutex","std::option::Option","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::num::NonZeroU32","std::num::NonZeroI16","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::string::String","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::collections::BTreeSet","std::marker::PhantomData","std::cell::RefCell","std::net::SocketAddrV6","std::time::Duration","std::boxed::Box","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::num::NonZeroI128","std::num::NonZeroI64","std::net::IpAddr","std::sync::RwLock","std::num::NonZeroUsize","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::cell::Cell","std::num::NonZeroIsize","std::num::NonZeroI32","std::num::NonZeroI8","std::sync::Arc","std::path::PathBuf","std::result::Result","std::num::NonZeroU8","std::num::NonZeroU64","std::ops::Range","std::net::SocketAddrV4","std::borrow::Cow","std::ffi::CString","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::rc::Rc","std::collections::HashSet"],"DE":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroI16","std::option::Option","std::sync::Arc","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroU8","std::cell::RefCell","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroU64","std::path::PathBuf","std::num::NonZeroI8","std::rc::Rc","std::time::Duration","std::num::NonZeroU32","std::num::NonZeroUsize","std::string::String","std::num::NonZeroU16","std::time::SystemTime","std::net::Ipv4Addr","std::net::SocketAddrV4"],"V":["std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::vec::Vec","std::borrow::Cow","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::collections::HashSet","std::num::NonZeroU128","std::num::NonZeroI64","std::num::NonZeroUsize","std::marker::PhantomData","std::net::Ipv4Addr","std::collections::Bound","std::net::SocketAddrV6","std::ops::Range","std::cell::RefCell","std::rc::Rc","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::boxed::Box","std::num::NonZeroI16","std::result::Result","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::net::IpAddr","std::num::NonZeroI8","std::path::PathBuf","std::num::NonZeroU16","std::num::NonZeroIsize","std::cell::Cell","std::collections::HashMap","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroU32","std::net::SocketAddrV4","std::sync::Arc","std::time::Duration","std::ffi::CString","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::sync::RwLock","std::collections::BTreeSet","std::string::String","std::sync::Mutex","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::ops::RangeInclusive"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::net::SocketAddrV4","std::num::NonZeroI64","std::cell::RefCell","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroIsize","std::num::NonZeroU32","std::ffi::CString","std::option::Option","std::string::String","std::net::Ipv4Addr","std::num::NonZeroU8","std::net::IpAddr","std::num::NonZeroI32","std::net::SocketAddr","std::cell::Cell","std::rc::Rc","std::num::NonZeroI128","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroU64"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI64","std::num::NonZeroI8","std::num::NonZeroI128","std::net::SocketAddrV6","std::num::NonZeroI32","std::time::Duration","std::net::IpAddr","std::sync::Arc","std::marker::PhantomData","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroIsize","std::num::NonZeroU8","std::option::Option","std::num::NonZeroI16","std::path::PathBuf","std::ffi::CString","std::cell::Cell","std::rc::Rc","std::net::SocketAddr","std::num::NonZeroU16","std::net::Ipv6Addr"]},"std::collections::Bound":{"T":["std::ffi::CString","std::sync::Mutex","std::collections::HashMap","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::ops::Range","std::option::Option","std::cell::Cell","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::num::NonZeroU32","std::num::NonZeroI64","std::net::SocketAddrV4","std::time::Duration","std::sync::RwLock","std::borrow::Cow","std::net::IpAddr","std::num::NonZeroU8","std::num::NonZeroI16","std::num::NonZeroIsize","std::collections::BinaryHeap","std::collections::Bound","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::result::Result","std::collections::BTreeSet","std::num::NonZeroI8","std::ops::RangeInclusive","std::num::NonZeroUsize","std::num::NonZeroI32","std::string::String","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::boxed::Box","std::num::NonZeroU16","std::rc::Rc","std::path::PathBuf","std::time::SystemTime","std::cell::RefCell","std::vec::Vec","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::net::Ipv4Addr","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::Arc","std::collections::HashSet","std::collections::VecDeque"]},"std::collections::HashMap":{"K":["std::num::NonZeroUsize","std::num::NonZeroI16","std::net::SocketAddr","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroU64","std::collections::Bound","std::net::IpAddr","std::option::Option","std::num::NonZeroU128","std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroI32","std::net::SocketAddrV4","std::string::String"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicI32","std::time::Duration","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::sync::Mutex","std::cell::Cell","std::num::NonZeroI128","std::rc::Rc","std::marker::PhantomData","std::collections::Bound","std::option::Option","std::ffi::CString","std::net::SocketAddr","std::vec::Vec","std::sync::atomic::AtomicU32","std::boxed::Box","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::result::Result","std::num::NonZeroU32","std::num::NonZeroIsize","std::sync::Arc","std::num::NonZeroI64","std::time::SystemTime","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::num::NonZeroI32","std::net::Ipv4Addr","std::num::NonZeroU128","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroI8","std::borrow::Cow","std::collections::BinaryHeap","std::collections::HashSet","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::cell::RefCell","std::collections::HashMap","std::ops::RangeInclusive","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::num::NonZeroI16","std::string::String","std::sync::RwLock","std::ops::Range","std::num::NonZeroU64","std::collections::BTreeMap"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI64","std::num::NonZeroU128","std::net::SocketAddrV6","std::path::PathBuf","std::num::NonZeroI32","std::num::NonZeroU8","std::collections::Bound","std::num::NonZeroI8","std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroU64","std::time::Duration","std::net::Ipv4Addr","std::ffi::CString","std::net::SocketAddr","std::net::SocketAddrV4","std::net::IpAddr"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::sync::Mutex","std::num::NonZeroI8","std::sync::atomic::AtomicUsize","std::cell::Cell","std::num::NonZeroIsize","std::borrow::Cow","std::num::NonZeroI64","std::cell::RefCell","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::string::String","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::rc::Rc","std::collections::HashMap","std::net::SocketAddrV6","std::path::PathBuf","std::net::Ipv6Addr","std::ffi::CString","std::ops::RangeInclusive","std::time::SystemTime","std::collections::VecDeque","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::collections::HashSet","std::result::Result","std::collections::Bound","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::vec::Vec","std::num::NonZeroU128","std::net::IpAddr","std::net::SocketAddrV4","std::time::Duration","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::ops::Range","std::sync::RwLock","std::num::NonZeroUsize","std::boxed::Box","std::option::Option","std::collections::BTreeSet","std::net::Ipv4Addr","std::num::NonZeroI128","std::sync::Arc","std::num::NonZeroU8","std::num::NonZeroU64"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::Bound","std::num::NonZeroI8","std::num::NonZeroUsize","std::rc::Rc","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::net::IpAddr","std::collections::VecDeque","std::net::SocketAddrV4","std::net::SocketAddr","std::collections::BTreeSet","std::net::SocketAddrV6","std::result::Result","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::string::String","std::borrow::Cow","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::num::NonZeroU64","std::path::PathBuf","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::cell::Cell","std::vec::Vec","std::sync::Arc","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::cell::RefCell","std::num::NonZeroU32","std::collections::HashMap","std::net::Ipv4Addr","std::boxed::Box","std::sync::Mutex","std::num::NonZeroI128","std::ops::RangeInclusive","std::num::NonZeroI32","std::num::NonZeroU128","std::time::SystemTime","std::ffi::CString","std::option::Option","std::sync::atomic::AtomicI8","std::collections::HashSet","std::ops::Range","std::collections::BinaryHeap","std::time::Duration"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicI32","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::ffi::CString","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::vec::Vec","std::sync::Mutex","std::borrow::Cow","std::net::SocketAddrV4","std::result::Result","std::option::Option","std::sync::RwLock","std::num::NonZeroI32","std::cell::Cell","std::sync::atomic::AtomicU16","std::net::IpAddr","std::sync::Arc","std::net::SocketAddr","std::collections::VecDeque","std::num::NonZeroI16","std::collections::Bound","std::cell::RefCell","std::boxed::Box","std::num::NonZeroUsize","std::collections::HashSet","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::time::SystemTime","std::num::NonZeroIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::path::PathBuf","std::num::NonZeroU64","std::num::NonZeroI8","std::collections::HashMap","std::marker::PhantomData","std::ops::RangeInclusive","std::collections::BTreeMap","std::string::String","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::time::Duration","std::ops::Range","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::sync::atomic::AtomicI64"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::num::NonZeroIsize","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::net::Ipv4Addr","std::num::NonZeroU16","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::vec::Vec","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::num::NonZeroU128","std::result::Result","std::collections::VecDeque","std::collections::Bound","std::cell::RefCell","std::path::PathBuf","std::collections::BTreeMap","std::collections::BinaryHeap","std::num::NonZeroI8","std::net::SocketAddrV4","std::ops::RangeInclusive","std::time::SystemTime","std::cell::Cell","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::time::Duration","std::borrow::Cow","std::collections::BTreeSet","std::sync::RwLock","std::net::SocketAddr","std::ffi::CString","std::string::String","std::rc::Rc","std::sync::Mutex","std::net::Ipv6Addr","std::option::Option","std::net::IpAddr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::boxed::Box","std::collections::HashMap","std::ops::Range","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::marker::PhantomData","std::sync::Arc","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::num::NonZeroU8","std::sync::atomic::AtomicI16"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C, D)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C, D)>::decode(p0);
+<(A, B, C, D)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E)>::borrow_decode":{"A":["std::marker::Sized","de::BorrowDecode"],"B":["std::marker::Sized","de::BorrowDecode"],"BD":["de::BorrowDecoder","std::marker::Sized"],"C":["std::marker::Sized","de::BorrowDecode"],"D":["std::marker::Sized","de::BorrowDecode"],"E":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["de::Decode","de::BorrowDecode","std::cmp::Ord","std::marker::Sized","enc::Encode"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["std::cmp::Ord","enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::Bound":{"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::collections::HashMap":{"K":["std::marker::Sized","enc::Encode","de::Decode","std::cmp::Eq","de::BorrowDecode","std::hash::Hash"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::hash::Hash","std::marker::Sized","de::Decode","std::cmp::Eq","de::BorrowDecode","enc::Encode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::BigEndian","config::Varint","config::NoLimit","config::Fixint","config::Configuration","config::Limit","config::LittleEndian","std::clone::impls::<impl std::clone::Clone for *const T>"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E)>::borrow_decode":{"A":["std::time::Duration","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::string::String","std::num::NonZeroU16","std::time::SystemTime","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::net::Ipv6Addr","std::collections::Bound","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::sync::Arc","std::num::NonZeroI64","std::collections::HashSet","std::sync::Mutex","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroI16","std::net::SocketAddrV4","std::collections::VecDeque","std::borrow::Cow","std::collections::BTreeSet","std::cell::Cell","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::num::NonZeroIsize","std::option::Option","std::path::PathBuf","std::num::NonZeroUsize","std::sync::RwLock","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::cell::RefCell","std::ops::RangeInclusive","std::net::IpAddr","std::ops::Range","std::num::NonZeroI128","std::rc::Rc","std::num::NonZeroU64","std::result::Result","std::ffi::CString","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::collections::HashMap","std::net::Ipv4Addr","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::vec::Vec","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::boxed::Box","std::num::NonZeroU128","std::sync::atomic::AtomicU32"],"B":["std::time::SystemTime","std::net::Ipv6Addr","std::option::Option","std::num::NonZeroU8","std::net::SocketAddrV4","std::collections::VecDeque","std::num::NonZeroU16","std::ops::Range","std::borrow::Cow","std::num::NonZeroI16","std::net::SocketAddr","std::collections::HashMap","std::collections::Bound","std::sync::atomic::AtomicI32","std::path::PathBuf","std::sync::Arc","std::num::NonZeroU32","std::collections::BTreeSet","std::boxed::Box","std::ops::RangeInclusive","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::time::Duration","std::net::SocketAddrV6","std::string::String","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::collections::HashSet","std::sync::Mutex","std::vec::Vec","std::sync::RwLock","std::ffi::CString","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::net::IpAddr","std::sync::atomic::AtomicBool","std::result::Result","std::num::NonZeroIsize","std::rc::Rc","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::num::NonZeroU64","std::num::NonZeroUsize","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::cell::Cell"],"BD":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"C":["std::rc::Rc","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::cell::RefCell","std::collections::VecDeque","std::collections::BinaryHeap","std::net::IpAddr","std::num::NonZeroI64","std::collections::Bound","std::collections::BTreeSet","std::net::SocketAddrV4","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::num::NonZeroU64","std::time::SystemTime","std::sync::Mutex","std::sync::atomic::AtomicI16","std::result::Result","std::collections::HashMap","std::ffi::CString","std::vec::Vec","std::ops::Range","std::borrow::Cow","std::collections::BTreeMap","std::path::PathBuf","std::collections::HashSet","std::net::Ipv6Addr","std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroIsize","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::sync::RwLock","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::sync::Arc","std::time::Duration","std::num::NonZeroU16","std::boxed::Box","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::option::Option","std::net::Ipv4Addr","std::net::SocketAddrV6","std::num::NonZeroI8","std::string::String"],"D":["std::num::NonZeroI8","std::net::Ipv6Addr","std::num::NonZeroUsize","std::sync::Arc","std::marker::PhantomData","std::ffi::CString","std::num::NonZeroI64","std::result::Result","std::cell::Cell","std::sync::atomic::AtomicI8","std::rc::Rc","std::collections::BinaryHeap","std::ops::RangeInclusive","std::collections::VecDeque","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::cell::RefCell","std::net::SocketAddrV6","std::sync::RwLock","std::vec::Vec","std::sync::atomic::AtomicU16","std::boxed::Box","std::collections::HashSet","std::num::NonZeroU128","std::num::NonZeroI128","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::collections::HashMap","std::borrow::Cow","std::num::NonZeroIsize","std::net::SocketAddrV4","std::path::PathBuf","std::collections::BTreeSet","std::num::NonZeroU8","std::num::NonZeroU32","std::net::IpAddr","std::collections::Bound","std::sync::atomic::AtomicU32","std::sync::Mutex","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::net::Ipv4Addr","std::option::Option","std::string::String","std::ops::Range","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::time::Duration","std::num::NonZeroU16"],"E":["std::sync::atomic::AtomicI32","std::result::Result","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::cell::Cell","std::num::NonZeroI64","std::boxed::Box","std::ops::RangeInclusive","std::net::SocketAddrV6","std::net::Ipv4Addr","std::time::Duration","std::sync::atomic::AtomicU16","std::sync::Arc","std::num::NonZeroUsize","std::cell::RefCell","std::num::NonZeroU64","std::net::SocketAddr","std::time::SystemTime","std::sync::atomic::AtomicI8","std::net::IpAddr","std::collections::Bound","std::collections::HashMap","std::net::Ipv6Addr","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::sync::RwLock","std::num::NonZeroI128","std::num::NonZeroU8","std::collections::HashSet","std::num::NonZeroU16","std::rc::Rc","std::ffi::CString","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::marker::PhantomData","std::vec::Vec","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::option::Option","std::sync::Mutex","std::num::NonZeroI16","std::num::NonZeroU128","std::net::SocketAddrV4","std::string::String","std::path::PathBuf","std::num::NonZeroU32","std::num::NonZeroIsize","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::sync::atomic::AtomicBool","std::ops::Range","std::collections::BTreeMap"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","<T as std::borrow::ToOwned>","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI128","std::num::NonZeroU128","std::rc::Rc","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroIsize","std::num::NonZeroU16","std::marker::PhantomData","std::num::NonZeroI32","std::net::Ipv6Addr","std::net::SocketAddrV4","std::num::NonZeroUsize","std::path::PathBuf","std::cell::Cell","std::ffi::CString","std::cell::RefCell","std::num::NonZeroU64","std::num::NonZeroI16","std::net::SocketAddr","std::net::SocketAddrV6","std::net::Ipv4Addr"],"V":["std::num::NonZeroI16","std::num::NonZeroU16","std::collections::HashMap","std::option::Option","std::string::String","std::ops::RangeInclusive","std::boxed::Box","std::sync::Arc","std::collections::VecDeque","std::time::SystemTime","std::result::Result","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::net::SocketAddrV4","std::collections::HashSet","std::ops::Range","std::net::Ipv6Addr","std::cell::RefCell","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::net::Ipv4Addr","std::collections::BTreeSet","std::collections::Bound","std::marker::PhantomData","std::ffi::CString","std::sync::atomic::AtomicI32","std::vec::Vec","std::num::NonZeroI128","std::time::Duration","std::cell::Cell","std::sync::RwLock","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::net::IpAddr","std::sync::atomic::AtomicBool","std::rc::Rc","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::net::SocketAddrV6","std::collections::BinaryHeap","std::num::NonZeroU128","std::path::PathBuf","std::num::NonZeroU64","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::num::NonZeroU8","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI16","std::option::Option","std::ffi::CString","std::num::NonZeroI32","std::num::NonZeroU64","std::num::NonZeroUsize","std::net::IpAddr","std::num::NonZeroU16","std::num::NonZeroI64","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroI128","std::path::PathBuf","std::num::NonZeroU8","std::net::SocketAddrV4","std::net::Ipv6Addr","std::net::SocketAddrV6","std::num::NonZeroIsize","std::num::NonZeroI8","std::time::Duration","std::num::NonZeroU128","std::marker::PhantomData","std::net::Ipv4Addr","std::cell::Cell"]},"std::collections::BinaryHeap":{"T":["std::string::String","std::num::NonZeroI32","std::cell::Cell","std::net::Ipv4Addr","std::num::NonZeroU128","std::num::NonZeroU8","std::ffi::CString","std::option::Option","std::rc::Rc","std::net::SocketAddrV6","std::time::Duration","std::cell::RefCell","std::num::NonZeroU32","std::num::NonZeroI64","std::num::NonZeroUsize","std::time::SystemTime","std::net::SocketAddr","std::net::Ipv6Addr","std::path::PathBuf","std::num::NonZeroI16","std::num::NonZeroI128","std::net::IpAddr"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicIsize","std::time::SystemTime","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::collections::HashSet","std::num::NonZeroU128","std::collections::BinaryHeap","std::string::String","std::num::NonZeroUsize","std::option::Option","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::net::SocketAddr","std::collections::HashMap","std::ffi::CString","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::num::NonZeroI64","std::sync::Arc","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::sync::Mutex","std::cell::Cell","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::marker::PhantomData","std::time::Duration","std::ops::RangeInclusive","std::net::SocketAddrV6","std::boxed::Box","std::result::Result","std::collections::Bound","std::sync::atomic::AtomicU8","std::net::IpAddr","std::path::PathBuf","std::collections::BTreeSet","std::sync::atomic::AtomicI32","std::borrow::Cow","std::collections::BTreeMap","std::num::NonZeroI8","std::num::NonZeroI128","std::num::NonZeroU8","std::net::Ipv4Addr","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::ops::Range","std::rc::Rc","std::num::NonZeroI32","std::num::NonZeroI16","std::cell::RefCell","std::sync::RwLock","std::vec::Vec","std::num::NonZeroU32"]},"std::collections::HashMap":{"K":["std::num::NonZeroI128","std::num::NonZeroI8","std::num::NonZeroU32","std::net::SocketAddr","std::option::Option","std::num::NonZeroUsize","std::net::Ipv6Addr","std::sync::Arc","std::num::NonZeroI64","std::num::NonZeroIsize","std::path::PathBuf","std::num::NonZeroU8","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroI16","std::net::IpAddr","std::num::NonZeroU64"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::net::SocketAddrV4","std::net::SocketAddrV6","std::num::NonZeroI64","std::num::NonZeroU64","std::sync::RwLock","std::num::NonZeroI128","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::cell::Cell","std::path::PathBuf","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::ops::Range","std::string::String","std::num::NonZeroUsize","std::boxed::Box","std::collections::Bound","std::num::NonZeroI32","std::collections::BinaryHeap","std::num::NonZeroU128","std::sync::Mutex","std::rc::Rc","std::net::SocketAddr","std::marker::PhantomData","std::option::Option","std::num::NonZeroU8","std::collections::HashSet","std::result::Result","std::vec::Vec","std::sync::Arc","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::net::IpAddr","std::time::SystemTime","std::ops::RangeInclusive","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::cell::RefCell","std::borrow::Cow","std::time::Duration","std::collections::BTreeSet","std::collections::HashMap","std::num::NonZeroU32","std::ffi::CString","std::sync::atomic::AtomicI32","std::net::Ipv6Addr"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::path::PathBuf","std::num::NonZeroI8","std::net::SocketAddr","std::ffi::CString","std::net::SocketAddrV4","std::collections::Bound","std::time::Duration","std::string::String","std::marker::PhantomData","std::rc::Rc","std::sync::Arc","std::num::NonZeroIsize","std::num::NonZeroU128","std::num::NonZeroU64","std::num::NonZeroI32","std::num::NonZeroU16","std::num::NonZeroU32"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::collections::BTreeMap","std::option::Option","std::num::NonZeroI16","std::result::Result","std::time::SystemTime","std::string::String","std::time::Duration","std::sync::Arc","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::rc::Rc","std::net::IpAddr","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::ops::Range","std::ops::RangeInclusive","std::ffi::CString","std::net::SocketAddr","std::borrow::Cow","std::num::NonZeroU128","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::collections::Bound","std::sync::atomic::AtomicU16","std::cell::Cell","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::num::NonZeroU8","std::collections::BinaryHeap","std::net::Ipv6Addr","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::boxed::Box","std::num::NonZeroI64","std::cell::RefCell","std::collections::VecDeque","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::collections::HashSet","std::num::NonZeroU64","std::num::NonZeroUsize","std::sync::Mutex","std::num::NonZeroI128","std::vec::Vec","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::collections::HashMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::sync::RwLock"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::marker::PhantomData","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::ops::RangeInclusive","std::num::NonZeroI16","std::num::NonZeroU8","std::path::PathBuf","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::net::Ipv6Addr","std::ffi::CString","std::boxed::Box","std::net::SocketAddrV6","std::result::Result","std::borrow::Cow","std::sync::atomic::AtomicU64","std::vec::Vec","std::collections::HashSet","std::time::SystemTime","std::net::SocketAddrV4","std::collections::BinaryHeap","std::option::Option","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::collections::BTreeMap","std::ops::Range","std::collections::HashMap","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::sync::Arc","std::num::NonZeroUsize","std::cell::Cell","std::rc::Rc","std::sync::Mutex","std::net::IpAddr","std::num::NonZeroI32","std::num::NonZeroU16","std::string::String","std::num::NonZeroI8","std::time::Duration","std::cell::RefCell","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::num::NonZeroU64","std::num::NonZeroI128","std::collections::Bound"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicI64","std::collections::Bound","std::num::NonZeroUsize","std::ops::Range","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::num::NonZeroU16","std::string::String","std::sync::atomic::AtomicBool","std::boxed::Box","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::result::Result","std::collections::HashMap","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::net::SocketAddrV6","std::collections::VecDeque","std::num::NonZeroIsize","std::num::NonZeroI8","std::borrow::Cow","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::vec::Vec","std::num::NonZeroU128","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroI32","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::Arc","std::marker::PhantomData","std::num::NonZeroU64","std::cell::Cell","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::sync::Mutex","std::option::Option","std::collections::HashSet","std::sync::RwLock","std::collections::BinaryHeap","std::num::NonZeroU32","std::num::NonZeroU8","std::path::PathBuf","std::collections::BTreeMap","std::cell::RefCell","std::ffi::CString","std::rc::Rc","std::sync::atomic::AtomicI32","std::time::Duration","std::collections::BTreeSet","std::num::NonZeroI128","std::sync::atomic::AtomicU32"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::Arc","std::time::SystemTime","std::num::NonZeroU16","std::vec::Vec","std::num::NonZeroU32","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::borrow::Cow","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::sync::RwLock","std::cell::RefCell","std::collections::Bound","std::num::NonZeroU8","std::string::String","std::collections::BTreeMap","std::ffi::CString","std::ops::Range","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::result::Result","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::cell::Cell","std::ops::RangeInclusive","std::sync::Mutex","std::boxed::Box","std::num::NonZeroI128","std::option::Option","std::num::NonZeroI16","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroU64","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::rc::Rc","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::collections::HashSet","std::time::Duration","std::net::IpAddr","std::marker::PhantomData","std::net::SocketAddrV6"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E)>::borrow_decode(p0);
+<(A, B, C, D, E)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C, D, E)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E)>::decode":{"A":["std::marker::Sized","de::Decode"],"B":["std::marker::Sized","de::Decode"],"C":["std::marker::Sized","de::Decode"],"D":["std::marker::Sized","de::Decode"],"DE":["de::Decoder","std::marker::Sized"],"E":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"K":["de::BorrowDecode","de::Decode","enc::Encode","std::cmp::Ord","std::marker::Sized"],"V":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["std::cmp::Ord","enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","std::cmp::Ord","enc::Encode"]},"std::collections::Bound":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::HashMap":{"K":["std::marker::Sized","de::Decode","std::hash::Hash","de::BorrowDecode","enc::Encode","std::cmp::Eq"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["std::hash::Hash","enc::Encode","std::cmp::Eq","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Fixint","config::Limit","config::Varint","std::clone::impls::<impl std::clone::Clone for *mut T>","config::BigEndian","config::Configuration","config::LittleEndian"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E)>::decode":{"A":["std::result::Result","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::vec::Vec","std::num::NonZeroI64","std::num::NonZeroU8","std::ffi::CString","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::rc::Rc","std::path::PathBuf","std::time::Duration","std::net::SocketAddrV6","std::sync::RwLock","std::num::NonZeroI8","std::collections::BinaryHeap","std::num::NonZeroU128","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroI32","std::num::NonZeroIsize","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::cell::Cell","std::num::NonZeroU16","std::marker::PhantomData","std::collections::BTreeMap","std::num::NonZeroUsize","std::collections::HashMap","std::borrow::Cow","std::net::SocketAddr","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::sync::Arc","std::ops::Range","std::collections::Bound","std::option::Option","std::sync::atomic::AtomicU16","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::string::String","std::boxed::Box","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::sync::Mutex","std::net::Ipv4Addr","std::cell::RefCell","std::sync::atomic::AtomicI16","std::num::NonZeroI128"],"B":["std::borrow::Cow","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::sync::RwLock","std::collections::BTreeMap","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::net::SocketAddrV6","std::num::NonZeroI8","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::collections::HashMap","std::num::NonZeroI64","std::collections::HashSet","std::num::NonZeroU128","std::net::Ipv4Addr","std::rc::Rc","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::vec::Vec","std::ffi::CString","std::option::Option","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::time::Duration","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::time::SystemTime","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::result::Result","std::boxed::Box","std::num::NonZeroI32","std::collections::VecDeque","std::path::PathBuf","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::num::NonZeroU64","std::sync::Arc","std::num::NonZeroI16","std::string::String","std::ops::Range","std::cell::RefCell","std::net::IpAddr","std::cell::Cell","std::collections::BTreeSet","std::collections::Bound","std::sync::Mutex","std::net::Ipv6Addr"],"C":["std::net::Ipv4Addr","std::net::Ipv6Addr","std::borrow::Cow","std::num::NonZeroI32","std::num::NonZeroU64","std::num::NonZeroI16","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::num::NonZeroU128","std::time::SystemTime","std::sync::atomic::AtomicI16","std::collections::HashMap","std::net::SocketAddr","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::collections::BTreeSet","std::result::Result","std::time::Duration","std::marker::PhantomData","std::cell::Cell","std::sync::RwLock","std::sync::Mutex","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::string::String","std::sync::atomic::AtomicI64","std::boxed::Box","std::net::IpAddr","std::ops::RangeInclusive","std::cell::RefCell","std::path::PathBuf","std::vec::Vec","std::sync::Arc","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::rc::Rc","std::num::NonZeroU16","std::num::NonZeroI128","std::collections::BTreeMap","std::num::NonZeroI8","std::collections::HashSet","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::collections::BinaryHeap","std::ops::Range","std::ffi::CString","std::collections::Bound","std::option::Option","std::net::SocketAddrV6"],"D":["std::sync::atomic::AtomicI64","std::sync::Arc","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::cell::RefCell","std::collections::HashSet","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::collections::HashMap","std::collections::BTreeMap","std::sync::Mutex","std::sync::atomic::AtomicI32","std::boxed::Box","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::rc::Rc","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::net::Ipv4Addr","std::ops::RangeInclusive","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::time::SystemTime","std::ops::Range","std::collections::VecDeque","std::num::NonZeroU128","std::time::Duration","std::num::NonZeroU16","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::string::String","std::num::NonZeroUsize","std::num::NonZeroU8","std::option::Option","std::ffi::CString","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::collections::Bound","std::cell::Cell","std::num::NonZeroI64","std::result::Result","std::path::PathBuf","std::vec::Vec","std::num::NonZeroIsize","std::sync::RwLock","std::borrow::Cow","std::net::SocketAddr","std::net::IpAddr","std::num::NonZeroI16","std::num::NonZeroI32"],"DE":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"E":["std::cell::RefCell","std::num::NonZeroU128","std::net::IpAddr","std::num::NonZeroU8","std::collections::Bound","std::collections::BTreeSet","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::collections::BTreeMap","std::net::Ipv4Addr","std::collections::BinaryHeap","std::num::NonZeroI64","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::marker::PhantomData","std::ops::Range","std::result::Result","std::sync::Arc","std::net::SocketAddrV4","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::boxed::Box","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::num::NonZeroI8","std::vec::Vec","std::time::SystemTime","std::collections::VecDeque","std::collections::HashMap","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::time::Duration","std::num::NonZeroU32","std::net::SocketAddrV6","std::sync::RwLock","std::ffi::CString","std::path::PathBuf","std::rc::Rc","std::num::NonZeroU16","std::sync::Mutex","std::borrow::Cow","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::cell::Cell","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::option::Option","std::string::String","std::sync::atomic::AtomicI8"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::ffi::CStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::time::Duration","std::string::String","std::num::NonZeroI32","std::ffi::CString","std::num::NonZeroU128","std::net::IpAddr","std::sync::Arc","std::num::NonZeroI16","std::path::PathBuf","std::time::SystemTime","std::num::NonZeroU64","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroU32","std::num::NonZeroUsize","std::net::Ipv6Addr","std::cell::RefCell","std::net::SocketAddr","std::option::Option","std::rc::Rc","std::num::NonZeroI128","std::num::NonZeroIsize","std::net::SocketAddrV4","std::cell::Cell","std::num::NonZeroI64","std::num::NonZeroU16"],"V":["std::ops::Range","std::net::SocketAddrV4","std::path::PathBuf","std::ffi::CString","std::sync::atomic::AtomicU64","std::option::Option","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::num::NonZeroI8","std::num::NonZeroI16","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::num::NonZeroU128","std::vec::Vec","std::result::Result","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::sync::Mutex","std::collections::VecDeque","std::cell::RefCell","std::rc::Rc","std::net::SocketAddr","std::collections::HashSet","std::num::NonZeroI32","std::net::Ipv4Addr","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::time::SystemTime","std::marker::PhantomData","std::sync::Arc","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::cell::Cell","std::boxed::Box","std::borrow::Cow","std::num::NonZeroIsize","std::num::NonZeroU64","std::time::Duration","std::num::NonZeroI64","std::net::IpAddr","std::sync::RwLock","std::collections::HashMap","std::sync::atomic::AtomicU16","std::collections::Bound","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::net::Ipv6Addr","std::net::SocketAddrV6","std::string::String","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::cell::Cell","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroI16","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroU64","std::net::Ipv6Addr","std::string::String","std::rc::Rc","std::time::SystemTime","std::num::NonZeroI128","std::net::Ipv4Addr","std::net::SocketAddrV6","std::time::Duration","std::ffi::CString","std::cell::RefCell","std::num::NonZeroU128"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroIsize","std::num::NonZeroI128","std::time::Duration","std::net::Ipv6Addr","std::sync::Arc","std::num::NonZeroI64","std::net::SocketAddr","std::marker::PhantomData","std::option::Option","std::net::IpAddr","std::num::NonZeroU32","std::string::String","std::cell::Cell","std::net::Ipv4Addr","std::num::NonZeroUsize","std::cell::RefCell","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroU16","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroI16","std::num::NonZeroU8","std::num::NonZeroI32"]},"std::collections::Bound":{"T":["std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::rc::Rc","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::time::Duration","std::marker::PhantomData","std::collections::BinaryHeap","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::num::NonZeroI128","std::collections::BTreeSet","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::string::String","std::time::SystemTime","std::borrow::Cow","std::option::Option","std::net::SocketAddrV6","std::ffi::CString","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::num::NonZeroIsize","std::result::Result","std::num::NonZeroI32","std::cell::RefCell","std::collections::Bound","std::net::SocketAddrV4","std::net::Ipv4Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::sync::Arc","std::net::Ipv6Addr","std::sync::Mutex","std::vec::Vec","std::num::NonZeroU32","std::boxed::Box","std::num::NonZeroUsize","std::collections::HashSet","std::sync::atomic::AtomicI64","std::sync::RwLock","std::collections::VecDeque","std::ops::Range","std::collections::HashMap","std::path::PathBuf","std::cell::Cell","std::num::NonZeroU64"]},"std::collections::HashMap":{"K":["std::num::NonZeroU128","std::string::String","std::net::IpAddr","std::num::NonZeroU32","std::num::NonZeroI128","std::time::Duration","std::option::Option","std::num::NonZeroI8","std::rc::Rc","std::ffi::CString","std::net::Ipv4Addr","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroI64","std::sync::Arc","std::marker::PhantomData","std::num::NonZeroU64"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::net::Ipv6Addr","std::net::Ipv4Addr","std::sync::Mutex","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::collections::HashMap","std::ops::RangeInclusive","std::result::Result","std::collections::Bound","std::collections::BinaryHeap","std::num::NonZeroI64","std::boxed::Box","std::sync::atomic::AtomicI16","std::string::String","std::num::NonZeroU8","std::collections::BTreeMap","std::option::Option","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::borrow::Cow","std::net::SocketAddrV6","std::collections::BTreeSet","std::collections::HashSet","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::rc::Rc","std::ffi::CString","std::sync::atomic::AtomicU8","std::time::SystemTime","std::path::PathBuf","std::time::Duration","std::num::NonZeroI32","std::num::NonZeroI16","std::marker::PhantomData","std::cell::Cell","std::num::NonZeroU128","std::cell::RefCell","std::net::IpAddr","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::ops::Range","std::vec::Vec","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroU64","std::sync::atomic::AtomicU16"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroU8","std::num::NonZeroIsize","std::net::SocketAddrV6","std::net::SocketAddrV4","std::num::NonZeroU128","std::ffi::CString","std::time::Duration","std::option::Option","std::net::IpAddr","std::net::SocketAddr","std::path::PathBuf","std::rc::Rc","std::num::NonZeroU32","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroI128","std::collections::Bound","std::num::NonZeroUsize","std::num::NonZeroI16","std::num::NonZeroI8","std::num::NonZeroI32","std::num::NonZeroU16"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::net::Ipv6Addr","std::string::String","std::net::SocketAddrV6","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::collections::HashMap","std::collections::HashSet","std::net::SocketAddr","std::vec::Vec","std::net::IpAddr","std::ops::Range","std::sync::atomic::AtomicI64","std::boxed::Box","std::sync::atomic::AtomicI8","std::time::SystemTime","std::cell::Cell","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::borrow::Cow","std::num::NonZeroU32","std::sync::Arc","std::cell::RefCell","std::collections::BTreeMap","std::net::SocketAddrV4","std::option::Option","std::collections::Bound","std::time::Duration","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::num::NonZeroI128","std::result::Result","std::ops::RangeInclusive","std::num::NonZeroI64","std::net::Ipv4Addr","std::collections::BinaryHeap","std::path::PathBuf","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::sync::Mutex","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::sync::RwLock","std::collections::BTreeSet","std::num::NonZeroI32","std::num::NonZeroU16","std::rc::Rc","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::marker::PhantomData"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicU8","std::path::PathBuf","std::rc::Rc","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::time::Duration","std::collections::BinaryHeap","std::net::IpAddr","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::time::SystemTime","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::net::SocketAddr","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::collections::HashSet","std::num::NonZeroUsize","std::collections::BTreeSet","std::num::NonZeroU64","std::ops::Range","std::string::String","std::collections::Bound","std::num::NonZeroIsize","std::num::NonZeroU16","std::boxed::Box","std::ffi::CString","std::vec::Vec","std::net::SocketAddrV6","std::collections::BTreeMap","std::sync::RwLock","std::num::NonZeroU128","std::num::NonZeroU32","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroI16","std::marker::PhantomData","std::collections::HashMap","std::sync::Mutex","std::option::Option","std::cell::RefCell","std::sync::atomic::AtomicI64","std::borrow::Cow","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::cell::Cell","std::result::Result","std::num::NonZeroI8"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::marker::PhantomData","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::borrow::Cow","std::option::Option","std::num::NonZeroI128","std::collections::BTreeSet","std::collections::HashMap","std::collections::Bound","std::net::SocketAddrV4","std::sync::RwLock","std::cell::Cell","std::ops::RangeInclusive","std::ops::Range","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::num::NonZeroU16","std::net::Ipv4Addr","std::num::NonZeroI16","std::rc::Rc","std::num::NonZeroU32","std::string::String","std::net::SocketAddr","std::ffi::CString","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::cell::RefCell","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::collections::BTreeMap","std::boxed::Box","std::collections::HashSet","std::result::Result","std::path::PathBuf","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::num::NonZeroIsize","std::vec::Vec","std::net::Ipv6Addr","std::collections::VecDeque","std::sync::Arc","std::sync::atomic::AtomicI64","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::time::Duration","std::net::SocketAddrV6"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicU8","std::time::SystemTime","std::num::NonZeroU32","std::boxed::Box","std::net::Ipv6Addr","std::num::NonZeroU16","std::collections::Bound","std::marker::PhantomData","std::sync::Arc","std::net::Ipv4Addr","std::collections::HashMap","std::path::PathBuf","std::string::String","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::sync::RwLock","std::num::NonZeroIsize","std::collections::VecDeque","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::num::NonZeroI64","std::option::Option","std::num::NonZeroI8","std::cell::Cell","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::ops::Range","std::cell::RefCell","std::sync::Mutex","std::result::Result","std::ffi::CString","std::vec::Vec","std::net::SocketAddrV6","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::time::Duration","std::borrow::Cow","std::net::SocketAddr","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::collections::HashSet","std::collections::BinaryHeap","std::num::NonZeroI128"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C, D, E)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C, D, E)>::decode(p0);
+<(A, B, C, D, E)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F)>::borrow_decode":{"A":["std::marker::Sized","de::BorrowDecode"],"B":["de::BorrowDecode","std::marker::Sized"],"BD":["std::marker::Sized","de::BorrowDecoder"],"C":["std::marker::Sized","de::BorrowDecode"],"D":["de::BorrowDecode","std::marker::Sized"],"E":["de::BorrowDecode","std::marker::Sized"],"F":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Ord","enc::Encode"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord","de::Decode"]},"std::collections::Bound":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["std::marker::Sized","std::cmp::Eq","std::hash::Hash","enc::Encode","de::BorrowDecode","de::Decode"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["de::Decode","enc::Encode","std::hash::Hash","std::cmp::Eq","std::marker::Sized","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::BigEndian","config::Configuration","std::clone::impls::<impl std::clone::Clone for &mut T>","config::Fixint","config::NoLimit","config::Limit","config::Varint"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F)>::borrow_decode":{"A":["std::num::NonZeroI64","std::collections::Bound","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::net::IpAddr","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::num::NonZeroU128","std::result::Result","std::ops::Range","std::num::NonZeroI128","std::sync::RwLock","std::num::NonZeroU64","std::net::SocketAddr","std::path::PathBuf","std::num::NonZeroI16","std::rc::Rc","std::num::NonZeroU16","std::sync::Mutex","std::sync::Arc","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::time::Duration","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::num::NonZeroI8","std::ffi::CString","std::boxed::Box","std::vec::Vec","std::sync::atomic::AtomicI32","std::borrow::Cow","std::time::SystemTime","std::net::Ipv6Addr","std::collections::HashMap","std::string::String","std::collections::HashSet","std::cell::Cell","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::cell::RefCell","std::option::Option","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::num::NonZeroI32","std::collections::BTreeMap","std::num::NonZeroU8"],"B":["std::path::PathBuf","std::sync::atomic::AtomicU8","std::result::Result","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::ops::Range","std::sync::atomic::AtomicU32","std::rc::Rc","std::sync::Mutex","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::collections::Bound","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::boxed::Box","std::num::NonZeroUsize","std::net::Ipv6Addr","std::collections::HashSet","std::collections::BTreeMap","std::num::NonZeroU16","std::sync::RwLock","std::num::NonZeroIsize","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::num::NonZeroU8","std::net::IpAddr","std::borrow::Cow","std::num::NonZeroI32","std::cell::Cell","std::option::Option","std::ops::RangeInclusive","std::sync::Arc","std::num::NonZeroI128","std::collections::HashMap","std::time::Duration","std::collections::BinaryHeap","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroI64","std::vec::Vec","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::net::SocketAddr","std::collections::VecDeque","std::string::String","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::ffi::CString","std::num::NonZeroI16"],"BD":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"C":["std::option::Option","std::net::SocketAddrV4","std::time::Duration","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::time::SystemTime","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::path::PathBuf","std::vec::Vec","std::ops::Range","std::cell::Cell","std::sync::atomic::AtomicI64","std::sync::Arc","std::collections::BTreeSet","std::cell::RefCell","std::ops::RangeInclusive","std::num::NonZeroUsize","std::string::String","std::boxed::Box","std::num::NonZeroU8","std::collections::VecDeque","std::num::NonZeroI8","std::borrow::Cow","std::num::NonZeroU64","std::collections::HashMap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::rc::Rc","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::num::NonZeroU32","std::ffi::CString","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::net::Ipv4Addr","std::collections::HashSet","std::num::NonZeroI64","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::collections::BinaryHeap","std::result::Result","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::collections::Bound","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::sync::Mutex","std::net::IpAddr","std::net::SocketAddrV6"],"D":["std::sync::atomic::AtomicI64","std::collections::VecDeque","std::result::Result","std::ops::Range","std::net::SocketAddr","std::string::String","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::collections::BinaryHeap","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::time::Duration","std::ffi::CString","std::cell::Cell","std::time::SystemTime","std::num::NonZeroU32","std::net::SocketAddrV4","std::collections::HashMap","std::num::NonZeroU16","std::num::NonZeroI128","std::net::IpAddr","std::vec::Vec","std::rc::Rc","std::num::NonZeroIsize","std::collections::BTreeSet","std::sync::Mutex","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::boxed::Box","std::num::NonZeroI64","std::path::PathBuf","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::cell::RefCell","std::sync::RwLock","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::option::Option","std::ops::RangeInclusive","std::collections::Bound","std::collections::HashSet","std::sync::Arc","std::net::SocketAddrV6","std::borrow::Cow","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::num::NonZeroI32"],"E":["std::ops::Range","std::collections::HashMap","std::collections::BTreeSet","std::net::Ipv4Addr","std::sync::Arc","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::cell::RefCell","std::marker::PhantomData","std::time::SystemTime","std::collections::VecDeque","std::sync::Mutex","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::rc::Rc","std::collections::BTreeMap","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::collections::HashSet","std::num::NonZeroU64","std::sync::RwLock","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::time::Duration","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroI32","std::vec::Vec","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::collections::Bound","std::string::String","std::collections::BinaryHeap","std::cell::Cell","std::boxed::Box","std::net::SocketAddr","std::path::PathBuf","std::num::NonZeroU128","std::result::Result","std::net::SocketAddrV4","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::net::Ipv6Addr","std::option::Option","std::num::NonZeroI8","std::borrow::Cow","std::num::NonZeroI16","std::ffi::CString","std::sync::atomic::AtomicU16"],"F":["std::ops::Range","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::cell::Cell","std::string::String","std::collections::BTreeMap","std::borrow::Cow","std::net::Ipv6Addr","std::boxed::Box","std::collections::Bound","std::vec::Vec","std::sync::atomic::AtomicIsize","std::time::Duration","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::num::NonZeroU64","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::num::NonZeroI64","std::collections::VecDeque","std::result::Result","std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroI32","std::num::NonZeroI128","std::ops::RangeInclusive","std::net::SocketAddrV4","std::collections::HashSet","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::collections::BTreeSet","std::cell::RefCell","std::num::NonZeroIsize","std::net::SocketAddr","std::sync::RwLock","std::sync::Arc","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::rc::Rc","std::time::SystemTime","std::ffi::CString","std::path::PathBuf","std::net::IpAddr","std::collections::BinaryHeap","std::num::NonZeroU8","std::collections::HashMap","std::num::NonZeroI8","std::option::Option","std::num::NonZeroU16","std::num::NonZeroU128","std::sync::atomic::AtomicI32"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::cell::Cell","std::rc::Rc","std::num::NonZeroU128","std::sync::Arc","std::num::NonZeroU8","std::option::Option","std::net::SocketAddrV6","std::num::NonZeroUsize","std::net::Ipv6Addr","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroI32","std::time::SystemTime","std::num::NonZeroU64","std::net::SocketAddrV4","std::num::NonZeroI128","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroI8","std::net::SocketAddr","std::net::IpAddr","std::net::Ipv4Addr"],"V":["std::net::IpAddr","std::marker::PhantomData","std::num::NonZeroU64","std::time::SystemTime","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::collections::Bound","std::rc::Rc","std::collections::HashSet","std::num::NonZeroI8","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::cell::Cell","std::net::SocketAddrV6","std::ops::Range","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::num::NonZeroU16","std::num::NonZeroU128","std::time::Duration","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::ffi::CString","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::net::Ipv4Addr","std::collections::VecDeque","std::result::Result","std::num::NonZeroI32","std::path::PathBuf","std::borrow::Cow","std::boxed::Box","std::num::NonZeroU32","std::net::SocketAddrV4","std::net::Ipv6Addr","std::collections::BTreeMap","std::vec::Vec","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::sync::Arc","std::option::Option","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::sync::RwLock","std::sync::Mutex","std::string::String","std::ops::RangeInclusive","std::collections::BTreeSet"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI128","std::cell::RefCell","std::num::NonZeroU128","std::string::String","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroU32","std::time::SystemTime","std::cell::Cell","std::option::Option","std::net::Ipv4Addr","std::marker::PhantomData","std::num::NonZeroI16","std::num::NonZeroU64","std::num::NonZeroUsize","std::num::NonZeroI8","std::path::PathBuf","std::ffi::CString","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroU8","std::num::NonZeroI64"]},"std::collections::BinaryHeap":{"T":["std::string::String","std::ffi::CString","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroUsize","std::net::SocketAddrV4","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroIsize","std::net::Ipv6Addr","std::num::NonZeroI8","std::net::Ipv4Addr","std::num::NonZeroI64","std::sync::Arc","std::time::Duration","std::num::NonZeroU8","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroI128","std::num::NonZeroU16","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroU64"]},"std::collections::Bound":{"T":["std::ffi::CString","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroUsize","std::collections::VecDeque","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::net::Ipv4Addr","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::boxed::Box","std::vec::Vec","std::option::Option","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::sync::Arc","std::ops::Range","std::collections::HashMap","std::collections::BinaryHeap","std::num::NonZeroU128","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroI8","std::cell::Cell","std::string::String","std::ops::RangeInclusive","std::collections::Bound","std::borrow::Cow","std::result::Result","std::num::NonZeroI16","std::net::SocketAddr","std::time::Duration","std::collections::BTreeSet","std::cell::RefCell","std::sync::Mutex","std::num::NonZeroI64","std::num::NonZeroU8","std::num::NonZeroIsize","std::rc::Rc","std::collections::HashSet","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::sync::RwLock"]},"std::collections::HashMap":{"K":["std::num::NonZeroI32","std::num::NonZeroU8","std::num::NonZeroI64","std::string::String","std::path::PathBuf","std::num::NonZeroUsize","std::net::Ipv4Addr","std::net::Ipv6Addr","std::net::SocketAddrV4","std::net::SocketAddrV6","std::time::SystemTime","std::ffi::CString","std::option::Option","std::net::IpAddr","std::sync::Arc","std::collections::Bound"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::net::IpAddr","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::sync::Arc","std::ffi::CString","std::collections::VecDeque","std::num::NonZeroI32","std::num::NonZeroU64","std::collections::BTreeMap","std::num::NonZeroU32","std::collections::BinaryHeap","std::cell::Cell","std::sync::RwLock","std::num::NonZeroI64","std::num::NonZeroI128","std::num::NonZeroU128","std::result::Result","std::vec::Vec","std::net::Ipv6Addr","std::ops::Range","std::sync::atomic::AtomicI16","std::string::String","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::option::Option","std::collections::Bound","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::sync::atomic::AtomicU32","std::time::SystemTime","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::boxed::Box","std::net::SocketAddrV6","std::collections::BTreeSet","std::net::SocketAddr","std::num::NonZeroU8","std::time::Duration","std::num::NonZeroI8","std::num::NonZeroI16","std::borrow::Cow","std::collections::HashMap","std::sync::atomic::AtomicU64","std::rc::Rc","std::sync::Mutex","std::net::SocketAddrV4","std::ops::RangeInclusive","std::cell::RefCell","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroUsize"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI16","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroI64","std::string::String","std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroI128","std::net::SocketAddrV4","std::path::PathBuf","std::net::IpAddr","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroU32","std::num::NonZeroU16","std::num::NonZeroI8","std::ffi::CString","std::num::NonZeroI32","std::rc::Rc"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::result::Result","std::num::NonZeroI16","std::collections::HashSet","std::sync::RwLock","std::sync::atomic::AtomicI16","std::sync::Mutex","std::collections::HashMap","std::net::SocketAddr","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::string::String","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::vec::Vec","std::option::Option","std::path::PathBuf","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroU16","std::cell::RefCell","std::net::Ipv4Addr","std::num::NonZeroU64","std::rc::Rc","std::num::NonZeroI32","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::num::NonZeroIsize","std::boxed::Box","std::sync::Arc","std::time::Duration","std::net::Ipv6Addr","std::collections::Bound","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::num::NonZeroI64","std::num::NonZeroU8","std::cell::Cell","std::net::SocketAddrV6","std::ops::Range","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::ffi::CString","std::collections::BTreeMap","std::num::NonZeroU32","std::collections::VecDeque","std::borrow::Cow"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::collections::HashSet","std::net::SocketAddr","std::num::NonZeroI128","std::borrow::Cow","std::net::IpAddr","std::rc::Rc","std::sync::Mutex","std::collections::HashMap","std::sync::RwLock","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::vec::Vec","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::path::PathBuf","std::cell::RefCell","std::num::NonZeroUsize","std::num::NonZeroI64","std::ops::Range","std::num::NonZeroU32","std::ffi::CString","std::net::Ipv4Addr","std::collections::BTreeMap","std::collections::VecDeque","std::option::Option","std::net::SocketAddrV4","std::collections::BinaryHeap","std::sync::Arc","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::num::NonZeroU8","std::time::Duration","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::boxed::Box","std::time::SystemTime","std::marker::PhantomData","std::string::String","std::collections::Bound","std::cell::Cell","std::net::Ipv6Addr","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::result::Result"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroIsize","std::cell::RefCell","std::net::Ipv4Addr","std::net::IpAddr","std::ffi::CString","std::cell::Cell","std::num::NonZeroI32","std::num::NonZeroI16","std::collections::VecDeque","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::boxed::Box","std::collections::HashSet","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::borrow::Cow","std::collections::HashMap","std::net::SocketAddr","std::sync::RwLock","std::num::NonZeroI8","std::num::NonZeroU128","std::collections::BinaryHeap","std::num::NonZeroI128","std::rc::Rc","std::sync::Mutex","std::sync::atomic::AtomicI64","std::time::Duration","std::path::PathBuf","std::option::Option","std::string::String","std::net::SocketAddrV6","std::ops::Range","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::result::Result","std::sync::Arc","std::num::NonZeroU32","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::collections::Bound","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::collections::BTreeMap","std::vec::Vec","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::sync::atomic::AtomicU32"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::time::Duration","std::sync::RwLock","std::num::NonZeroU128","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::net::SocketAddrV6","std::ops::Range","std::num::NonZeroU8","std::rc::Rc","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::ffi::CString","std::sync::atomic::AtomicU32","std::vec::Vec","std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroI64","std::collections::Bound","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::cell::Cell","std::net::IpAddr","std::option::Option","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::net::SocketAddrV4","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::collections::HashSet","std::collections::BTreeSet","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::sync::Arc","std::result::Result","std::collections::BTreeMap","std::collections::VecDeque","std::num::NonZeroIsize","std::collections::HashMap","std::num::NonZeroU64","std::collections::BinaryHeap","std::boxed::Box","std::cell::RefCell","std::string::String","std::sync::atomic::AtomicBool","std::path::PathBuf","std::ops::RangeInclusive","std::borrow::Cow","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::num::NonZeroI8","std::sync::Mutex"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F)>::borrow_decode(p0);
+<(A, B, C, D, E, F)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F)>::decode":{"A":["std::marker::Sized","de::Decode"],"B":["de::Decode","std::marker::Sized"],"C":["de::Decode","std::marker::Sized"],"D":["std::marker::Sized","de::Decode"],"DE":["de::Decoder","std::marker::Sized"],"E":["de::Decode","std::marker::Sized"],"F":["de::Decode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode","std::cmp::Ord"],"V":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["enc::Encode","de::Decode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::Bound":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::HashMap":{"K":["std::hash::Hash","de::BorrowDecode","de::Decode","std::marker::Sized","std::cmp::Eq","enc::Encode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","std::cmp::Eq","enc::Encode","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Varint","config::LittleEndian","config::Configuration","std::clone::impls::<impl std::clone::Clone for *mut T>","config::BigEndian","config::Fixint","config::NoLimit","config::Limit"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F)>::decode":{"A":["std::num::NonZeroI16","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::collections::HashSet","std::collections::Bound","std::net::IpAddr","std::string::String","std::num::NonZeroI128","std::ffi::CString","std::collections::VecDeque","std::sync::RwLock","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::borrow::Cow","std::num::NonZeroI64","std::net::Ipv6Addr","std::path::PathBuf","std::collections::BTreeMap","std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::num::NonZeroUsize","std::boxed::Box","std::sync::Arc","std::result::Result","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::cell::RefCell","std::sync::atomic::AtomicU16","std::collections::HashMap","std::option::Option","std::collections::BinaryHeap","std::time::SystemTime","std::num::NonZeroU8","std::cell::Cell","std::num::NonZeroI8","std::net::Ipv4Addr","std::net::SocketAddrV6","std::num::NonZeroU32","std::time::Duration","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::ops::RangeInclusive","std::rc::Rc","std::vec::Vec","std::ops::Range"],"B":["std::net::SocketAddrV6","std::collections::HashMap","std::collections::Bound","std::sync::atomic::AtomicI64","std::boxed::Box","std::ffi::CString","std::net::SocketAddrV4","std::cell::Cell","std::collections::BTreeMap","std::num::NonZeroI32","std::num::NonZeroU8","std::num::NonZeroU64","std::vec::Vec","std::ops::RangeInclusive","std::net::SocketAddr","std::num::NonZeroI8","std::path::PathBuf","std::cell::RefCell","std::marker::PhantomData","std::sync::RwLock","std::result::Result","std::num::NonZeroI128","std::net::Ipv4Addr","std::num::NonZeroU32","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::ops::Range","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::collections::BinaryHeap","std::string::String","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::num::NonZeroI16","std::num::NonZeroU16","std::time::SystemTime","std::sync::atomic::AtomicU8","std::sync::Mutex","std::collections::BTreeSet","std::rc::Rc","std::sync::atomic::AtomicU32","std::net::IpAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::sync::Arc","std::time::Duration","std::collections::HashSet","std::option::Option","std::borrow::Cow","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64"],"C":["std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::net::IpAddr","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::collections::BTreeSet","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::boxed::Box","std::collections::BinaryHeap","std::collections::HashMap","std::result::Result","std::cell::Cell","std::sync::atomic::AtomicU32","std::collections::HashSet","std::collections::Bound","std::rc::Rc","std::cell::RefCell","std::net::SocketAddrV6","std::ops::RangeInclusive","std::sync::RwLock","std::sync::atomic::AtomicI32","std::time::SystemTime","std::path::PathBuf","std::ffi::CString","std::net::SocketAddrV4","std::net::SocketAddr","std::option::Option","std::num::NonZeroI16","std::ops::Range","std::sync::atomic::AtomicIsize","std::string::String","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::num::NonZeroU64","std::sync::Arc","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroI128","std::sync::Mutex","std::time::Duration","std::num::NonZeroUsize","std::num::NonZeroIsize","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::vec::Vec","std::borrow::Cow","std::num::NonZeroU8","std::num::NonZeroU32"],"D":["std::sync::RwLock","std::num::NonZeroI8","std::time::SystemTime","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::collections::VecDeque","std::net::SocketAddrV4","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::num::NonZeroI64","std::cell::Cell","std::collections::HashMap","std::net::SocketAddr","std::collections::BTreeSet","std::ffi::CString","std::result::Result","std::borrow::Cow","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::path::PathBuf","std::cell::RefCell","std::sync::Mutex","std::collections::Bound","std::sync::atomic::AtomicU8","std::option::Option","std::sync::atomic::AtomicU16","std::sync::Arc","std::sync::atomic::AtomicU64","std::string::String","std::num::NonZeroU32","std::num::NonZeroUsize","std::time::Duration","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::rc::Rc","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::vec::Vec","std::net::Ipv4Addr","std::net::IpAddr","std::num::NonZeroI16","std::num::NonZeroI128","std::ops::Range","std::boxed::Box","std::marker::PhantomData","std::collections::BTreeMap","std::num::NonZeroU64","std::collections::HashSet","std::net::Ipv6Addr","std::num::NonZeroU128"],"DE":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"E":["std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::result::Result","std::time::Duration","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::net::SocketAddrV4","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::net::Ipv4Addr","std::num::NonZeroI16","std::option::Option","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::path::PathBuf","std::cell::Cell","std::collections::VecDeque","std::collections::HashMap","std::num::NonZeroI128","std::collections::HashSet","std::num::NonZeroI8","std::ops::RangeInclusive","std::rc::Rc","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::ffi::CString","std::collections::Bound","std::sync::RwLock","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::ops::Range","std::sync::Arc","std::time::SystemTime","std::vec::Vec","std::borrow::Cow","std::num::NonZeroU128","std::sync::Mutex","std::num::NonZeroU8","std::net::IpAddr","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::num::NonZeroI64","std::string::String","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::boxed::Box"],"F":["std::result::Result","std::time::SystemTime","std::collections::BinaryHeap","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroI32","std::collections::Bound","std::cell::Cell","std::ffi::CString","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::net::Ipv4Addr","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::borrow::Cow","std::num::NonZeroI16","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::collections::HashSet","std::rc::Rc","std::sync::atomic::AtomicI16","std::net::IpAddr","std::sync::atomic::AtomicBool","std::ops::Range","std::time::Duration","std::boxed::Box","std::num::NonZeroU8","std::path::PathBuf","std::num::NonZeroIsize","std::num::NonZeroU128","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::collections::HashMap","std::num::NonZeroU16","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::num::NonZeroUsize","std::collections::VecDeque","std::option::Option","std::ops::RangeInclusive","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::string::String","std::sync::Mutex","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::sync::Arc","std::vec::Vec","std::collections::BTreeMap","std::cell::RefCell","std::sync::atomic::AtomicU8"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::ffi::CStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroU32","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroI128","std::net::Ipv6Addr","std::cell::RefCell","std::net::SocketAddrV4","std::num::NonZeroI8","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroIsize","std::net::IpAddr","std::num::NonZeroI64","std::rc::Rc","std::net::Ipv4Addr"],"V":["std::vec::Vec","std::borrow::Cow","std::marker::PhantomData","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::collections::HashSet","std::cell::Cell","std::cell::RefCell","std::rc::Rc","std::net::SocketAddrV6","std::num::NonZeroI8","std::collections::BTreeMap","std::net::SocketAddr","std::boxed::Box","std::net::Ipv4Addr","std::result::Result","std::collections::Bound","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::ops::Range","std::option::Option","std::collections::BTreeSet","std::num::NonZeroU64","std::string::String","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::path::PathBuf","std::collections::HashMap","std::sync::atomic::AtomicI8","std::time::SystemTime","std::num::NonZeroU16","std::sync::Arc","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::ffi::CString","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::sync::RwLock","std::num::NonZeroU8","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::collections::VecDeque","std::net::Ipv6Addr","std::time::Duration","std::sync::Mutex","std::net::IpAddr","std::num::NonZeroI64","std::num::NonZeroUsize"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI64","std::num::NonZeroUsize","std::net::Ipv6Addr","std::net::SocketAddrV4","std::num::NonZeroU8","std::time::Duration","std::num::NonZeroU64","std::net::SocketAddrV6","std::cell::RefCell","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroI128","std::num::NonZeroU32","std::string::String","std::num::NonZeroI32","std::time::SystemTime","std::ffi::CString","std::marker::PhantomData"]},"std::collections::BinaryHeap":{"T":["std::time::Duration","std::net::IpAddr","std::cell::Cell","std::rc::Rc","std::num::NonZeroU8","std::num::NonZeroU128","std::num::NonZeroU64","std::path::PathBuf","std::string::String","std::net::SocketAddrV4","std::net::SocketAddr","std::num::NonZeroIsize","std::time::SystemTime","std::net::Ipv6Addr","std::cell::RefCell","std::net::SocketAddrV6","std::num::NonZeroI16","std::num::NonZeroUsize","std::net::Ipv4Addr","std::option::Option"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::sync::Arc","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::collections::HashSet","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::vec::Vec","std::string::String","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::option::Option","std::num::NonZeroI64","std::result::Result","std::sync::Mutex","std::sync::atomic::AtomicI64","std::ffi::CString","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::path::PathBuf","std::borrow::Cow","std::collections::Bound","std::marker::PhantomData","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroU8","std::collections::BTreeSet","std::sync::RwLock","std::num::NonZeroU128","std::time::Duration","std::num::NonZeroU16","std::net::IpAddr","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::collections::VecDeque","std::boxed::Box","std::num::NonZeroI32","std::net::SocketAddrV6","std::collections::BTreeMap","std::num::NonZeroUsize","std::num::NonZeroI128","std::ops::Range","std::num::NonZeroI16","std::collections::HashMap","std::sync::atomic::AtomicU16","std::time::SystemTime","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::cell::Cell","std::ops::RangeInclusive","std::net::Ipv4Addr"]},"std::collections::HashMap":{"K":["std::num::NonZeroU32","std::net::Ipv4Addr","std::num::NonZeroI16","std::sync::Arc","std::marker::PhantomData","std::num::NonZeroU8","std::string::String","std::net::SocketAddrV4","std::net::Ipv6Addr","std::collections::Bound","std::rc::Rc","std::num::NonZeroU16","std::option::Option","std::num::NonZeroU64","std::num::NonZeroI32"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::collections::BinaryHeap","std::collections::BTreeMap","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::sync::Mutex","std::sync::Arc","std::rc::Rc","std::num::NonZeroUsize","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::collections::VecDeque","std::option::Option","std::time::SystemTime","std::cell::Cell","std::sync::RwLock","std::string::String","std::num::NonZeroI16","std::boxed::Box","std::num::NonZeroI32","std::num::NonZeroIsize","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::net::IpAddr","std::net::SocketAddrV4","std::path::PathBuf","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::collections::Bound","std::sync::atomic::AtomicI16","std::time::Duration","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::borrow::Cow","std::cell::RefCell","std::num::NonZeroI8","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::collections::HashMap","std::num::NonZeroI128","std::vec::Vec","std::ffi::CString","std::ops::Range","std::sync::atomic::AtomicU32","std::result::Result"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::string::String","std::num::NonZeroUsize","std::time::SystemTime","std::num::NonZeroU128","std::net::IpAddr","std::num::NonZeroI64","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroI32","std::path::PathBuf","std::num::NonZeroU8","std::marker::PhantomData","std::net::Ipv6Addr","std::num::NonZeroU16","std::num::NonZeroIsize"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::boxed::Box","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::time::SystemTime","std::collections::Bound","std::num::NonZeroI64","std::sync::Arc","std::ops::Range","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::borrow::Cow","std::net::Ipv6Addr","std::net::IpAddr","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::vec::Vec","std::sync::RwLock","std::collections::BinaryHeap","std::time::Duration","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::num::NonZeroUsize","std::marker::PhantomData","std::collections::HashSet","std::sync::atomic::AtomicU16","std::cell::RefCell","std::rc::Rc","std::num::NonZeroI16","std::collections::HashMap","std::sync::Mutex","std::num::NonZeroI8","std::string::String","std::num::NonZeroI32","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::option::Option","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::net::Ipv4Addr","std::num::NonZeroU16","std::num::NonZeroI128","std::collections::VecDeque","std::result::Result","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::num::NonZeroU64","std::ffi::CString","std::cell::Cell"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::Arc","std::num::NonZeroI128","std::sync::RwLock","std::sync::atomic::AtomicBool","std::collections::Bound","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::num::NonZeroI16","std::collections::VecDeque","std::net::IpAddr","std::net::SocketAddr","std::ops::RangeInclusive","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::option::Option","std::cell::Cell","std::sync::atomic::AtomicIsize","std::rc::Rc","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::num::NonZeroU32","std::string::String","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::boxed::Box","std::num::NonZeroI64","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::vec::Vec","std::result::Result","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::collections::HashSet","std::net::Ipv6Addr","std::num::NonZeroI8","std::ops::Range","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroI32","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::time::Duration","std::sync::atomic::AtomicI16","std::time::SystemTime","std::borrow::Cow","std::cell::RefCell","std::collections::HashMap","std::collections::BTreeSet","std::path::PathBuf","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroU64","std::num::NonZeroU16"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::marker::PhantomData","std::num::NonZeroU8","std::time::Duration","std::ops::Range","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::BTreeSet","std::num::NonZeroU32","std::sync::RwLock","std::vec::Vec","std::result::Result","std::num::NonZeroI128","std::cell::Cell","std::sync::atomic::AtomicBool","std::collections::Bound","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroIsize","std::boxed::Box","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::net::SocketAddrV4","std::collections::HashMap","std::net::SocketAddr","std::collections::BTreeMap","std::option::Option","std::cell::RefCell","std::borrow::Cow","std::net::IpAddr","std::path::PathBuf","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::sync::Mutex","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::num::NonZeroUsize","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroU128","std::time::SystemTime","std::string::String","std::collections::VecDeque","std::sync::atomic::AtomicU8"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::option::Option","std::borrow::Cow","std::num::NonZeroI16","std::net::SocketAddr","std::boxed::Box","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::sync::RwLock","std::result::Result","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::collections::HashMap","std::ffi::CString","std::string::String","std::sync::Arc","std::sync::atomic::AtomicI64","std::time::SystemTime","std::num::NonZeroU8","std::cell::RefCell","std::collections::HashSet","std::collections::Bound","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::marker::PhantomData","std::vec::Vec","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::collections::BinaryHeap","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::rc::Rc","std::sync::atomic::AtomicI16","std::time::Duration","std::num::NonZeroIsize","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::cell::Cell","std::net::IpAddr","std::ops::RangeInclusive","std::collections::BTreeMap","std::ops::Range","std::path::PathBuf","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::collections::BTreeSet","std::num::NonZeroUsize","std::sync::Mutex","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::num::NonZeroU64"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F)>::decode(p0);
+<(A, B, C, D, E, F)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G)>::borrow_decode":{"A":["de::BorrowDecode","std::marker::Sized"],"B":["std::marker::Sized","de::BorrowDecode"],"BD":["std::marker::Sized","de::BorrowDecoder"],"C":["de::BorrowDecode","std::marker::Sized"],"D":["std::marker::Sized","de::BorrowDecode"],"E":["std::marker::Sized","de::BorrowDecode"],"F":["std::marker::Sized","de::BorrowDecode"],"G":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["de::BorrowDecode","std::marker::Sized","std::cmp::Ord","enc::Encode","de::Decode"],"V":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["enc::Encode","std::cmp::Ord","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","de::Decode","enc::Encode","std::cmp::Ord","std::marker::Sized"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["std::marker::Sized","de::BorrowDecode","std::hash::Hash","enc::Encode","de::Decode","std::cmp::Eq"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["enc::Encode","std::cmp::Eq","std::marker::Sized","de::Decode","std::hash::Hash","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","config::BigEndian","config::LittleEndian","std::clone::impls::<impl std::clone::Clone for &mut T>","config::Limit","config::Fixint","config::NoLimit","config::Varint"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G)>::borrow_decode":{"A":["std::net::SocketAddrV6","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::time::SystemTime","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::num::NonZeroU16","std::cell::Cell","std::num::NonZeroI128","std::collections::BinaryHeap","std::sync::Mutex","std::sync::atomic::AtomicU16","std::string::String","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::ops::Range","std::collections::BTreeSet","std::ffi::CString","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroU32","std::collections::Bound","std::result::Result","std::net::Ipv4Addr","std::collections::HashSet","std::time::Duration","std::sync::RwLock","std::num::NonZeroIsize","std::net::SocketAddr","std::path::PathBuf","std::option::Option","std::collections::HashMap","std::boxed::Box","std::num::NonZeroU64","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::vec::Vec","std::num::NonZeroU8","std::collections::BTreeMap","std::borrow::Cow","std::rc::Rc","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::sync::Arc","std::sync::atomic::AtomicU64","std::net::IpAddr","std::ops::RangeInclusive"],"B":["std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroUsize","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::option::Option","std::sync::atomic::AtomicBool","std::ops::Range","std::num::NonZeroU16","std::collections::BTreeSet","std::num::NonZeroU128","std::time::Duration","std::num::NonZeroU8","std::collections::VecDeque","std::num::NonZeroI16","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::collections::Bound","std::cell::Cell","std::num::NonZeroU64","std::collections::BTreeMap","std::sync::RwLock","std::string::String","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::collections::HashMap","std::boxed::Box","std::sync::Arc","std::vec::Vec","std::marker::PhantomData","std::ops::RangeInclusive","std::cell::RefCell","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::time::SystemTime","std::rc::Rc","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::net::SocketAddrV4","std::result::Result","std::borrow::Cow","std::sync::Mutex","std::sync::atomic::AtomicU64","std::ffi::CString","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::path::PathBuf","std::net::IpAddr"],"BD":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"C":["std::borrow::Cow","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::rc::Rc","std::path::PathBuf","std::cell::RefCell","std::num::NonZeroIsize","std::num::NonZeroI64","std::collections::HashSet","std::ops::Range","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::net::IpAddr","std::collections::BinaryHeap","std::string::String","std::option::Option","std::vec::Vec","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::time::Duration","std::collections::VecDeque","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::result::Result","std::net::SocketAddrV4","std::boxed::Box","std::collections::Bound","std::num::NonZeroI32","std::collections::BTreeSet","std::sync::Arc","std::collections::HashMap","std::time::SystemTime","std::num::NonZeroU64","std::sync::RwLock","std::net::SocketAddrV6","std::num::NonZeroU128","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::ffi::CString","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::cell::Cell","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::sync::Mutex","std::num::NonZeroU32","std::num::NonZeroI8","std::marker::PhantomData"],"D":["std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::rc::Rc","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::net::IpAddr","std::sync::RwLock","std::num::NonZeroI64","std::cell::Cell","std::cell::RefCell","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::option::Option","std::string::String","std::ffi::CString","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::collections::VecDeque","std::time::Duration","std::num::NonZeroU128","std::collections::BTreeSet","std::collections::BinaryHeap","std::net::Ipv6Addr","std::num::NonZeroU64","std::collections::HashMap","std::marker::PhantomData","std::borrow::Cow","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::ops::Range","std::net::SocketAddrV6","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::sync::Arc","std::sync::atomic::AtomicU64","std::path::PathBuf","std::boxed::Box","std::vec::Vec","std::num::NonZeroI128","std::num::NonZeroIsize","std::collections::Bound","std::collections::HashSet","std::ops::RangeInclusive","std::collections::BTreeMap","std::result::Result","std::sync::Mutex","std::time::SystemTime","std::num::NonZeroUsize","std::num::NonZeroU8","std::sync::atomic::AtomicIsize"],"E":["std::net::SocketAddrV6","std::num::NonZeroUsize","std::cell::RefCell","std::boxed::Box","std::sync::atomic::AtomicU8","std::net::IpAddr","std::collections::HashSet","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::num::NonZeroU64","std::sync::RwLock","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::collections::BTreeSet","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::rc::Rc","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::net::SocketAddrV4","std::collections::Bound","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::time::Duration","std::option::Option","std::ops::RangeInclusive","std::vec::Vec","std::num::NonZeroU16","std::collections::BinaryHeap","std::num::NonZeroIsize","std::borrow::Cow","std::sync::atomic::AtomicBool","std::result::Result","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::sync::Arc","std::num::NonZeroI32","std::path::PathBuf","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::time::SystemTime","std::ffi::CString","std::cell::Cell","std::string::String","std::num::NonZeroI8","std::num::NonZeroU32","std::collections::HashMap","std::collections::VecDeque","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::ops::Range","std::sync::Mutex","std::num::NonZeroI16"],"F":["std::sync::Mutex","std::sync::atomic::AtomicI64","std::path::PathBuf","std::cell::RefCell","std::net::Ipv6Addr","std::collections::BTreeSet","std::ops::Range","std::time::SystemTime","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::collections::BTreeMap","std::collections::VecDeque","std::num::NonZeroU64","std::ffi::CString","std::num::NonZeroUsize","std::net::SocketAddrV4","std::time::Duration","std::rc::Rc","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::sync::Arc","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::num::NonZeroI32","std::string::String","std::boxed::Box","std::net::SocketAddr","std::net::IpAddr","std::marker::PhantomData","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::vec::Vec","std::num::NonZeroI16","std::sync::RwLock","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::cell::Cell","std::num::NonZeroU8","std::collections::HashMap","std::num::NonZeroI128","std::result::Result","std::sync::atomic::AtomicUsize","std::option::Option","std::borrow::Cow","std::collections::Bound","std::num::NonZeroU16"],"G":["std::num::NonZeroU16","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::result::Result","std::cell::Cell","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::collections::HashMap","std::collections::BinaryHeap","std::num::NonZeroU64","std::num::NonZeroI16","std::option::Option","std::sync::RwLock","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroI8","std::num::NonZeroIsize","std::cell::RefCell","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::num::NonZeroU8","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::collections::HashSet","std::time::SystemTime","std::net::SocketAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::ffi::CString","std::net::SocketAddrV4","std::boxed::Box","std::net::Ipv6Addr","std::path::PathBuf","std::num::NonZeroI128","std::borrow::Cow","std::ops::Range","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::vec::Vec","std::num::NonZeroU128","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::sync::Arc","std::collections::Bound","std::time::Duration","std::rc::Rc","std::num::NonZeroU32","std::collections::BTreeSet","std::string::String"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::OsStr","std::ffi::CStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU32","std::marker::PhantomData","std::num::NonZeroI8","std::string::String","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroUsize","std::net::Ipv6Addr","std::num::NonZeroI64","std::time::SystemTime","std::path::PathBuf","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroIsize","std::num::NonZeroI16","std::ffi::CString","std::num::NonZeroI32","std::cell::Cell","std::option::Option","std::net::SocketAddrV4","std::num::NonZeroU16"],"V":["std::collections::Bound","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::collections::BTreeSet","std::path::PathBuf","std::sync::Mutex","std::num::NonZeroU128","std::sync::atomic::AtomicI16","std::vec::Vec","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroI128","std::num::NonZeroU32","std::collections::HashMap","std::sync::atomic::AtomicU64","std::cell::RefCell","std::sync::RwLock","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::net::IpAddr","std::string::String","std::net::SocketAddr","std::cell::Cell","std::time::SystemTime","std::collections::BinaryHeap","std::result::Result","std::num::NonZeroI32","std::num::NonZeroU64","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::ffi::CString","std::collections::HashSet","std::sync::atomic::AtomicU32","std::borrow::Cow","std::ops::Range","std::num::NonZeroUsize","std::sync::Arc","std::time::Duration","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::rc::Rc","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::collections::BTreeMap","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::boxed::Box","std::num::NonZeroI16","std::net::Ipv4Addr"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroU128","std::cell::Cell","std::num::NonZeroI32","std::num::NonZeroU32","std::net::Ipv6Addr","std::time::Duration","std::num::NonZeroU8","std::string::String","std::sync::Arc","std::num::NonZeroU16","std::option::Option","std::num::NonZeroI128","std::net::SocketAddrV4","std::cell::RefCell","std::num::NonZeroI8","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroUsize","std::num::NonZeroI64","std::rc::Rc"]},"std::collections::BinaryHeap":{"T":["std::cell::RefCell","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroI8","std::num::NonZeroIsize","std::num::NonZeroU128","std::num::NonZeroI16","std::option::Option","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroI128","std::string::String","std::rc::Rc","std::num::NonZeroUsize","std::num::NonZeroU32","std::num::NonZeroU64","std::time::Duration","std::time::SystemTime","std::num::NonZeroU8","std::net::Ipv4Addr"]},"std::collections::Bound":{"T":["std::collections::BTreeMap","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroU64","std::num::NonZeroU8","std::rc::Rc","std::num::NonZeroI128","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::string::String","std::num::NonZeroUsize","std::collections::HashSet","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::boxed::Box","std::num::NonZeroIsize","std::option::Option","std::ops::Range","std::ops::RangeInclusive","std::cell::RefCell","std::sync::RwLock","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::cell::Cell","std::collections::HashMap","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::net::SocketAddrV6","std::marker::PhantomData","std::time::Duration","std::num::NonZeroI8","std::collections::Bound","std::result::Result","std::path::PathBuf","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::sync::Arc","std::time::SystemTime","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::sync::Mutex","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::borrow::Cow","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::vec::Vec","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::collections::BTreeSet"]},"std::collections::HashMap":{"K":["std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroI16","std::option::Option","std::collections::Bound","std::time::Duration","std::num::NonZeroI32","std::net::Ipv4Addr","std::rc::Rc","std::marker::PhantomData","std::num::NonZeroU8","std::path::PathBuf"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::collections::BTreeSet","std::num::NonZeroI32","std::net::SocketAddrV6","std::vec::Vec","std::cell::Cell","std::net::SocketAddr","std::ops::RangeInclusive","std::collections::HashSet","std::collections::VecDeque","std::ops::Range","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::num::NonZeroIsize","std::rc::Rc","std::net::IpAddr","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::marker::PhantomData","std::time::Duration","std::num::NonZeroUsize","std::boxed::Box","std::sync::RwLock","std::sync::atomic::AtomicI32","std::borrow::Cow","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::result::Result","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::collections::BTreeMap","std::num::NonZeroI64","std::net::Ipv4Addr","std::collections::Bound","std::ffi::CString","std::path::PathBuf","std::cell::RefCell","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::collections::HashMap","std::sync::Mutex","std::sync::Arc","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::string::String","std::time::SystemTime","std::sync::atomic::AtomicI64"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::net::IpAddr","std::marker::PhantomData","std::net::Ipv6Addr","std::num::NonZeroI64","std::option::Option","std::string::String","std::time::Duration","std::path::PathBuf","std::num::NonZeroI8","std::num::NonZeroIsize","std::net::SocketAddrV4","std::collections::Bound","std::num::NonZeroU8"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::collections::Bound","std::net::IpAddr","std::net::Ipv4Addr","std::collections::HashSet","std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroI32","std::result::Result","std::sync::atomic::AtomicI16","std::rc::Rc","std::num::NonZeroU32","std::borrow::Cow","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::num::NonZeroIsize","std::sync::Mutex","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::collections::BTreeMap","std::num::NonZeroI8","std::sync::RwLock","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::time::SystemTime","std::ops::Range","std::time::Duration","std::num::NonZeroUsize","std::num::NonZeroU64","std::vec::Vec","std::string::String","std::sync::Arc","std::sync::atomic::AtomicU8","std::option::Option","std::cell::RefCell","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::path::PathBuf","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroI16","std::ffi::CString","std::boxed::Box","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::num::NonZeroU8"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroI128","std::collections::BTreeMap","std::sync::RwLock","std::collections::BTreeSet","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::path::PathBuf","std::time::SystemTime","std::net::SocketAddrV4","std::ops::RangeInclusive","std::net::Ipv6Addr","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::boxed::Box","std::num::NonZeroU32","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::collections::Bound","std::ops::Range","std::cell::RefCell","std::collections::HashSet","std::sync::Mutex","std::num::NonZeroI32","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::string::String","std::collections::HashMap","std::sync::Arc","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::rc::Rc","std::num::NonZeroU128","std::collections::VecDeque","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroU16","std::ffi::CString","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::time::Duration","std::num::NonZeroUsize","std::net::IpAddr","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::result::Result","std::sync::atomic::AtomicU8","std::option::Option","std::vec::Vec","std::borrow::Cow"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::string::String","std::num::NonZeroU128","std::time::SystemTime","std::net::SocketAddrV4","std::collections::BinaryHeap","std::net::Ipv6Addr","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroU16","std::num::NonZeroIsize","std::collections::BTreeMap","std::rc::Rc","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::collections::HashSet","std::sync::atomic::AtomicU16","std::collections::HashMap","std::net::SocketAddr","std::num::NonZeroI128","std::boxed::Box","std::cell::Cell","std::num::NonZeroU64","std::num::NonZeroUsize","std::sync::Arc","std::net::Ipv4Addr","std::result::Result","std::path::PathBuf","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::num::NonZeroI32","std::vec::Vec","std::sync::Mutex","std::cell::RefCell","std::option::Option","std::sync::atomic::AtomicIsize","std::time::Duration","std::sync::RwLock","std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroI64","std::ffi::CString","std::net::IpAddr","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::ops::Range","std::collections::Bound","std::collections::BTreeSet","std::borrow::Cow","std::sync::atomic::AtomicU32"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::collections::HashMap","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::net::Ipv4Addr","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::sync::Mutex","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::cell::RefCell","std::cell::Cell","std::num::NonZeroI16","std::boxed::Box","std::sync::atomic::AtomicU64","std::rc::Rc","std::net::IpAddr","std::num::NonZeroI8","std::num::NonZeroI32","std::num::NonZeroIsize","std::net::SocketAddrV6","std::ffi::CString","std::result::Result","std::num::NonZeroU64","std::num::NonZeroI64","std::time::SystemTime","std::collections::BinaryHeap","std::sync::RwLock","std::ops::Range","std::time::Duration","std::num::NonZeroU8","std::num::NonZeroU32","std::path::PathBuf","std::collections::Bound","std::option::Option","std::sync::atomic::AtomicI32","std::collections::HashSet","std::num::NonZeroU128","std::collections::BTreeMap","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::string::String","std::marker::PhantomData","std::vec::Vec","std::num::NonZeroI128","std::num::NonZeroU16","std::collections::BTreeSet","std::sync::Arc"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G)>::borrow_decode(p0);
+<(A, B, C, D, E, F, G)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G)>::decode":{"A":["std::marker::Sized","de::Decode"],"B":["de::Decode","std::marker::Sized"],"C":["de::Decode","std::marker::Sized"],"D":["std::marker::Sized","de::Decode"],"DE":["std::marker::Sized","de::Decoder"],"E":["std::marker::Sized","de::Decode"],"F":["de::Decode","std::marker::Sized"],"G":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["std::cmp::Ord","de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"],"V":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","std::cmp::Ord","enc::Encode","de::Decode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::Bound":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode","std::cmp::Eq","std::hash::Hash"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["de::BorrowDecode","de::Decode","std::cmp::Eq","enc::Encode","std::marker::Sized","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Varint","std::clone::impls::<impl std::clone::Clone for &mut T>","config::LittleEndian","config::Configuration","config::NoLimit","config::Fixint","config::Limit","config::BigEndian"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G)>::decode":{"A":["std::boxed::Box","std::net::Ipv6Addr","std::num::NonZeroI16","std::time::SystemTime","std::sync::Mutex","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::ops::Range","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::vec::Vec","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::sync::Arc","std::num::NonZeroI32","std::collections::Bound","std::collections::VecDeque","std::cell::RefCell","std::rc::Rc","std::cell::Cell","std::sync::RwLock","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::collections::HashSet","std::collections::BTreeMap","std::borrow::Cow","std::result::Result","std::net::SocketAddrV6","std::collections::HashMap","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::path::PathBuf","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroU8","std::collections::BinaryHeap","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::option::Option","std::net::IpAddr","std::time::Duration","std::ffi::CString","std::num::NonZeroU64","std::string::String"],"B":["std::ffi::CString","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::cell::RefCell","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::collections::HashMap","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::string::String","std::net::SocketAddrV4","std::vec::Vec","std::num::NonZeroU16","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::collections::BinaryHeap","std::collections::HashSet","std::ops::Range","std::num::NonZeroIsize","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::sync::Mutex","std::net::SocketAddr","std::time::Duration","std::result::Result","std::collections::BTreeSet","std::net::SocketAddrV6","std::rc::Rc","std::path::PathBuf","std::borrow::Cow","std::num::NonZeroI16","std::num::NonZeroU32","std::cell::Cell","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::option::Option","std::net::IpAddr","std::boxed::Box","std::time::SystemTime","std::collections::Bound","std::sync::atomic::AtomicI64","std::sync::Arc","std::collections::VecDeque","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::num::NonZeroI128"],"C":["std::sync::RwLock","std::boxed::Box","std::collections::BTreeSet","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::result::Result","std::num::NonZeroU64","std::rc::Rc","std::ops::RangeInclusive","std::collections::HashSet","std::collections::HashMap","std::num::NonZeroI128","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::collections::Bound","std::sync::Mutex","std::cell::RefCell","std::option::Option","std::marker::PhantomData","std::num::NonZeroIsize","std::string::String","std::ops::Range","std::num::NonZeroI16","std::collections::BTreeMap","std::time::SystemTime","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::path::PathBuf","std::num::NonZeroU16","std::num::NonZeroU8","std::net::IpAddr","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::ffi::CString","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::time::Duration","std::sync::Arc","std::cell::Cell","std::vec::Vec","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::net::SocketAddr","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::sync::atomic::AtomicI32"],"D":["std::path::PathBuf","std::sync::Mutex","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::time::SystemTime","std::num::NonZeroU16","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::time::Duration","std::collections::VecDeque","std::num::NonZeroI64","std::num::NonZeroU8","std::collections::Bound","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::ops::Range","std::net::Ipv6Addr","std::collections::BTreeSet","std::option::Option","std::ops::RangeInclusive","std::net::SocketAddr","std::vec::Vec","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::collections::HashMap","std::num::NonZeroU128","std::collections::BinaryHeap","std::num::NonZeroUsize","std::collections::HashSet","std::borrow::Cow","std::string::String","std::ffi::CString","std::num::NonZeroIsize","std::num::NonZeroU32","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::sync::RwLock","std::rc::Rc","std::cell::RefCell","std::sync::atomic::AtomicI32","std::cell::Cell","std::net::Ipv4Addr","std::boxed::Box","std::net::IpAddr","std::num::NonZeroU64","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::result::Result","std::collections::BTreeMap","std::sync::Arc","std::num::NonZeroI128","std::sync::atomic::AtomicU16"],"DE":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"E":["std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::path::PathBuf","std::time::SystemTime","std::borrow::Cow","std::vec::Vec","std::collections::HashMap","std::sync::RwLock","std::sync::atomic::AtomicI32","std::ops::Range","std::net::SocketAddrV6","std::cell::Cell","std::boxed::Box","std::num::NonZeroI32","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::marker::PhantomData","std::num::NonZeroI64","std::collections::VecDeque","std::result::Result","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::collections::Bound","std::num::NonZeroUsize","std::sync::Mutex","std::ops::RangeInclusive","std::num::NonZeroU8","std::net::Ipv4Addr","std::num::NonZeroI8","std::num::NonZeroU16","std::option::Option","std::num::NonZeroU32","std::time::Duration","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::sync::Arc","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::ffi::CString","std::collections::HashSet","std::cell::RefCell","std::string::String","std::rc::Rc","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::collections::BTreeMap","std::num::NonZeroU64"],"F":["std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::result::Result","std::net::SocketAddr","std::time::Duration","std::ffi::CString","std::borrow::Cow","std::string::String","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::cell::RefCell","std::num::NonZeroU16","std::vec::Vec","std::net::Ipv4Addr","std::collections::BinaryHeap","std::net::IpAddr","std::collections::BTreeMap","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::path::PathBuf","std::option::Option","std::num::NonZeroI8","std::sync::Mutex","std::collections::VecDeque","std::collections::Bound","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::ops::Range","std::boxed::Box","std::sync::atomic::AtomicBool","std::sync::RwLock","std::num::NonZeroI32","std::sync::Arc","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::collections::HashMap","std::num::NonZeroU128","std::collections::HashSet","std::collections::BTreeSet","std::cell::Cell","std::marker::PhantomData"],"G":["std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::num::NonZeroI8","std::collections::Bound","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::cell::RefCell","std::num::NonZeroI16","std::borrow::Cow","std::net::IpAddr","std::sync::atomic::AtomicI64","std::sync::Mutex","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::option::Option","std::sync::atomic::AtomicI32","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroU32","std::num::NonZeroIsize","std::num::NonZeroU64","std::net::Ipv4Addr","std::collections::BTreeMap","std::num::NonZeroU16","std::result::Result","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::rc::Rc","std::net::SocketAddrV4","std::boxed::Box","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::vec::Vec","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::string::String","std::collections::BinaryHeap","std::num::NonZeroU8","std::num::NonZeroU128","std::sync::RwLock","std::collections::VecDeque","std::sync::Arc","std::num::NonZeroI32","std::time::Duration","std::path::PathBuf","std::collections::HashMap","std::ops::RangeInclusive","std::ffi::CString","std::num::NonZeroI128","std::ops::Range","std::collections::HashSet","std::time::SystemTime"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI128","std::num::NonZeroIsize","std::net::Ipv4Addr","std::path::PathBuf","std::string::String","std::net::IpAddr","std::num::NonZeroI8","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroI32","std::time::Duration","std::num::NonZeroI64","std::net::Ipv6Addr","std::cell::Cell","std::num::NonZeroU16","std::net::SocketAddrV4","std::num::NonZeroI16","std::marker::PhantomData"],"V":["std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::vec::Vec","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::ffi::CString","std::net::SocketAddrV4","std::net::Ipv4Addr","std::collections::HashSet","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::cell::Cell","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::collections::VecDeque","std::sync::RwLock","std::option::Option","std::num::NonZeroU8","std::num::NonZeroI128","std::num::NonZeroI8","std::net::SocketAddr","std::net::SocketAddrV6","std::collections::BTreeMap","std::path::PathBuf","std::num::NonZeroUsize","std::string::String","std::time::Duration","std::rc::Rc","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::num::NonZeroU16","std::collections::BinaryHeap","std::sync::Arc","std::sync::atomic::AtomicU64","std::time::SystemTime","std::boxed::Box","std::collections::Bound","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::borrow::Cow","std::collections::HashMap","std::num::NonZeroI16","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::ops::Range","std::ops::RangeInclusive","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::result::Result","std::cell::RefCell","std::net::IpAddr","std::num::NonZeroI64","std::sync::atomic::AtomicIsize"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI128","std::net::SocketAddrV6","std::num::NonZeroU32","std::cell::Cell","std::num::NonZeroU128","std::time::Duration","std::time::SystemTime","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroI8","std::marker::PhantomData","std::ffi::CString","std::num::NonZeroI64","std::net::Ipv4Addr","std::rc::Rc","std::net::IpAddr","std::num::NonZeroU64","std::num::NonZeroU16","std::option::Option","std::num::NonZeroIsize","std::num::NonZeroI32","std::cell::RefCell","std::path::PathBuf"]},"std::collections::BinaryHeap":{"T":["std::cell::Cell","std::num::NonZeroIsize","std::net::IpAddr","std::option::Option","std::path::PathBuf","std::num::NonZeroI8","std::sync::Arc","std::cell::RefCell","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroI64","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroU128","std::time::SystemTime","std::net::Ipv6Addr","std::time::Duration","std::ffi::CString","std::string::String","std::net::SocketAddrV4","std::num::NonZeroU16"]},"std::collections::Bound":{"T":["std::collections::HashSet","std::sync::RwLock","std::collections::BinaryHeap","std::cell::Cell","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::rc::Rc","std::vec::Vec","std::collections::HashMap","std::net::SocketAddr","std::ops::Range","std::net::IpAddr","std::option::Option","std::net::Ipv4Addr","std::num::NonZeroI128","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::borrow::Cow","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroU16","std::time::SystemTime","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::boxed::Box","std::sync::atomic::AtomicU16","std::ffi::CString","std::collections::VecDeque","std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroI64","std::num::NonZeroU8","std::num::NonZeroI16","std::net::SocketAddrV6","std::result::Result","std::num::NonZeroU32","std::sync::Mutex","std::sync::Arc","std::net::SocketAddrV4","std::num::NonZeroI8","std::string::String","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::collections::Bound","std::time::Duration","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::net::Ipv6Addr","std::num::NonZeroIsize","std::sync::atomic::AtomicU8"]},"std::collections::HashMap":{"K":["std::string::String","std::sync::Arc","std::path::PathBuf","std::num::NonZeroI64","std::num::NonZeroI16","std::net::SocketAddr","std::rc::Rc","std::option::Option","std::net::SocketAddrV6","std::num::NonZeroI32","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroUsize"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::result::Result","std::sync::Arc","std::ops::RangeInclusive","std::sync::Mutex","std::time::SystemTime","std::cell::Cell","std::num::NonZeroI128","std::option::Option","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::cell::RefCell","std::collections::Bound","std::net::SocketAddr","std::num::NonZeroI16","std::net::SocketAddrV4","std::collections::BinaryHeap","std::vec::Vec","std::string::String","std::sync::atomic::AtomicBool","std::collections::HashMap","std::rc::Rc","std::sync::RwLock","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::ops::Range","std::num::NonZeroU8","std::collections::BTreeSet","std::time::Duration","std::net::Ipv4Addr","std::marker::PhantomData","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::borrow::Cow","std::num::NonZeroU16","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroU32","std::net::IpAddr","std::boxed::Box","std::path::PathBuf","std::num::NonZeroI64","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::collections::HashSet","std::num::NonZeroUsize","std::num::NonZeroIsize","std::net::Ipv6Addr"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU8","std::time::Duration","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroI128","std::net::Ipv6Addr","std::num::NonZeroU128","std::net::IpAddr","std::rc::Rc","std::option::Option","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroU64","std::ffi::CString","std::num::NonZeroU32","std::string::String"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::collections::HashMap","std::num::NonZeroU16","std::vec::Vec","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::num::NonZeroU64","std::sync::RwLock","std::num::NonZeroI32","std::time::Duration","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::num::NonZeroU32","std::net::Ipv4Addr","std::time::SystemTime","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::option::Option","std::rc::Rc","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::string::String","std::ops::Range","std::collections::HashSet","std::collections::Bound","std::result::Result","std::net::SocketAddrV6","std::borrow::Cow","std::num::NonZeroIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::net::SocketAddrV4","std::sync::Mutex","std::ffi::CString","std::num::NonZeroU128","std::path::PathBuf","std::cell::RefCell","std::net::IpAddr","std::sync::atomic::AtomicBool","std::sync::Arc","std::num::NonZeroU8","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::num::NonZeroI8","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::collections::BinaryHeap","std::boxed::Box","std::sync::atomic::AtomicU8","std::cell::Cell"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroUsize","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::time::SystemTime","std::cell::RefCell","std::cell::Cell","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::result::Result","std::collections::BTreeSet","std::collections::HashSet","std::vec::Vec","std::string::String","std::time::Duration","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::path::PathBuf","std::num::NonZeroU16","std::num::NonZeroU128","std::ffi::CString","std::rc::Rc","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::collections::BinaryHeap","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::boxed::Box","std::borrow::Cow","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::sync::RwLock","std::collections::Bound","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroI8","std::sync::Mutex","std::ops::Range","std::sync::atomic::AtomicBool","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroI64","std::net::IpAddr","std::collections::HashMap","std::option::Option","std::collections::BTreeMap","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::net::SocketAddr"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::borrow::Cow","std::cell::RefCell","std::vec::Vec","std::collections::BinaryHeap","std::num::NonZeroU32","std::num::NonZeroI16","std::num::NonZeroU64","std::sync::RwLock","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::cell::Cell","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroUsize","std::net::Ipv6Addr","std::string::String","std::time::SystemTime","std::net::SocketAddrV6","std::result::Result","std::num::NonZeroI8","std::marker::PhantomData","std::sync::Arc","std::sync::atomic::AtomicIsize","std::ops::Range","std::sync::atomic::AtomicBool","std::sync::Mutex","std::option::Option","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::time::Duration","std::collections::Bound","std::boxed::Box","std::num::NonZeroI128","std::net::SocketAddr","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroU128","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::collections::HashSet","std::sync::atomic::AtomicU64","std::collections::HashMap","std::num::NonZeroIsize","std::ops::RangeInclusive","std::collections::BTreeSet","std::ffi::CString","std::rc::Rc"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::path::PathBuf","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::collections::HashMap","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::num::NonZeroI64","std::sync::Arc","std::option::Option","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::collections::HashSet","std::borrow::Cow","std::num::NonZeroU64","std::num::NonZeroUsize","std::boxed::Box","std::sync::RwLock","std::sync::atomic::AtomicU32","std::cell::Cell","std::sync::atomic::AtomicIsize","std::collections::Bound","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::ops::Range","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::string::String","std::time::Duration","std::net::IpAddr","std::num::NonZeroU32","std::collections::BinaryHeap","std::num::NonZeroU128","std::num::NonZeroI8","std::num::NonZeroI32","std::vec::Vec","std::net::Ipv6Addr","std::ffi::CString","std::rc::Rc","std::collections::VecDeque","std::time::SystemTime","std::num::NonZeroI128","std::result::Result","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::sync::Mutex","std::sync::atomic::AtomicBool","std::collections::BTreeSet"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G)>::decode(p0);
+<(A, B, C, D, E, F, G)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H)>::borrow_decode":{"A":["de::BorrowDecode","std::marker::Sized"],"B":["std::marker::Sized","de::BorrowDecode"],"BD":["std::marker::Sized","de::BorrowDecoder"],"C":["std::marker::Sized","de::BorrowDecode"],"D":["std::marker::Sized","de::BorrowDecode"],"E":["de::BorrowDecode","std::marker::Sized"],"F":["de::BorrowDecode","std::marker::Sized"],"G":["de::BorrowDecode","std::marker::Sized"],"H":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Ord"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["enc::Encode","std::cmp::Ord","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::BinaryHeap":{"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord"]},"std::collections::Bound":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["enc::Encode","std::cmp::Eq","de::Decode","std::marker::Sized","de::BorrowDecode","std::hash::Hash"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["de::Decode","de::BorrowDecode","std::hash::Hash","std::marker::Sized","std::cmp::Eq","enc::Encode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::BigEndian","config::Varint","config::Fixint","config::LittleEndian","config::Configuration","config::NoLimit","std::clone::impls::<impl std::clone::Clone for *const T>","config::Limit"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H)>::borrow_decode":{"A":["std::borrow::Cow","std::marker::PhantomData","std::net::Ipv6Addr","std::boxed::Box","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::string::String","std::num::NonZeroIsize","std::num::NonZeroUsize","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::collections::Bound","std::ops::RangeInclusive","std::sync::Mutex","std::time::SystemTime","std::ops::Range","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::collections::BinaryHeap","std::net::SocketAddrV4","std::cell::RefCell","std::net::SocketAddrV6","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::path::PathBuf","std::net::IpAddr","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::num::NonZeroU8","std::sync::RwLock","std::option::Option","std::rc::Rc","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::ffi::CString","std::collections::VecDeque","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::num::NonZeroI8","std::result::Result","std::cell::Cell","std::num::NonZeroU64","std::time::Duration","std::num::NonZeroU128","std::sync::Arc","std::collections::HashMap","std::num::NonZeroU16","std::vec::Vec","std::net::Ipv4Addr"],"B":["std::time::SystemTime","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::option::Option","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::string::String","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::num::NonZeroUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::collections::Bound","std::result::Result","std::net::IpAddr","std::num::NonZeroU32","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroIsize","std::collections::BTreeSet","std::sync::Mutex","std::num::NonZeroI32","std::ffi::CString","std::collections::HashSet","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::collections::VecDeque","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::collections::HashMap","std::num::NonZeroI8","std::cell::Cell","std::collections::BinaryHeap","std::num::NonZeroU16","std::sync::RwLock","std::net::SocketAddrV6","std::sync::Arc","std::vec::Vec","std::cell::RefCell","std::ops::Range","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::time::Duration","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::rc::Rc","std::boxed::Box","std::num::NonZeroU128","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroI128"],"BD":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"C":["std::option::Option","std::num::NonZeroU32","std::cell::Cell","std::time::SystemTime","std::path::PathBuf","std::time::Duration","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::num::NonZeroI16","std::borrow::Cow","std::sync::atomic::AtomicU8","std::result::Result","std::boxed::Box","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::num::NonZeroU64","std::collections::HashMap","std::net::Ipv4Addr","std::net::SocketAddrV4","std::net::SocketAddrV6","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::string::String","std::net::SocketAddr","std::num::NonZeroU8","std::collections::BinaryHeap","std::ops::RangeInclusive","std::vec::Vec","std::cell::RefCell","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::rc::Rc","std::collections::HashSet","std::num::NonZeroU128","std::ops::Range","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::sync::RwLock","std::collections::Bound","std::ffi::CString","std::sync::atomic::AtomicU32","std::sync::Mutex","std::num::NonZeroI32","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::net::IpAddr","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::num::NonZeroUsize","std::sync::Arc"],"D":["std::num::NonZeroI32","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::collections::BinaryHeap","std::rc::Rc","std::cell::Cell","std::option::Option","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroU16","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::time::SystemTime","std::path::PathBuf","std::result::Result","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::sync::atomic::AtomicU32","std::cell::RefCell","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::collections::BTreeSet","std::num::NonZeroU64","std::ffi::CString","std::sync::atomic::AtomicU16","std::net::IpAddr","std::time::Duration","std::sync::atomic::AtomicI64","std::collections::HashSet","std::borrow::Cow","std::collections::BTreeMap","std::net::SocketAddr","std::sync::Mutex","std::num::NonZeroUsize","std::ops::Range","std::net::Ipv4Addr","std::num::NonZeroI8","std::ops::RangeInclusive","std::num::NonZeroU8","std::collections::Bound","std::string::String","std::sync::Arc","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::num::NonZeroU32","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::vec::Vec","std::boxed::Box","std::net::SocketAddrV6","std::num::NonZeroU128"],"E":["std::sync::atomic::AtomicU8","std::cell::Cell","std::rc::Rc","std::ops::Range","std::num::NonZeroI32","std::num::NonZeroI8","std::time::Duration","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::num::NonZeroU8","std::num::NonZeroU64","std::ops::RangeInclusive","std::option::Option","std::collections::HashMap","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::ffi::CString","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::borrow::Cow","std::collections::BinaryHeap","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::BTreeSet","std::collections::Bound","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::cell::RefCell","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::net::Ipv6Addr","std::boxed::Box","std::vec::Vec","std::net::Ipv4Addr","std::collections::VecDeque","std::collections::HashSet","std::time::SystemTime","std::sync::RwLock","std::marker::PhantomData","std::sync::Mutex","std::sync::atomic::AtomicU16","std::string::String","std::net::SocketAddr","std::collections::BTreeMap","std::net::IpAddr","std::result::Result","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroUsize","std::num::NonZeroI128"],"F":["std::ffi::CString","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::cell::RefCell","std::string::String","std::sync::atomic::AtomicU8","std::boxed::Box","std::ops::RangeInclusive","std::time::Duration","std::option::Option","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::collections::HashMap","std::collections::BinaryHeap","std::num::NonZeroU128","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::net::IpAddr","std::num::NonZeroUsize","std::result::Result","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::net::SocketAddrV4","std::num::NonZeroI8","std::borrow::Cow","std::collections::HashSet","std::num::NonZeroI32","std::num::NonZeroU8","std::cell::Cell","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::net::SocketAddrV6","std::collections::VecDeque","std::vec::Vec","std::sync::atomic::AtomicI64","std::sync::Arc","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::sync::RwLock","std::collections::Bound","std::marker::PhantomData","std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroI64","std::path::PathBuf","std::ops::Range","std::sync::atomic::AtomicBool","std::sync::Mutex"],"G":["std::num::NonZeroI16","std::ops::Range","std::rc::Rc","std::sync::Arc","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::time::Duration","std::collections::BTreeMap","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroI8","std::ffi::CString","std::num::NonZeroU8","std::ops::RangeInclusive","std::num::NonZeroI64","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::net::IpAddr","std::vec::Vec","std::num::NonZeroI32","std::collections::HashMap","std::net::SocketAddr","std::num::NonZeroU64","std::num::NonZeroU128","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::result::Result","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::option::Option","std::collections::HashSet","std::collections::BTreeSet","std::sync::Mutex","std::sync::atomic::AtomicI8","std::cell::Cell","std::net::SocketAddrV6","std::num::NonZeroIsize","std::string::String","std::borrow::Cow","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::num::NonZeroU16","std::time::SystemTime","std::marker::PhantomData","std::path::PathBuf","std::boxed::Box","std::collections::Bound","std::cell::RefCell"],"H":["std::sync::RwLock","std::borrow::Cow","std::cell::RefCell","std::net::SocketAddr","std::boxed::Box","std::net::IpAddr","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::result::Result","std::ops::Range","std::option::Option","std::num::NonZeroI64","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::rc::Rc","std::time::SystemTime","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroU8","std::net::Ipv4Addr","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::sync::Mutex","std::ffi::CString","std::collections::BTreeSet","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::collections::HashSet","std::sync::Arc","std::collections::VecDeque","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::collections::BTreeMap","std::time::Duration","std::cell::Cell","std::collections::Bound","std::collections::HashMap","std::num::NonZeroI128","std::string::String","std::sync::atomic::AtomicI32","std::vec::Vec","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::collections::BinaryHeap","std::path::PathBuf"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::path::Path","std::ffi::OsStr","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::string::String","std::option::Option","std::net::Ipv4Addr","std::num::NonZeroI8","std::num::NonZeroU32","std::rc::Rc","std::num::NonZeroIsize","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroU16","std::net::IpAddr","std::sync::Arc","std::num::NonZeroI16","std::cell::Cell","std::cell::RefCell","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroI32","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroI64"],"V":["std::collections::HashSet","std::num::NonZeroU32","std::time::SystemTime","std::collections::Bound","std::num::NonZeroI64","std::string::String","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::borrow::Cow","std::time::Duration","std::result::Result","std::ffi::CString","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::vec::Vec","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::boxed::Box","std::net::IpAddr","std::num::NonZeroUsize","std::num::NonZeroI32","std::collections::BTreeMap","std::num::NonZeroU128","std::marker::PhantomData","std::num::NonZeroIsize","std::cell::Cell","std::cell::RefCell","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::rc::Rc","std::collections::HashMap","std::path::PathBuf","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::sync::RwLock","std::sync::Mutex","std::ops::RangeInclusive","std::ops::Range","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::num::NonZeroU16","std::sync::Arc","std::option::Option","std::collections::BinaryHeap","std::net::SocketAddrV4","std::net::Ipv6Addr","std::collections::BTreeSet","std::net::SocketAddrV6","std::net::Ipv4Addr","std::num::NonZeroU64"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU16","std::num::NonZeroU128","std::net::IpAddr","std::marker::PhantomData","std::net::Ipv4Addr","std::sync::Arc","std::num::NonZeroI16","std::num::NonZeroU8","std::option::Option","std::num::NonZeroUsize","std::time::Duration","std::net::Ipv6Addr","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroI64","std::num::NonZeroU64","std::num::NonZeroI8","std::time::SystemTime","std::num::NonZeroI32","std::net::SocketAddrV6"]},"std::collections::BinaryHeap":{"T":["std::path::PathBuf","std::marker::PhantomData","std::time::SystemTime","std::net::Ipv4Addr","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroU8","std::cell::RefCell","std::string::String","std::num::NonZeroU64","std::ffi::CString","std::option::Option","std::net::SocketAddrV4","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroIsize","std::cell::Cell","std::net::IpAddr","std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroU128"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicU8","std::net::SocketAddr","std::num::NonZeroI64","std::net::Ipv6Addr","std::time::SystemTime","std::collections::HashSet","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::ops::Range","std::collections::BTreeMap","std::net::SocketAddrV6","std::num::NonZeroU64","std::num::NonZeroU8","std::collections::VecDeque","std::path::PathBuf","std::rc::Rc","std::cell::Cell","std::sync::Mutex","std::num::NonZeroU32","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::string::String","std::num::NonZeroUsize","std::collections::BinaryHeap","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::ffi::CString","std::sync::atomic::AtomicIsize","std::boxed::Box","std::collections::HashMap","std::time::Duration","std::borrow::Cow","std::num::NonZeroU128","std::sync::Arc","std::net::IpAddr","std::collections::Bound","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::collections::BTreeSet","std::cell::RefCell","std::num::NonZeroI16","std::option::Option","std::sync::atomic::AtomicI64","std::result::Result","std::sync::RwLock","std::vec::Vec","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::num::NonZeroI8","std::marker::PhantomData","std::net::SocketAddrV4"]},"std::collections::HashMap":{"K":["std::num::NonZeroI128","std::string::String","std::sync::Arc","std::time::Duration","std::net::Ipv6Addr","std::num::NonZeroI32","std::num::NonZeroI64","std::num::NonZeroUsize","std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroU64","std::path::PathBuf","std::num::NonZeroI8","std::net::SocketAddrV4","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroU128","std::time::SystemTime","std::num::NonZeroIsize","std::ffi::CString","std::net::SocketAddrV6"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicU16","std::ffi::CString","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::num::NonZeroI8","std::result::Result","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::num::NonZeroU128","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::cell::Cell","std::borrow::Cow","std::collections::BTreeMap","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::net::IpAddr","std::collections::Bound","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::path::PathBuf","std::collections::BTreeSet","std::num::NonZeroU16","std::net::Ipv6Addr","std::cell::RefCell","std::string::String","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::sync::Arc","std::num::NonZeroI32","std::net::Ipv4Addr","std::marker::PhantomData","std::num::NonZeroU64","std::net::SocketAddrV6","std::ops::Range","std::option::Option","std::sync::Mutex","std::num::NonZeroIsize","std::time::SystemTime","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::boxed::Box","std::vec::Vec","std::rc::Rc","std::sync::RwLock","std::time::Duration","std::collections::VecDeque","std::collections::HashSet"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::time::SystemTime","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroU16","std::num::NonZeroI8","std::marker::PhantomData","std::rc::Rc","std::option::Option","std::num::NonZeroIsize","std::ffi::CString","std::net::Ipv4Addr","std::num::NonZeroUsize","std::string::String","std::num::NonZeroI32"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::collections::BTreeSet","std::num::NonZeroI16","std::collections::VecDeque","std::cell::Cell","std::sync::atomic::AtomicI64","std::path::PathBuf","std::vec::Vec","std::num::NonZeroI64","std::num::NonZeroUsize","std::time::SystemTime","std::num::NonZeroI8","std::sync::Arc","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::borrow::Cow","std::collections::HashSet","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::num::NonZeroU16","std::sync::RwLock","std::ops::RangeInclusive","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::boxed::Box","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::num::NonZeroI32","std::num::NonZeroU32","std::collections::Bound","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::ffi::CString","std::sync::Mutex","std::num::NonZeroU128","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::ops::Range","std::collections::HashMap","std::num::NonZeroIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::result::Result","std::num::NonZeroU8","std::option::Option","std::num::NonZeroI128","std::marker::PhantomData","std::time::Duration","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::cell::RefCell","std::rc::Rc","std::sync::atomic::AtomicU32","std::string::String"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::result::Result","std::sync::atomic::AtomicU32","std::option::Option","std::ops::Range","std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroU8","std::cell::Cell","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::string::String","std::boxed::Box","std::ffi::CString","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroI128","std::cell::RefCell","std::sync::atomic::AtomicI32","std::collections::Bound","std::borrow::Cow","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroI64","std::sync::RwLock","std::collections::BTreeSet","std::time::SystemTime","std::net::Ipv6Addr","std::num::NonZeroI32","std::path::PathBuf","std::num::NonZeroI16","std::sync::Arc","std::num::NonZeroIsize","std::ops::RangeInclusive","std::vec::Vec","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::time::Duration","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::collections::HashMap","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::sync::Mutex","std::num::NonZeroI8","std::collections::BinaryHeap","std::collections::BTreeMap","std::collections::HashSet","std::num::NonZeroU32"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroU16","std::net::IpAddr","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::sync::Mutex","std::num::NonZeroUsize","std::time::Duration","std::sync::atomic::AtomicI8","std::string::String","std::collections::HashMap","std::num::NonZeroU32","std::rc::Rc","std::num::NonZeroU8","std::collections::BTreeMap","std::collections::HashSet","std::cell::RefCell","std::net::Ipv4Addr","std::vec::Vec","std::ffi::CString","std::result::Result","std::num::NonZeroI128","std::net::Ipv6Addr","std::collections::BTreeSet","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroU128","std::ops::Range","std::sync::atomic::AtomicU16","std::sync::Arc","std::sync::atomic::AtomicI16","std::option::Option","std::path::PathBuf","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::borrow::Cow","std::net::SocketAddrV6","std::collections::BinaryHeap","std::boxed::Box","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroI64","std::collections::Bound","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::time::SystemTime","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::cell::Cell","std::net::SocketAddr"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::collections::BinaryHeap","std::num::NonZeroU128","std::net::SocketAddr","std::cell::RefCell","std::num::NonZeroU32","std::sync::RwLock","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::sync::Arc","std::option::Option","std::num::NonZeroUsize","std::boxed::Box","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::ops::Range","std::num::NonZeroIsize","std::num::NonZeroU16","std::net::Ipv6Addr","std::sync::Mutex","std::sync::atomic::AtomicU64","std::result::Result","std::num::NonZeroI128","std::vec::Vec","std::borrow::Cow","std::rc::Rc","std::net::Ipv4Addr","std::ffi::CString","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::marker::PhantomData","std::cell::Cell","std::collections::BTreeSet","std::num::NonZeroI64","std::time::Duration","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::collections::Bound","std::collections::HashSet","std::net::IpAddr","std::string::String","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::collections::HashMap","std::path::PathBuf","std::time::SystemTime"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H)>::borrow_decode(p0);
+<(A, B, C, D, E, F, G, H)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H)>::decode":{"A":["de::Decode","std::marker::Sized"],"B":["de::Decode","std::marker::Sized"],"C":["de::Decode","std::marker::Sized"],"D":["std::marker::Sized","de::Decode"],"DE":["de::Decoder","std::marker::Sized"],"E":["std::marker::Sized","de::Decode"],"F":["de::Decode","std::marker::Sized"],"G":["de::Decode","std::marker::Sized"],"H":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"K":["std::marker::Sized","std::cmp::Ord","de::Decode","enc::Encode","de::BorrowDecode"],"V":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::Bound":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashMap":{"K":["enc::Encode","std::hash::Hash","std::marker::Sized","de::Decode","std::cmp::Eq","de::BorrowDecode"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["std::marker::Sized","std::hash::Hash","enc::Encode","std::cmp::Eq","de::Decode","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","std::clone::impls::<impl std::clone::Clone for &T>","config::Limit","config::Varint","config::Fixint","config::BigEndian","config::Configuration","config::NoLimit"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H)>::decode":{"A":["std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroU16","std::cell::RefCell","std::sync::atomic::AtomicBool","std::sync::Mutex","std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroU32","std::borrow::Cow","std::net::SocketAddr","std::collections::VecDeque","std::boxed::Box","std::rc::Rc","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::option::Option","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::time::Duration","std::vec::Vec","std::num::NonZeroI128","std::net::Ipv6Addr","std::num::NonZeroI8","std::num::NonZeroU8","std::sync::Arc","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::string::String","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::collections::HashMap","std::ops::Range","std::net::IpAddr","std::num::NonZeroIsize","std::sync::RwLock","std::ffi::CString","std::net::Ipv4Addr","std::time::SystemTime","std::num::NonZeroUsize","std::num::NonZeroU128","std::collections::BTreeSet","std::collections::BinaryHeap","std::ops::RangeInclusive","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::collections::HashSet","std::result::Result","std::collections::Bound","std::cell::Cell","std::path::PathBuf"],"B":["std::result::Result","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::collections::BTreeSet","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicBool","std::collections::HashMap","std::sync::atomic::AtomicU64","std::time::SystemTime","std::net::IpAddr","std::sync::atomic::AtomicI16","std::rc::Rc","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::ops::RangeInclusive","std::collections::VecDeque","std::collections::Bound","std::vec::Vec","std::num::NonZeroI128","std::collections::BTreeMap","std::num::NonZeroUsize","std::num::NonZeroU64","std::sync::Arc","std::time::Duration","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::ops::Range","std::boxed::Box","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroU128","std::sync::RwLock","std::num::NonZeroU32","std::string::String","std::collections::HashSet","std::num::NonZeroU8","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::ffi::CString","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::marker::PhantomData","std::cell::RefCell","std::net::Ipv6Addr","std::borrow::Cow","std::num::NonZeroIsize"],"C":["std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::time::SystemTime","std::collections::BTreeSet","std::time::Duration","std::net::Ipv4Addr","std::num::NonZeroI8","std::collections::Bound","std::result::Result","std::num::NonZeroI64","std::marker::PhantomData","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::collections::HashMap","std::boxed::Box","std::num::NonZeroU8","std::path::PathBuf","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::sync::Arc","std::sync::Mutex","std::vec::Vec","std::net::SocketAddr","std::string::String","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::net::IpAddr","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::ops::Range","std::sync::RwLock","std::num::NonZeroU128","std::num::NonZeroI32","std::collections::HashSet","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::option::Option","std::num::NonZeroU32","std::ops::RangeInclusive","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::borrow::Cow","std::net::Ipv6Addr","std::cell::Cell","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::cell::RefCell","std::rc::Rc","std::sync::atomic::AtomicUsize","std::ffi::CString"],"D":["std::collections::HashMap","std::num::NonZeroI16","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::option::Option","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::rc::Rc","std::path::PathBuf","std::ops::Range","std::num::NonZeroU64","std::net::IpAddr","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::collections::Bound","std::net::Ipv4Addr","std::cell::RefCell","std::sync::RwLock","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::cell::Cell","std::boxed::Box","std::sync::atomic::AtomicU64","std::time::SystemTime","std::result::Result","std::num::NonZeroI128","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::num::NonZeroU128","std::time::Duration","std::ffi::CString","std::num::NonZeroI64","std::vec::Vec","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::sync::Arc","std::collections::BTreeSet","std::string::String","std::collections::HashSet","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::collections::VecDeque","std::sync::Mutex","std::borrow::Cow","std::collections::BinaryHeap"],"DE":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"E":["std::num::NonZeroI128","std::collections::BTreeSet","std::sync::Arc","std::option::Option","std::net::SocketAddrV4","std::net::Ipv6Addr","std::result::Result","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::collections::HashMap","std::collections::Bound","std::borrow::Cow","std::collections::BTreeMap","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::ops::Range","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::cell::Cell","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::ffi::CString","std::path::PathBuf","std::ops::RangeInclusive","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::sync::Mutex","std::net::IpAddr","std::string::String","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::cell::RefCell","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::collections::BinaryHeap","std::num::NonZeroU32","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::vec::Vec","std::time::SystemTime","std::num::NonZeroI32","std::sync::RwLock","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::time::Duration","std::num::NonZeroI16","std::collections::HashSet","std::num::NonZeroI8","std::num::NonZeroU8","std::boxed::Box","std::rc::Rc"],"F":["std::num::NonZeroI128","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::collections::HashMap","std::string::String","std::sync::atomic::AtomicU8","std::rc::Rc","std::marker::PhantomData","std::net::IpAddr","std::cell::RefCell","std::sync::Arc","std::sync::atomic::AtomicI16","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroU32","std::borrow::Cow","std::path::PathBuf","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::net::Ipv4Addr","std::collections::HashSet","std::option::Option","std::boxed::Box","std::sync::RwLock","std::net::Ipv6Addr","std::time::SystemTime","std::vec::Vec","std::net::SocketAddrV4","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::ops::Range","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::net::SocketAddrV6","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::result::Result","std::ops::RangeInclusive","std::time::Duration","std::sync::Mutex","std::num::NonZeroUsize","std::collections::Bound","std::num::NonZeroU128"],"G":["std::collections::BTreeSet","std::vec::Vec","std::sync::Arc","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::option::Option","std::ffi::CString","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::time::Duration","std::net::Ipv4Addr","std::num::NonZeroU128","std::num::NonZeroUsize","std::rc::Rc","std::sync::Mutex","std::num::NonZeroU32","std::net::Ipv6Addr","std::num::NonZeroIsize","std::cell::Cell","std::sync::atomic::AtomicI16","std::result::Result","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::boxed::Box","std::num::NonZeroI16","std::net::SocketAddrV6","std::collections::HashMap","std::sync::atomic::AtomicI8","std::cell::RefCell","std::marker::PhantomData","std::ops::RangeInclusive","std::sync::RwLock","std::ops::Range","std::collections::HashSet","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::net::SocketAddrV4","std::num::NonZeroI32","std::path::PathBuf","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::time::SystemTime","std::borrow::Cow","std::string::String","std::collections::Bound","std::net::IpAddr"],"H":["std::sync::RwLock","std::ops::Range","std::vec::Vec","std::sync::atomic::AtomicIsize","std::string::String","std::num::NonZeroI32","std::collections::HashMap","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::sync::Mutex","std::num::NonZeroI128","std::num::NonZeroU32","std::net::SocketAddr","std::ops::RangeInclusive","std::boxed::Box","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroU128","std::collections::VecDeque","std::net::IpAddr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::collections::HashSet","std::cell::RefCell","std::net::SocketAddrV6","std::collections::BTreeSet","std::result::Result","std::ffi::CString","std::sync::atomic::AtomicU16","std::cell::Cell","std::option::Option","std::sync::atomic::AtomicBool","std::path::PathBuf","std::rc::Rc","std::num::NonZeroU16","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::marker::PhantomData","std::num::NonZeroUsize","std::time::Duration","std::borrow::Cow","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::sync::Arc"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroU32","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroIsize","std::string::String","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroI16","std::option::Option","std::num::NonZeroI128","std::num::NonZeroU64","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroUsize","std::num::NonZeroI32","std::time::SystemTime","std::path::PathBuf","std::cell::Cell","std::num::NonZeroI8","std::ffi::CString","std::sync::Arc"],"V":["std::ops::RangeInclusive","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::boxed::Box","std::net::Ipv6Addr","std::time::SystemTime","std::collections::VecDeque","std::num::NonZeroI128","std::rc::Rc","std::net::Ipv4Addr","std::collections::HashMap","std::net::IpAddr","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::sync::Arc","std::vec::Vec","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::borrow::Cow","std::collections::BinaryHeap","std::collections::Bound","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::sync::Mutex","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::option::Option","std::sync::atomic::AtomicI8","std::ffi::CString","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::cell::Cell","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::sync::RwLock","std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroI16","std::string::String","std::num::NonZeroU8","std::ops::Range","std::path::PathBuf","std::net::SocketAddrV6","std::marker::PhantomData","std::collections::HashSet","std::result::Result","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::time::Duration","std::collections::BTreeMap"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::SocketAddrV6","std::marker::PhantomData","std::net::Ipv6Addr","std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroU16","std::net::SocketAddrV4","std::time::Duration","std::time::SystemTime","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroU128","std::string::String","std::option::Option","std::num::NonZeroI8","std::num::NonZeroIsize","std::cell::RefCell","std::net::IpAddr","std::num::NonZeroI64","std::num::NonZeroU8","std::num::NonZeroU32","std::num::NonZeroU64","std::num::NonZeroI32"]},"std::collections::BinaryHeap":{"T":["std::marker::PhantomData","std::num::NonZeroI16","std::cell::RefCell","std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroI8","std::time::Duration","std::option::Option","std::num::NonZeroU16","std::net::Ipv6Addr","std::net::Ipv4Addr","std::net::SocketAddrV6","std::num::NonZeroIsize","std::sync::Arc","std::net::SocketAddr"]},"std::collections::Bound":{"T":["std::collections::HashMap","std::num::NonZeroI64","std::boxed::Box","std::ffi::CString","std::collections::HashSet","std::num::NonZeroUsize","std::num::NonZeroI32","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::option::Option","std::ops::Range","std::result::Result","std::time::Duration","std::vec::Vec","std::sync::RwLock","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::string::String","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::collections::Bound","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::net::IpAddr","std::sync::Arc","std::sync::Mutex","std::net::SocketAddrV6","std::num::NonZeroU32","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::num::NonZeroU8","std::borrow::Cow","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::cell::RefCell","std::sync::atomic::AtomicI32","std::path::PathBuf","std::ops::RangeInclusive","std::rc::Rc","std::collections::BinaryHeap","std::collections::VecDeque","std::time::SystemTime","std::collections::BTreeSet","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::num::NonZeroU16"]},"std::collections::HashMap":{"K":["std::net::Ipv6Addr","std::collections::Bound","std::time::SystemTime","std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroI8","std::path::PathBuf","std::num::NonZeroU32","std::num::NonZeroU8","std::sync::Arc","std::option::Option","std::num::NonZeroIsize","std::num::NonZeroI32","std::num::NonZeroI64","std::net::SocketAddrV6","std::rc::Rc","std::marker::PhantomData","std::net::IpAddr","std::ffi::CString","std::net::Ipv4Addr","std::string::String","std::num::NonZeroU64"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::ops::RangeInclusive","std::sync::Mutex","std::num::NonZeroI32","std::path::PathBuf","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::vec::Vec","std::ops::Range","std::num::NonZeroUsize","std::sync::RwLock","std::collections::BTreeMap","std::num::NonZeroI8","std::borrow::Cow","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::cell::Cell","std::num::NonZeroI64","std::num::NonZeroU16","std::net::IpAddr","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::cell::RefCell","std::time::Duration","std::sync::atomic::AtomicI64","std::boxed::Box","std::ffi::CString","std::collections::HashSet","std::result::Result","std::collections::HashMap","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::collections::BinaryHeap","std::num::NonZeroIsize","std::sync::Arc","std::option::Option","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::net::SocketAddrV4","std::net::Ipv4Addr","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::rc::Rc","std::num::NonZeroI128","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::string::String","std::sync::atomic::AtomicI32","std::collections::Bound"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroIsize","std::net::Ipv6Addr","std::num::NonZeroU8","std::num::NonZeroI8","std::collections::Bound","std::num::NonZeroU32","std::num::NonZeroU128","std::num::NonZeroUsize","std::string::String","std::num::NonZeroU16","std::num::NonZeroI16"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::time::Duration","std::collections::HashSet","std::sync::Arc","std::result::Result","std::collections::BTreeSet","std::num::NonZeroI16","std::path::PathBuf","std::collections::BinaryHeap","std::num::NonZeroU32","std::num::NonZeroIsize","std::num::NonZeroU128","std::net::Ipv4Addr","std::net::IpAddr","std::net::SocketAddrV6","std::collections::BTreeMap","std::net::SocketAddrV4","std::boxed::Box","std::net::Ipv6Addr","std::num::NonZeroU8","std::ffi::CString","std::vec::Vec","std::num::NonZeroUsize","std::collections::Bound","std::net::SocketAddr","std::string::String","std::num::NonZeroU16","std::time::SystemTime","std::collections::VecDeque","std::sync::RwLock","std::cell::RefCell","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::ops::Range","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::sync::atomic::AtomicI8","std::cell::Cell","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::sync::Mutex","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::rc::Rc","std::option::Option","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::borrow::Cow","std::num::NonZeroI64","std::num::NonZeroU64","std::num::NonZeroI128"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::marker::PhantomData","std::collections::HashMap","std::num::NonZeroI32","std::num::NonZeroIsize","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroU8","std::collections::VecDeque","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::ops::Range","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::string::String","std::sync::atomic::AtomicU64","std::cell::Cell","std::collections::Bound","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::sync::Mutex","std::option::Option","std::boxed::Box","std::path::PathBuf","std::collections::BTreeMap","std::collections::HashSet","std::num::NonZeroU32","std::num::NonZeroU64","std::sync::Arc","std::net::SocketAddr","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::cell::RefCell","std::ffi::CString","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::borrow::Cow","std::net::IpAddr","std::collections::BinaryHeap","std::rc::Rc","std::sync::atomic::AtomicUsize","std::vec::Vec","std::result::Result","std::num::NonZeroU128","std::ops::RangeInclusive","std::time::Duration","std::sync::atomic::AtomicI32","std::time::SystemTime","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::sync::RwLock","std::net::SocketAddrV4","std::sync::atomic::AtomicI64"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::Bound","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroU32","std::sync::Mutex","std::cell::RefCell","std::vec::Vec","std::sync::atomic::AtomicU32","std::ffi::CString","std::num::NonZeroUsize","std::collections::BinaryHeap","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::boxed::Box","std::string::String","std::collections::HashSet","std::cell::Cell","std::net::SocketAddrV6","std::option::Option","std::time::SystemTime","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::rc::Rc","std::net::SocketAddr","std::net::IpAddr","std::sync::RwLock","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::result::Result","std::collections::HashMap","std::num::NonZeroI128","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::num::NonZeroI16","std::time::Duration","std::borrow::Cow","std::ops::Range","std::sync::Arc","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::num::NonZeroI8","std::ops::RangeInclusive","std::collections::BTreeMap","std::collections::BTreeSet","std::net::SocketAddrV4","std::path::PathBuf","std::sync::atomic::AtomicI32"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::option::Option","std::num::NonZeroUsize","std::num::NonZeroI64","std::net::Ipv6Addr","std::net::Ipv4Addr","std::collections::HashSet","std::rc::Rc","std::cell::RefCell","std::net::SocketAddr","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::ops::Range","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroU128","std::result::Result","std::num::NonZeroU64","std::net::SocketAddrV6","std::vec::Vec","std::cell::Cell","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::sync::Mutex","std::sync::atomic::AtomicU16","std::collections::HashMap","std::path::PathBuf","std::time::Duration","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::num::NonZeroU32","std::net::IpAddr","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::ffi::CString","std::ops::RangeInclusive","std::sync::RwLock","std::borrow::Cow","std::collections::BTreeMap","std::collections::Bound","std::marker::PhantomData","std::num::NonZeroU16","std::boxed::Box","std::sync::atomic::AtomicBool","std::time::SystemTime","std::string::String"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H)>::decode(p0);
+<(A, B, C, D, E, F, G, H)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I)>::borrow_decode":{"A":["de::BorrowDecode","std::marker::Sized"],"B":["std::marker::Sized","de::BorrowDecode"],"BD":["std::marker::Sized","de::BorrowDecoder"],"C":["std::marker::Sized","de::BorrowDecode"],"D":["std::marker::Sized","de::BorrowDecode"],"E":["de::BorrowDecode","std::marker::Sized"],"F":["de::BorrowDecode","std::marker::Sized"],"G":["std::marker::Sized","de::BorrowDecode"],"H":["std::marker::Sized","de::BorrowDecode"],"I":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode","std::cmp::Ord"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["std::cmp::Ord","de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","de::Decode","std::cmp::Ord","enc::Encode","std::marker::Sized"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["std::hash::Hash","std::marker::Sized","enc::Encode","de::Decode","std::cmp::Eq","de::BorrowDecode"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode","std::cmp::Eq","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for *const T>","config::NoLimit","config::Configuration","config::Fixint","config::LittleEndian","config::Limit","config::Varint","config::BigEndian"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I)>::borrow_decode":{"A":["std::time::Duration","std::num::NonZeroI32","std::net::IpAddr","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::collections::VecDeque","std::collections::HashSet","std::sync::Mutex","std::collections::BinaryHeap","std::borrow::Cow","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::path::PathBuf","std::string::String","std::net::SocketAddrV6","std::boxed::Box","std::cell::RefCell","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::num::NonZeroU32","std::net::SocketAddr","std::sync::Arc","std::num::NonZeroI16","std::num::NonZeroU8","std::sync::RwLock","std::sync::atomic::AtomicI64","std::option::Option","std::ffi::CString","std::collections::BTreeSet","std::result::Result","std::rc::Rc","std::ops::Range","std::cell::Cell","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::time::SystemTime","std::vec::Vec","std::num::NonZeroI64","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::num::NonZeroI8","std::ops::RangeInclusive","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::collections::Bound","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::collections::HashMap"],"B":["std::net::SocketAddr","std::collections::BTreeMap","std::cell::Cell","std::net::Ipv4Addr","std::net::SocketAddrV6","std::ops::RangeInclusive","std::vec::Vec","std::collections::BinaryHeap","std::time::SystemTime","std::sync::RwLock","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::option::Option","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::ffi::CString","std::sync::atomic::AtomicI8","std::collections::HashMap","std::result::Result","std::string::String","std::num::NonZeroU8","std::ops::Range","std::marker::PhantomData","std::num::NonZeroU16","std::collections::Bound","std::num::NonZeroIsize","std::sync::Mutex","std::num::NonZeroU64","std::time::Duration","std::sync::Arc","std::boxed::Box","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroUsize","std::collections::HashSet","std::collections::VecDeque","std::rc::Rc","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::collections::BTreeSet"],"BD":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"C":["std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::collections::VecDeque","std::num::NonZeroU32","std::result::Result","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::ops::RangeInclusive","std::sync::Arc","std::cell::RefCell","std::collections::BinaryHeap","std::time::Duration","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::marker::PhantomData","std::num::NonZeroI8","std::sync::RwLock","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroI64","std::net::Ipv4Addr","std::option::Option","std::time::SystemTime","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::ffi::CString","std::collections::Bound","std::borrow::Cow","std::sync::atomic::AtomicI64","std::path::PathBuf","std::sync::atomic::AtomicU32","std::rc::Rc","std::string::String","std::collections::BTreeSet","std::ops::Range","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::vec::Vec","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroU128","std::num::NonZeroI16","std::cell::Cell","std::boxed::Box","std::collections::HashSet","std::sync::atomic::AtomicU16","std::sync::Mutex","std::num::NonZeroI32","std::num::NonZeroUsize"],"D":["std::marker::PhantomData","std::vec::Vec","std::boxed::Box","std::net::SocketAddrV6","std::sync::Mutex","std::cell::RefCell","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::rc::Rc","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::sync::Arc","std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroI128","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::result::Result","std::num::NonZeroU32","std::borrow::Cow","std::num::NonZeroUsize","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroI64","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::option::Option","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::collections::HashMap","std::string::String","std::num::NonZeroU128","std::time::Duration","std::ops::RangeInclusive","std::collections::Bound","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::net::SocketAddrV4","std::ops::Range","std::ffi::CString","std::collections::HashSet","std::sync::atomic::AtomicI16","std::net::IpAddr"],"E":["std::collections::BTreeSet","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::net::Ipv6Addr","std::collections::VecDeque","std::string::String","std::net::IpAddr","std::cell::Cell","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::boxed::Box","std::num::NonZeroIsize","std::collections::Bound","std::net::SocketAddrV4","std::rc::Rc","std::ffi::CString","std::time::SystemTime","std::collections::HashMap","std::num::NonZeroU128","std::sync::RwLock","std::ops::Range","std::sync::atomic::AtomicU16","std::path::PathBuf","std::result::Result","std::num::NonZeroI8","std::collections::HashSet","std::num::NonZeroU32","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::option::Option","std::borrow::Cow","std::sync::Arc","std::sync::atomic::AtomicUsize","std::vec::Vec","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::num::NonZeroU8","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::net::SocketAddrV6","std::time::Duration","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::num::NonZeroU16","std::net::Ipv4Addr","std::num::NonZeroI128","std::cell::RefCell","std::ops::RangeInclusive"],"F":["std::collections::HashMap","std::boxed::Box","std::net::SocketAddrV6","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::num::NonZeroI16","std::path::PathBuf","std::rc::Rc","std::cell::RefCell","std::num::NonZeroI8","std::time::SystemTime","std::ops::Range","std::num::NonZeroU64","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::borrow::Cow","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::string::String","std::num::NonZeroI64","std::num::NonZeroU8","std::sync::Mutex","std::cell::Cell","std::time::Duration","std::sync::Arc","std::collections::VecDeque","std::num::NonZeroU128","std::option::Option","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::result::Result","std::ffi::CString","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::num::NonZeroUsize","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::collections::BTreeMap","std::vec::Vec","std::collections::HashSet","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::collections::Bound","std::num::NonZeroI32","std::collections::BTreeSet","std::sync::RwLock","std::net::IpAddr"],"G":["std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::rc::Rc","std::result::Result","std::net::IpAddr","std::ops::RangeInclusive","std::net::SocketAddrV6","std::path::PathBuf","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::sync::RwLock","std::num::NonZeroI128","std::ops::Range","std::num::NonZeroI8","std::num::NonZeroU128","std::time::SystemTime","std::sync::Mutex","std::sync::atomic::AtomicI64","std::time::Duration","std::collections::Bound","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::num::NonZeroU8","std::boxed::Box","std::num::NonZeroU32","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::num::NonZeroI64","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::option::Option","std::ffi::CString","std::num::NonZeroIsize","std::collections::HashSet","std::sync::atomic::AtomicU16","std::collections::HashMap","std::borrow::Cow","std::cell::Cell","std::sync::Arc","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::vec::Vec","std::num::NonZeroI32","std::num::NonZeroU64","std::string::String","std::net::Ipv6Addr","std::collections::BTreeMap","std::cell::RefCell"],"H":["std::collections::Bound","std::path::PathBuf","std::collections::HashSet","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::borrow::Cow","std::sync::atomic::AtomicU8","std::time::Duration","std::ffi::CString","std::rc::Rc","std::num::NonZeroIsize","std::num::NonZeroU128","std::num::NonZeroI16","std::result::Result","std::num::NonZeroU32","std::num::NonZeroU16","std::ops::RangeInclusive","std::cell::RefCell","std::sync::Arc","std::net::SocketAddrV6","std::collections::VecDeque","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::sync::Mutex","std::sync::atomic::AtomicU16","std::collections::HashMap","std::ops::Range","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::string::String","std::collections::BinaryHeap","std::num::NonZeroU8","std::num::NonZeroI32","std::collections::BTreeSet","std::vec::Vec","std::cell::Cell","std::marker::PhantomData","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::net::SocketAddrV4","std::net::IpAddr","std::sync::atomic::AtomicI64","std::sync::RwLock","std::sync::atomic::AtomicIsize"],"I":["std::net::SocketAddrV4","std::cell::RefCell","std::option::Option","std::sync::RwLock","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::net::IpAddr","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::time::Duration","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::cell::Cell","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::boxed::Box","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::num::NonZeroU64","std::num::NonZeroUsize","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::rc::Rc","std::net::SocketAddrV6","std::vec::Vec","std::result::Result","std::num::NonZeroI16","std::path::PathBuf","std::collections::HashSet","std::string::String","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::ops::Range","std::collections::BinaryHeap","std::num::NonZeroU32","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::borrow::Cow","std::num::NonZeroI128","std::ffi::CString","std::sync::Arc","std::ops::RangeInclusive","std::num::NonZeroU128","std::collections::HashMap","std::collections::BTreeMap","std::collections::Bound","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::num::NonZeroI8","std::num::NonZeroIsize"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::path::Path","std::ffi::OsStr","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::rc::Rc","std::num::NonZeroI32","std::num::NonZeroI128","std::sync::Arc","std::num::NonZeroU64","std::num::NonZeroUsize","std::marker::PhantomData","std::option::Option","std::num::NonZeroU16","std::path::PathBuf","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroI64","std::cell::Cell","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroI8","std::ffi::CString","std::num::NonZeroU32","std::num::NonZeroU128","std::cell::RefCell"],"V":["std::sync::atomic::AtomicI64","std::boxed::Box","std::collections::HashMap","std::collections::BinaryHeap","std::collections::BTreeSet","std::num::NonZeroI8","std::rc::Rc","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::result::Result","std::time::Duration","std::ops::RangeInclusive","std::num::NonZeroU32","std::sync::RwLock","std::sync::Mutex","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::cell::RefCell","std::string::String","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::ops::Range","std::num::NonZeroI32","std::cell::Cell","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::path::PathBuf","std::collections::HashSet","std::num::NonZeroU128","std::vec::Vec","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::sync::Arc","std::collections::Bound","std::option::Option","std::net::SocketAddr","std::net::SocketAddrV4","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroU16","std::ffi::CString","std::net::Ipv4Addr","std::net::IpAddr","std::collections::BTreeMap","std::net::SocketAddrV6"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI8","std::cell::Cell","std::num::NonZeroU32","std::num::NonZeroU8","std::num::NonZeroI16","std::ffi::CString","std::option::Option","std::cell::RefCell","std::net::IpAddr","std::num::NonZeroI32","std::net::SocketAddr","std::sync::Arc","std::string::String","std::num::NonZeroU64","std::num::NonZeroI64","std::rc::Rc","std::num::NonZeroIsize","std::num::NonZeroUsize","std::net::SocketAddrV6","std::path::PathBuf","std::net::SocketAddrV4","std::marker::PhantomData"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU64","std::option::Option","std::net::Ipv6Addr","std::string::String","std::path::PathBuf","std::cell::Cell","std::time::Duration","std::num::NonZeroU32","std::num::NonZeroU16","std::num::NonZeroI8","std::num::NonZeroU8","std::net::SocketAddr","std::num::NonZeroUsize","std::marker::PhantomData","std::cell::RefCell","std::ffi::CString","std::net::SocketAddrV6","std::num::NonZeroI16","std::time::SystemTime","std::rc::Rc","std::num::NonZeroI64","std::num::NonZeroU128","std::net::SocketAddrV4","std::net::Ipv4Addr"]},"std::collections::Bound":{"T":["std::num::NonZeroU128","std::option::Option","std::string::String","std::num::NonZeroUsize","std::net::IpAddr","std::cell::RefCell","std::net::Ipv6Addr","std::num::NonZeroU16","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::time::Duration","std::path::PathBuf","std::sync::RwLock","std::collections::BinaryHeap","std::ffi::CString","std::num::NonZeroI16","std::rc::Rc","std::net::SocketAddrV6","std::num::NonZeroIsize","std::borrow::Cow","std::sync::Arc","std::vec::Vec","std::ops::RangeInclusive","std::collections::Bound","std::collections::HashMap","std::sync::atomic::AtomicU32","std::sync::Mutex","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::ops::Range","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::cell::Cell","std::collections::HashSet","std::time::SystemTime","std::net::Ipv4Addr","std::num::NonZeroU32","std::num::NonZeroI128","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::boxed::Box","std::result::Result","std::num::NonZeroU64","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroI64"]},"std::collections::HashMap":{"K":["std::net::SocketAddrV6","std::string::String","std::time::SystemTime","std::net::SocketAddrV4","std::sync::Arc","std::collections::Bound","std::num::NonZeroI32","std::net::IpAddr","std::num::NonZeroU8","std::num::NonZeroU32","std::rc::Rc","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroU16"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::collections::HashMap","std::rc::Rc","std::sync::atomic::AtomicI8","std::time::SystemTime","std::net::SocketAddrV6","std::collections::BinaryHeap","std::collections::BTreeMap","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::sync::RwLock","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::collections::BTreeSet","std::sync::Mutex","std::cell::Cell","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::sync::Arc","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::boxed::Box","std::collections::HashSet","std::num::NonZeroU128","std::ffi::CString","std::net::IpAddr","std::option::Option","std::string::String","std::num::NonZeroI64","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::collections::Bound","std::ops::Range","std::num::NonZeroU32","std::time::Duration","std::num::NonZeroIsize","std::marker::PhantomData","std::num::NonZeroU16","std::num::NonZeroI32","std::num::NonZeroI128","std::path::PathBuf","std::vec::Vec","std::borrow::Cow","std::net::SocketAddr","std::num::NonZeroI8","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::result::Result","std::net::SocketAddrV4"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroU32","std::marker::PhantomData","std::num::NonZeroIsize","std::ffi::CString","std::sync::Arc","std::option::Option","std::time::Duration","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroI16","std::net::SocketAddr","std::net::IpAddr","std::num::NonZeroU8"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::time::Duration","std::num::NonZeroI128","std::collections::HashSet","std::path::PathBuf","std::boxed::Box","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::option::Option","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::cell::Cell","std::rc::Rc","std::num::NonZeroI64","std::borrow::Cow","std::net::Ipv4Addr","std::num::NonZeroU128","std::collections::VecDeque","std::num::NonZeroU64","std::ffi::CString","std::net::Ipv6Addr","std::cell::RefCell","std::time::SystemTime","std::vec::Vec","std::result::Result","std::net::SocketAddrV4","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::collections::Bound","std::sync::atomic::AtomicBool","std::ops::Range","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::sync::Arc","std::num::NonZeroU32","std::ops::RangeInclusive","std::collections::HashMap","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::sync::RwLock","std::string::String","std::num::NonZeroU16","std::num::NonZeroUsize","std::sync::Mutex","std::collections::BTreeSet"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroI128","std::boxed::Box","std::sync::RwLock","std::collections::HashSet","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::borrow::Cow","std::net::Ipv6Addr","std::net::SocketAddrV4","std::net::IpAddr","std::num::NonZeroIsize","std::num::NonZeroU8","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::num::NonZeroU32","std::option::Option","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::collections::BTreeSet","std::cell::RefCell","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::path::PathBuf","std::rc::Rc","std::time::SystemTime","std::result::Result","std::num::NonZeroI16","std::cell::Cell","std::net::SocketAddrV6","std::collections::VecDeque","std::vec::Vec","std::ops::RangeInclusive","std::ffi::CString","std::sync::Mutex","std::num::NonZeroI8","std::ops::Range","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::BinaryHeap","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::time::Duration","std::string::String","std::collections::Bound","std::sync::atomic::AtomicU8"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::BinaryHeap","std::net::Ipv4Addr","std::cell::RefCell","std::collections::HashMap","std::num::NonZeroI16","std::ops::Range","std::num::NonZeroU8","std::vec::Vec","std::boxed::Box","std::rc::Rc","std::collections::HashSet","std::net::Ipv6Addr","std::sync::RwLock","std::net::SocketAddrV6","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::result::Result","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::time::SystemTime","std::ops::RangeInclusive","std::num::NonZeroIsize","std::sync::Mutex","std::collections::BTreeMap","std::sync::Arc","std::borrow::Cow","std::string::String","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::cell::Cell","std::net::SocketAddrV4","std::ffi::CString","std::collections::VecDeque","std::time::Duration","std::sync::atomic::AtomicI64","std::collections::Bound","std::sync::atomic::AtomicU32","std::option::Option","std::net::IpAddr","std::collections::BTreeSet","std::num::NonZeroI8"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::string::String","std::vec::Vec","std::collections::BTreeSet","std::collections::Bound","std::net::SocketAddrV6","std::ops::Range","std::ffi::CString","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::boxed::Box","std::num::NonZeroU8","std::num::NonZeroI64","std::time::SystemTime","std::collections::VecDeque","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::result::Result","std::num::NonZeroI128","std::time::Duration","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::path::PathBuf","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::borrow::Cow","std::num::NonZeroU64","std::marker::PhantomData","std::collections::HashMap","std::num::NonZeroU32","std::rc::Rc","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::sync::Arc","std::sync::atomic::AtomicI64","std::option::Option","std::net::Ipv4Addr","std::num::NonZeroI32","std::net::IpAddr","std::collections::BinaryHeap","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::num::NonZeroI8","std::sync::Mutex","std::cell::RefCell","std::num::NonZeroI16","std::cell::Cell","std::collections::HashSet","std::sync::atomic::AtomicI16","std::sync::RwLock"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I)>::borrow_decode(p0);
+<(A, B, C, D, E, F, G, H, I)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"I":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I)>::decode":{"A":["de::Decode","std::marker::Sized"],"B":["std::marker::Sized","de::Decode"],"C":["de::Decode","std::marker::Sized"],"D":["de::Decode","std::marker::Sized"],"DE":["std::marker::Sized","de::Decoder"],"E":["std::marker::Sized","de::Decode"],"F":["de::Decode","std::marker::Sized"],"G":["de::Decode","std::marker::Sized"],"H":["de::Decode","std::marker::Sized"],"I":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"K":["std::marker::Sized","enc::Encode","std::cmp::Ord","de::BorrowDecode","de::Decode"],"V":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["enc::Encode","std::cmp::Ord","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::Decode","enc::Encode","std::cmp::Ord","de::BorrowDecode"]},"std::collections::Bound":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["std::marker::Sized","std::cmp::Eq","de::BorrowDecode","de::Decode","enc::Encode","std::hash::Hash"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["enc::Encode","de::BorrowDecode","std::hash::Hash","std::marker::Sized","de::Decode","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Varint","std::clone::impls::<impl std::clone::Clone for *const T>","config::LittleEndian","config::BigEndian","config::Fixint","config::Configuration","config::Limit","config::NoLimit"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I)>::decode":{"A":["std::ops::RangeInclusive","std::time::Duration","std::collections::HashMap","std::ops::Range","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::time::SystemTime","std::path::PathBuf","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::cell::Cell","std::net::IpAddr","std::borrow::Cow","std::sync::atomic::AtomicI16","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::result::Result","std::ffi::CString","std::collections::HashSet","std::num::NonZeroI16","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::string::String","std::sync::atomic::AtomicU32","std::collections::Bound","std::num::NonZeroI128","std::option::Option","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroU128","std::sync::Arc","std::collections::BTreeSet","std::num::NonZeroI8","std::rc::Rc","std::num::NonZeroU32","std::vec::Vec","std::num::NonZeroU64","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::collections::BTreeMap","std::boxed::Box","std::sync::RwLock","std::sync::Mutex","std::num::NonZeroI32"],"B":["std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroI16","std::sync::Mutex","std::collections::VecDeque","std::collections::HashSet","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::collections::HashMap","std::collections::BTreeSet","std::borrow::Cow","std::sync::atomic::AtomicU64","std::boxed::Box","std::path::PathBuf","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroI128","std::net::SocketAddrV4","std::result::Result","std::sync::atomic::AtomicI32","std::time::Duration","std::ops::RangeInclusive","std::vec::Vec","std::sync::atomic::AtomicIsize","std::ops::Range","std::net::IpAddr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::sync::RwLock","std::rc::Rc","std::collections::BinaryHeap","std::num::NonZeroI8","std::num::NonZeroI64","std::option::Option","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::cell::Cell","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::collections::Bound","std::string::String","std::num::NonZeroIsize","std::marker::PhantomData","std::sync::Arc","std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroI32","std::net::Ipv6Addr","std::net::SocketAddrV6","std::num::NonZeroU128","std::collections::BTreeMap"],"C":["std::num::NonZeroU128","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::boxed::Box","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::cell::Cell","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::time::Duration","std::sync::RwLock","std::option::Option","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::collections::BTreeMap","std::num::NonZeroI128","std::ffi::CString","std::collections::Bound","std::cell::RefCell","std::collections::HashMap","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::time::SystemTime","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::num::NonZeroI32","std::net::IpAddr","std::vec::Vec","std::ops::Range","std::string::String","std::net::SocketAddrV6","std::num::NonZeroIsize","std::rc::Rc","std::sync::atomic::AtomicI32","std::path::PathBuf","std::collections::HashSet","std::num::NonZeroU16","std::result::Result","std::ops::RangeInclusive","std::net::Ipv4Addr","std::sync::Mutex","std::num::NonZeroI16"],"D":["std::net::Ipv4Addr","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::collections::Bound","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::result::Result","std::time::SystemTime","std::boxed::Box","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::borrow::Cow","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::sync::Arc","std::net::SocketAddrV6","std::sync::Mutex","std::num::NonZeroU64","std::string::String","std::num::NonZeroIsize","std::num::NonZeroI16","std::collections::BinaryHeap","std::num::NonZeroI32","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::cell::Cell","std::path::PathBuf","std::option::Option","std::sync::atomic::AtomicI32","std::sync::RwLock","std::net::SocketAddrV4","std::collections::HashMap","std::collections::BTreeMap","std::cell::RefCell","std::net::IpAddr","std::time::Duration","std::num::NonZeroU128","std::rc::Rc","std::num::NonZeroUsize","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::ops::Range","std::collections::BTreeSet","std::marker::PhantomData","std::collections::HashSet","std::ffi::CString","std::num::NonZeroI128","std::vec::Vec","std::sync::atomic::AtomicI64","std::num::NonZeroU32"],"DE":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"E":["std::num::NonZeroI32","std::option::Option","std::num::NonZeroI128","std::ops::RangeInclusive","std::collections::VecDeque","std::num::NonZeroU16","std::collections::HashSet","std::marker::PhantomData","std::cell::Cell","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::collections::BinaryHeap","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::rc::Rc","std::sync::atomic::AtomicU32","std::ffi::CString","std::sync::atomic::AtomicI32","std::boxed::Box","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::sync::Arc","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::collections::BTreeMap","std::time::Duration","std::time::SystemTime","std::borrow::Cow","std::net::SocketAddrV4","std::collections::BTreeSet","std::num::NonZeroU8","std::ops::Range","std::sync::Mutex","std::string::String","std::result::Result","std::num::NonZeroI64","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::path::PathBuf","std::collections::HashMap","std::collections::Bound","std::net::Ipv6Addr","std::cell::RefCell","std::net::SocketAddr","std::num::NonZeroI8","std::net::IpAddr","std::vec::Vec","std::sync::RwLock"],"F":["std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::ffi::CString","std::time::Duration","std::sync::atomic::AtomicU64","std::time::SystemTime","std::sync::Mutex","std::collections::Bound","std::rc::Rc","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroU8","std::collections::BinaryHeap","std::boxed::Box","std::num::NonZeroI8","std::collections::BTreeMap","std::num::NonZeroU64","std::net::SocketAddrV4","std::cell::RefCell","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::ops::Range","std::net::IpAddr","std::num::NonZeroI16","std::sync::Arc","std::sync::atomic::AtomicU8","std::borrow::Cow","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::result::Result","std::path::PathBuf","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::vec::Vec","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::collections::HashSet","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::num::NonZeroU32","std::collections::VecDeque","std::marker::PhantomData","std::net::SocketAddr","std::num::NonZeroI64","std::collections::HashMap","std::net::Ipv6Addr","std::num::NonZeroI32","std::net::Ipv4Addr","std::string::String","std::option::Option","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64"],"G":["std::result::Result","std::option::Option","std::num::NonZeroI64","std::time::SystemTime","std::collections::HashMap","std::num::NonZeroI128","std::sync::Arc","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::num::NonZeroI8","std::num::NonZeroIsize","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::num::NonZeroU64","std::sync::Mutex","std::num::NonZeroU32","std::vec::Vec","std::boxed::Box","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::ffi::CString","std::cell::Cell","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::rc::Rc","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroI32","std::ops::Range","std::net::SocketAddrV6","std::num::NonZeroI16","std::collections::HashSet","std::collections::BTreeMap","std::collections::Bound","std::num::NonZeroU16","std::borrow::Cow","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::path::PathBuf","std::time::Duration","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::string::String","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::num::NonZeroU8"],"H":["std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroUsize","std::ops::RangeInclusive","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroU8","std::time::SystemTime","std::collections::Bound","std::collections::HashMap","std::num::NonZeroI32","std::net::IpAddr","std::collections::BinaryHeap","std::boxed::Box","std::ops::Range","std::collections::BTreeSet","std::option::Option","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::borrow::Cow","std::num::NonZeroU16","std::time::Duration","std::cell::Cell","std::num::NonZeroU64","std::num::NonZeroI128","std::collections::VecDeque","std::collections::BTreeMap","std::string::String","std::sync::Arc","std::sync::atomic::AtomicU16","std::sync::Mutex","std::result::Result","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::rc::Rc","std::net::SocketAddr","std::vec::Vec","std::net::SocketAddrV6","std::num::NonZeroI8","std::num::NonZeroIsize","std::collections::HashSet","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::cell::RefCell"],"I":["std::result::Result","std::collections::Bound","std::sync::Arc","std::num::NonZeroU16","std::net::SocketAddr","std::num::NonZeroU8","std::sync::RwLock","std::sync::atomic::AtomicU64","std::path::PathBuf","std::collections::BTreeMap","std::ffi::CString","std::net::IpAddr","std::option::Option","std::rc::Rc","std::marker::PhantomData","std::cell::RefCell","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::ops::Range","std::borrow::Cow","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::collections::VecDeque","std::string::String","std::ops::RangeInclusive","std::time::Duration","std::collections::BinaryHeap","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::cell::Cell","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::num::NonZeroI8","std::net::Ipv4Addr","std::vec::Vec","std::sync::atomic::AtomicI64","std::boxed::Box","std::collections::HashSet","std::num::NonZeroI32","std::collections::BTreeSet","std::time::SystemTime","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::sync::Mutex","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::collections::HashMap","std::num::NonZeroU32","std::num::NonZeroI16"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::path::Path","std::ffi::OsStr","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroU16","std::marker::PhantomData","std::string::String","std::rc::Rc","std::num::NonZeroI128","std::num::NonZeroI16","std::option::Option","std::num::NonZeroU64","std::cell::RefCell","std::time::Duration","std::num::NonZeroUsize","std::num::NonZeroU32","std::net::Ipv6Addr","std::path::PathBuf","std::num::NonZeroI64","std::ffi::CString","std::time::SystemTime","std::num::NonZeroU128"],"V":["std::num::NonZeroI128","std::collections::HashSet","std::num::NonZeroI16","std::rc::Rc","std::cell::RefCell","std::collections::VecDeque","std::collections::BTreeSet","std::result::Result","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::sync::RwLock","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::collections::Bound","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::vec::Vec","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::boxed::Box","std::net::SocketAddr","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::borrow::Cow","std::num::NonZeroU8","std::net::Ipv4Addr","std::collections::BTreeMap","std::num::NonZeroU128","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::time::Duration","std::ops::RangeInclusive","std::cell::Cell","std::ffi::CString","std::string::String","std::num::NonZeroI64","std::net::IpAddr","std::collections::BinaryHeap","std::ops::Range","std::num::NonZeroIsize","std::time::SystemTime","std::sync::Arc","std::sync::atomic::AtomicU8","std::option::Option","std::num::NonZeroU32"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroU64","std::num::NonZeroUsize","std::net::IpAddr","std::net::Ipv4Addr","std::num::NonZeroI32","std::net::Ipv6Addr","std::option::Option","std::path::PathBuf","std::time::Duration","std::ffi::CString","std::cell::RefCell","std::num::NonZeroU16","std::string::String","std::num::NonZeroU32","std::num::NonZeroI64","std::net::SocketAddrV4"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU32","std::num::NonZeroUsize","std::option::Option","std::ffi::CString","std::sync::Arc","std::num::NonZeroU64","std::time::SystemTime","std::num::NonZeroIsize","std::path::PathBuf","std::net::IpAddr","std::num::NonZeroU8","std::net::Ipv6Addr","std::string::String","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroU16","std::marker::PhantomData","std::net::SocketAddrV6","std::net::SocketAddr"]},"std::collections::Bound":{"T":["std::num::NonZeroI128","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::time::Duration","std::net::SocketAddrV6","std::num::NonZeroI32","std::borrow::Cow","std::collections::BTreeMap","std::string::String","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::collections::Bound","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::collections::HashSet","std::time::SystemTime","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::option::Option","std::rc::Rc","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::cell::Cell","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::ops::RangeInclusive","std::sync::RwLock","std::ops::Range","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::ffi::CString","std::path::PathBuf","std::vec::Vec","std::sync::Arc","std::cell::RefCell","std::boxed::Box","std::result::Result","std::collections::HashMap","std::num::NonZeroU32","std::collections::VecDeque","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::net::IpAddr","std::marker::PhantomData","std::num::NonZeroI8"]},"std::collections::HashMap":{"K":["std::net::SocketAddr","std::rc::Rc","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroI64","std::net::Ipv6Addr","std::net::IpAddr","std::num::NonZeroU8","std::net::Ipv4Addr","std::num::NonZeroU16","std::option::Option","std::num::NonZeroI16","std::num::NonZeroIsize","std::num::NonZeroU64","std::sync::Arc","std::num::NonZeroUsize","std::net::SocketAddrV4","std::time::SystemTime"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::cell::Cell","std::sync::atomic::AtomicU32","std::result::Result","std::net::SocketAddrV6","std::num::NonZeroI16","std::marker::PhantomData","std::rc::Rc","std::net::Ipv4Addr","std::collections::HashSet","std::time::Duration","std::ffi::CString","std::collections::HashMap","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroIsize","std::num::NonZeroI64","std::string::String","std::borrow::Cow","std::net::SocketAddr","std::collections::BTreeSet","std::option::Option","std::vec::Vec","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::num::NonZeroI128","std::num::NonZeroU64","std::num::NonZeroI32","std::collections::BinaryHeap","std::net::IpAddr","std::path::PathBuf","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::cell::RefCell","std::ops::Range","std::sync::Mutex","std::sync::RwLock","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::sync::Arc","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::boxed::Box","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::num::NonZeroU16","std::time::SystemTime","std::collections::Bound","std::num::NonZeroU32","std::num::NonZeroU128"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::ffi::CString","std::net::SocketAddrV6","std::num::NonZeroU64","std::net::Ipv4Addr","std::net::SocketAddrV4","std::marker::PhantomData","std::net::Ipv6Addr","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroIsize","std::net::SocketAddr","std::num::NonZeroU32","std::string::String","std::time::SystemTime","std::num::NonZeroUsize","std::num::NonZeroI128"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::collections::HashSet","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::collections::VecDeque","std::ops::Range","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::net::IpAddr","std::num::NonZeroU8","std::num::NonZeroI128","std::cell::Cell","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::sync::Mutex","std::collections::HashMap","std::rc::Rc","std::net::Ipv6Addr","std::borrow::Cow","std::boxed::Box","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::option::Option","std::time::Duration","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::ops::RangeInclusive","std::time::SystemTime","std::num::NonZeroI16","std::net::Ipv4Addr","std::marker::PhantomData","std::collections::Bound","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::num::NonZeroU64","std::string::String","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::num::NonZeroI32","std::net::SocketAddrV4","std::ffi::CString","std::sync::Arc","std::collections::BTreeSet","std::vec::Vec","std::result::Result","std::cell::RefCell"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::num::NonZeroU128","std::num::NonZeroU16","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::option::Option","std::net::Ipv6Addr","std::net::SocketAddrV4","std::sync::Mutex","std::ops::Range","std::num::NonZeroI64","std::sync::Arc","std::collections::BTreeSet","std::collections::HashMap","std::result::Result","std::num::NonZeroI32","std::net::SocketAddr","std::boxed::Box","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::time::Duration","std::collections::Bound","std::collections::HashSet","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::vec::Vec","std::borrow::Cow","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::string::String","std::ffi::CString","std::net::IpAddr","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::num::NonZeroI16","std::ops::RangeInclusive","std::collections::VecDeque","std::num::NonZeroUsize","std::collections::BTreeMap","std::time::SystemTime","std::sync::RwLock","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::path::PathBuf","std::num::NonZeroU64","std::rc::Rc","std::num::NonZeroIsize","std::num::NonZeroI8","std::cell::RefCell","std::cell::Cell","std::sync::atomic::AtomicU64"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::rc::Rc","std::sync::Arc","std::ops::RangeInclusive","std::sync::RwLock","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::net::SocketAddrV6","std::net::Ipv4Addr","std::borrow::Cow","std::num::NonZeroIsize","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::collections::Bound","std::collections::BinaryHeap","std::vec::Vec","std::ffi::CString","std::result::Result","std::net::IpAddr","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroU128","std::num::NonZeroU8","std::collections::HashSet","std::num::NonZeroU16","std::cell::RefCell","std::net::Ipv6Addr","std::string::String","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroUsize","std::option::Option","std::sync::Mutex","std::time::SystemTime","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::boxed::Box","std::path::PathBuf","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::time::Duration","std::ops::Range","std::collections::HashMap","std::cell::Cell"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::vec::Vec","std::borrow::Cow","std::boxed::Box","std::net::SocketAddrV4","std::num::NonZeroIsize","std::cell::Cell","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::result::Result","std::num::NonZeroI8","std::net::SocketAddrV6","std::num::NonZeroI16","std::collections::HashSet","std::num::NonZeroI128","std::num::NonZeroUsize","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::option::Option","std::ops::RangeInclusive","std::time::SystemTime","std::num::NonZeroU64","std::collections::BTreeSet","std::net::SocketAddr","std::collections::BTreeMap","std::num::NonZeroU128","std::sync::RwLock","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::cell::RefCell","std::sync::Arc","std::sync::atomic::AtomicBool","std::path::PathBuf","std::num::NonZeroU16","std::ffi::CString","std::sync::atomic::AtomicU16","std::rc::Rc","std::ops::Range","std::num::NonZeroU32","std::collections::Bound","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::time::Duration","std::marker::PhantomData","std::sync::Mutex","std::collections::VecDeque","std::string::String","std::num::NonZeroI32","std::collections::HashMap"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I)>::decode(p0);
+<(A, B, C, D, E, F, G, H, I)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J)>::borrow_decode":{"A":["std::marker::Sized","de::BorrowDecode"],"B":["std::marker::Sized","de::BorrowDecode"],"BD":["de::BorrowDecoder","std::marker::Sized"],"C":["de::BorrowDecode","std::marker::Sized"],"D":["de::BorrowDecode","std::marker::Sized"],"E":["de::BorrowDecode","std::marker::Sized"],"F":["std::marker::Sized","de::BorrowDecode"],"G":["std::marker::Sized","de::BorrowDecode"],"H":["std::marker::Sized","de::BorrowDecode"],"I":["de::BorrowDecode","std::marker::Sized"],"J":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["enc::Encode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord","de::Decode"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["std::cmp::Ord","std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::cmp::Ord","enc::Encode","de::Decode","std::marker::Sized"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","de::BorrowDecode","de::Decode","std::hash::Hash","enc::Encode","std::marker::Sized"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::hash::Hash","enc::Encode","de::Decode","de::BorrowDecode","std::cmp::Eq","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::NoLimit","config::Varint","std::clone::impls::<impl std::clone::Clone for &mut T>","config::BigEndian","config::Fixint","config::Configuration","config::LittleEndian"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J)>::borrow_decode":{"A":["std::borrow::Cow","std::path::PathBuf","std::num::NonZeroI8","std::collections::VecDeque","std::sync::Mutex","std::sync::atomic::AtomicU32","std::boxed::Box","std::num::NonZeroUsize","std::num::NonZeroIsize","std::net::SocketAddr","std::option::Option","std::ffi::CString","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::cell::RefCell","std::string::String","std::net::Ipv6Addr","std::ops::Range","std::collections::Bound","std::net::SocketAddrV4","std::vec::Vec","std::time::Duration","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::collections::BTreeSet","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::rc::Rc","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::net::Ipv4Addr","std::collections::BinaryHeap","std::time::SystemTime","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::collections::HashMap","std::sync::RwLock","std::net::SocketAddrV6","std::sync::Arc","std::cell::Cell","std::collections::HashSet","std::result::Result","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::num::NonZeroI128"],"B":["std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroI128","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::time::SystemTime","std::ffi::CString","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::num::NonZeroU128","std::rc::Rc","std::time::Duration","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::option::Option","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::cell::RefCell","std::ops::RangeInclusive","std::sync::RwLock","std::sync::atomic::AtomicI64","std::collections::HashMap","std::num::NonZeroU32","std::collections::BTreeMap","std::net::Ipv6Addr","std::collections::BTreeSet","std::num::NonZeroI16","std::ops::Range","std::collections::Bound","std::boxed::Box","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::collections::VecDeque","std::net::SocketAddrV4","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::vec::Vec","std::num::NonZeroIsize","std::sync::Mutex","std::borrow::Cow","std::sync::Arc","std::result::Result","std::sync::atomic::AtomicI32","std::cell::Cell","std::sync::atomic::AtomicU64","std::collections::HashSet","std::path::PathBuf","std::num::NonZeroI32","std::num::NonZeroI8","std::net::IpAddr","std::net::SocketAddr","std::string::String"],"BD":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"C":["std::sync::atomic::AtomicI16","std::option::Option","std::ops::Range","std::num::NonZeroIsize","std::net::SocketAddr","std::time::Duration","std::num::NonZeroU16","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::time::SystemTime","std::vec::Vec","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::net::IpAddr","std::sync::RwLock","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::cell::Cell","std::collections::BTreeMap","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::num::NonZeroU8","std::sync::Mutex","std::collections::BTreeSet","std::net::SocketAddrV6","std::num::NonZeroU32","std::num::NonZeroI128","std::string::String","std::sync::Arc","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::result::Result","std::sync::atomic::AtomicU8","std::borrow::Cow","std::num::NonZeroI64","std::rc::Rc","std::boxed::Box","std::sync::atomic::AtomicI32","std::cell::RefCell","std::collections::HashMap","std::num::NonZeroUsize","std::ffi::CString","std::collections::HashSet","std::net::Ipv6Addr","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroU64","std::ops::RangeInclusive","std::marker::PhantomData","std::collections::Bound"],"D":["std::rc::Rc","std::sync::RwLock","std::sync::Arc","std::ops::RangeInclusive","std::cell::Cell","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::num::NonZeroI8","std::collections::HashMap","std::sync::atomic::AtomicI8","std::result::Result","std::collections::BTreeMap","std::option::Option","std::time::SystemTime","std::num::NonZeroU32","std::cell::RefCell","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::num::NonZeroI128","std::net::IpAddr","std::num::NonZeroI16","std::borrow::Cow","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::string::String","std::ffi::CString","std::path::PathBuf","std::sync::atomic::AtomicI32","std::boxed::Box","std::collections::HashSet","std::sync::Mutex","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::net::SocketAddrV4","std::num::NonZeroU8","std::num::NonZeroIsize","std::collections::Bound","std::vec::Vec","std::num::NonZeroI64","std::ops::Range","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::time::Duration"],"E":["std::net::SocketAddr","std::result::Result","std::option::Option","std::sync::atomic::AtomicUsize","std::cell::Cell","std::collections::BinaryHeap","std::time::SystemTime","std::marker::PhantomData","std::ops::RangeInclusive","std::net::IpAddr","std::net::Ipv6Addr","std::vec::Vec","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::ops::Range","std::string::String","std::sync::RwLock","std::num::NonZeroUsize","std::num::NonZeroU16","std::ffi::CString","std::path::PathBuf","std::num::NonZeroU8","std::sync::Arc","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::collections::HashSet","std::collections::HashMap","std::collections::BTreeSet","std::time::Duration","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::net::Ipv4Addr","std::net::SocketAddrV6","std::collections::BTreeMap","std::num::NonZeroI64","std::collections::Bound","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::collections::VecDeque","std::borrow::Cow","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::boxed::Box","std::cell::RefCell","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroU128"],"F":["std::cell::Cell","std::num::NonZeroU128","std::collections::BTreeSet","std::net::Ipv6Addr","std::collections::HashSet","std::string::String","std::sync::atomic::AtomicI16","std::result::Result","std::rc::Rc","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::collections::HashMap","std::collections::VecDeque","std::sync::Arc","std::borrow::Cow","std::sync::atomic::AtomicI32","std::option::Option","std::net::SocketAddrV4","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::sync::RwLock","std::sync::Mutex","std::collections::BTreeMap","std::boxed::Box","std::num::NonZeroU32","std::num::NonZeroU16","std::net::SocketAddr","std::path::PathBuf","std::collections::BinaryHeap","std::ops::Range","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::ops::RangeInclusive","std::num::NonZeroI128","std::collections::Bound","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::net::IpAddr","std::net::Ipv4Addr","std::time::SystemTime","std::time::Duration","std::ffi::CString","std::vec::Vec","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::num::NonZeroU64"],"G":["std::vec::Vec","std::num::NonZeroU64","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::collections::Bound","std::collections::HashSet","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::borrow::Cow","std::net::IpAddr","std::num::NonZeroI16","std::collections::BTreeMap","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::net::SocketAddrV6","std::cell::RefCell","std::ffi::CString","std::sync::atomic::AtomicU32","std::sync::Mutex","std::ops::RangeInclusive","std::option::Option","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::num::NonZeroI64","std::num::NonZeroU16","std::net::Ipv4Addr","std::marker::PhantomData","std::time::Duration","std::net::Ipv6Addr","std::rc::Rc","std::boxed::Box","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::cell::Cell","std::num::NonZeroI8","std::num::NonZeroU128","std::path::PathBuf","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroIsize","std::result::Result","std::collections::BinaryHeap","std::ops::Range","std::sync::Arc","std::string::String"],"H":["std::option::Option","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::borrow::Cow","std::num::NonZeroU8","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::result::Result","std::num::NonZeroU64","std::net::Ipv4Addr","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::rc::Rc","std::string::String","std::time::Duration","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroIsize","std::net::Ipv6Addr","std::collections::Bound","std::sync::RwLock","std::time::SystemTime","std::net::IpAddr","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::num::NonZeroU128","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::num::NonZeroI8","std::cell::Cell","std::collections::BinaryHeap","std::marker::PhantomData","std::collections::HashMap","std::ops::RangeInclusive","std::sync::Mutex","std::cell::RefCell","std::ops::Range","std::ffi::CString","std::num::NonZeroUsize","std::boxed::Box","std::sync::Arc","std::sync::atomic::AtomicU32","std::path::PathBuf","std::vec::Vec","std::num::NonZeroI128","std::num::NonZeroU16","std::net::SocketAddr","std::collections::HashSet"],"I":["std::num::NonZeroI128","std::sync::RwLock","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::time::Duration","std::ffi::CString","std::sync::Mutex","std::collections::BinaryHeap","std::ops::Range","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::num::NonZeroI32","std::num::NonZeroUsize","std::borrow::Cow","std::num::NonZeroI8","std::path::PathBuf","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::sync::Arc","std::sync::atomic::AtomicI32","std::cell::RefCell","std::net::SocketAddrV4","std::net::SocketAddrV6","std::collections::BTreeSet","std::collections::Bound","std::collections::HashMap","std::boxed::Box","std::sync::atomic::AtomicU8","std::string::String","std::vec::Vec","std::num::NonZeroI16","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::num::NonZeroI64","std::num::NonZeroU32","std::marker::PhantomData","std::result::Result","std::rc::Rc","std::cell::Cell","std::num::NonZeroU64","std::net::SocketAddr","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::time::SystemTime","std::net::Ipv6Addr","std::option::Option","std::collections::BTreeMap","std::num::NonZeroU8","std::net::IpAddr","std::num::NonZeroU128","std::collections::VecDeque"],"J":["std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::cell::Cell","std::result::Result","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::time::Duration","std::borrow::Cow","std::num::NonZeroI64","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::string::String","std::net::SocketAddrV4","std::collections::BinaryHeap","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::sync::Arc","std::cell::RefCell","std::num::NonZeroU32","std::collections::HashMap","std::sync::atomic::AtomicI32","std::sync::Mutex","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::ops::Range","std::net::IpAddr","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::num::NonZeroI128","std::collections::BTreeMap","std::marker::PhantomData","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::ffi::CString","std::sync::atomic::AtomicU32","std::collections::HashSet","std::sync::atomic::AtomicI16","std::vec::Vec","std::boxed::Box","std::num::NonZeroI32","std::collections::BTreeSet","std::option::Option","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroU8","std::time::SystemTime","std::collections::Bound","std::num::NonZeroU16","std::net::Ipv4Addr","std::rc::Rc","std::sync::RwLock","std::path::PathBuf"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::path::Path","std::ffi::CStr","std::ffi::OsStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::cell::RefCell","std::net::SocketAddr","std::cell::Cell","std::sync::Arc","std::net::SocketAddrV4","std::num::NonZeroI8","std::net::SocketAddrV6","std::num::NonZeroI64","std::num::NonZeroU8","std::option::Option","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroU128","std::num::NonZeroU64","std::path::PathBuf","std::string::String","std::ffi::CString","std::net::Ipv4Addr"],"V":["std::collections::HashMap","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::net::SocketAddrV6","std::boxed::Box","std::time::Duration","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::num::NonZeroI8","std::net::IpAddr","std::sync::atomic::AtomicU8","std::ops::Range","std::collections::VecDeque","std::cell::RefCell","std::string::String","std::num::NonZeroIsize","std::net::SocketAddrV4","std::collections::HashSet","std::marker::PhantomData","std::sync::RwLock","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::rc::Rc","std::borrow::Cow","std::result::Result","std::ffi::CString","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::collections::Bound","std::cell::Cell","std::num::NonZeroU64","std::num::NonZeroU128","std::sync::Arc","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::option::Option","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::vec::Vec","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::sync::Mutex","std::num::NonZeroI32","std::collections::BTreeSet","std::time::SystemTime","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::net::SocketAddr","std::num::NonZeroU16"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU64","std::cell::Cell","std::net::IpAddr","std::num::NonZeroUsize","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroI64","std::num::NonZeroU16","std::ffi::CString","std::num::NonZeroU32","std::rc::Rc","std::net::SocketAddrV4","std::net::SocketAddr","std::num::NonZeroIsize","std::time::SystemTime","std::time::Duration","std::num::NonZeroI16","std::net::SocketAddrV6","std::string::String"]},"std::collections::BinaryHeap":{"T":["std::net::IpAddr","std::cell::RefCell","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroU16","std::num::NonZeroU64","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroU32","std::path::PathBuf","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroI8","std::num::NonZeroI16","std::rc::Rc","std::num::NonZeroIsize","std::num::NonZeroI64","std::net::Ipv6Addr","std::string::String","std::num::NonZeroI32","std::num::NonZeroU128","std::cell::Cell","std::ffi::CString"]},"std::collections::Bound":{"T":["std::num::NonZeroU16","std::ops::RangeInclusive","std::num::NonZeroI16","std::vec::Vec","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::cell::Cell","std::collections::VecDeque","std::num::NonZeroI128","std::sync::Mutex","std::num::NonZeroUsize","std::collections::BTreeMap","std::sync::RwLock","std::ffi::CString","std::time::SystemTime","std::collections::HashSet","std::sync::Arc","std::borrow::Cow","std::num::NonZeroU32","std::rc::Rc","std::path::PathBuf","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::num::NonZeroU64","std::marker::PhantomData","std::num::NonZeroI32","std::result::Result","std::net::Ipv6Addr","std::option::Option","std::num::NonZeroI64","std::string::String","std::num::NonZeroI8","std::ops::Range","std::net::IpAddr","std::net::SocketAddrV4","std::collections::Bound","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::time::Duration","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::collections::HashMap","std::boxed::Box"]},"std::collections::HashMap":{"K":["std::ffi::CString","std::option::Option","std::path::PathBuf","std::time::Duration","std::time::SystemTime","std::sync::Arc","std::num::NonZeroU64","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroU128","std::marker::PhantomData","std::num::NonZeroU16","std::num::NonZeroI128","std::net::SocketAddrV4","std::collections::Bound","std::net::Ipv4Addr"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::path::PathBuf","std::collections::Bound","std::ffi::CString","std::borrow::Cow","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::rc::Rc","std::time::SystemTime","std::sync::RwLock","std::sync::Arc","std::boxed::Box","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::option::Option","std::num::NonZeroIsize","std::collections::VecDeque","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::net::Ipv6Addr","std::result::Result","std::vec::Vec","std::time::Duration","std::num::NonZeroU16","std::net::IpAddr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroU128","std::string::String","std::collections::HashMap","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::collections::BTreeSet","std::collections::HashSet","std::marker::PhantomData","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::cell::Cell","std::cell::RefCell","std::num::NonZeroI64","std::net::SocketAddrV6","std::num::NonZeroU32","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::ops::Range","std::collections::BinaryHeap","std::sync::Mutex"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::net::IpAddr","std::num::NonZeroU16","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroU8","std::option::Option","std::string::String","std::net::Ipv4Addr","std::net::SocketAddr","std::net::Ipv6Addr","std::time::SystemTime","std::sync::Arc","std::num::NonZeroI64","std::net::SocketAddrV4","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroUsize","std::num::NonZeroI128","std::net::SocketAddrV6"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::sync::RwLock","std::boxed::Box","std::num::NonZeroI8","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroI16","std::time::SystemTime","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::collections::Bound","std::ops::RangeInclusive","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroI128","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroI64","std::vec::Vec","std::result::Result","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::sync::Mutex","std::path::PathBuf","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::time::Duration","std::collections::HashMap","std::borrow::Cow","std::sync::Arc","std::rc::Rc","std::net::IpAddr","std::ops::Range","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::cell::Cell","std::collections::HashSet","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::string::String","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::collections::BTreeMap","std::option::Option","std::num::NonZeroU32","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::cell::RefCell","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroUsize","std::collections::BinaryHeap","std::collections::BTreeSet","std::vec::Vec","std::collections::HashSet","std::num::NonZeroI8","std::net::IpAddr","std::sync::atomic::AtomicI16","std::path::PathBuf","std::collections::BTreeMap","std::option::Option","std::num::NonZeroU16","std::collections::Bound","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::time::Duration","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::num::NonZeroI32","std::result::Result","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroU64","std::sync::Mutex","std::cell::Cell","std::boxed::Box","std::collections::VecDeque","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::cell::RefCell","std::ops::Range","std::num::NonZeroU32","std::num::NonZeroU128","std::num::NonZeroU8","std::rc::Rc","std::sync::Arc","std::num::NonZeroIsize","std::ffi::CString","std::borrow::Cow","std::collections::HashMap","std::num::NonZeroI16","std::string::String","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::sync::RwLock","std::time::SystemTime","std::ops::RangeInclusive"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::collections::BTreeMap","std::cell::RefCell","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::option::Option","std::num::NonZeroI128","std::boxed::Box","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::ops::Range","std::num::NonZeroU8","std::num::NonZeroI16","std::collections::VecDeque","std::path::PathBuf","std::rc::Rc","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroU16","std::cell::Cell","std::num::NonZeroU64","std::net::SocketAddr","std::ops::RangeInclusive","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::time::Duration","std::sync::RwLock","std::collections::BTreeSet","std::string::String","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::time::SystemTime","std::ffi::CString","std::net::Ipv4Addr","std::vec::Vec","std::sync::Mutex","std::sync::atomic::AtomicU64","std::collections::HashSet","std::borrow::Cow","std::result::Result","std::collections::Bound","std::collections::HashMap","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroI64","std::net::SocketAddrV4","std::sync::Arc","std::sync::atomic::AtomicI16"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::collections::BinaryHeap","std::ffi::CString","std::collections::VecDeque","std::time::SystemTime","std::ops::RangeInclusive","std::num::NonZeroI16","std::string::String","std::net::SocketAddrV6","std::num::NonZeroIsize","std::num::NonZeroI64","std::num::NonZeroU64","std::time::Duration","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::path::PathBuf","std::sync::RwLock","std::option::Option","std::collections::Bound","std::num::NonZeroU128","std::cell::Cell","std::result::Result","std::boxed::Box","std::net::SocketAddr","std::num::NonZeroI8","std::sync::Arc","std::rc::Rc","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::sync::Mutex","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::num::NonZeroU32","std::cell::RefCell","std::net::IpAddr","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::vec::Vec","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::collections::BTreeSet","std::collections::HashSet","std::num::NonZeroU16","std::marker::PhantomData","std::ops::Range","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::sync::atomic::AtomicI32"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J)>::borrow_decode(p0);
+<(A, B, C, D, E, F, G, H, I, J)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J)>::decode":{"A":["std::marker::Sized","de::Decode"],"B":["std::marker::Sized","de::Decode"],"C":["de::Decode","std::marker::Sized"],"D":["std::marker::Sized","de::Decode"],"DE":["std::marker::Sized","de::Decoder"],"E":["de::Decode","std::marker::Sized"],"F":["de::Decode","std::marker::Sized"],"G":["std::marker::Sized","de::Decode"],"H":["std::marker::Sized","de::Decode"],"I":["de::Decode","std::marker::Sized"],"J":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"K":["std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode","std::cmp::Eq","std::hash::Hash"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::hash::Hash","de::Decode","enc::Encode","std::cmp::Eq","std::marker::Sized","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::Fixint","config::Limit","config::NoLimit","config::Configuration","config::BigEndian","config::Varint","std::clone::impls::<impl std::clone::Clone for *const T>"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J)>::decode":{"A":["std::boxed::Box","std::collections::HashSet","std::cell::Cell","std::string::String","std::rc::Rc","std::path::PathBuf","std::option::Option","std::collections::BTreeMap","std::ffi::CString","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::result::Result","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::num::NonZeroU128","std::num::NonZeroI32","std::time::SystemTime","std::collections::BinaryHeap","std::cell::RefCell","std::net::IpAddr","std::net::Ipv6Addr","std::sync::RwLock","std::collections::Bound","std::sync::atomic::AtomicU8","std::sync::Mutex","std::net::Ipv4Addr","std::ops::Range","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::HashMap","std::num::NonZeroI128","std::vec::Vec","std::collections::VecDeque","std::ops::RangeInclusive","std::borrow::Cow","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroIsize","std::num::NonZeroI64","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::net::SocketAddr","std::num::NonZeroU32","std::sync::atomic::AtomicUsize"],"B":["std::collections::BTreeMap","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::vec::Vec","std::borrow::Cow","std::net::SocketAddrV6","std::option::Option","std::collections::BinaryHeap","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::ops::Range","std::num::NonZeroU8","std::sync::Arc","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::net::SocketAddrV4","std::num::NonZeroI64","std::collections::HashSet","std::net::IpAddr","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::rc::Rc","std::result::Result","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::cell::RefCell","std::net::Ipv6Addr","std::path::PathBuf","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::ffi::CString","std::cell::Cell","std::boxed::Box","std::ops::RangeInclusive","std::collections::HashMap","std::num::NonZeroU16","std::sync::RwLock","std::string::String","std::num::NonZeroU128","std::marker::PhantomData","std::time::SystemTime","std::sync::Mutex","std::num::NonZeroU64","std::time::Duration","std::collections::Bound"],"C":["std::num::NonZeroI64","std::cell::RefCell","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::sync::Mutex","std::borrow::Cow","std::collections::Bound","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::boxed::Box","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::num::NonZeroI128","std::net::Ipv6Addr","std::num::NonZeroIsize","std::ops::Range","std::num::NonZeroI16","std::sync::RwLock","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::rc::Rc","std::cell::Cell","std::collections::HashMap","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::marker::PhantomData","std::net::SocketAddr","std::collections::BTreeSet","std::sync::Arc","std::num::NonZeroU64","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::string::String","std::num::NonZeroUsize","std::collections::HashSet","std::vec::Vec","std::ffi::CString","std::option::Option","std::num::NonZeroI32","std::collections::VecDeque","std::num::NonZeroU16","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::time::Duration","std::path::PathBuf","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::num::NonZeroI8","std::result::Result","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::time::SystemTime"],"D":["std::path::PathBuf","std::collections::HashMap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::result::Result","std::boxed::Box","std::num::NonZeroU8","std::num::NonZeroI32","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroIsize","std::ops::RangeInclusive","std::string::String","std::sync::atomic::AtomicU16","std::vec::Vec","std::num::NonZeroI16","std::net::SocketAddr","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::collections::BinaryHeap","std::ops::Range","std::num::NonZeroUsize","std::cell::RefCell","std::collections::Bound","std::ffi::CString","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::cell::Cell","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroU128","std::collections::HashSet","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::sync::Arc","std::sync::Mutex","std::time::Duration","std::net::SocketAddrV6","std::collections::VecDeque","std::num::NonZeroI128","std::option::Option","std::rc::Rc","std::collections::BTreeMap","std::num::NonZeroU32","std::sync::RwLock","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::num::NonZeroI8","std::time::SystemTime"],"DE":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"E":["std::vec::Vec","std::collections::HashSet","std::ops::RangeInclusive","std::sync::Arc","std::net::SocketAddrV6","std::path::PathBuf","std::num::NonZeroI128","std::sync::RwLock","std::num::NonZeroI8","std::num::NonZeroU16","std::time::Duration","std::marker::PhantomData","std::ffi::CString","std::collections::BTreeSet","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroU128","std::num::NonZeroU64","std::string::String","std::rc::Rc","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::net::SocketAddr","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::borrow::Cow","std::time::SystemTime","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::boxed::Box","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::collections::Bound","std::num::NonZeroU32","std::sync::Mutex","std::ops::Range","std::net::IpAddr","std::cell::Cell","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::result::Result","std::collections::BTreeMap","std::num::NonZeroI16"],"F":["std::ops::Range","std::marker::PhantomData","std::num::NonZeroI32","std::num::NonZeroU128","std::option::Option","std::collections::BTreeMap","std::time::Duration","std::num::NonZeroU32","std::ffi::CString","std::boxed::Box","std::cell::RefCell","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::path::PathBuf","std::net::Ipv4Addr","std::collections::BTreeSet","std::num::NonZeroU8","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::collections::Bound","std::cell::Cell","std::collections::HashSet","std::collections::VecDeque","std::string::String","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::result::Result","std::num::NonZeroI64","std::collections::BinaryHeap","std::num::NonZeroUsize","std::collections::HashMap","std::net::IpAddr","std::sync::Arc","std::net::SocketAddrV6","std::sync::Mutex","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::net::Ipv6Addr","std::vec::Vec","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroI128","std::borrow::Cow","std::rc::Rc"],"G":["std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::boxed::Box","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::ops::Range","std::sync::Arc","std::collections::BTreeMap","std::result::Result","std::vec::Vec","std::time::SystemTime","std::collections::VecDeque","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroIsize","std::net::Ipv4Addr","std::cell::Cell","std::sync::Mutex","std::net::IpAddr","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::time::Duration","std::cell::RefCell","std::ops::RangeInclusive","std::collections::Bound","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::marker::PhantomData","std::net::SocketAddr","std::sync::RwLock","std::net::SocketAddrV6","std::path::PathBuf","std::option::Option","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::string::String","std::ffi::CString","std::num::NonZeroI128","std::num::NonZeroI32","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::borrow::Cow","std::num::NonZeroU8","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::collections::HashSet","std::num::NonZeroU64","std::collections::HashMap","std::sync::atomic::AtomicU16","std::rc::Rc","std::num::NonZeroU32","std::sync::atomic::AtomicUsize"],"H":["std::sync::Arc","std::num::NonZeroU128","std::net::Ipv6Addr","std::rc::Rc","std::net::SocketAddrV4","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroU16","std::collections::HashMap","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::collections::BTreeSet","std::option::Option","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::path::PathBuf","std::sync::atomic::AtomicU64","std::time::Duration","std::sync::atomic::AtomicI16","std::ops::Range","std::num::NonZeroI32","std::collections::HashSet","std::num::NonZeroIsize","std::cell::RefCell","std::sync::atomic::AtomicI64","std::borrow::Cow","std::string::String","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::result::Result","std::sync::atomic::AtomicI8","std::vec::Vec","std::time::SystemTime","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::sync::RwLock","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroU8","std::collections::BinaryHeap","std::collections::VecDeque","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroU64","std::sync::Mutex","std::collections::Bound","std::net::IpAddr","std::ffi::CString","std::num::NonZeroI16","std::boxed::Box"],"I":["std::rc::Rc","std::sync::atomic::AtomicU32","std::borrow::Cow","std::boxed::Box","std::sync::atomic::AtomicI64","std::net::IpAddr","std::collections::HashMap","std::ops::Range","std::num::NonZeroU64","std::num::NonZeroU16","std::result::Result","std::cell::RefCell","std::net::Ipv6Addr","std::num::NonZeroI16","std::sync::Arc","std::cell::Cell","std::time::SystemTime","std::sync::Mutex","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroI128","std::num::NonZeroI32","std::num::NonZeroI8","std::time::Duration","std::ops::RangeInclusive","std::sync::RwLock","std::num::NonZeroIsize","std::net::Ipv4Addr","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::collections::Bound","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::vec::Vec","std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::path::PathBuf","std::string::String","std::net::SocketAddrV6","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::ffi::CString","std::net::SocketAddrV4","std::option::Option"],"J":["std::net::IpAddr","std::collections::Bound","std::num::NonZeroI128","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::path::PathBuf","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::ops::Range","std::collections::VecDeque","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroI16","std::num::NonZeroU64","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::rc::Rc","std::sync::atomic::AtomicI8","std::collections::HashSet","std::cell::Cell","std::boxed::Box","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::collections::HashMap","std::sync::RwLock","std::ops::RangeInclusive","std::vec::Vec","std::marker::PhantomData","std::string::String","std::num::NonZeroIsize","std::collections::BTreeSet","std::option::Option","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::time::Duration","std::sync::Mutex","std::num::NonZeroU128","std::cell::RefCell","std::num::NonZeroU8","std::net::SocketAddr","std::result::Result","std::net::Ipv6Addr","std::num::NonZeroI32","std::num::NonZeroU32","std::time::SystemTime","std::sync::Arc"]},"std::borrow::Cow":{"B":["std::ffi::CStr","<T as std::borrow::ToOwned>","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroI16","std::num::NonZeroU128","std::net::SocketAddrV4","std::num::NonZeroUsize","std::path::PathBuf","std::rc::Rc","std::num::NonZeroU32","std::cell::Cell","std::net::SocketAddr","std::time::Duration","std::num::NonZeroI32","std::cell::RefCell","std::option::Option","std::net::Ipv4Addr","std::ffi::CString","std::marker::PhantomData","std::string::String","std::num::NonZeroI128","std::num::NonZeroI8","std::num::NonZeroU64","std::num::NonZeroIsize","std::net::IpAddr","std::net::SocketAddrV6"],"V":["std::collections::BinaryHeap","std::ops::RangeInclusive","std::result::Result","std::num::NonZeroI32","std::num::NonZeroIsize","std::option::Option","std::collections::Bound","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::collections::HashMap","std::string::String","std::sync::atomic::AtomicI32","std::vec::Vec","std::num::NonZeroUsize","std::ops::Range","std::sync::Mutex","std::net::SocketAddrV6","std::net::IpAddr","std::collections::BTreeMap","std::num::NonZeroU64","std::time::SystemTime","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::collections::VecDeque","std::sync::Arc","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::sync::RwLock","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::time::Duration","std::num::NonZeroU128","std::collections::BTreeSet","std::num::NonZeroU32","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::boxed::Box","std::borrow::Cow","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::path::PathBuf","std::num::NonZeroU16","std::collections::HashSet","std::net::Ipv4Addr","std::marker::PhantomData","std::ffi::CString","std::cell::Cell","std::num::NonZeroI16","std::cell::RefCell","std::num::NonZeroI128","std::num::NonZeroI64","std::rc::Rc"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::ffi::CString","std::num::NonZeroU8","std::cell::Cell","std::num::NonZeroU32","std::num::NonZeroU128","std::net::Ipv6Addr","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroUsize","std::cell::RefCell","std::rc::Rc","std::net::Ipv4Addr","std::time::SystemTime","std::net::SocketAddr","std::num::NonZeroU16","std::num::NonZeroI8","std::num::NonZeroI16","std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroU64","std::string::String","std::time::Duration","std::sync::Arc","std::num::NonZeroI32"]},"std::collections::BinaryHeap":{"T":["std::rc::Rc","std::num::NonZeroI64","std::num::NonZeroU128","std::net::SocketAddr","std::time::Duration","std::net::SocketAddrV6","std::path::PathBuf","std::net::Ipv6Addr","std::num::NonZeroIsize","std::cell::RefCell","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroI128","std::marker::PhantomData","std::num::NonZeroI8","std::num::NonZeroI16","std::num::NonZeroU16","std::time::SystemTime","std::option::Option","std::sync::Arc","std::num::NonZeroU64","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroI32"]},"std::collections::Bound":{"T":["std::num::NonZeroI32","std::collections::Bound","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::string::String","std::collections::HashSet","std::sync::atomic::AtomicI64","std::option::Option","std::sync::Mutex","std::num::NonZeroI128","std::net::SocketAddr","std::net::Ipv4Addr","std::path::PathBuf","std::sync::atomic::AtomicU32","std::cell::RefCell","std::ffi::CString","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::net::SocketAddrV4","std::borrow::Cow","std::num::NonZeroU32","std::num::NonZeroU128","std::collections::HashMap","std::time::Duration","std::num::NonZeroI16","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::boxed::Box","std::rc::Rc","std::collections::BTreeMap","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::num::NonZeroUsize","std::net::Ipv6Addr","std::num::NonZeroU64","std::time::SystemTime","std::cell::Cell","std::ops::Range","std::net::IpAddr","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::result::Result","std::vec::Vec","std::sync::Arc","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::sync::atomic::AtomicU64"]},"std::collections::HashMap":{"K":["std::collections::Bound","std::num::NonZeroU64","std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroI64","std::num::NonZeroU32","std::num::NonZeroU16","std::net::SocketAddrV4","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroI128","std::time::SystemTime","std::ffi::CString","std::num::NonZeroI16","std::net::Ipv4Addr","std::sync::Arc","std::time::Duration"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroI16","std::net::SocketAddrV4","std::string::String","std::ops::RangeInclusive","std::net::IpAddr","std::marker::PhantomData","std::vec::Vec","std::num::NonZeroUsize","std::num::NonZeroI128","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::sync::RwLock","std::net::SocketAddrV6","std::ops::Range","std::cell::RefCell","std::num::NonZeroI32","std::collections::BTreeMap","std::net::Ipv4Addr","std::option::Option","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::time::SystemTime","std::collections::BinaryHeap","std::result::Result","std::num::NonZeroIsize","std::num::NonZeroU16","std::net::SocketAddr","std::collections::HashSet","std::sync::atomic::AtomicU16","std::time::Duration","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::borrow::Cow","std::rc::Rc","std::sync::Arc","std::sync::atomic::AtomicU64","std::cell::Cell","std::boxed::Box","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::collections::BTreeSet","std::path::PathBuf","std::collections::HashMap","std::ffi::CString","std::num::NonZeroU32","std::sync::atomic::AtomicI16"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::collections::Bound","std::num::NonZeroU16","std::ffi::CString","std::net::IpAddr","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroU64","std::sync::Arc","std::marker::PhantomData","std::net::Ipv6Addr","std::num::NonZeroU128","std::num::NonZeroU8","std::num::NonZeroI64","std::net::SocketAddrV6","std::net::SocketAddr","std::option::Option"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::collections::BinaryHeap","std::time::Duration","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::time::SystemTime","std::collections::BTreeSet","std::ffi::CString","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::cell::Cell","std::net::IpAddr","std::result::Result","std::ops::Range","std::collections::HashMap","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::num::NonZeroI16","std::num::NonZeroU128","std::net::SocketAddr","std::sync::RwLock","std::num::NonZeroUsize","std::collections::BTreeMap","std::num::NonZeroI64","std::option::Option","std::borrow::Cow","std::net::SocketAddrV6","std::path::PathBuf","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroI128","std::rc::Rc","std::sync::Arc","std::collections::HashSet","std::num::NonZeroU16","std::num::NonZeroU32","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::string::String","std::collections::Bound","std::vec::Vec","std::marker::PhantomData","std::num::NonZeroI32","std::cell::RefCell","std::boxed::Box","std::sync::atomic::AtomicBool","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::Mutex","std::option::Option","std::sync::atomic::AtomicIsize","std::rc::Rc","std::cell::RefCell","std::collections::BTreeSet","std::num::NonZeroUsize","std::collections::BinaryHeap","std::borrow::Cow","std::collections::HashSet","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroI128","std::boxed::Box","std::num::NonZeroI64","std::num::NonZeroU16","std::net::IpAddr","std::collections::BTreeMap","std::collections::HashMap","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::collections::Bound","std::net::SocketAddr","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::result::Result","std::num::NonZeroIsize","std::num::NonZeroU8","std::collections::VecDeque","std::num::NonZeroU128","std::num::NonZeroI8","std::net::SocketAddrV6","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::time::Duration","std::string::String","std::vec::Vec","std::cell::Cell","std::ops::Range","std::net::Ipv4Addr","std::time::SystemTime","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::ffi::CString","std::sync::Arc","std::sync::atomic::AtomicU16","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::num::NonZeroU32"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroU16","std::ops::Range","std::ffi::CString","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroI16","std::collections::HashMap","std::net::IpAddr","std::num::NonZeroI128","std::num::NonZeroIsize","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroU32","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::borrow::Cow","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::result::Result","std::rc::Rc","std::path::PathBuf","std::boxed::Box","std::cell::Cell","std::option::Option","std::time::Duration","std::ops::RangeInclusive","std::num::NonZeroUsize","std::num::NonZeroU128","std::sync::Mutex","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::num::NonZeroI8","std::sync::RwLock","std::string::String","std::vec::Vec","std::marker::PhantomData","std::collections::Bound","std::collections::VecDeque","std::net::SocketAddrV6","std::collections::BTreeSet","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::cell::RefCell","std::time::SystemTime","std::collections::BinaryHeap"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::net::IpAddr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::collections::Bound","std::collections::HashSet","std::sync::RwLock","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::net::SocketAddr","std::collections::HashMap","std::ops::Range","std::collections::VecDeque","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::ffi::CString","std::path::PathBuf","std::cell::Cell","std::string::String","std::borrow::Cow","std::collections::BTreeMap","std::net::Ipv6Addr","std::result::Result","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::boxed::Box","std::vec::Vec","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroU16","std::num::NonZeroUsize","std::num::NonZeroU128","std::num::NonZeroI8","std::time::SystemTime","std::collections::BinaryHeap","std::time::Duration","std::sync::Arc","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::rc::Rc","std::option::Option","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::cell::RefCell"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J)>::decode(p0);
+<(A, B, C, D, E, F, G, H, I, J)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K)>::borrow_decode":{"A":["std::marker::Sized","de::BorrowDecode"],"B":["de::BorrowDecode","std::marker::Sized"],"BD":["std::marker::Sized","de::BorrowDecoder"],"C":["std::marker::Sized","de::BorrowDecode"],"D":["de::BorrowDecode","std::marker::Sized"],"E":["std::marker::Sized","de::BorrowDecode"],"F":["de::BorrowDecode","std::marker::Sized"],"G":["de::BorrowDecode","std::marker::Sized"],"H":["std::marker::Sized","de::BorrowDecode"],"I":["std::marker::Sized","de::BorrowDecode"],"J":["std::marker::Sized","de::BorrowDecode"],"K":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord"],"V":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","std::cmp::Ord","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::cmp::Ord","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::Bound":{"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::collections::HashMap":{"K":["de::BorrowDecode","std::hash::Hash","de::Decode","std::marker::Sized","enc::Encode","std::cmp::Eq"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["de::BorrowDecode","de::Decode","std::hash::Hash","std::marker::Sized","enc::Encode","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","config::LittleEndian","config::Limit","config::Fixint","config::BigEndian","config::Varint","std::clone::impls::<impl std::clone::Clone for &T>","config::NoLimit"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K)>::borrow_decode":{"A":["std::cell::RefCell","std::sync::Arc","std::num::NonZeroI64","std::boxed::Box","std::path::PathBuf","std::marker::PhantomData","std::net::SocketAddr","std::string::String","std::collections::BTreeMap","std::net::IpAddr","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::option::Option","std::num::NonZeroIsize","std::num::NonZeroU16","std::ffi::CString","std::net::Ipv4Addr","std::collections::BTreeSet","std::num::NonZeroU32","std::vec::Vec","std::net::SocketAddrV4","std::collections::HashSet","std::collections::Bound","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::ops::Range","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::sync::Mutex","std::num::NonZeroUsize","std::collections::BinaryHeap","std::cell::Cell","std::borrow::Cow","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::time::Duration","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::time::SystemTime","std::rc::Rc","std::num::NonZeroU128","std::result::Result","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::collections::HashMap","std::sync::RwLock"],"B":["std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::num::NonZeroU128","std::cell::RefCell","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::ops::Range","std::net::Ipv6Addr","std::num::NonZeroI128","std::sync::Arc","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::collections::HashSet","std::collections::Bound","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::net::IpAddr","std::option::Option","std::num::NonZeroU64","std::vec::Vec","std::collections::VecDeque","std::collections::BinaryHeap","std::cell::Cell","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::result::Result","std::sync::atomic::AtomicI16","std::time::Duration","std::ops::RangeInclusive","std::time::SystemTime","std::sync::RwLock","std::string::String","std::num::NonZeroU8","std::sync::Mutex","std::num::NonZeroU16","std::net::SocketAddrV6","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroUsize","std::collections::BTreeSet","std::boxed::Box","std::ffi::CString","std::path::PathBuf"],"BD":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"C":["std::rc::Rc","std::ffi::CString","std::sync::atomic::AtomicU8","std::sync::Arc","std::num::NonZeroI16","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::num::NonZeroUsize","std::net::Ipv6Addr","std::collections::BinaryHeap","std::boxed::Box","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::cell::RefCell","std::time::Duration","std::borrow::Cow","std::collections::BTreeSet","std::string::String","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::vec::Vec","std::net::SocketAddrV4","std::num::NonZeroU32","std::sync::RwLock","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::collections::BTreeMap","std::result::Result","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::net::IpAddr","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::cell::Cell","std::collections::Bound","std::num::NonZeroI8","std::num::NonZeroI128","std::num::NonZeroI32","std::collections::HashSet","std::sync::Mutex","std::time::SystemTime","std::net::SocketAddrV6","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::path::PathBuf","std::option::Option","std::ops::Range","std::marker::PhantomData","std::sync::atomic::AtomicU32"],"D":["std::num::NonZeroU32","std::result::Result","std::string::String","std::num::NonZeroUsize","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::collections::BTreeSet","std::option::Option","std::path::PathBuf","std::sync::atomic::AtomicI8","std::collections::HashMap","std::sync::RwLock","std::ops::Range","std::collections::BinaryHeap","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::sync::Arc","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::collections::Bound","std::cell::RefCell","std::vec::Vec","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::time::SystemTime","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::net::IpAddr","std::ffi::CString","std::num::NonZeroU128","std::collections::BTreeMap","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroI64","std::net::SocketAddr","std::cell::Cell","std::net::SocketAddrV6","std::marker::PhantomData","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::borrow::Cow","std::collections::HashSet","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::boxed::Box","std::num::NonZeroI8","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::atomic::AtomicIsize"],"E":["std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::num::NonZeroI8","std::num::NonZeroU16","std::ffi::CString","std::option::Option","std::rc::Rc","std::num::NonZeroIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::ops::Range","std::collections::BTreeMap","std::borrow::Cow","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::collections::BTreeSet","std::num::NonZeroUsize","std::vec::Vec","std::sync::Mutex","std::time::Duration","std::sync::atomic::AtomicI16","std::collections::HashMap","std::cell::Cell","std::num::NonZeroI64","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::path::PathBuf","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::result::Result","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroI32","std::num::NonZeroI128","std::sync::RwLock","std::collections::Bound","std::string::String","std::collections::BinaryHeap","std::boxed::Box","std::marker::PhantomData","std::net::SocketAddr"],"F":["std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::ffi::CString","std::sync::Arc","std::ops::Range","std::sync::atomic::AtomicBool","std::sync::Mutex","std::marker::PhantomData","std::num::NonZeroU32","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::cell::RefCell","std::num::NonZeroI64","std::path::PathBuf","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::net::Ipv6Addr","std::collections::BTreeMap","std::net::Ipv4Addr","std::borrow::Cow","std::sync::atomic::AtomicI32","std::net::IpAddr","std::num::NonZeroI128","std::cell::Cell","std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::collections::Bound","std::collections::BTreeSet","std::sync::RwLock","std::collections::BinaryHeap","std::result::Result","std::collections::HashMap","std::sync::atomic::AtomicU64","std::rc::Rc","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::boxed::Box","std::net::SocketAddr","std::ops::RangeInclusive","std::string::String","std::vec::Vec","std::option::Option","std::num::NonZeroU8","std::collections::HashSet","std::time::Duration","std::collections::VecDeque"],"G":["std::time::Duration","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::path::PathBuf","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::collections::HashMap","std::net::SocketAddr","std::num::NonZeroIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::collections::Bound","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::num::NonZeroU128","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroI16","std::cell::Cell","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::collections::VecDeque","std::string::String","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroI128","std::net::IpAddr","std::num::NonZeroI8","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroU64","std::sync::RwLock","std::time::SystemTime","std::vec::Vec","std::boxed::Box","std::borrow::Cow","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::sync::Mutex","std::marker::PhantomData","std::num::NonZeroU32","std::ffi::CString","std::sync::Arc","std::rc::Rc","std::collections::BTreeMap","std::result::Result","std::ops::Range","std::cell::RefCell","std::collections::BinaryHeap","std::collections::HashSet","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16"],"H":["std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::ffi::CString","std::net::IpAddr","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::rc::Rc","std::time::SystemTime","std::collections::HashMap","std::ops::RangeInclusive","std::result::Result","std::sync::Mutex","std::num::NonZeroI16","std::boxed::Box","std::ops::Range","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::sync::Arc","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::borrow::Cow","std::sync::atomic::AtomicU32","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroIsize","std::net::SocketAddrV4","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::vec::Vec","std::collections::HashSet","std::num::NonZeroUsize","std::sync::RwLock","std::string::String","std::sync::atomic::AtomicU8","std::path::PathBuf","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::cell::Cell","std::time::Duration","std::cell::RefCell","std::collections::BinaryHeap","std::num::NonZeroI32","std::collections::Bound","std::num::NonZeroU128","std::num::NonZeroI128","std::num::NonZeroU32","std::net::SocketAddr","std::num::NonZeroU64"],"I":["std::collections::HashSet","std::time::SystemTime","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroU128","std::num::NonZeroI16","std::net::SocketAddrV6","std::net::SocketAddr","std::collections::BinaryHeap","std::collections::HashMap","std::num::NonZeroI128","std::boxed::Box","std::collections::VecDeque","std::sync::Mutex","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::cell::Cell","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::collections::BTreeMap","std::num::NonZeroU16","std::num::NonZeroU32","std::collections::BTreeSet","std::ffi::CString","std::num::NonZeroIsize","std::collections::Bound","std::sync::Arc","std::net::Ipv4Addr","std::rc::Rc","std::option::Option","std::sync::atomic::AtomicI16","std::vec::Vec","std::ops::Range","std::path::PathBuf","std::borrow::Cow","std::sync::atomic::AtomicU8","std::time::Duration","std::result::Result","std::sync::atomic::AtomicU32","std::cell::RefCell","std::net::Ipv6Addr","std::net::IpAddr","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::string::String"],"J":["std::sync::Arc","std::collections::BinaryHeap","std::path::PathBuf","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::num::NonZeroIsize","std::cell::Cell","std::sync::atomic::AtomicI64","std::time::SystemTime","std::vec::Vec","std::rc::Rc","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroU8","std::net::SocketAddrV6","std::net::IpAddr","std::result::Result","std::time::Duration","std::option::Option","std::sync::RwLock","std::num::NonZeroI64","std::cell::RefCell","std::num::NonZeroU128","std::ffi::CString","std::collections::HashMap","std::num::NonZeroI16","std::num::NonZeroI128","std::ops::Range","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::marker::PhantomData","std::sync::Mutex","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::collections::HashSet","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::borrow::Cow","std::string::String","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::collections::Bound","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::boxed::Box"],"K":["std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::cell::Cell","std::time::SystemTime","std::sync::atomic::AtomicI16","std::net::IpAddr","std::num::NonZeroUsize","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::net::SocketAddrV4","std::sync::RwLock","std::rc::Rc","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::vec::Vec","std::collections::BTreeSet","std::ops::RangeInclusive","std::result::Result","std::collections::BinaryHeap","std::collections::VecDeque","std::collections::HashMap","std::ops::Range","std::sync::atomic::AtomicU16","std::sync::Mutex","std::num::NonZeroI32","std::num::NonZeroU64","std::collections::BTreeMap","std::num::NonZeroU128","std::net::Ipv6Addr","std::marker::PhantomData","std::path::PathBuf","std::collections::Bound","std::time::Duration","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::num::NonZeroI16","std::string::String","std::borrow::Cow","std::num::NonZeroU32","std::collections::HashSet","std::sync::atomic::AtomicBool","std::option::Option","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::boxed::Box","std::net::SocketAddrV6","std::sync::Arc","std::num::NonZeroI64","std::ffi::CString"]},"std::borrow::Cow":{"B":["std::ffi::CStr","<T as std::borrow::ToOwned>","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::cell::RefCell","std::num::NonZeroU64","std::net::Ipv4Addr","std::net::IpAddr","std::net::Ipv6Addr","std::ffi::CString","std::time::Duration","std::net::SocketAddrV4","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroU16","std::num::NonZeroI8","std::sync::Arc","std::rc::Rc","std::num::NonZeroIsize","std::num::NonZeroU128","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroI32","std::string::String","std::time::SystemTime","std::option::Option","std::num::NonZeroU8"],"V":["std::vec::Vec","std::num::NonZeroI64","std::collections::VecDeque","std::boxed::Box","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::option::Option","std::collections::BTreeMap","std::time::SystemTime","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::collections::HashSet","std::borrow::Cow","std::num::NonZeroIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroI8","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::rc::Rc","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::sync::Arc","std::sync::atomic::AtomicU64","std::collections::HashMap","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::sync::Mutex","std::cell::Cell","std::cell::RefCell","std::collections::BTreeSet","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::ops::Range","std::result::Result","std::net::IpAddr","std::num::NonZeroU16","std::marker::PhantomData","std::time::Duration","std::sync::RwLock","std::net::SocketAddrV4","std::num::NonZeroI128","std::ffi::CString","std::collections::Bound","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::string::String","std::num::NonZeroU8"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI16","std::marker::PhantomData","std::cell::RefCell","std::net::SocketAddr","std::option::Option","std::ffi::CString","std::num::NonZeroU64","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroI8","std::num::NonZeroI64","std::net::SocketAddrV4","std::string::String","std::rc::Rc","std::num::NonZeroIsize","std::num::NonZeroI128","std::num::NonZeroU32","std::sync::Arc","std::num::NonZeroI32","std::net::Ipv6Addr","std::num::NonZeroU16","std::cell::Cell","std::num::NonZeroUsize"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddrV4","std::num::NonZeroI32","std::ffi::CString","std::string::String","std::num::NonZeroI8","std::option::Option","std::net::SocketAddr","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroI128","std::path::PathBuf","std::num::NonZeroU32","std::rc::Rc","std::num::NonZeroI64","std::net::IpAddr","std::cell::Cell","std::net::SocketAddrV6","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroU128"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicI16","std::vec::Vec","std::borrow::Cow","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroI128","std::ops::RangeInclusive","std::ffi::CString","std::collections::BinaryHeap","std::boxed::Box","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::collections::HashMap","std::path::PathBuf","std::string::String","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::num::NonZeroI64","std::num::NonZeroIsize","std::collections::BTreeMap","std::sync::Arc","std::collections::HashSet","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::collections::BTreeSet","std::num::NonZeroU8","std::collections::Bound","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::result::Result","std::sync::atomic::AtomicU32","std::time::Duration","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::net::IpAddr","std::net::Ipv6Addr","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroI8","std::cell::Cell","std::marker::PhantomData","std::rc::Rc","std::ops::Range","std::net::SocketAddrV4","std::sync::RwLock","std::option::Option"]},"std::collections::HashMap":{"K":["std::path::PathBuf","std::time::SystemTime","std::ffi::CString","std::num::NonZeroI128","std::net::Ipv4Addr","std::net::Ipv6Addr","std::collections::Bound","std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroU64","std::option::Option","std::num::NonZeroI64"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::time::Duration","std::num::NonZeroU16","std::sync::Arc","std::net::IpAddr","std::string::String","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::cell::Cell","std::sync::Mutex","std::net::SocketAddrV6","std::result::Result","std::borrow::Cow","std::sync::atomic::AtomicU8","std::sync::RwLock","std::net::Ipv4Addr","std::num::NonZeroUsize","std::num::NonZeroU128","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::collections::Bound","std::sync::atomic::AtomicI8","std::vec::Vec","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::ops::Range","std::ffi::CString","std::collections::HashMap","std::rc::Rc","std::marker::PhantomData","std::ops::RangeInclusive","std::collections::BinaryHeap","std::time::SystemTime","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::boxed::Box","std::option::Option","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroU64","std::net::SocketAddrV4","std::num::NonZeroU8","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::collections::HashSet","std::num::NonZeroI8","std::num::NonZeroI128","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::cell::RefCell"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI16","std::num::NonZeroUsize","std::net::SocketAddrV6","std::string::String","std::num::NonZeroU64","std::option::Option","std::num::NonZeroU8","std::net::SocketAddr","std::collections::Bound","std::time::SystemTime","std::num::NonZeroI64","std::num::NonZeroU16","std::marker::PhantomData","std::num::NonZeroI128","std::net::IpAddr"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::time::Duration","std::num::NonZeroUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::vec::Vec","std::sync::Arc","std::ops::RangeInclusive","std::net::IpAddr","std::option::Option","std::result::Result","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::num::NonZeroU64","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::cell::Cell","std::num::NonZeroU32","std::path::PathBuf","std::sync::atomic::AtomicU32","std::sync::RwLock","std::ffi::CString","std::sync::Mutex","std::net::Ipv4Addr","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::collections::HashMap","std::marker::PhantomData","std::collections::VecDeque","std::num::NonZeroIsize","std::string::String","std::borrow::Cow","std::boxed::Box","std::sync::atomic::AtomicU64","std::ops::Range","std::num::NonZeroI16","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::collections::Bound","std::num::NonZeroU8","std::collections::BTreeMap","std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroI8","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::time::SystemTime","std::collections::HashSet","std::num::NonZeroI32","std::num::NonZeroI64","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::rc::Rc"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::num::NonZeroU8","std::num::NonZeroU64","std::marker::PhantomData","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::net::Ipv4Addr","std::rc::Rc","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::num::NonZeroI128","std::borrow::Cow","std::num::NonZeroU16","std::num::NonZeroIsize","std::num::NonZeroI32","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::option::Option","std::sync::atomic::AtomicU64","std::cell::Cell","std::sync::Arc","std::net::SocketAddr","std::collections::VecDeque","std::net::IpAddr","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::vec::Vec","std::collections::BinaryHeap","std::sync::Mutex","std::net::Ipv6Addr","std::ops::RangeInclusive","std::sync::RwLock","std::sync::atomic::AtomicI64","std::ops::Range","std::num::NonZeroI8","std::collections::HashSet","std::sync::atomic::AtomicI16","std::result::Result","std::cell::RefCell","std::ffi::CString","std::time::SystemTime","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroUsize","std::string::String","std::sync::atomic::AtomicU32","std::boxed::Box","std::collections::Bound","std::time::Duration"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicI32","std::rc::Rc","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::sync::Arc","std::option::Option","std::collections::BinaryHeap","std::collections::VecDeque","std::net::SocketAddr","std::sync::RwLock","std::num::NonZeroI8","std::sync::Mutex","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::num::NonZeroI16","std::num::NonZeroU16","std::result::Result","std::collections::BTreeMap","std::net::Ipv6Addr","std::borrow::Cow","std::collections::HashMap","std::num::NonZeroUsize","std::num::NonZeroI32","std::vec::Vec","std::path::PathBuf","std::sync::atomic::AtomicU16","std::cell::RefCell","std::boxed::Box","std::ops::RangeInclusive","std::ops::Range","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::collections::Bound","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::num::NonZeroU128","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::net::IpAddr","std::num::NonZeroIsize","std::cell::Cell","std::collections::BTreeSet","std::marker::PhantomData","std::string::String","std::num::NonZeroU8","std::ffi::CString","std::time::Duration","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::time::SystemTime"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU16","std::ops::RangeInclusive","std::net::Ipv4Addr","std::result::Result","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::ops::Range","std::net::SocketAddrV6","std::marker::PhantomData","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::cell::Cell","std::sync::Arc","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::num::NonZeroI64","std::num::NonZeroU8","std::string::String","std::num::NonZeroUsize","std::collections::HashSet","std::sync::Mutex","std::time::Duration","std::borrow::Cow","std::num::NonZeroI16","std::num::NonZeroU32","std::boxed::Box","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::collections::HashMap","std::cell::RefCell","std::ffi::CString","std::collections::VecDeque","std::sync::RwLock","std::time::SystemTime","std::rc::Rc","std::vec::Vec","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::collections::Bound","std::num::NonZeroI128","std::collections::BinaryHeap","std::path::PathBuf","std::num::NonZeroU128","std::num::NonZeroI32","std::net::IpAddr","std::net::SocketAddr"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K)>::borrow_decode(p0);
+<(A, B, C, D, E, F, G, H, I, J, K)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K)>::decode":{"A":["de::Decode","std::marker::Sized"],"B":["de::Decode","std::marker::Sized"],"C":["de::Decode","std::marker::Sized"],"D":["std::marker::Sized","de::Decode"],"DE":["de::Decoder","std::marker::Sized"],"E":["de::Decode","std::marker::Sized"],"F":["std::marker::Sized","de::Decode"],"G":["de::Decode","std::marker::Sized"],"H":["std::marker::Sized","de::Decode"],"I":["de::Decode","std::marker::Sized"],"J":["de::Decode","std::marker::Sized"],"K":["de::Decode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode","std::cmp::Ord"],"V":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::Decode","std::cmp::Ord","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["de::Decode","enc::Encode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode"]},"std::collections::Bound":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized","std::cmp::Eq","std::hash::Hash"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","std::hash::Hash","de::Decode","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Varint","config::BigEndian","config::Limit","std::clone::impls::<impl std::clone::Clone for &mut T>","config::Configuration","config::LittleEndian","config::NoLimit","config::Fixint"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K)>::decode":{"A":["std::sync::atomic::AtomicI32","std::marker::PhantomData","std::sync::Mutex","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::option::Option","std::net::Ipv4Addr","std::num::NonZeroUsize","std::time::Duration","std::ops::Range","std::collections::HashSet","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::result::Result","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::boxed::Box","std::time::SystemTime","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::ffi::CString","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::cell::RefCell","std::borrow::Cow","std::num::NonZeroIsize","std::collections::VecDeque","std::sync::Arc","std::num::NonZeroI16","std::collections::HashMap","std::num::NonZeroU16","std::collections::BinaryHeap","std::net::IpAddr","std::num::NonZeroU128","std::path::PathBuf","std::num::NonZeroI32","std::ops::RangeInclusive","std::net::Ipv6Addr","std::cell::Cell","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::string::String","std::rc::Rc","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::collections::Bound","std::vec::Vec","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::net::SocketAddr","std::sync::RwLock","std::num::NonZeroU8"],"B":["std::sync::atomic::AtomicU64","std::net::IpAddr","std::sync::RwLock","std::sync::atomic::AtomicI8","std::collections::HashMap","std::num::NonZeroI64","std::cell::Cell","std::collections::HashSet","std::string::String","std::sync::Arc","std::net::SocketAddrV6","std::collections::Bound","std::collections::VecDeque","std::sync::Mutex","std::num::NonZeroIsize","std::num::NonZeroI128","std::vec::Vec","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroU16","std::collections::BTreeSet","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::cell::RefCell","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::ops::Range","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::time::Duration","std::num::NonZeroUsize","std::collections::BTreeMap","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::rc::Rc","std::num::NonZeroU32","std::net::Ipv6Addr","std::ops::RangeInclusive","std::result::Result","std::path::PathBuf","std::time::SystemTime","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::option::Option","std::boxed::Box","std::net::SocketAddrV4"],"C":["std::num::NonZeroIsize","std::num::NonZeroU8","std::cell::Cell","std::num::NonZeroUsize","std::sync::RwLock","std::boxed::Box","std::num::NonZeroU128","std::vec::Vec","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::option::Option","std::string::String","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::rc::Rc","std::num::NonZeroU32","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::time::SystemTime","std::path::PathBuf","std::ops::RangeInclusive","std::sync::Arc","std::collections::BinaryHeap","std::net::Ipv6Addr","std::num::NonZeroI8","std::net::SocketAddrV4","std::collections::Bound","std::ffi::CString","std::result::Result","std::collections::BTreeSet","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::net::Ipv4Addr","std::collections::VecDeque","std::borrow::Cow","std::num::NonZeroI16","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::net::IpAddr","std::sync::atomic::AtomicI64","std::time::Duration","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::collections::HashSet","std::cell::RefCell","std::marker::PhantomData","std::collections::HashMap","std::num::NonZeroI32","std::ops::Range","std::sync::atomic::AtomicU32"],"D":["std::num::NonZeroUsize","std::net::Ipv4Addr","std::net::SocketAddrV6","std::time::Duration","std::sync::atomic::AtomicI8","std::cell::RefCell","std::collections::BinaryHeap","std::collections::HashSet","std::sync::atomic::AtomicI32","std::collections::Bound","std::cell::Cell","std::num::NonZeroU128","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::borrow::Cow","std::num::NonZeroI64","std::sync::RwLock","std::num::NonZeroI128","std::collections::BTreeMap","std::boxed::Box","std::sync::atomic::AtomicU16","std::rc::Rc","std::option::Option","std::ops::Range","std::ops::RangeInclusive","std::net::SocketAddrV4","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::sync::Arc","std::sync::atomic::AtomicU8","std::collections::HashMap","std::num::NonZeroI8","std::num::NonZeroU16","std::path::PathBuf","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::collections::VecDeque","std::string::String","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::vec::Vec","std::net::IpAddr","std::sync::Mutex","std::ffi::CString","std::net::Ipv6Addr","std::num::NonZeroU32","std::num::NonZeroI32","std::time::SystemTime","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::result::Result"],"DE":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"E":["std::boxed::Box","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::cell::RefCell","std::net::SocketAddrV4","std::option::Option","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::path::PathBuf","std::ops::RangeInclusive","std::net::IpAddr","std::result::Result","std::collections::HashMap","std::ops::Range","std::time::SystemTime","std::collections::BTreeMap","std::borrow::Cow","std::rc::Rc","std::sync::Mutex","std::sync::RwLock","std::collections::Bound","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::net::Ipv6Addr","std::cell::Cell","std::net::SocketAddrV6","std::num::NonZeroU16","std::num::NonZeroU32","std::num::NonZeroI64","std::vec::Vec","std::marker::PhantomData","std::string::String","std::sync::Arc","std::collections::BinaryHeap","std::num::NonZeroU8","std::net::SocketAddr","std::ffi::CString","std::num::NonZeroUsize","std::time::Duration"],"F":["std::ffi::CString","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::collections::HashMap","std::num::NonZeroI32","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::path::PathBuf","std::net::Ipv6Addr","std::net::SocketAddr","std::net::IpAddr","std::num::NonZeroI8","std::sync::RwLock","std::collections::BTreeSet","std::option::Option","std::net::SocketAddrV4","std::collections::BinaryHeap","std::cell::RefCell","std::marker::PhantomData","std::rc::Rc","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::time::Duration","std::ops::Range","std::num::NonZeroU32","std::num::NonZeroU128","std::collections::BTreeMap","std::time::SystemTime","std::collections::HashSet","std::num::NonZeroU8","std::num::NonZeroIsize","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::string::String","std::borrow::Cow","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::collections::Bound","std::result::Result","std::sync::Arc","std::net::SocketAddrV6","std::boxed::Box","std::sync::atomic::AtomicU16","std::vec::Vec","std::num::NonZeroU16","std::num::NonZeroI64","std::num::NonZeroI16","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::sync::Mutex","std::cell::Cell","std::num::NonZeroU64","std::sync::atomic::AtomicU32"],"G":["std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::rc::Rc","std::sync::atomic::AtomicI32","std::ffi::CString","std::path::PathBuf","std::num::NonZeroIsize","std::ops::Range","std::sync::atomic::AtomicI8","std::string::String","std::cell::RefCell","std::num::NonZeroU16","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::collections::HashSet","std::collections::BTreeMap","std::net::Ipv4Addr","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::collections::HashMap","std::collections::Bound","std::sync::Arc","std::time::SystemTime","std::result::Result","std::num::NonZeroU64","std::marker::PhantomData","std::sync::RwLock","std::num::NonZeroU8","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::boxed::Box","std::ops::RangeInclusive","std::time::Duration","std::num::NonZeroI32","std::num::NonZeroI8","std::net::SocketAddrV6","std::borrow::Cow","std::num::NonZeroUsize","std::net::Ipv6Addr","std::collections::BinaryHeap","std::option::Option","std::cell::Cell","std::net::IpAddr","std::sync::atomic::AtomicU64","std::vec::Vec","std::sync::Mutex","std::num::NonZeroU128","std::num::NonZeroI64","std::sync::atomic::AtomicIsize"],"H":["std::num::NonZeroI128","std::net::IpAddr","std::collections::VecDeque","std::vec::Vec","std::result::Result","std::net::SocketAddrV6","std::boxed::Box","std::num::NonZeroU128","std::ops::Range","std::collections::BTreeSet","std::ffi::CString","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::rc::Rc","std::sync::atomic::AtomicU16","std::sync::Arc","std::sync::atomic::AtomicU8","std::collections::HashMap","std::num::NonZeroU16","std::path::PathBuf","std::net::Ipv4Addr","std::cell::Cell","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::collections::HashSet","std::num::NonZeroI32","std::num::NonZeroIsize","std::time::Duration","std::sync::RwLock","std::net::SocketAddrV4","std::ops::RangeInclusive","std::time::SystemTime","std::num::NonZeroI16","std::collections::Bound","std::option::Option","std::sync::atomic::AtomicI32","std::string::String","std::collections::BTreeMap","std::num::NonZeroI8","std::num::NonZeroI64","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::borrow::Cow","std::sync::Mutex","std::num::NonZeroU64","std::sync::atomic::AtomicU32"],"I":["std::num::NonZeroI8","std::collections::BTreeMap","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::net::Ipv6Addr","std::vec::Vec","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::sync::Mutex","std::time::Duration","std::borrow::Cow","std::sync::atomic::AtomicI8","std::cell::Cell","std::result::Result","std::num::NonZeroU16","std::collections::HashMap","std::net::Ipv4Addr","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroU128","std::option::Option","std::ops::Range","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::net::IpAddr","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::rc::Rc","std::ffi::CString","std::num::NonZeroI16","std::path::PathBuf","std::time::SystemTime","std::sync::atomic::AtomicI64","std::boxed::Box","std::num::NonZeroI64","std::num::NonZeroI128","std::collections::Bound","std::cell::RefCell","std::ops::RangeInclusive","std::sync::RwLock","std::collections::BTreeSet","std::net::SocketAddrV4","std::num::NonZeroU8","std::string::String"],"J":["std::vec::Vec","std::num::NonZeroU128","std::num::NonZeroU32","std::collections::HashMap","std::net::IpAddr","std::sync::Mutex","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::boxed::Box","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::sync::Arc","std::sync::RwLock","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::path::PathBuf","std::ops::Range","std::num::NonZeroI128","std::result::Result","std::ops::RangeInclusive","std::collections::Bound","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::cell::RefCell","std::num::NonZeroUsize","std::option::Option","std::rc::Rc","std::collections::BTreeMap","std::ffi::CString","std::net::SocketAddrV6","std::cell::Cell","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::num::NonZeroU8","std::net::Ipv6Addr","std::marker::PhantomData","std::borrow::Cow","std::num::NonZeroU16","std::net::SocketAddrV4","std::collections::BTreeSet","std::net::Ipv4Addr","std::string::String","std::collections::HashSet","std::collections::VecDeque","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::time::SystemTime","std::time::Duration","std::num::NonZeroI32"],"K":["std::borrow::Cow","std::sync::Mutex","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::collections::HashMap","std::collections::HashSet","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::collections::Bound","std::num::NonZeroI32","std::net::SocketAddrV4","std::time::Duration","std::marker::PhantomData","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroI64","std::sync::RwLock","std::sync::atomic::AtomicU16","std::cell::Cell","std::collections::BTreeMap","std::net::SocketAddrV6","std::path::PathBuf","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroU8","std::result::Result","std::net::IpAddr","std::sync::atomic::AtomicI8","std::rc::Rc","std::num::NonZeroU16","std::ops::RangeInclusive","std::vec::Vec","std::collections::VecDeque","std::ops::Range","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::time::SystemTime","std::num::NonZeroU32","std::ffi::CString","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::option::Option","std::collections::BinaryHeap","std::num::NonZeroI8","std::num::NonZeroUsize","std::sync::atomic::AtomicI64","std::boxed::Box","std::string::String","std::sync::Arc","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::path::Path","std::ffi::OsStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroU16","std::time::Duration","std::cell::RefCell","std::num::NonZeroU64","std::num::NonZeroU128","std::cell::Cell","std::num::NonZeroI16","std::num::NonZeroI8","std::rc::Rc","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroIsize","std::string::String","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroU8","std::net::Ipv6Addr","std::num::NonZeroUsize","std::ffi::CString","std::path::PathBuf","std::option::Option"],"V":["std::sync::atomic::AtomicI16","std::collections::VecDeque","std::string::String","std::ffi::CString","std::num::NonZeroU8","std::rc::Rc","std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::cell::Cell","std::collections::Bound","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::num::NonZeroU64","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::net::IpAddr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::num::NonZeroU16","std::ops::RangeInclusive","std::num::NonZeroUsize","std::sync::Mutex","std::collections::BinaryHeap","std::ops::Range","std::result::Result","std::net::SocketAddrV4","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::option::Option","std::sync::Arc","std::vec::Vec","std::cell::RefCell","std::sync::RwLock","std::marker::PhantomData","std::boxed::Box","std::collections::BTreeMap","std::net::SocketAddrV6","std::num::NonZeroI128","std::net::Ipv6Addr","std::collections::HashSet","std::time::Duration","std::collections::HashMap","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::borrow::Cow","std::time::SystemTime"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::net::SocketAddrV4","std::num::NonZeroU32","std::num::NonZeroI64","std::num::NonZeroI16","std::num::NonZeroUsize","std::marker::PhantomData","std::net::SocketAddr","std::num::NonZeroU64","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroU8","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroI8","std::num::NonZeroI32","std::ffi::CString","std::num::NonZeroI128","std::cell::RefCell","std::num::NonZeroU128","std::rc::Rc","std::option::Option"]},"std::collections::BinaryHeap":{"T":["std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroU32","std::net::Ipv4Addr","std::num::NonZeroU8","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroI8","std::num::NonZeroI16","std::num::NonZeroU16","std::rc::Rc","std::net::IpAddr","std::num::NonZeroI64","std::time::Duration","std::cell::Cell","std::string::String","std::num::NonZeroI128","std::net::SocketAddrV6","std::cell::RefCell","std::option::Option","std::num::NonZeroUsize"]},"std::collections::Bound":{"T":["std::num::NonZeroU16","std::num::NonZeroI64","std::net::SocketAddrV6","std::net::IpAddr","std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroI128","std::num::NonZeroU8","std::borrow::Cow","std::cell::RefCell","std::sync::Mutex","std::collections::Bound","std::rc::Rc","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::collections::HashSet","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroI32","std::ops::RangeInclusive","std::time::Duration","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::option::Option","std::ffi::CString","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::num::NonZeroUsize","std::marker::PhantomData","std::collections::VecDeque","std::num::NonZeroU32","std::net::SocketAddrV4","std::collections::BinaryHeap","std::boxed::Box","std::string::String","std::path::PathBuf","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::result::Result","std::num::NonZeroI8","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::vec::Vec","std::ops::Range","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::sync::RwLock","std::num::NonZeroIsize","std::time::SystemTime"]},"std::collections::HashMap":{"K":["std::num::NonZeroU8","std::net::Ipv6Addr","std::ffi::CString","std::marker::PhantomData","std::collections::Bound","std::num::NonZeroU128","std::num::NonZeroI64","std::num::NonZeroU64","std::net::SocketAddrV6","std::num::NonZeroU16","std::time::Duration","std::net::SocketAddr","std::path::PathBuf"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicI32","std::net::SocketAddr","std::num::NonZeroIsize","std::net::Ipv4Addr","std::sync::Mutex","std::result::Result","std::sync::Arc","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::string::String","std::path::PathBuf","std::borrow::Cow","std::sync::atomic::AtomicBool","std::time::SystemTime","std::boxed::Box","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::vec::Vec","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::rc::Rc","std::ops::Range","std::num::NonZeroI128","std::sync::RwLock","std::num::NonZeroU128","std::num::NonZeroU32","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::collections::HashMap","std::net::SocketAddrV4","std::collections::BTreeMap","std::num::NonZeroUsize","std::time::Duration","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::num::NonZeroU64","std::collections::VecDeque","std::net::IpAddr","std::cell::RefCell","std::collections::Bound","std::num::NonZeroU16","std::ops::RangeInclusive","std::cell::Cell","std::option::Option","std::num::NonZeroI16","std::net::Ipv6Addr","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroI64","std::collections::HashSet"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroI128","std::string::String","std::time::Duration","std::net::SocketAddrV6","std::num::NonZeroUsize","std::net::IpAddr","std::marker::PhantomData","std::path::PathBuf","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroU16","std::num::NonZeroI64"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::boxed::Box","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::time::SystemTime","std::ffi::CString","std::collections::HashSet","std::rc::Rc","std::cell::Cell","std::collections::BTreeSet","std::num::NonZeroU128","std::num::NonZeroI32","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroUsize","std::collections::VecDeque","std::path::PathBuf","std::result::Result","std::sync::Mutex","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::num::NonZeroU64","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::borrow::Cow","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::num::NonZeroU32","std::num::NonZeroI64","std::ops::Range","std::collections::HashMap","std::option::Option","std::sync::Arc","std::sync::RwLock","std::string::String","std::num::NonZeroIsize","std::num::NonZeroU8","std::num::NonZeroU16","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::vec::Vec","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::num::NonZeroI8","std::net::IpAddr","std::collections::Bound","std::time::Duration","std::net::SocketAddr","std::net::SocketAddrV4"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::path::PathBuf","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::rc::Rc","std::boxed::Box","std::sync::Arc","std::num::NonZeroI64","std::net::Ipv4Addr","std::marker::PhantomData","std::borrow::Cow","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::result::Result","std::net::IpAddr","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::collections::Bound","std::string::String","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::sync::RwLock","std::time::SystemTime","std::net::Ipv6Addr","std::num::NonZeroU8","std::collections::HashSet","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::net::SocketAddrV6","std::time::Duration","std::num::NonZeroI8","std::option::Option","std::num::NonZeroU128","std::num::NonZeroU64","std::vec::Vec","std::collections::BTreeSet","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::collections::VecDeque","std::net::SocketAddr","std::cell::RefCell","std::cell::Cell","std::collections::HashMap","std::ops::Range","std::collections::BTreeMap","std::ops::RangeInclusive","std::ffi::CString","std::sync::atomic::AtomicU8","std::sync::Mutex","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::HashSet","std::ops::RangeInclusive","std::net::SocketAddrV6","std::num::NonZeroU16","std::result::Result","std::sync::atomic::AtomicBool","std::collections::Bound","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::collections::HashMap","std::collections::VecDeque","std::collections::BinaryHeap","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::borrow::Cow","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::rc::Rc","std::sync::atomic::AtomicU16","std::path::PathBuf","std::option::Option","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroU128","std::sync::RwLock","std::sync::atomic::AtomicU64","std::boxed::Box","std::net::IpAddr","std::num::NonZeroI32","std::ops::Range","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::cell::RefCell","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroI128","std::num::NonZeroU32","std::num::NonZeroU8","std::sync::Arc","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::vec::Vec","std::sync::Mutex","std::num::NonZeroU64","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::time::Duration","std::string::String","std::time::SystemTime","std::marker::PhantomData","std::collections::BTreeSet"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::net::SocketAddr","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::Mutex","std::net::IpAddr","std::collections::BTreeMap","std::collections::Bound","std::cell::Cell","std::sync::atomic::AtomicI32","std::ffi::CString","std::string::String","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::boxed::Box","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::ops::RangeInclusive","std::num::NonZeroU32","std::num::NonZeroI16","std::sync::Arc","std::borrow::Cow","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::result::Result","std::time::Duration","std::num::NonZeroUsize","std::net::SocketAddrV6","std::time::SystemTime","std::option::Option","std::collections::HashSet","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroU64","std::collections::VecDeque","std::collections::HashMap","std::sync::RwLock","std::vec::Vec","std::ops::Range","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::rc::Rc","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::num::NonZeroU16","std::path::PathBuf","std::net::Ipv6Addr"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K)>::decode(p0);
+<(A, B, C, D, E, F, G, H, I, J, K)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L)>::borrow_decode":{"A":["de::BorrowDecode","std::marker::Sized"],"B":["std::marker::Sized","de::BorrowDecode"],"BD":["std::marker::Sized","de::BorrowDecoder"],"C":["std::marker::Sized","de::BorrowDecode"],"D":["std::marker::Sized","de::BorrowDecode"],"E":["de::BorrowDecode","std::marker::Sized"],"F":["de::BorrowDecode","std::marker::Sized"],"G":["std::marker::Sized","de::BorrowDecode"],"H":["std::marker::Sized","de::BorrowDecode"],"I":["std::marker::Sized","de::BorrowDecode"],"J":["std::marker::Sized","de::BorrowDecode"],"K":["de::BorrowDecode","std::marker::Sized"],"L":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode"],"V":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord","enc::Encode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::Bound":{"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashMap":{"K":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized","std::cmp::Eq","std::hash::Hash"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::hash::Hash","std::marker::Sized","de::Decode","de::BorrowDecode","std::cmp::Eq","enc::Encode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::Varint","std::clone::impls::<impl std::clone::Clone for &T>","config::Fixint","config::Configuration","config::NoLimit","config::Limit","config::BigEndian"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L)>::borrow_decode":{"A":["std::ffi::CString","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::num::NonZeroU64","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::vec::Vec","std::collections::VecDeque","std::collections::HashSet","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::net::IpAddr","std::sync::RwLock","std::num::NonZeroU8","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroI16","std::collections::Bound","std::collections::HashMap","std::option::Option","std::string::String","std::num::NonZeroI32","std::path::PathBuf","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::sync::Arc","std::num::NonZeroU16","std::net::SocketAddrV4","std::boxed::Box","std::cell::RefCell","std::rc::Rc","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroUsize","std::num::NonZeroI64","std::ops::Range","std::net::Ipv4Addr","std::collections::BinaryHeap","std::sync::Mutex","std::result::Result","std::collections::BTreeSet","std::borrow::Cow","std::num::NonZeroI128"],"B":["std::sync::Mutex","std::collections::BTreeMap","std::borrow::Cow","std::ffi::CString","std::num::NonZeroU64","std::num::NonZeroI8","std::num::NonZeroUsize","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::cell::RefCell","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::path::PathBuf","std::num::NonZeroU32","std::marker::PhantomData","std::sync::Arc","std::collections::HashSet","std::vec::Vec","std::net::SocketAddr","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::option::Option","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroU8","std::num::NonZeroU128","std::collections::HashMap","std::sync::atomic::AtomicU64","std::ops::Range","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::net::SocketAddrV4","std::boxed::Box","std::rc::Rc","std::collections::BinaryHeap","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::time::SystemTime","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::string::String","std::num::NonZeroU16","std::result::Result","std::collections::VecDeque","std::cell::Cell","std::collections::Bound","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::time::Duration","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::sync::RwLock"],"BD":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"C":["std::time::SystemTime","std::num::NonZeroU128","std::ffi::CString","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::time::Duration","std::sync::Arc","std::path::PathBuf","std::net::Ipv6Addr","std::num::NonZeroU8","std::net::IpAddr","std::collections::BTreeSet","std::sync::RwLock","std::ops::Range","std::rc::Rc","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::num::NonZeroIsize","std::collections::Bound","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::vec::Vec","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::sync::Mutex","std::cell::RefCell","std::boxed::Box","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroI128","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::option::Option","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::result::Result","std::string::String","std::cell::Cell","std::collections::HashSet","std::num::NonZeroI64","std::borrow::Cow","std::num::NonZeroI32"],"D":["std::cell::RefCell","std::boxed::Box","std::result::Result","std::collections::HashMap","std::collections::HashSet","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::num::NonZeroI16","std::ops::Range","std::num::NonZeroI128","std::marker::PhantomData","std::num::NonZeroU8","std::net::SocketAddrV4","std::cell::Cell","std::sync::Arc","std::sync::atomic::AtomicI16","std::ffi::CString","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::num::NonZeroIsize","std::net::IpAddr","std::collections::BTreeSet","std::num::NonZeroU128","std::time::SystemTime","std::collections::Bound","std::borrow::Cow","std::net::SocketAddrV6","std::sync::Mutex","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::sync::RwLock","std::path::PathBuf","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::rc::Rc","std::time::Duration","std::num::NonZeroI32","std::string::String","std::ops::RangeInclusive","std::collections::VecDeque","std::vec::Vec","std::sync::atomic::AtomicI32"],"E":["std::string::String","std::cell::RefCell","std::path::PathBuf","std::sync::Arc","std::num::NonZeroUsize","std::net::Ipv4Addr","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::time::SystemTime","std::ops::RangeInclusive","std::num::NonZeroI128","std::rc::Rc","std::option::Option","std::collections::BinaryHeap","std::net::IpAddr","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::result::Result","std::time::Duration","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::collections::BTreeSet","std::num::NonZeroU128","std::collections::HashSet","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::borrow::Cow","std::collections::Bound","std::net::SocketAddr","std::sync::RwLock","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::collections::HashMap","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::cell::Cell","std::num::NonZeroI32","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroIsize","std::vec::Vec","std::boxed::Box","std::num::NonZeroI64","std::ops::Range"],"F":["std::ffi::CString","std::net::SocketAddrV6","std::num::NonZeroU8","std::time::Duration","std::collections::HashMap","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::collections::Bound","std::collections::BinaryHeap","std::num::NonZeroUsize","std::num::NonZeroI64","std::sync::Arc","std::num::NonZeroIsize","std::num::NonZeroU32","std::marker::PhantomData","std::string::String","std::vec::Vec","std::collections::HashSet","std::cell::RefCell","std::rc::Rc","std::sync::RwLock","std::net::SocketAddr","std::net::SocketAddrV4","std::num::NonZeroU16","std::cell::Cell","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::ops::RangeInclusive","std::sync::Mutex","std::num::NonZeroU64","std::ops::Range","std::num::NonZeroU128","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::borrow::Cow","std::result::Result","std::option::Option","std::collections::VecDeque","std::boxed::Box","std::num::NonZeroI32","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::net::IpAddr","std::path::PathBuf","std::collections::BTreeMap","std::time::SystemTime","std::sync::atomic::AtomicIsize"],"G":["std::time::Duration","std::sync::atomic::AtomicU32","std::sync::RwLock","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::cell::Cell","std::num::NonZeroI32","std::num::NonZeroU8","std::collections::Bound","std::net::IpAddr","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::option::Option","std::sync::atomic::AtomicI32","std::collections::HashMap","std::net::SocketAddr","std::ffi::CString","std::ops::Range","std::boxed::Box","std::borrow::Cow","std::num::NonZeroU32","std::string::String","std::net::SocketAddrV4","std::collections::VecDeque","std::marker::PhantomData","std::collections::BTreeSet","std::num::NonZeroI8","std::num::NonZeroIsize","std::collections::BinaryHeap","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::rc::Rc","std::net::SocketAddrV6","std::collections::HashSet","std::num::NonZeroU64","std::path::PathBuf","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::vec::Vec","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::time::SystemTime","std::result::Result","std::sync::Mutex","std::collections::BTreeMap","std::sync::Arc","std::num::NonZeroUsize","std::sync::atomic::AtomicBool"],"H":["std::num::NonZeroUsize","std::net::Ipv6Addr","std::collections::HashSet","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::marker::PhantomData","std::result::Result","std::time::Duration","std::collections::HashMap","std::net::SocketAddrV6","std::time::SystemTime","std::sync::Mutex","std::cell::RefCell","std::num::NonZeroU8","std::num::NonZeroU64","std::ops::RangeInclusive","std::net::SocketAddr","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::ffi::CString","std::net::Ipv4Addr","std::vec::Vec","std::sync::RwLock","std::sync::Arc","std::num::NonZeroIsize","std::path::PathBuf","std::boxed::Box","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::ops::Range","std::borrow::Cow","std::num::NonZeroU16","std::num::NonZeroI8","std::num::NonZeroI64","std::cell::Cell","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::option::Option","std::sync::atomic::AtomicBool","std::net::IpAddr","std::string::String","std::sync::atomic::AtomicU16","std::rc::Rc","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::num::NonZeroU32","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::collections::Bound","std::collections::BinaryHeap","std::num::NonZeroU128"],"I":["std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::num::NonZeroI32","std::marker::PhantomData","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::result::Result","std::num::NonZeroIsize","std::net::IpAddr","std::sync::Mutex","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::net::SocketAddrV6","std::collections::HashMap","std::rc::Rc","std::collections::HashSet","std::sync::RwLock","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::time::SystemTime","std::boxed::Box","std::num::NonZeroI128","std::collections::VecDeque","std::net::Ipv4Addr","std::num::NonZeroU32","std::time::Duration","std::collections::Bound","std::string::String","std::collections::BTreeSet","std::num::NonZeroU128","std::net::SocketAddr","std::net::SocketAddrV4","std::borrow::Cow","std::sync::atomic::AtomicI32","std::ffi::CString","std::cell::RefCell","std::sync::Arc","std::num::NonZeroI8","std::net::Ipv6Addr","std::ops::Range","std::num::NonZeroI64","std::option::Option","std::num::NonZeroU16","std::vec::Vec","std::cell::Cell","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::path::PathBuf"],"J":["std::collections::Bound","std::num::NonZeroU8","std::collections::BTreeSet","std::num::NonZeroU32","std::boxed::Box","std::cell::Cell","std::cell::RefCell","std::num::NonZeroI8","std::collections::BinaryHeap","std::ffi::CString","std::sync::atomic::AtomicU8","std::path::PathBuf","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::num::NonZeroIsize","std::num::NonZeroI16","std::num::NonZeroI32","std::rc::Rc","std::borrow::Cow","std::sync::atomic::AtomicU32","std::collections::HashSet","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::net::SocketAddrV4","std::num::NonZeroU64","std::ops::Range","std::num::NonZeroUsize","std::sync::Arc","std::marker::PhantomData","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::time::Duration","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::num::NonZeroU16","std::option::Option","std::num::NonZeroU128","std::result::Result","std::net::Ipv6Addr","std::vec::Vec","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::time::SystemTime","std::net::IpAddr","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::string::String","std::sync::Mutex"],"K":["std::ffi::CString","std::net::Ipv4Addr","std::path::PathBuf","std::collections::Bound","std::vec::Vec","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::string::String","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::sync::Mutex","std::num::NonZeroU8","std::collections::VecDeque","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::cell::RefCell","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::time::Duration","std::num::NonZeroI64","std::collections::BTreeSet","std::boxed::Box","std::net::SocketAddr","std::num::NonZeroU64","std::sync::RwLock","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::result::Result","std::num::NonZeroUsize","std::rc::Rc","std::collections::HashMap","std::num::NonZeroU32","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroI8","std::ops::Range","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::cell::Cell","std::collections::BTreeMap","std::sync::Arc","std::ops::RangeInclusive","std::option::Option","std::num::NonZeroU128","std::net::SocketAddrV4","std::time::SystemTime"],"L":["std::collections::HashSet","std::cell::RefCell","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::num::NonZeroU8","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::num::NonZeroI32","std::vec::Vec","std::sync::Mutex","std::ops::Range","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::cell::Cell","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::option::Option","std::rc::Rc","std::collections::BTreeSet","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::sync::Arc","std::sync::RwLock","std::num::NonZeroIsize","std::ffi::CString","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::time::Duration","std::net::SocketAddrV6","std::num::NonZeroUsize","std::time::SystemTime","std::string::String","std::ops::RangeInclusive","std::num::NonZeroI8","std::net::Ipv4Addr","std::boxed::Box","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::borrow::Cow","std::marker::PhantomData","std::collections::HashMap","std::sync::atomic::AtomicBool","std::collections::Bound","std::num::NonZeroI128","std::result::Result","std::net::IpAddr","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::path::PathBuf"]},"std::borrow::Cow":{"B":["std::ffi::CStr","<T as std::borrow::ToOwned>","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroI64","std::net::SocketAddrV4","std::num::NonZeroIsize","std::net::Ipv4Addr","std::time::SystemTime","std::cell::Cell","std::rc::Rc","std::net::IpAddr","std::num::NonZeroI32","std::net::SocketAddrV6","std::num::NonZeroU16","std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroU8","std::string::String","std::num::NonZeroI16","std::net::Ipv6Addr","std::option::Option","std::cell::RefCell","std::num::NonZeroUsize","std::num::NonZeroI128","std::net::SocketAddr","std::time::Duration","std::sync::Arc"],"V":["std::sync::RwLock","std::time::SystemTime","std::sync::Arc","std::num::NonZeroU32","std::collections::Bound","std::num::NonZeroI32","std::vec::Vec","std::cell::RefCell","std::num::NonZeroI128","std::num::NonZeroI16","std::result::Result","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::cell::Cell","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::rc::Rc","std::path::PathBuf","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::collections::BTreeMap","std::num::NonZeroU64","std::option::Option","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::num::NonZeroU8","std::time::Duration","std::net::SocketAddrV6","std::string::String","std::collections::HashSet","std::num::NonZeroIsize","std::net::IpAddr","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::collections::BinaryHeap","std::num::NonZeroU128","std::num::NonZeroI8","std::collections::HashMap","std::sync::Mutex","std::ffi::CString","std::collections::BTreeSet","std::ops::Range","std::boxed::Box","std::sync::atomic::AtomicU8","std::borrow::Cow"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::time::SystemTime","std::ffi::CString","std::num::NonZeroU128","std::cell::Cell","std::sync::Arc","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroI8","std::num::NonZeroIsize","std::rc::Rc","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroU8","std::net::Ipv6Addr","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroU64","std::marker::PhantomData","std::num::NonZeroI16","std::net::SocketAddrV4","std::num::NonZeroUsize","std::num::NonZeroI128"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU128","std::time::SystemTime","std::net::Ipv4Addr","std::num::NonZeroU16","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::Arc","std::ffi::CString","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroU32","std::net::SocketAddrV6","std::cell::Cell","std::num::NonZeroI32","std::path::PathBuf","std::num::NonZeroI8","std::net::IpAddr"]},"std::collections::Bound":{"T":["std::marker::PhantomData","std::collections::BTreeSet","std::net::SocketAddrV6","std::ops::Range","std::num::NonZeroU16","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::net::IpAddr","std::ops::RangeInclusive","std::option::Option","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::num::NonZeroU32","std::net::SocketAddr","std::result::Result","std::sync::RwLock","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroI8","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::collections::HashMap","std::collections::BTreeMap","std::vec::Vec","std::net::Ipv6Addr","std::collections::VecDeque","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::string::String","std::sync::Arc","std::num::NonZeroI16","std::ffi::CString","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::collections::Bound","std::num::NonZeroI32","std::num::NonZeroU8","std::time::Duration","std::cell::Cell","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::boxed::Box","std::sync::atomic::AtomicU16","std::rc::Rc","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::sync::Mutex","std::path::PathBuf","std::num::NonZeroI64","std::cell::RefCell","std::num::NonZeroU128","std::borrow::Cow"]},"std::collections::HashMap":{"K":["std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroU8","std::num::NonZeroU128","std::time::Duration","std::path::PathBuf","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroI8","std::net::Ipv6Addr","std::num::NonZeroU32","std::net::Ipv4Addr","std::num::NonZeroUsize","std::net::SocketAddr","std::rc::Rc","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroI128","std::num::NonZeroI64"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::net::Ipv4Addr","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroU16","std::num::NonZeroI16","std::collections::Bound","std::num::NonZeroUsize","std::ffi::CString","std::vec::Vec","std::num::NonZeroU32","std::collections::BTreeSet","std::ops::Range","std::sync::atomic::AtomicI16","std::time::Duration","std::sync::Mutex","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::net::IpAddr","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::sync::RwLock","std::net::SocketAddrV6","std::collections::BTreeMap","std::result::Result","std::collections::VecDeque","std::rc::Rc","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::borrow::Cow","std::sync::Arc","std::collections::HashMap","std::collections::BinaryHeap","std::string::String","std::num::NonZeroI32","std::time::SystemTime","std::collections::HashSet","std::ops::RangeInclusive","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::cell::RefCell","std::path::PathBuf","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::num::NonZeroIsize","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::ffi::CString","std::sync::Arc","std::net::SocketAddrV4","std::net::Ipv6Addr","std::path::PathBuf","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroI128","std::net::SocketAddrV6","std::string::String","std::num::NonZeroU16","std::num::NonZeroUsize","std::net::IpAddr","std::num::NonZeroU128","std::num::NonZeroU8","std::net::Ipv4Addr","std::num::NonZeroIsize","std::num::NonZeroI8","std::time::Duration"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::sync::RwLock","std::net::SocketAddrV4","std::marker::PhantomData","std::option::Option","std::net::IpAddr","std::net::SocketAddrV6","std::ops::RangeInclusive","std::num::NonZeroI128","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::result::Result","std::sync::atomic::AtomicU32","std::time::SystemTime","std::collections::BinaryHeap","std::sync::Mutex","std::rc::Rc","std::num::NonZeroU8","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::borrow::Cow","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::ffi::CString","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::num::NonZeroI32","std::collections::BTreeSet","std::cell::Cell","std::net::Ipv6Addr","std::num::NonZeroI64","std::num::NonZeroI8","std::num::NonZeroI16","std::vec::Vec","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::string::String","std::cell::RefCell","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::collections::HashSet","std::collections::Bound","std::time::Duration","std::num::NonZeroU64","std::ops::Range","std::collections::BTreeMap","std::num::NonZeroU128","std::path::PathBuf","std::boxed::Box","std::sync::Arc"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::path::PathBuf","std::result::Result","std::sync::atomic::AtomicU8","std::vec::Vec","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::borrow::Cow","std::cell::RefCell","std::collections::HashSet","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::ffi::CString","std::num::NonZeroU64","std::collections::Bound","std::sync::Mutex","std::num::NonZeroI8","std::num::NonZeroI16","std::string::String","std::collections::VecDeque","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::sync::RwLock","std::time::SystemTime","std::num::NonZeroU32","std::option::Option","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::ops::Range","std::collections::BTreeSet","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::cell::Cell","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::net::Ipv4Addr","std::collections::HashMap","std::net::SocketAddr","std::boxed::Box","std::num::NonZeroU128","std::time::Duration","std::net::IpAddr","std::num::NonZeroIsize","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroUsize","std::rc::Rc","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::sync::Arc","std::sync::atomic::AtomicI32","std::net::Ipv6Addr"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::ops::Range","std::time::SystemTime","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::ffi::CString","std::result::Result","std::sync::atomic::AtomicU32","std::time::Duration","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::sync::Mutex","std::net::SocketAddrV6","std::num::NonZeroI16","std::boxed::Box","std::num::NonZeroU16","std::collections::Bound","std::sync::atomic::AtomicI8","std::vec::Vec","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::collections::VecDeque","std::cell::RefCell","std::path::PathBuf","std::sync::RwLock","std::borrow::Cow","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::num::NonZeroI32","std::net::Ipv4Addr","std::num::NonZeroUsize","std::collections::BinaryHeap","std::net::IpAddr","std::sync::Arc","std::cell::Cell","std::rc::Rc","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::option::Option","std::net::SocketAddr","std::string::String","std::num::NonZeroU64","std::ops::RangeInclusive","std::collections::HashSet","std::collections::HashMap","std::num::NonZeroU128"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::ops::RangeInclusive","std::boxed::Box","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::collections::HashMap","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::num::NonZeroI32","std::sync::RwLock","std::marker::PhantomData","std::num::NonZeroI64","std::option::Option","std::collections::BinaryHeap","std::num::NonZeroU64","std::sync::Arc","std::num::NonZeroI128","std::collections::Bound","std::sync::atomic::AtomicBool","std::result::Result","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::net::IpAddr","std::collections::BTreeSet","std::net::Ipv4Addr","std::rc::Rc","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::ffi::CString","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::borrow::Cow","std::cell::RefCell","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::time::SystemTime","std::sync::atomic::AtomicI16","std::string::String","std::path::PathBuf","std::vec::Vec","std::collections::VecDeque","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroI8","std::num::NonZeroUsize","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::time::Duration","std::collections::HashSet","std::cell::Cell","std::ops::Range","std::num::NonZeroIsize"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L)>::borrow_decode(p0);
+<(A, B, C, D, E, F, G, H, I, J, K, L)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L)>::decode":{"A":["std::marker::Sized","de::Decode"],"B":["std::marker::Sized","de::Decode"],"C":["std::marker::Sized","de::Decode"],"D":["de::Decode","std::marker::Sized"],"DE":["std::marker::Sized","de::Decoder"],"E":["de::Decode","std::marker::Sized"],"F":["de::Decode","std::marker::Sized"],"G":["std::marker::Sized","de::Decode"],"H":["std::marker::Sized","de::Decode"],"I":["std::marker::Sized","de::Decode"],"J":["std::marker::Sized","de::Decode"],"K":["de::Decode","std::marker::Sized"],"L":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["enc::Encode","de::BorrowDecode","de::Decode","std::cmp::Ord","std::marker::Sized"],"V":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode","std::cmp::Ord"]},"std::collections::Bound":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashMap":{"K":["std::marker::Sized","std::hash::Hash","de::Decode","std::cmp::Eq","de::BorrowDecode","enc::Encode"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["std::hash::Hash","de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::LittleEndian","config::NoLimit","config::Fixint","config::BigEndian","config::Varint","std::clone::impls::<impl std::clone::Clone for *const T>","config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L)>::decode":{"A":["std::collections::Bound","std::num::NonZeroU16","std::ffi::CString","std::net::SocketAddrV6","std::net::Ipv6Addr","std::borrow::Cow","std::net::IpAddr","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::ops::Range","std::sync::Arc","std::boxed::Box","std::time::SystemTime","std::cell::Cell","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::string::String","std::net::Ipv4Addr","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::sync::Mutex","std::num::NonZeroU8","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::num::NonZeroU64","std::cell::RefCell","std::num::NonZeroU128","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::time::Duration","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::option::Option","std::num::NonZeroIsize","std::vec::Vec","std::rc::Rc","std::path::PathBuf","std::marker::PhantomData","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::ops::RangeInclusive","std::collections::HashSet","std::collections::VecDeque","std::result::Result"],"B":["std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroI32","std::option::Option","std::ops::RangeInclusive","std::num::NonZeroU16","std::borrow::Cow","std::collections::HashMap","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::num::NonZeroU8","std::net::IpAddr","std::result::Result","std::sync::atomic::AtomicU16","std::cell::Cell","std::time::Duration","std::net::Ipv6Addr","std::sync::Mutex","std::string::String","std::sync::atomic::AtomicI32","std::path::PathBuf","std::cell::RefCell","std::sync::atomic::AtomicI64","std::boxed::Box","std::sync::atomic::AtomicI8","std::ops::Range","std::sync::RwLock","std::collections::BTreeMap","std::net::SocketAddrV6","std::collections::VecDeque","std::marker::PhantomData","std::collections::BTreeSet","std::collections::Bound","std::ffi::CString","std::num::NonZeroIsize","std::net::Ipv4Addr","std::collections::BinaryHeap","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::vec::Vec","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::collections::HashSet","std::num::NonZeroUsize","std::num::NonZeroI16","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::sync::Arc"],"C":["std::net::IpAddr","std::num::NonZeroU128","std::net::SocketAddrV6","std::net::SocketAddrV4","std::result::Result","std::boxed::Box","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::sync::Arc","std::collections::BinaryHeap","std::string::String","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::num::NonZeroU32","std::num::NonZeroIsize","std::collections::BTreeSet","std::ffi::CString","std::net::Ipv4Addr","std::time::SystemTime","std::collections::VecDeque","std::num::NonZeroUsize","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::time::Duration","std::num::NonZeroI32","std::borrow::Cow","std::vec::Vec","std::collections::HashMap","std::num::NonZeroI8","std::ops::Range","std::net::SocketAddr","std::num::NonZeroI16","std::ops::RangeInclusive","std::path::PathBuf","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::cell::RefCell","std::collections::HashSet","std::sync::atomic::AtomicI8","std::cell::Cell","std::sync::atomic::AtomicI32","std::rc::Rc","std::sync::Mutex","std::marker::PhantomData","std::option::Option","std::num::NonZeroU64","std::collections::Bound"],"D":["std::num::NonZeroU128","std::net::SocketAddr","std::net::SocketAddrV6","std::option::Option","std::rc::Rc","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::boxed::Box","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::sync::RwLock","std::collections::BTreeSet","std::num::NonZeroU64","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::ffi::CString","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::borrow::Cow","std::num::NonZeroU8","std::net::SocketAddrV4","std::time::SystemTime","std::time::Duration","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::path::PathBuf","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::net::Ipv4Addr","std::num::NonZeroIsize","std::sync::Arc","std::vec::Vec","std::collections::HashMap","std::collections::BinaryHeap","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroI8","std::collections::BTreeMap","std::string::String","std::net::IpAddr","std::cell::Cell","std::collections::HashSet","std::sync::atomic::AtomicU16","std::ops::Range","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::marker::PhantomData","std::result::Result","std::collections::Bound","std::net::Ipv6Addr","std::sync::atomic::AtomicI8"],"DE":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"E":["std::num::NonZeroU16","std::num::NonZeroIsize","std::cell::RefCell","std::num::NonZeroU64","std::sync::Mutex","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::num::NonZeroI128","std::string::String","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroU32","std::time::Duration","std::collections::BTreeMap","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::num::NonZeroI8","std::vec::Vec","std::num::NonZeroI32","std::result::Result","std::ffi::CString","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::ops::Range","std::num::NonZeroI16","std::net::Ipv4Addr","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::collections::HashMap","std::sync::RwLock","std::rc::Rc","std::sync::Arc","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::net::IpAddr","std::marker::PhantomData","std::boxed::Box","std::collections::BinaryHeap","std::num::NonZeroUsize","std::borrow::Cow","std::collections::HashSet","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::collections::Bound","std::option::Option","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::cell::Cell","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::path::PathBuf"],"F":["std::collections::HashSet","std::cell::Cell","std::num::NonZeroU64","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::sync::RwLock","std::ops::RangeInclusive","std::num::NonZeroI128","std::vec::Vec","std::path::PathBuf","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::collections::BTreeMap","std::num::NonZeroU8","std::sync::Arc","std::num::NonZeroI64","std::num::NonZeroI16","std::collections::Bound","std::net::Ipv4Addr","std::result::Result","std::ops::Range","std::string::String","std::rc::Rc","std::num::NonZeroU32","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::ffi::CString","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::net::IpAddr","std::num::NonZeroU16","std::option::Option","std::num::NonZeroIsize","std::cell::RefCell","std::sync::Mutex","std::borrow::Cow","std::time::SystemTime","std::collections::VecDeque","std::boxed::Box","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::time::Duration"],"G":["std::num::NonZeroU32","std::vec::Vec","std::collections::HashSet","std::num::NonZeroIsize","std::result::Result","std::collections::BTreeSet","std::num::NonZeroU128","std::num::NonZeroI32","std::boxed::Box","std::borrow::Cow","std::net::SocketAddrV6","std::path::PathBuf","std::ops::Range","std::rc::Rc","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::time::Duration","std::sync::Mutex","std::ffi::CString","std::net::SocketAddrV4","std::collections::HashMap","std::sync::RwLock","std::string::String","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::sync::Arc","std::sync::atomic::AtomicU8","std::cell::RefCell","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::collections::Bound","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::option::Option","std::ops::RangeInclusive","std::net::SocketAddr","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::cell::Cell","std::num::NonZeroI8","std::num::NonZeroUsize","std::collections::BTreeMap","std::num::NonZeroI128","std::num::NonZeroU64","std::time::SystemTime"],"H":["std::option::Option","std::cell::RefCell","std::sync::Mutex","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::time::Duration","std::collections::Bound","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::ops::Range","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::num::NonZeroI16","std::boxed::Box","std::num::NonZeroUsize","std::rc::Rc","std::sync::atomic::AtomicU32","std::collections::HashMap","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::path::PathBuf","std::collections::VecDeque","std::vec::Vec","std::net::SocketAddrV4","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::num::NonZeroIsize","std::num::NonZeroI64","std::net::IpAddr","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::time::SystemTime","std::result::Result","std::num::NonZeroU16","std::cell::Cell","std::ffi::CString","std::collections::BTreeSet","std::collections::HashSet","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::sync::Arc","std::sync::atomic::AtomicI16","std::borrow::Cow","std::sync::RwLock","std::sync::atomic::AtomicI32","std::string::String","std::net::SocketAddr","std::collections::BinaryHeap","std::num::NonZeroU8","std::ops::RangeInclusive","std::num::NonZeroU32","std::net::Ipv4Addr","std::net::SocketAddrV6"],"I":["std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::time::Duration","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::string::String","std::borrow::Cow","std::ops::RangeInclusive","std::vec::Vec","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::marker::PhantomData","std::collections::VecDeque","std::net::Ipv4Addr","std::collections::Bound","std::ops::Range","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::net::IpAddr","std::ffi::CString","std::sync::Mutex","std::collections::BTreeMap","std::result::Result","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::sync::Arc","std::rc::Rc","std::time::SystemTime","std::collections::BinaryHeap","std::num::NonZeroU64","std::num::NonZeroI32","std::cell::Cell","std::path::PathBuf","std::collections::HashSet","std::cell::RefCell","std::num::NonZeroI64","std::sync::RwLock","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::num::NonZeroIsize","std::boxed::Box","std::collections::HashMap","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::option::Option","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::sync::atomic::AtomicBool"],"J":["std::net::IpAddr","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::option::Option","std::vec::Vec","std::num::NonZeroI128","std::net::SocketAddr","std::collections::HashMap","std::time::Duration","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::collections::HashSet","std::net::SocketAddrV6","std::collections::Bound","std::marker::PhantomData","std::num::NonZeroI8","std::collections::VecDeque","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::rc::Rc","std::num::NonZeroI32","std::ops::RangeInclusive","std::ffi::CString","std::sync::Mutex","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::path::PathBuf","std::net::SocketAddrV4","std::cell::RefCell","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::time::SystemTime","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::cell::Cell","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::string::String","std::result::Result","std::boxed::Box","std::sync::Arc","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::num::NonZeroUsize","std::ops::Range","std::collections::BinaryHeap","std::num::NonZeroI16","std::sync::RwLock","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::num::NonZeroU64"],"K":["std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::sync::Mutex","std::net::SocketAddrV4","std::ffi::CString","std::collections::BinaryHeap","std::cell::Cell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::ops::Range","std::num::NonZeroU128","std::collections::HashMap","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::vec::Vec","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::num::NonZeroI32","std::collections::VecDeque","std::collections::HashSet","std::collections::BTreeMap","std::result::Result","std::collections::Bound","std::boxed::Box","std::collections::BTreeSet","std::sync::Arc","std::sync::RwLock","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::option::Option","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::num::NonZeroIsize","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::rc::Rc","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::borrow::Cow","std::ops::RangeInclusive","std::string::String","std::num::NonZeroU64","std::num::NonZeroU32","std::time::SystemTime","std::time::Duration","std::net::IpAddr","std::path::PathBuf","std::cell::RefCell","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::num::NonZeroI8"],"L":["std::sync::atomic::AtomicU16","std::cell::Cell","std::net::IpAddr","std::option::Option","std::ffi::CString","std::net::SocketAddrV4","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::num::NonZeroU64","std::collections::BTreeMap","std::sync::RwLock","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::cell::RefCell","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::borrow::Cow","std::net::SocketAddr","std::ops::Range","std::collections::BinaryHeap","std::time::SystemTime","std::time::Duration","std::collections::HashMap","std::rc::Rc","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroI64","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::boxed::Box","std::num::NonZeroI8","std::num::NonZeroI32","std::collections::BTreeSet","std::num::NonZeroIsize","std::vec::Vec","std::result::Result","std::num::NonZeroI16","std::path::PathBuf","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::string::String","std::collections::HashSet","std::marker::PhantomData","std::collections::Bound","std::sync::Arc","std::sync::atomic::AtomicI64"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::option::Option","std::path::PathBuf","std::num::NonZeroI128","std::time::Duration","std::string::String","std::num::NonZeroU32","std::num::NonZeroU128","std::net::Ipv4Addr","std::cell::RefCell","std::net::IpAddr","std::num::NonZeroU16","std::num::NonZeroUsize","std::net::SocketAddr","std::net::SocketAddrV4","std::num::NonZeroI32","std::cell::Cell","std::sync::Arc","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroI8"],"V":["std::ops::Range","std::sync::atomic::AtomicU64","std::sync::Mutex","std::time::Duration","std::collections::BinaryHeap","std::num::NonZeroU16","std::num::NonZeroUsize","std::net::SocketAddr","std::num::NonZeroI16","std::cell::Cell","std::time::SystemTime","std::num::NonZeroU32","std::borrow::Cow","std::option::Option","std::sync::RwLock","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::collections::BTreeSet","std::ffi::CString","std::string::String","std::vec::Vec","std::sync::atomic::AtomicUsize","std::rc::Rc","std::marker::PhantomData","std::num::NonZeroI128","std::num::NonZeroU128","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::net::SocketAddrV6","std::path::PathBuf","std::collections::HashSet","std::cell::RefCell","std::collections::VecDeque","std::boxed::Box","std::sync::atomic::AtomicI64","std::net::IpAddr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::collections::BTreeMap","std::net::Ipv4Addr","std::collections::Bound","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroIsize","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::collections::HashMap","std::result::Result","std::sync::atomic::AtomicU8","std::num::NonZeroU8"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU32","std::net::SocketAddrV4","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroU16","std::num::NonZeroI128","std::ffi::CString","std::num::NonZeroUsize","std::time::Duration","std::cell::Cell","std::option::Option","std::num::NonZeroIsize","std::net::IpAddr","std::string::String","std::rc::Rc","std::num::NonZeroU128","std::net::Ipv6Addr","std::cell::RefCell","std::sync::Arc","std::num::NonZeroI32","std::path::PathBuf","std::num::NonZeroU64"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU8","std::ffi::CString","std::string::String","std::net::Ipv6Addr","std::time::Duration","std::net::SocketAddrV6","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroI128","std::option::Option","std::num::NonZeroI32","std::num::NonZeroUsize","std::rc::Rc","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroI16","std::marker::PhantomData","std::num::NonZeroIsize","std::num::NonZeroU32","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroI8"]},"std::collections::Bound":{"T":["std::cell::Cell","std::sync::Arc","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::result::Result","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::vec::Vec","std::collections::HashSet","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::num::NonZeroUsize","std::sync::Mutex","std::time::SystemTime","std::sync::atomic::AtomicI32","std::collections::HashMap","std::option::Option","std::net::SocketAddrV6","std::num::NonZeroI128","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroIsize","std::num::NonZeroU32","std::net::IpAddr","std::sync::RwLock","std::num::NonZeroI32","std::path::PathBuf","std::net::SocketAddr","std::num::NonZeroI64","std::boxed::Box","std::num::NonZeroU64","std::ops::Range","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::string::String","std::ffi::CString","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::collections::Bound","std::num::NonZeroI8","std::collections::VecDeque","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::rc::Rc","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::borrow::Cow","std::time::Duration","std::num::NonZeroU128"]},"std::collections::HashMap":{"K":["std::num::NonZeroUsize","std::num::NonZeroI32","std::num::NonZeroI128","std::path::PathBuf","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroIsize","std::marker::PhantomData","std::num::NonZeroI64","std::collections::Bound","std::net::SocketAddrV6","std::num::NonZeroU64","std::num::NonZeroI8","std::net::Ipv6Addr","std::num::NonZeroU128","std::time::SystemTime","std::num::NonZeroI16"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::collections::BinaryHeap","std::collections::Bound","std::cell::Cell","std::ops::Range","std::num::NonZeroI16","std::result::Result","std::ops::RangeInclusive","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::time::SystemTime","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::rc::Rc","std::collections::HashSet","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::path::PathBuf","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::collections::BTreeSet","std::num::NonZeroUsize","std::time::Duration","std::sync::atomic::AtomicU8","std::ffi::CString","std::option::Option","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroU16","std::string::String","std::sync::atomic::AtomicU64","std::sync::RwLock","std::num::NonZeroIsize","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::borrow::Cow","std::net::Ipv4Addr","std::num::NonZeroU64","std::num::NonZeroU128","std::num::NonZeroI128","std::net::IpAddr","std::net::SocketAddr","std::boxed::Box","std::net::SocketAddrV6","std::num::NonZeroI8","std::vec::Vec","std::cell::RefCell","std::sync::Arc","std::collections::HashMap","std::sync::Mutex","std::num::NonZeroU32"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroU64","std::string::String","std::num::NonZeroU128","std::num::NonZeroI8","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroU16","std::time::SystemTime","std::path::PathBuf","std::num::NonZeroI64","std::ffi::CString","std::num::NonZeroU32","std::net::Ipv6Addr","std::sync::Arc","std::net::SocketAddr","std::marker::PhantomData","std::rc::Rc","std::net::Ipv4Addr","std::net::IpAddr","std::num::NonZeroI128"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::borrow::Cow","std::num::NonZeroU64","std::option::Option","std::net::SocketAddr","std::num::NonZeroI64","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::collections::Bound","std::cell::RefCell","std::time::SystemTime","std::result::Result","std::ops::Range","std::string::String","std::sync::atomic::AtomicBool","std::net::IpAddr","std::time::Duration","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::num::NonZeroUsize","std::collections::BTreeMap","std::net::SocketAddrV6","std::collections::VecDeque","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::num::NonZeroU8","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::sync::Arc","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::sync::Mutex","std::net::Ipv6Addr","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::path::PathBuf","std::boxed::Box","std::rc::Rc","std::net::SocketAddrV4","std::ffi::CString","std::vec::Vec","std::collections::BTreeSet","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::cell::Cell","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::collections::HashSet","std::sync::RwLock","std::num::NonZeroU16","std::num::NonZeroI16"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::SocketAddr","std::path::PathBuf","std::sync::atomic::AtomicI8","std::sync::RwLock","std::collections::BTreeMap","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::num::NonZeroU128","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::collections::BTreeSet","std::net::Ipv4Addr","std::result::Result","std::vec::Vec","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::cell::Cell","std::sync::Arc","std::string::String","std::net::Ipv6Addr","std::num::NonZeroU32","std::collections::VecDeque","std::rc::Rc","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::sync::atomic::AtomicU16","std::sync::Mutex","std::ops::Range","std::option::Option","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::borrow::Cow","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::boxed::Box","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::time::SystemTime","std::num::NonZeroI16","std::num::NonZeroU16","std::collections::Bound","std::collections::HashMap","std::net::IpAddr","std::ffi::CString","std::collections::BinaryHeap"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::marker::PhantomData","std::sync::atomic::AtomicI8","std::rc::Rc","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::collections::HashMap","std::net::SocketAddr","std::boxed::Box","std::vec::Vec","std::collections::VecDeque","std::num::NonZeroI16","std::num::NonZeroU64","std::collections::BTreeMap","std::sync::RwLock","std::collections::BTreeSet","std::net::SocketAddrV4","std::sync::Mutex","std::sync::Arc","std::num::NonZeroI128","std::ffi::CString","std::sync::atomic::AtomicBool","std::borrow::Cow","std::num::NonZeroUsize","std::string::String","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::ops::Range","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::collections::HashSet","std::path::PathBuf","std::sync::atomic::AtomicI16","std::net::IpAddr","std::result::Result","std::num::NonZeroI32","std::net::Ipv4Addr","std::cell::Cell","std::time::SystemTime","std::collections::Bound","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::net::Ipv6Addr","std::ops::RangeInclusive","std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::time::Duration","std::num::NonZeroU128","std::collections::BinaryHeap","std::num::NonZeroU32","std::option::Option"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::net::Ipv6Addr","std::collections::Bound","std::num::NonZeroI32","std::num::NonZeroU8","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::collections::HashSet","std::option::Option","std::borrow::Cow","std::net::SocketAddr","std::ops::Range","std::vec::Vec","std::net::SocketAddrV4","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::rc::Rc","std::net::IpAddr","std::num::NonZeroUsize","std::time::SystemTime","std::sync::Arc","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::time::Duration","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::string::String","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::boxed::Box","std::ops::RangeInclusive","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::sync::Mutex","std::collections::BTreeSet","std::cell::Cell","std::result::Result","std::collections::HashMap","std::cell::RefCell","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::num::NonZeroIsize","std::path::PathBuf","std::sync::atomic::AtomicI64","std::ffi::CString","std::collections::VecDeque","std::num::NonZeroI16","std::num::NonZeroI128"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L)>::decode(p0);
+<(A, B, C, D, E, F, G, H, I, J, K, L)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::borrow_decode":{"A":["de::BorrowDecode","std::marker::Sized"],"B":["de::BorrowDecode","std::marker::Sized"],"BD":["de::BorrowDecoder","std::marker::Sized"],"C":["std::marker::Sized","de::BorrowDecode"],"D":["de::BorrowDecode","std::marker::Sized"],"E":["std::marker::Sized","de::BorrowDecode"],"F":["std::marker::Sized","de::BorrowDecode"],"G":["std::marker::Sized","de::BorrowDecode"],"H":["std::marker::Sized","de::BorrowDecode"],"I":["de::BorrowDecode","std::marker::Sized"],"J":["std::marker::Sized","de::BorrowDecode"],"K":["de::BorrowDecode","std::marker::Sized"],"L":["std::marker::Sized","de::BorrowDecode"],"M":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["enc::Encode","std::marker::Sized","std::cmp::Ord","de::Decode","de::BorrowDecode"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["std::marker::Sized","std::cmp::Ord","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::marker::Sized","std::cmp::Ord","de::Decode","enc::Encode"]},"std::collections::Bound":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::HashMap":{"K":["de::Decode","std::marker::Sized","enc::Encode","std::hash::Hash","std::cmp::Eq","de::BorrowDecode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode","std::hash::Hash","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","config::BigEndian","config::Limit","std::clone::impls::<impl std::clone::Clone for &mut T>","config::NoLimit","config::LittleEndian","config::Fixint","config::Varint"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::borrow_decode":{"A":["std::collections::Bound","std::string::String","std::collections::HashMap","std::num::NonZeroUsize","std::net::Ipv6Addr","std::sync::RwLock","std::collections::BTreeSet","std::num::NonZeroU16","std::ops::Range","std::collections::HashSet","std::cell::RefCell","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::cell::Cell","std::vec::Vec","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::net::SocketAddrV6","std::ops::RangeInclusive","std::borrow::Cow","std::time::SystemTime","std::sync::Arc","std::sync::atomic::AtomicI16","std::rc::Rc","std::path::PathBuf","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::result::Result","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::net::IpAddr","std::collections::BinaryHeap","std::ffi::CString","std::net::SocketAddr","std::sync::Mutex","std::boxed::Box","std::num::NonZeroIsize","std::net::SocketAddrV4","std::collections::VecDeque","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::time::Duration","std::num::NonZeroU128","std::net::Ipv4Addr","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::option::Option"],"B":["std::net::Ipv4Addr","std::cell::Cell","std::sync::Arc","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::collections::BTreeSet","std::collections::Bound","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroUsize","std::num::NonZeroU8","std::result::Result","std::sync::atomic::AtomicU64","std::rc::Rc","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::string::String","std::num::NonZeroU128","std::num::NonZeroU32","std::ops::RangeInclusive","std::vec::Vec","std::num::NonZeroU16","std::sync::RwLock","std::sync::Mutex","std::net::IpAddr","std::collections::BinaryHeap","std::ops::Range","std::collections::HashSet","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroI64","std::borrow::Cow","std::boxed::Box","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::collections::HashMap","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::option::Option","std::time::Duration","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::time::SystemTime","std::collections::BTreeMap","std::sync::atomic::AtomicI32"],"BD":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"C":["std::ops::Range","std::sync::Mutex","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::collections::HashMap","std::collections::BTreeMap","std::num::NonZeroU8","std::num::NonZeroI32","std::cell::Cell","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::net::IpAddr","std::time::Duration","std::time::SystemTime","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::num::NonZeroU32","std::collections::BTreeSet","std::sync::RwLock","std::collections::Bound","std::num::NonZeroI128","std::string::String","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::result::Result","std::boxed::Box","std::num::NonZeroI16","std::path::PathBuf","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::collections::BinaryHeap","std::borrow::Cow","std::net::SocketAddr","std::num::NonZeroU128","std::cell::RefCell","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::rc::Rc","std::sync::atomic::AtomicI8","std::option::Option","std::sync::Arc","std::num::NonZeroI8","std::marker::PhantomData","std::num::NonZeroU16","std::net::Ipv4Addr","std::ffi::CString","std::vec::Vec","std::net::Ipv6Addr","std::collections::HashSet"],"D":["std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::ops::RangeInclusive","std::collections::HashMap","std::net::SocketAddrV6","std::ffi::CString","std::net::Ipv4Addr","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::cell::Cell","std::collections::BTreeSet","std::sync::Mutex","std::collections::Bound","std::net::IpAddr","std::result::Result","std::ops::Range","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::collections::HashSet","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::string::String","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::cell::RefCell","std::num::NonZeroUsize","std::boxed::Box","std::time::SystemTime","std::sync::atomic::AtomicU64","std::vec::Vec","std::num::NonZeroU32","std::num::NonZeroI16","std::borrow::Cow","std::net::Ipv6Addr","std::path::PathBuf","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::option::Option","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::rc::Rc","std::net::SocketAddr","std::time::Duration","std::sync::RwLock","std::sync::Arc","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroI32","std::collections::BinaryHeap"],"E":["std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::collections::HashSet","std::net::SocketAddr","std::collections::HashMap","std::collections::BTreeSet","std::num::NonZeroI16","std::net::SocketAddrV6","std::cell::Cell","std::sync::Mutex","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::num::NonZeroU16","std::cell::RefCell","std::borrow::Cow","std::num::NonZeroU8","std::result::Result","std::collections::BinaryHeap","std::num::NonZeroU128","std::sync::Arc","std::num::NonZeroI64","std::ops::Range","std::ffi::CString","std::sync::RwLock","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::num::NonZeroUsize","std::num::NonZeroI8","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::vec::Vec","std::collections::BTreeMap","std::num::NonZeroIsize","std::ops::RangeInclusive","std::string::String","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::time::Duration","std::sync::atomic::AtomicBool","std::time::SystemTime","std::num::NonZeroI128","std::option::Option","std::boxed::Box","std::path::PathBuf","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::collections::Bound","std::sync::atomic::AtomicI8","std::rc::Rc","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::net::Ipv6Addr"],"F":["std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::collections::BTreeSet","std::ops::RangeInclusive","std::num::NonZeroIsize","std::collections::HashMap","std::sync::atomic::AtomicU32","std::option::Option","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::ffi::CString","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::boxed::Box","std::collections::Bound","std::sync::Mutex","std::num::NonZeroI16","std::num::NonZeroU128","std::path::PathBuf","std::cell::RefCell","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::rc::Rc","std::cell::Cell","std::net::Ipv4Addr","std::sync::RwLock","std::marker::PhantomData","std::num::NonZeroI128","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::net::IpAddr","std::net::SocketAddrV4","std::num::NonZeroU64","std::ops::Range","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::vec::Vec","std::borrow::Cow","std::string::String","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::collections::BTreeMap","std::num::NonZeroU32","std::time::Duration","std::sync::Arc","std::time::SystemTime","std::num::NonZeroI64","std::collections::HashSet","std::num::NonZeroI32","std::num::NonZeroI8","std::collections::VecDeque","std::result::Result","std::net::SocketAddrV6"],"G":["std::net::SocketAddrV6","std::ops::Range","std::collections::BTreeMap","std::net::Ipv6Addr","std::collections::HashMap","std::marker::PhantomData","std::result::Result","std::num::NonZeroI128","std::num::NonZeroI8","std::borrow::Cow","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::sync::RwLock","std::time::Duration","std::string::String","std::num::NonZeroI32","std::option::Option","std::collections::Bound","std::net::SocketAddr","std::ops::RangeInclusive","std::sync::Arc","std::collections::HashSet","std::cell::Cell","std::time::SystemTime","std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroU128","std::path::PathBuf","std::collections::BTreeSet","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::ffi::CString","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::boxed::Box","std::net::SocketAddrV4","std::vec::Vec","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::cell::RefCell","std::rc::Rc","std::sync::Mutex","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::collections::BinaryHeap","std::net::IpAddr","std::num::NonZeroIsize","std::num::NonZeroU32","std::sync::atomic::AtomicU8"],"H":["std::collections::BTreeSet","std::cell::Cell","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::borrow::Cow","std::num::NonZeroU64","std::collections::VecDeque","std::num::NonZeroU128","std::num::NonZeroI32","std::num::NonZeroUsize","std::string::String","std::net::Ipv6Addr","std::boxed::Box","std::cell::RefCell","std::num::NonZeroI8","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::collections::Bound","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::path::PathBuf","std::sync::Arc","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::net::SocketAddrV6","std::collections::HashSet","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::ops::Range","std::time::Duration","std::num::NonZeroU8","std::vec::Vec","std::sync::atomic::AtomicU16","std::collections::HashMap","std::ops::RangeInclusive","std::time::SystemTime","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::option::Option","std::result::Result","std::sync::atomic::AtomicBool","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroI128","std::ffi::CString","std::rc::Rc","std::sync::RwLock","std::sync::Mutex"],"I":["std::string::String","std::sync::atomic::AtomicIsize","std::ops::Range","std::net::SocketAddr","std::num::NonZeroI128","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::cell::RefCell","std::num::NonZeroI64","std::num::NonZeroU128","std::collections::Bound","std::sync::Arc","std::marker::PhantomData","std::collections::BTreeMap","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::option::Option","std::time::Duration","std::num::NonZeroIsize","std::num::NonZeroI8","std::net::IpAddr","std::ffi::CString","std::collections::HashSet","std::net::Ipv6Addr","std::ops::RangeInclusive","std::boxed::Box","std::num::NonZeroI32","std::num::NonZeroI16","std::cell::Cell","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::collections::BinaryHeap","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::sync::Mutex","std::collections::HashMap","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::sync::RwLock","std::num::NonZeroU64","std::collections::BTreeSet","std::time::SystemTime","std::sync::atomic::AtomicI8","std::rc::Rc","std::result::Result","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::net::SocketAddrV4","std::vec::Vec","std::sync::atomic::AtomicU64"],"J":["std::num::NonZeroUsize","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::collections::HashMap","std::borrow::Cow","std::time::SystemTime","std::sync::atomic::AtomicI8","std::sync::RwLock","std::num::NonZeroI8","std::num::NonZeroU128","std::path::PathBuf","std::num::NonZeroI64","std::boxed::Box","std::ops::RangeInclusive","std::sync::Mutex","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::rc::Rc","std::sync::atomic::AtomicUsize","std::vec::Vec","std::net::IpAddr","std::time::Duration","std::num::NonZeroI16","std::string::String","std::net::SocketAddrV6","std::num::NonZeroU64","std::option::Option","std::marker::PhantomData","std::collections::HashSet","std::collections::Bound","std::num::NonZeroI32","std::cell::RefCell","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::ops::Range","std::sync::Arc","std::cell::Cell","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::net::SocketAddr","std::collections::BinaryHeap","std::num::NonZeroU32","std::collections::VecDeque","std::num::NonZeroI128","std::result::Result"],"K":["std::net::IpAddr","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::cell::RefCell","std::net::SocketAddrV4","std::ffi::CString","std::ops::RangeInclusive","std::net::Ipv6Addr","std::num::NonZeroI8","std::path::PathBuf","std::borrow::Cow","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::marker::PhantomData","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::collections::HashSet","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::cell::Cell","std::net::SocketAddrV6","std::sync::RwLock","std::sync::atomic::AtomicU16","std::vec::Vec","std::num::NonZeroI128","std::num::NonZeroU128","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::time::SystemTime","std::string::String","std::option::Option","std::ops::Range","std::net::Ipv4Addr","std::collections::BTreeSet","std::collections::HashMap","std::boxed::Box","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::sync::Arc","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::result::Result","std::sync::atomic::AtomicU8","std::time::Duration","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::sync::Mutex","std::num::NonZeroIsize","std::collections::VecDeque","std::collections::Bound","std::collections::BinaryHeap","std::rc::Rc"],"L":["std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::net::Ipv6Addr","std::collections::HashMap","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::collections::Bound","std::time::Duration","std::rc::Rc","std::collections::HashSet","std::collections::VecDeque","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::option::Option","std::ops::Range","std::net::IpAddr","std::vec::Vec","std::num::NonZeroI32","std::num::NonZeroU16","std::collections::BTreeMap","std::ops::RangeInclusive","std::string::String","std::sync::Arc","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::collections::BinaryHeap","std::net::Ipv4Addr","std::sync::Mutex","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::boxed::Box","std::ffi::CString","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::sync::RwLock","std::cell::Cell","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::result::Result","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::num::NonZeroI64","std::num::NonZeroU32","std::time::SystemTime","std::net::SocketAddr","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::borrow::Cow","std::num::NonZeroUsize"],"M":["std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::time::Duration","std::ops::Range","std::ops::RangeInclusive","std::collections::BinaryHeap","std::sync::RwLock","std::marker::PhantomData","std::net::IpAddr","std::boxed::Box","std::sync::Mutex","std::num::NonZeroUsize","std::ffi::CString","std::sync::atomic::AtomicI16","std::cell::Cell","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::net::SocketAddrV6","std::cell::RefCell","std::rc::Rc","std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroU128","std::borrow::Cow","std::sync::atomic::AtomicI64","std::collections::HashMap","std::num::NonZeroU64","std::vec::Vec","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroI128","std::collections::HashSet","std::collections::VecDeque","std::net::SocketAddr","std::net::Ipv4Addr","std::sync::Arc","std::sync::atomic::AtomicU32","std::string::String","std::num::NonZeroU8","std::option::Option","std::sync::atomic::AtomicU8","std::result::Result","std::path::PathBuf","std::sync::atomic::AtomicU16","std::time::SystemTime","std::num::NonZeroI64","std::net::Ipv6Addr","std::collections::Bound","std::collections::BTreeMap","std::sync::atomic::AtomicUsize"]},"std::borrow::Cow":{"B":["std::path::Path","<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::path::PathBuf","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroI32","std::net::SocketAddrV4","std::num::NonZeroU32","std::net::IpAddr","std::option::Option","std::num::NonZeroI64","std::num::NonZeroU16","std::ffi::CString","std::sync::Arc","std::num::NonZeroI8","std::marker::PhantomData","std::num::NonZeroU8","std::net::Ipv4Addr","std::cell::RefCell","std::string::String","std::net::Ipv6Addr","std::num::NonZeroU64","std::num::NonZeroIsize"],"V":["std::collections::HashMap","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::borrow::Cow","std::sync::atomic::AtomicI64","std::collections::Bound","std::sync::RwLock","std::sync::Arc","std::sync::atomic::AtomicUsize","std::vec::Vec","std::net::SocketAddr","std::result::Result","std::num::NonZeroI128","std::ffi::CString","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::time::Duration","std::num::NonZeroU64","std::num::NonZeroUsize","std::rc::Rc","std::collections::BTreeSet","std::net::SocketAddrV6","std::path::PathBuf","std::sync::Mutex","std::time::SystemTime","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::string::String","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::ops::Range","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::option::Option","std::ops::RangeInclusive","std::boxed::Box","std::net::Ipv6Addr","std::cell::RefCell","std::num::NonZeroI64","std::collections::HashSet","std::sync::atomic::AtomicU16","std::cell::Cell","std::num::NonZeroU32","std::num::NonZeroU128","std::num::NonZeroU16","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::net::IpAddr","std::num::NonZeroIsize","std::collections::BinaryHeap","std::num::NonZeroI16","std::num::NonZeroI32","std::net::SocketAddrV4","std::collections::VecDeque"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU16","std::num::NonZeroI64","std::path::PathBuf","std::net::SocketAddrV4","std::ffi::CString","std::cell::RefCell","std::num::NonZeroU8","std::rc::Rc","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroUsize","std::time::SystemTime","std::net::SocketAddrV6","std::cell::Cell","std::marker::PhantomData","std::option::Option","std::net::Ipv6Addr","std::net::IpAddr","std::sync::Arc","std::num::NonZeroU64"]},"std::collections::BinaryHeap":{"T":["std::ffi::CString","std::net::IpAddr","std::time::SystemTime","std::rc::Rc","std::string::String","std::net::Ipv6Addr","std::cell::Cell","std::net::SocketAddrV6","std::marker::PhantomData","std::net::SocketAddr","std::cell::RefCell","std::num::NonZeroU64","std::net::SocketAddrV4","std::option::Option","std::net::Ipv4Addr","std::num::NonZeroU32","std::num::NonZeroI32","std::num::NonZeroU8","std::sync::Arc","std::num::NonZeroI64","std::num::NonZeroIsize","std::path::PathBuf"]},"std::collections::Bound":{"T":["std::sync::RwLock","std::ops::RangeInclusive","std::time::Duration","std::collections::HashSet","std::result::Result","std::collections::BTreeSet","std::sync::Mutex","std::collections::BTreeMap","std::net::SocketAddr","std::time::SystemTime","std::collections::VecDeque","std::boxed::Box","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::vec::Vec","std::option::Option","std::num::NonZeroI16","std::borrow::Cow","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::sync::Arc","std::net::IpAddr","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroU16","std::ffi::CString","std::net::Ipv4Addr","std::string::String","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::num::NonZeroI64","std::num::NonZeroI128","std::collections::HashMap","std::num::NonZeroUsize","std::num::NonZeroU128","std::rc::Rc","std::cell::RefCell","std::net::SocketAddrV4","std::ops::Range","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::cell::Cell","std::collections::BinaryHeap","std::num::NonZeroU32","std::num::NonZeroU8","std::collections::Bound","std::num::NonZeroI8","std::net::Ipv6Addr","std::net::SocketAddrV6"]},"std::collections::HashMap":{"K":["std::num::NonZeroIsize","std::ffi::CString","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroI16","std::num::NonZeroI128","std::net::Ipv4Addr","std::num::NonZeroU128","std::time::Duration","std::num::NonZeroUsize","std::num::NonZeroU16","std::net::SocketAddr","std::path::PathBuf","std::collections::Bound","std::time::SystemTime","std::num::NonZeroI32","std::num::NonZeroU64","std::net::SocketAddrV4","std::string::String"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::collections::HashMap","std::result::Result","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::cell::RefCell","std::time::Duration","std::net::IpAddr","std::borrow::Cow","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::cell::Cell","std::vec::Vec","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::num::NonZeroU16","std::collections::VecDeque","std::sync::Arc","std::collections::BTreeMap","std::net::Ipv4Addr","std::ops::RangeInclusive","std::num::NonZeroI8","std::marker::PhantomData","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::string::String","std::sync::RwLock","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::collections::HashSet","std::collections::Bound","std::time::SystemTime","std::collections::BTreeSet","std::num::NonZeroIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::rc::Rc","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::ops::Range","std::ffi::CString","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::boxed::Box","std::num::NonZeroI16","std::num::NonZeroI128","std::option::Option","std::num::NonZeroU128","std::path::PathBuf","std::net::SocketAddrV4"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::net::IpAddr","std::sync::Arc","std::time::SystemTime","std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroI64","std::num::NonZeroU128","std::net::SocketAddrV4","std::rc::Rc","std::path::PathBuf","std::ffi::CString","std::num::NonZeroI8","std::option::Option","std::num::NonZeroI16"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicI16","std::collections::VecDeque","std::num::NonZeroI64","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::time::Duration","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::num::NonZeroI16","std::ffi::CString","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroU64","std::sync::RwLock","std::borrow::Cow","std::num::NonZeroIsize","std::num::NonZeroU16","std::net::Ipv4Addr","std::result::Result","std::collections::HashSet","std::collections::BTreeSet","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::collections::HashMap","std::num::NonZeroI8","std::net::Ipv6Addr","std::marker::PhantomData","std::sync::Arc","std::num::NonZeroU8","std::net::SocketAddr","std::collections::Bound","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroU32","std::num::NonZeroU128","std::sync::Mutex","std::ops::Range","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::time::SystemTime","std::boxed::Box","std::cell::Cell","std::sync::atomic::AtomicI8","std::vec::Vec","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::rc::Rc","std::num::NonZeroI32","std::string::String","std::cell::RefCell","std::sync::atomic::AtomicIsize"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::time::Duration","std::num::NonZeroI32","std::net::Ipv6Addr","std::num::NonZeroI16","std::net::IpAddr","std::cell::Cell","std::ops::RangeInclusive","std::num::NonZeroU128","std::collections::HashMap","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::ops::Range","std::num::NonZeroUsize","std::result::Result","std::collections::BinaryHeap","std::num::NonZeroI8","std::boxed::Box","std::time::SystemTime","std::num::NonZeroU64","std::marker::PhantomData","std::cell::RefCell","std::path::PathBuf","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::borrow::Cow","std::net::SocketAddr","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::option::Option","std::collections::HashSet","std::collections::BTreeMap","std::string::String","std::ffi::CString","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::collections::VecDeque","std::sync::RwLock","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::collections::Bound","std::net::SocketAddrV6","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::sync::Mutex","std::rc::Rc","std::vec::Vec","std::sync::Arc","std::net::SocketAddrV4"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::Ipv4Addr","std::num::NonZeroUsize","std::net::IpAddr","std::borrow::Cow","std::net::SocketAddrV6","std::num::NonZeroI128","std::sync::RwLock","std::time::SystemTime","std::boxed::Box","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::ffi::CString","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::cell::Cell","std::num::NonZeroI16","std::num::NonZeroU64","std::num::NonZeroU128","std::result::Result","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::collections::Bound","std::num::NonZeroI32","std::marker::PhantomData","std::collections::HashMap","std::net::SocketAddr","std::num::NonZeroI64","std::ops::RangeInclusive","std::sync::Mutex","std::vec::Vec","std::path::PathBuf","std::sync::Arc","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::time::Duration","std::sync::atomic::AtomicU16","std::ops::Range","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::rc::Rc","std::cell::RefCell","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::num::NonZeroIsize","std::num::NonZeroU16","std::collections::BTreeMap","std::string::String"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::net::SocketAddr","std::ops::RangeInclusive","std::string::String","std::sync::atomic::AtomicI32","std::sync::Arc","std::num::NonZeroUsize","std::sync::RwLock","std::rc::Rc","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::time::SystemTime","std::cell::Cell","std::net::Ipv6Addr","std::option::Option","std::num::NonZeroIsize","std::path::PathBuf","std::sync::atomic::AtomicI16","std::time::Duration","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::num::NonZeroU8","std::borrow::Cow","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::collections::HashSet","std::sync::Mutex","std::collections::Bound","std::ffi::CString","std::sync::atomic::AtomicBool","std::net::IpAddr","std::collections::VecDeque","std::cell::RefCell","std::num::NonZeroI32","std::net::SocketAddrV4","std::result::Result","std::boxed::Box","std::num::NonZeroU64","std::net::Ipv4Addr","std::num::NonZeroI8","std::collections::BTreeMap","std::net::SocketAddrV6","std::collections::BinaryHeap","std::collections::BTreeSet","std::ops::Range","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::collections::HashMap","std::vec::Vec"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::borrow_decode(p0);
+<(A, B, C, D, E, F, G, H, I, J, K, L, M)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::decode":{"A":["std::marker::Sized","de::Decode"],"B":["de::Decode","std::marker::Sized"],"C":["de::Decode","std::marker::Sized"],"D":["std::marker::Sized","de::Decode"],"DE":["std::marker::Sized","de::Decoder"],"E":["de::Decode","std::marker::Sized"],"F":["std::marker::Sized","de::Decode"],"G":["std::marker::Sized","de::Decode"],"H":["de::Decode","std::marker::Sized"],"I":["std::marker::Sized","de::Decode"],"J":["std::marker::Sized","de::Decode"],"K":["std::marker::Sized","de::Decode"],"L":["de::Decode","std::marker::Sized"],"M":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["std::cmp::Ord","std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::Decode","std::cmp::Ord","de::BorrowDecode","std::marker::Sized"]},"std::collections::Bound":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["de::Decode","enc::Encode","std::cmp::Eq","de::BorrowDecode","std::marker::Sized","std::hash::Hash"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["std::cmp::Eq","enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::LittleEndian","config::Limit","config::BigEndian","std::clone::impls::<impl std::clone::Clone for &T>","config::Varint","config::Fixint","config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::decode":{"A":["std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::string::String","std::time::Duration","std::net::SocketAddr","std::collections::Bound","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::ops::Range","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::result::Result","std::collections::HashSet","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::borrow::Cow","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::ops::RangeInclusive","std::option::Option","std::sync::atomic::AtomicBool","std::time::SystemTime","std::net::SocketAddrV4","std::collections::BinaryHeap","std::num::NonZeroU32","std::collections::BTreeMap","std::sync::Mutex","std::num::NonZeroIsize","std::net::IpAddr","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::net::Ipv6Addr","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroU64","std::num::NonZeroUsize","std::ffi::CString","std::cell::Cell","std::rc::Rc","std::sync::Arc","std::path::PathBuf","std::sync::RwLock","std::num::NonZeroI8","std::vec::Vec","std::boxed::Box","std::collections::VecDeque"],"B":["std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::string::String","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::sync::atomic::AtomicU32","std::net::IpAddr","std::num::NonZeroU16","std::collections::BTreeSet","std::cell::Cell","std::num::NonZeroU32","std::collections::VecDeque","std::collections::BTreeMap","std::collections::HashSet","std::num::NonZeroIsize","std::time::SystemTime","std::net::Ipv4Addr","std::num::NonZeroUsize","std::net::SocketAddr","std::ops::Range","std::num::NonZeroU8","std::result::Result","std::collections::Bound","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::time::Duration","std::collections::BinaryHeap","std::ffi::CString","std::net::SocketAddrV6","std::cell::RefCell","std::option::Option","std::sync::RwLock","std::borrow::Cow","std::rc::Rc","std::path::PathBuf","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::boxed::Box","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::sync::Arc","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::vec::Vec","std::sync::Mutex","std::num::NonZeroI64"],"C":["std::num::NonZeroU64","std::net::Ipv4Addr","std::marker::PhantomData","std::ops::RangeInclusive","std::rc::Rc","std::sync::Mutex","std::num::NonZeroI64","std::borrow::Cow","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::net::Ipv6Addr","std::net::SocketAddrV4","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::result::Result","std::num::NonZeroU32","std::boxed::Box","std::net::SocketAddrV6","std::sync::Arc","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::num::NonZeroU8","std::collections::VecDeque","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::string::String","std::net::SocketAddr","std::ffi::CString","std::num::NonZeroUsize","std::vec::Vec","std::collections::Bound","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::time::SystemTime","std::sync::atomic::AtomicBool","std::cell::Cell","std::path::PathBuf","std::collections::HashMap","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::num::NonZeroI128","std::collections::BTreeSet","std::time::Duration","std::option::Option","std::collections::HashSet","std::sync::atomic::AtomicI64","std::sync::RwLock","std::num::NonZeroU16","std::ops::Range","std::sync::atomic::AtomicU8","std::net::IpAddr","std::sync::atomic::AtomicI8"],"D":["std::num::NonZeroU64","std::time::SystemTime","std::collections::BinaryHeap","std::borrow::Cow","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroI32","std::collections::HashMap","std::ops::Range","std::sync::RwLock","std::sync::atomic::AtomicI16","std::ffi::CString","std::sync::atomic::AtomicU32","std::path::PathBuf","std::string::String","std::num::NonZeroI128","std::net::SocketAddrV4","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::result::Result","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::sync::Arc","std::sync::atomic::AtomicU16","std::net::IpAddr","std::boxed::Box","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::sync::Mutex","std::option::Option","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::net::SocketAddr","std::rc::Rc","std::net::SocketAddrV6","std::cell::RefCell","std::vec::Vec","std::time::Duration","std::collections::BTreeSet","std::num::NonZeroIsize","std::num::NonZeroI64","std::num::NonZeroU8","std::marker::PhantomData","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::cell::Cell","std::collections::Bound","std::net::Ipv4Addr","std::collections::HashSet"],"DE":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"E":["std::option::Option","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::cell::Cell","std::net::SocketAddr","std::time::SystemTime","std::ffi::CString","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::num::NonZeroI16","std::rc::Rc","std::collections::BinaryHeap","std::num::NonZeroU64","std::collections::Bound","std::marker::PhantomData","std::sync::Arc","std::collections::BTreeMap","std::vec::Vec","std::sync::Mutex","std::collections::HashMap","std::sync::RwLock","std::result::Result","std::time::Duration","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::collections::HashSet","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::string::String","std::cell::RefCell","std::num::NonZeroI32","std::borrow::Cow","std::num::NonZeroU16","std::num::NonZeroI64","std::ops::RangeInclusive","std::num::NonZeroU128","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::net::Ipv4Addr","std::boxed::Box","std::ops::Range","std::path::PathBuf","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::num::NonZeroU32"],"F":["std::ops::RangeInclusive","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::num::NonZeroU16","std::num::NonZeroU128","std::collections::BTreeMap","std::num::NonZeroI32","std::net::IpAddr","std::sync::atomic::AtomicI8","std::string::String","std::marker::PhantomData","std::cell::RefCell","std::ops::Range","std::sync::Mutex","std::num::NonZeroIsize","std::collections::HashSet","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::rc::Rc","std::sync::atomic::AtomicU8","std::result::Result","std::num::NonZeroI16","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::time::Duration","std::sync::atomic::AtomicI64","std::sync::RwLock","std::ffi::CString","std::num::NonZeroU32","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::collections::Bound","std::borrow::Cow","std::cell::Cell","std::num::NonZeroUsize","std::net::SocketAddr","std::option::Option","std::sync::Arc","std::vec::Vec","std::time::SystemTime","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::num::NonZeroI8","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::path::PathBuf","std::collections::BTreeSet","std::boxed::Box","std::net::Ipv6Addr","std::collections::HashMap"],"G":["std::net::Ipv6Addr","std::collections::BinaryHeap","std::collections::BTreeSet","std::rc::Rc","std::cell::Cell","std::boxed::Box","std::string::String","std::collections::Bound","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::num::NonZeroI8","std::time::SystemTime","std::sync::RwLock","std::collections::BTreeMap","std::num::NonZeroU8","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::option::Option","std::sync::Mutex","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::path::PathBuf","std::result::Result","std::collections::VecDeque","std::time::Duration","std::vec::Vec","std::num::NonZeroI128","std::num::NonZeroI32","std::net::IpAddr","std::ops::Range","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::ffi::CString","std::collections::HashSet","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::num::NonZeroUsize","std::num::NonZeroI16","std::collections::HashMap","std::sync::Arc","std::net::Ipv4Addr","std::num::NonZeroU16","std::marker::PhantomData"],"H":["std::net::IpAddr","std::num::NonZeroUsize","std::ops::RangeInclusive","std::collections::HashSet","std::cell::Cell","std::num::NonZeroI128","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroU16","std::collections::VecDeque","std::num::NonZeroU32","std::num::NonZeroU128","std::net::Ipv6Addr","std::rc::Rc","std::result::Result","std::net::SocketAddrV6","std::string::String","std::sync::atomic::AtomicBool","std::option::Option","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::sync::Mutex","std::sync::RwLock","std::vec::Vec","std::num::NonZeroI32","std::ops::Range","std::collections::HashMap","std::boxed::Box","std::sync::Arc","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::ffi::CString","std::cell::RefCell","std::num::NonZeroIsize","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::num::NonZeroU64","std::collections::Bound","std::marker::PhantomData","std::collections::BinaryHeap","std::path::PathBuf","std::time::SystemTime","std::num::NonZeroI16","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::sync::atomic::AtomicU8"],"I":["std::sync::atomic::AtomicU8","std::vec::Vec","std::num::NonZeroI8","std::collections::HashSet","std::ops::Range","std::collections::VecDeque","std::option::Option","std::num::NonZeroI32","std::num::NonZeroU32","std::net::Ipv6Addr","std::sync::RwLock","std::num::NonZeroI64","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::time::Duration","std::net::Ipv4Addr","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::boxed::Box","std::borrow::Cow","std::path::PathBuf","std::sync::Arc","std::ffi::CString","std::num::NonZeroI128","std::collections::BinaryHeap","std::num::NonZeroU64","std::result::Result","std::string::String","std::net::SocketAddrV6","std::collections::Bound","std::sync::atomic::AtomicU64","std::cell::Cell","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::collections::HashMap","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::collections::BTreeMap","std::num::NonZeroI16","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::net::IpAddr","std::num::NonZeroU128","std::time::SystemTime","std::rc::Rc","std::num::NonZeroUsize","std::collections::BTreeSet"],"J":["std::boxed::Box","std::net::SocketAddrV6","std::borrow::Cow","std::time::SystemTime","std::sync::atomic::AtomicU32","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::num::NonZeroI8","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::result::Result","std::num::NonZeroU8","std::sync::RwLock","std::sync::atomic::AtomicI8","std::sync::Arc","std::num::NonZeroU32","std::collections::HashSet","std::ops::RangeInclusive","std::time::Duration","std::sync::atomic::AtomicU16","std::net::IpAddr","std::marker::PhantomData","std::num::NonZeroIsize","std::sync::Mutex","std::cell::RefCell","std::net::SocketAddr","std::num::NonZeroI16","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::num::NonZeroI64","std::rc::Rc","std::net::Ipv4Addr","std::cell::Cell","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::string::String","std::sync::atomic::AtomicI32","std::vec::Vec","std::net::SocketAddrV4","std::collections::BTreeMap","std::option::Option","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::ops::Range","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::num::NonZeroUsize","std::collections::BTreeSet","std::collections::BinaryHeap","std::collections::Bound","std::path::PathBuf","std::ffi::CString"],"K":["std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::string::String","std::sync::Arc","std::sync::RwLock","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::time::Duration","std::num::NonZeroU16","std::num::NonZeroU128","std::collections::BTreeSet","std::vec::Vec","std::num::NonZeroI8","std::net::SocketAddrV6","std::rc::Rc","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::option::Option","std::time::SystemTime","std::net::SocketAddr","std::borrow::Cow","std::collections::BTreeMap","std::num::NonZeroI32","std::num::NonZeroI128","std::path::PathBuf","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::boxed::Box","std::net::IpAddr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::collections::HashSet","std::sync::Mutex","std::collections::Bound","std::sync::atomic::AtomicI16","std::collections::HashMap","std::marker::PhantomData","std::collections::BinaryHeap","std::num::NonZeroU8","std::num::NonZeroU32","std::ffi::CString","std::result::Result","std::ops::Range","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::net::SocketAddrV4","std::num::NonZeroI16"],"L":["std::num::NonZeroI16","std::cell::Cell","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::collections::VecDeque","std::collections::HashMap","std::cell::RefCell","std::num::NonZeroI128","std::collections::BTreeSet","std::ffi::CString","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::result::Result","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroU128","std::time::Duration","std::sync::atomic::AtomicI32","std::sync::Mutex","std::ops::RangeInclusive","std::string::String","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::time::SystemTime","std::collections::HashSet","std::num::NonZeroI64","std::collections::Bound","std::sync::Arc","std::collections::BTreeMap","std::ops::Range","std::num::NonZeroU8","std::borrow::Cow","std::num::NonZeroUsize","std::num::NonZeroU64","std::net::Ipv4Addr","std::collections::BinaryHeap","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::boxed::Box","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::vec::Vec","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::sync::RwLock","std::option::Option","std::net::Ipv6Addr","std::net::IpAddr"],"M":["std::result::Result","std::net::SocketAddrV6","std::num::NonZeroU8","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::sync::RwLock","std::num::NonZeroIsize","std::collections::BTreeMap","std::ops::RangeInclusive","std::cell::RefCell","std::sync::Arc","std::collections::BinaryHeap","std::ffi::CString","std::string::String","std::num::NonZeroUsize","std::collections::Bound","std::vec::Vec","std::borrow::Cow","std::net::IpAddr","std::boxed::Box","std::num::NonZeroU32","std::ops::Range","std::marker::PhantomData","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::num::NonZeroU128","std::time::Duration","std::cell::Cell","std::num::NonZeroI32","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::option::Option","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::net::SocketAddr","std::collections::HashMap","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::collections::HashSet","std::collections::VecDeque","std::num::NonZeroI128","std::num::NonZeroU16","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroI64"]},"std::borrow::Cow":{"B":["std::path::Path","<T as std::borrow::ToOwned>","std::ffi::OsStr","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroU64","std::net::Ipv6Addr","std::rc::Rc","std::net::SocketAddrV4","std::cell::RefCell","std::option::Option","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroU16","std::num::NonZeroU8","std::num::NonZeroU32","std::net::SocketAddr","std::num::NonZeroI16","std::path::PathBuf","std::time::Duration","std::num::NonZeroI128","std::net::Ipv4Addr","std::marker::PhantomData","std::net::SocketAddrV6","std::net::IpAddr","std::string::String","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroI64"],"V":["std::collections::BinaryHeap","std::net::SocketAddrV6","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroU8","std::rc::Rc","std::sync::RwLock","std::num::NonZeroI64","std::collections::HashSet","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::boxed::Box","std::sync::atomic::AtomicI16","std::cell::RefCell","std::sync::atomic::AtomicU64","std::borrow::Cow","std::num::NonZeroI8","std::sync::Mutex","std::num::NonZeroU128","std::vec::Vec","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::option::Option","std::time::Duration","std::collections::BTreeSet","std::num::NonZeroU64","std::num::NonZeroI16","std::sync::Arc","std::collections::BTreeMap","std::ops::Range","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::collections::Bound","std::ops::RangeInclusive","std::collections::HashMap","std::net::IpAddr","std::ffi::CString","std::string::String","std::collections::VecDeque","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::time::SystemTime","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::marker::PhantomData","std::result::Result","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::net::Ipv6Addr","std::net::SocketAddrV4"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI16","std::num::NonZeroI64","std::path::PathBuf","std::time::Duration","std::marker::PhantomData","std::num::NonZeroI32","std::net::SocketAddr","std::net::SocketAddrV4","std::option::Option","std::time::SystemTime","std::net::SocketAddrV6","std::num::NonZeroU64","std::cell::Cell","std::num::NonZeroU8","std::cell::RefCell","std::net::IpAddr","std::num::NonZeroU32","std::sync::Arc","std::num::NonZeroU128","std::rc::Rc"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI128","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroU8","std::time::SystemTime","std::num::NonZeroU16","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroI16","std::cell::Cell","std::num::NonZeroI8","std::net::SocketAddrV6","std::cell::RefCell","std::net::IpAddr","std::net::SocketAddr","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroI32","std::string::String","std::num::NonZeroU32"]},"std::collections::Bound":{"T":["std::num::NonZeroU8","std::option::Option","std::net::SocketAddrV6","std::path::PathBuf","std::num::NonZeroU128","std::num::NonZeroI16","std::sync::Arc","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::marker::PhantomData","std::num::NonZeroI8","std::sync::Mutex","std::time::SystemTime","std::collections::BTreeMap","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::collections::Bound","std::sync::atomic::AtomicU8","std::string::String","std::cell::RefCell","std::collections::HashMap","std::boxed::Box","std::cell::Cell","std::num::NonZeroU32","std::borrow::Cow","std::num::NonZeroIsize","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::sync::RwLock","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::vec::Vec","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::num::NonZeroU16","std::net::IpAddr","std::time::Duration","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::collections::HashSet","std::collections::BinaryHeap","std::collections::VecDeque","std::ops::RangeInclusive","std::result::Result","std::rc::Rc","std::net::Ipv6Addr","std::net::Ipv4Addr","std::ffi::CString","std::sync::atomic::AtomicUsize","std::ops::Range","std::net::SocketAddr"]},"std::collections::HashMap":{"K":["std::time::SystemTime","std::num::NonZeroUsize","std::net::IpAddr","std::ffi::CString","std::num::NonZeroI8","std::option::Option","std::net::Ipv4Addr","std::num::NonZeroU128","std::sync::Arc","std::time::Duration","std::path::PathBuf","std::string::String","std::num::NonZeroI128"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::ops::Range","std::string::String","std::num::NonZeroIsize","std::num::NonZeroU8","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::collections::HashMap","std::sync::atomic::AtomicI64","std::collections::HashSet","std::net::Ipv4Addr","std::vec::Vec","std::num::NonZeroU64","std::result::Result","std::time::Duration","std::ffi::CString","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::sync::Arc","std::collections::BTreeSet","std::net::IpAddr","std::sync::RwLock","std::path::PathBuf","std::net::SocketAddr","std::borrow::Cow","std::net::SocketAddrV6","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::boxed::Box","std::collections::Bound","std::num::NonZeroI16","std::num::NonZeroI32","std::sync::Mutex","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::rc::Rc","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::ops::RangeInclusive","std::cell::Cell","std::num::NonZeroU128","std::cell::RefCell","std::net::Ipv6Addr","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::option::Option"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI16","std::net::SocketAddrV4","std::num::NonZeroUsize","std::num::NonZeroU64","std::collections::Bound","std::net::SocketAddrV6","std::num::NonZeroU128","std::time::SystemTime","std::rc::Rc","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroU8","std::num::NonZeroI8","std::net::SocketAddr","std::ffi::CString","std::num::NonZeroU16","std::sync::Arc","std::string::String"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::num::NonZeroI64","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::collections::HashSet","std::sync::atomic::AtomicU8","std::option::Option","std::ffi::CString","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::num::NonZeroI16","std::collections::BTreeSet","std::sync::Mutex","std::result::Result","std::ops::RangeInclusive","std::num::NonZeroU8","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::boxed::Box","std::collections::Bound","std::net::Ipv4Addr","std::string::String","std::num::NonZeroU64","std::net::IpAddr","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::ops::Range","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::num::NonZeroI8","std::collections::HashMap","std::cell::Cell","std::cell::RefCell","std::collections::BinaryHeap","std::time::Duration","std::time::SystemTime","std::sync::RwLock","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::num::NonZeroU128","std::num::NonZeroI128","std::rc::Rc","std::num::NonZeroI32","std::vec::Vec","std::sync::Arc","std::path::PathBuf","std::sync::atomic::AtomicI32"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::borrow::Cow","std::num::NonZeroI128","std::cell::Cell","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::num::NonZeroI16","std::sync::Mutex","std::collections::BTreeSet","std::collections::HashMap","std::net::SocketAddr","std::cell::RefCell","std::net::Ipv6Addr","std::option::Option","std::sync::atomic::AtomicI32","std::vec::Vec","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::sync::Arc","std::net::SocketAddrV4","std::collections::BTreeMap","std::num::NonZeroI32","std::ops::Range","std::sync::atomic::AtomicU64","std::time::SystemTime","std::collections::HashSet","std::sync::atomic::AtomicBool","std::collections::Bound","std::sync::atomic::AtomicI64","std::ffi::CString","std::sync::atomic::AtomicU32","std::sync::RwLock","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroI8","std::sync::atomic::AtomicUsize","std::string::String","std::ops::RangeInclusive","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroU32","std::num::NonZeroI64","std::boxed::Box","std::num::NonZeroU128","std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroUsize","std::collections::VecDeque","std::result::Result","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::time::Duration","std::num::NonZeroIsize","std::num::NonZeroU8"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::option::Option","std::rc::Rc","std::sync::atomic::AtomicI16","std::collections::Bound","std::sync::Mutex","std::net::SocketAddrV4","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::ffi::CString","std::net::IpAddr","std::time::Duration","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::ops::RangeInclusive","std::num::NonZeroU128","std::sync::Arc","std::sync::RwLock","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::marker::PhantomData","std::collections::VecDeque","std::num::NonZeroI128","std::num::NonZeroU32","std::ops::Range","std::time::SystemTime","std::collections::BinaryHeap","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::result::Result","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::collections::HashMap","std::num::NonZeroIsize","std::path::PathBuf","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::string::String","std::collections::BTreeMap","std::cell::RefCell","std::num::NonZeroUsize","std::collections::HashSet","std::cell::Cell","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::vec::Vec","std::boxed::Box","std::num::NonZeroI16","std::collections::BTreeSet","std::borrow::Cow"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::path::PathBuf","std::sync::atomic::AtomicI8","std::option::Option","std::num::NonZeroI64","std::boxed::Box","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::collections::BTreeSet","std::time::Duration","std::collections::HashMap","std::sync::Mutex","std::num::NonZeroI8","std::cell::RefCell","std::num::NonZeroU16","std::num::NonZeroU8","std::num::NonZeroI128","std::ops::RangeInclusive","std::time::SystemTime","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::string::String","std::sync::atomic::AtomicI64","std::collections::HashSet","std::ffi::CString","std::num::NonZeroI16","std::marker::PhantomData","std::ops::Range","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::cell::Cell","std::sync::atomic::AtomicU16","std::sync::Arc","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::sync::RwLock","std::num::NonZeroI32","std::num::NonZeroUsize","std::net::Ipv4Addr","std::net::SocketAddr","std::net::SocketAddrV4","std::vec::Vec","std::collections::BTreeMap","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::result::Result","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::collections::Bound","std::rc::Rc","std::num::NonZeroU32","std::net::SocketAddrV6"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::decode(p0);
+<(A, B, C, D, E, F, G, H, I, J, K, L, M)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::borrow_decode":{"A":["std::marker::Sized","de::BorrowDecode"],"B":["std::marker::Sized","de::BorrowDecode"],"BD":["de::BorrowDecoder","std::marker::Sized"],"C":["std::marker::Sized","de::BorrowDecode"],"D":["de::BorrowDecode","std::marker::Sized"],"E":["de::BorrowDecode","std::marker::Sized"],"F":["std::marker::Sized","de::BorrowDecode"],"G":["de::BorrowDecode","std::marker::Sized"],"H":["std::marker::Sized","de::BorrowDecode"],"I":["de::BorrowDecode","std::marker::Sized"],"J":["std::marker::Sized","de::BorrowDecode"],"K":["std::marker::Sized","de::BorrowDecode"],"L":["de::BorrowDecode","std::marker::Sized"],"M":["de::BorrowDecode","std::marker::Sized"],"N":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::marker::Sized","de::Decode","enc::Encode","std::cmp::Ord","de::BorrowDecode"],"V":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","std::cmp::Ord","enc::Encode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::collections::Bound":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::HashMap":{"K":["enc::Encode","std::hash::Hash","de::BorrowDecode","std::marker::Sized","std::cmp::Eq","de::Decode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::marker::Sized","de::Decode","std::cmp::Eq","std::hash::Hash","enc::Encode","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for *const T>","config::Fixint","config::NoLimit","config::Limit","config::BigEndian","config::Configuration","config::Varint","config::LittleEndian"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::borrow_decode":{"A":["std::rc::Rc","std::num::NonZeroIsize","std::net::IpAddr","std::cell::Cell","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroI64","std::sync::Mutex","std::net::SocketAddrV6","std::net::Ipv4Addr","std::time::SystemTime","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::ffi::CString","std::path::PathBuf","std::ops::RangeInclusive","std::collections::HashMap","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::vec::Vec","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::ops::Range","std::num::NonZeroU16","std::string::String","std::num::NonZeroI32","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::option::Option","std::collections::VecDeque","std::collections::BTreeSet","std::collections::BinaryHeap","std::net::SocketAddrV4","std::cell::RefCell","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::borrow::Cow","std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::collections::Bound","std::collections::HashSet","std::boxed::Box","std::sync::RwLock","std::sync::atomic::AtomicU8","std::result::Result"],"B":["std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroU32","std::ops::Range","std::net::SocketAddr","std::num::NonZeroU16","std::net::Ipv4Addr","std::time::SystemTime","std::time::Duration","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::rc::Rc","std::path::PathBuf","std::collections::BinaryHeap","std::result::Result","std::num::NonZeroU64","std::collections::HashSet","std::cell::RefCell","std::sync::atomic::AtomicU32","std::cell::Cell","std::vec::Vec","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::boxed::Box","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::ffi::CString","std::sync::RwLock","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::num::NonZeroI64","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroI16","std::borrow::Cow","std::net::Ipv6Addr","std::string::String","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::collections::HashMap","std::num::NonZeroIsize","std::net::IpAddr","std::collections::VecDeque","std::option::Option","std::collections::BTreeSet","std::net::SocketAddrV4","std::collections::Bound","std::num::NonZeroI128"],"BD":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"C":["std::num::NonZeroU128","std::sync::Arc","std::collections::BTreeSet","std::borrow::Cow","std::sync::atomic::AtomicI16","std::vec::Vec","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::string::String","std::num::NonZeroUsize","std::path::PathBuf","std::sync::RwLock","std::num::NonZeroI64","std::sync::Mutex","std::rc::Rc","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::collections::BinaryHeap","std::ops::Range","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::boxed::Box","std::option::Option","std::ops::RangeInclusive","std::time::SystemTime","std::sync::atomic::AtomicBool","std::collections::Bound","std::net::Ipv6Addr","std::marker::PhantomData","std::num::NonZeroI32","std::collections::VecDeque","std::num::NonZeroI128","std::ffi::CString","std::num::NonZeroIsize","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::num::NonZeroU32","std::num::NonZeroI8","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::net::IpAddr","std::sync::atomic::AtomicI8","std::time::Duration","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::collections::HashMap","std::num::NonZeroU64","std::result::Result","std::cell::Cell","std::cell::RefCell","std::sync::atomic::AtomicU32"],"D":["std::num::NonZeroU16","std::ops::Range","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::sync::Mutex","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::ops::RangeInclusive","std::collections::Bound","std::string::String","std::net::SocketAddr","std::time::SystemTime","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::cell::RefCell","std::num::NonZeroUsize","std::num::NonZeroU8","std::collections::VecDeque","std::cell::Cell","std::num::NonZeroI128","std::borrow::Cow","std::rc::Rc","std::path::PathBuf","std::vec::Vec","std::sync::atomic::AtomicBool","std::result::Result","std::sync::Arc","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::time::Duration","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::boxed::Box","std::collections::HashMap","std::ffi::CString","std::option::Option","std::collections::HashSet","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::num::NonZeroU64","std::collections::BinaryHeap","std::num::NonZeroU32","std::collections::BTreeMap","std::sync::RwLock","std::net::Ipv6Addr","std::collections::BTreeSet","std::net::IpAddr","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16"],"E":["std::sync::Mutex","std::sync::atomic::AtomicU32","std::net::IpAddr","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::result::Result","std::ffi::CString","std::net::Ipv6Addr","std::num::NonZeroI8","std::num::NonZeroI32","std::collections::HashMap","std::net::Ipv4Addr","std::collections::Bound","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::collections::BTreeSet","std::sync::RwLock","std::num::NonZeroI128","std::collections::VecDeque","std::cell::RefCell","std::path::PathBuf","std::net::SocketAddr","std::collections::BinaryHeap","std::num::NonZeroI16","std::string::String","std::ops::RangeInclusive","std::num::NonZeroU16","std::boxed::Box","std::rc::Rc","std::time::Duration","std::cell::Cell","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::num::NonZeroU8","std::collections::HashSet","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::marker::PhantomData","std::ops::Range","std::net::SocketAddrV4","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::option::Option","std::sync::atomic::AtomicI32","std::vec::Vec","std::num::NonZeroU32","std::time::SystemTime","std::sync::Arc","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64"],"F":["std::sync::RwLock","std::num::NonZeroUsize","std::rc::Rc","std::string::String","std::vec::Vec","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::time::Duration","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::collections::HashSet","std::num::NonZeroU64","std::ops::Range","std::collections::BTreeSet","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::collections::BTreeMap","std::num::NonZeroI8","std::cell::Cell","std::collections::BinaryHeap","std::borrow::Cow","std::collections::Bound","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroU8","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::cell::RefCell","std::sync::Mutex","std::num::NonZeroU128","std::sync::Arc","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::option::Option","std::net::SocketAddrV4","std::boxed::Box","std::ffi::CString","std::num::NonZeroI128","std::result::Result","std::path::PathBuf","std::num::NonZeroIsize","std::num::NonZeroI32","std::time::SystemTime"],"G":["std::time::SystemTime","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::cell::RefCell","std::rc::Rc","std::net::SocketAddrV4","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::borrow::Cow","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::num::NonZeroI32","std::boxed::Box","std::num::NonZeroIsize","std::collections::HashMap","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::sync::RwLock","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::ops::Range","std::collections::VecDeque","std::net::Ipv4Addr","std::num::NonZeroU32","std::num::NonZeroU64","std::cell::Cell","std::time::Duration","std::net::SocketAddr","std::sync::Arc","std::string::String","std::path::PathBuf","std::ops::RangeInclusive","std::num::NonZeroI8","std::collections::HashSet","std::sync::Mutex","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::net::SocketAddrV6","std::net::Ipv6Addr","std::vec::Vec","std::net::IpAddr","std::result::Result","std::sync::atomic::AtomicI16","std::ffi::CString","std::num::NonZeroUsize","std::collections::Bound","std::sync::atomic::AtomicU8","std::option::Option"],"H":["std::collections::BinaryHeap","std::path::PathBuf","std::ops::RangeInclusive","std::rc::Rc","std::result::Result","std::boxed::Box","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::collections::BTreeMap","std::time::Duration","std::collections::VecDeque","std::net::Ipv6Addr","std::net::SocketAddr","std::time::SystemTime","std::sync::RwLock","std::num::NonZeroU64","std::borrow::Cow","std::option::Option","std::sync::atomic::AtomicI32","std::cell::Cell","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::num::NonZeroI32","std::num::NonZeroIsize","std::num::NonZeroU16","std::cell::RefCell","std::collections::HashSet","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::vec::Vec","std::collections::BTreeSet","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::ops::Range","std::num::NonZeroUsize","std::num::NonZeroU128","std::num::NonZeroU32","std::sync::Mutex","std::collections::HashMap","std::net::SocketAddrV4","std::sync::Arc","std::sync::atomic::AtomicUsize","std::collections::Bound","std::marker::PhantomData","std::num::NonZeroI128","std::string::String","std::ffi::CString","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::net::SocketAddrV6"],"I":["std::collections::Bound","std::string::String","std::result::Result","std::num::NonZeroU64","std::boxed::Box","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::net::Ipv6Addr","std::net::Ipv4Addr","std::num::NonZeroI128","std::time::SystemTime","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::vec::Vec","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::num::NonZeroI8","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::time::Duration","std::net::SocketAddrV6","std::collections::BTreeMap","std::sync::Arc","std::net::SocketAddrV4","std::num::NonZeroU32","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::option::Option","std::sync::Mutex","std::cell::RefCell","std::ffi::CString","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::collections::HashMap","std::num::NonZeroU128","std::ops::RangeInclusive","std::collections::BTreeSet","std::net::SocketAddr","std::rc::Rc","std::num::NonZeroU16","std::ops::Range","std::collections::BinaryHeap","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::cell::Cell","std::collections::HashSet","std::net::IpAddr","std::borrow::Cow","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroI64"],"J":["std::num::NonZeroU64","std::rc::Rc","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::cell::RefCell","std::collections::Bound","std::num::NonZeroU32","std::collections::BTreeMap","std::net::SocketAddr","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::ops::Range","std::net::IpAddr","std::net::Ipv4Addr","std::time::SystemTime","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::net::Ipv6Addr","std::collections::HashSet","std::num::NonZeroU16","std::ffi::CString","std::sync::RwLock","std::string::String","std::net::SocketAddrV6","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::result::Result","std::sync::Arc","std::borrow::Cow","std::vec::Vec","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::path::PathBuf","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::num::NonZeroU8","std::collections::HashMap","std::marker::PhantomData","std::num::NonZeroU128","std::cell::Cell","std::option::Option","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::sync::Mutex","std::boxed::Box","std::collections::VecDeque","std::time::Duration","std::num::NonZeroUsize","std::num::NonZeroI64"],"K":["std::net::SocketAddrV4","std::num::NonZeroI32","std::sync::RwLock","std::net::Ipv6Addr","std::net::Ipv4Addr","std::vec::Vec","std::collections::BTreeSet","std::rc::Rc","std::sync::atomic::AtomicIsize","std::string::String","std::net::IpAddr","std::num::NonZeroI8","std::sync::Arc","std::sync::atomic::AtomicI64","std::path::PathBuf","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::borrow::Cow","std::num::NonZeroUsize","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::num::NonZeroU16","std::collections::BinaryHeap","std::collections::HashMap","std::collections::Bound","std::time::Duration","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::cell::RefCell","std::num::NonZeroU32","std::cell::Cell","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::ops::Range","std::collections::BTreeMap","std::boxed::Box","std::sync::Mutex","std::num::NonZeroU64","std::num::NonZeroU128","std::num::NonZeroI16","std::net::SocketAddr","std::num::NonZeroI128","std::collections::HashSet","std::ffi::CString","std::time::SystemTime","std::result::Result"],"L":["std::collections::VecDeque","std::net::IpAddr","std::sync::atomic::AtomicU32","std::sync::Arc","std::num::NonZeroI128","std::option::Option","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::rc::Rc","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::boxed::Box","std::collections::HashMap","std::path::PathBuf","std::num::NonZeroU32","std::net::Ipv6Addr","std::borrow::Cow","std::ops::Range","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::num::NonZeroI32","std::collections::Bound","std::sync::atomic::AtomicI32","std::sync::RwLock","std::time::Duration","std::cell::Cell","std::result::Result","std::marker::PhantomData","std::num::NonZeroU128","std::collections::BTreeSet","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::sync::Mutex","std::num::NonZeroUsize","std::vec::Vec","std::num::NonZeroI8","std::num::NonZeroU8","std::cell::RefCell","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::net::SocketAddrV4","std::num::NonZeroI16","std::time::SystemTime","std::string::String","std::ffi::CString","std::num::NonZeroIsize"],"M":["std::num::NonZeroU32","std::num::NonZeroI16","std::num::NonZeroU64","std::ops::Range","std::sync::Mutex","std::option::Option","std::num::NonZeroU128","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::num::NonZeroI128","std::string::String","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::rc::Rc","std::sync::Arc","std::net::Ipv4Addr","std::num::NonZeroU8","std::vec::Vec","std::net::IpAddr","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::borrow::Cow","std::num::NonZeroI32","std::time::SystemTime","std::collections::BTreeMap","std::sync::RwLock","std::num::NonZeroUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::collections::Bound","std::num::NonZeroU16","std::marker::PhantomData","std::boxed::Box","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroIsize","std::collections::HashSet","std::collections::VecDeque","std::ffi::CString","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::net::SocketAddrV6","std::result::Result","std::collections::HashMap","std::sync::atomic::AtomicI8","std::time::Duration","std::sync::atomic::AtomicI32","std::cell::Cell","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::sync::atomic::AtomicU64"],"N":["std::collections::HashSet","std::sync::atomic::AtomicUsize","std::sync::Arc","std::sync::Mutex","std::num::NonZeroI32","std::time::SystemTime","std::num::NonZeroU32","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::num::NonZeroI128","std::result::Result","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::ops::RangeInclusive","std::boxed::Box","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::net::IpAddr","std::cell::RefCell","std::net::SocketAddr","std::cell::Cell","std::net::SocketAddrV4","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::net::SocketAddrV6","std::num::NonZeroI8","std::path::PathBuf","std::collections::BinaryHeap","std::sync::RwLock","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::vec::Vec","std::collections::BTreeMap","std::marker::PhantomData","std::ops::Range","std::sync::atomic::AtomicI8","std::string::String","std::net::Ipv6Addr","std::collections::HashMap","std::time::Duration","std::rc::Rc","std::option::Option","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::collections::Bound","std::ffi::CString"]},"std::borrow::Cow":{"B":["std::ffi::CStr","<T as std::borrow::ToOwned>","std::path::Path","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU16","std::string::String","std::num::NonZeroI32","std::num::NonZeroI16","std::net::SocketAddrV4","std::net::Ipv4Addr","std::num::NonZeroU64","std::num::NonZeroI64","std::ffi::CString","std::num::NonZeroUsize","std::time::SystemTime","std::num::NonZeroIsize","std::path::PathBuf","std::num::NonZeroU128","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroI8","std::net::SocketAddrV6","std::net::IpAddr","std::sync::Arc","std::cell::RefCell","std::marker::PhantomData","std::time::Duration","std::net::SocketAddr","std::cell::Cell"],"V":["std::num::NonZeroU64","std::collections::Bound","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroI64","std::time::Duration","std::num::NonZeroI128","std::collections::HashMap","std::cell::RefCell","std::boxed::Box","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::rc::Rc","std::ops::Range","std::collections::BTreeMap","std::sync::RwLock","std::net::Ipv4Addr","std::string::String","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::num::NonZeroU8","std::net::SocketAddrV6","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::result::Result","std::sync::atomic::AtomicIsize","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::cell::Cell","std::net::SocketAddr","std::collections::BinaryHeap","std::num::NonZeroU16","std::num::NonZeroIsize","std::option::Option","std::sync::atomic::AtomicU64","std::collections::HashSet","std::ops::RangeInclusive","std::path::PathBuf","std::borrow::Cow","std::collections::VecDeque","std::num::NonZeroI32","std::net::IpAddr","std::sync::atomic::AtomicBool","std::vec::Vec","std::time::SystemTime","std::num::NonZeroI8","std::sync::Mutex"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::net::SocketAddrV6","std::num::NonZeroIsize","std::num::NonZeroI8","std::num::NonZeroU64","std::net::Ipv6Addr","std::net::SocketAddrV4","std::string::String","std::num::NonZeroI32","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroI64","std::num::NonZeroUsize","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroU16","std::rc::Rc","std::sync::Arc","std::option::Option","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroI128"]},"std::collections::BinaryHeap":{"T":["std::marker::PhantomData","std::sync::Arc","std::cell::RefCell","std::cell::Cell","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroU16","std::num::NonZeroU128","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroIsize","std::net::Ipv6Addr","std::net::IpAddr","std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroI64","std::option::Option","std::ffi::CString","std::path::PathBuf","std::time::SystemTime","std::num::NonZeroI16","std::net::SocketAddr","std::time::Duration","std::rc::Rc","std::num::NonZeroI8"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::collections::BTreeMap","std::num::NonZeroU16","std::time::Duration","std::rc::Rc","std::num::NonZeroU64","std::cell::RefCell","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::boxed::Box","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroU128","std::sync::RwLock","std::net::IpAddr","std::borrow::Cow","std::collections::Bound","std::num::NonZeroI32","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroU32","std::num::NonZeroIsize","std::num::NonZeroI8","std::string::String","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::cell::Cell","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::vec::Vec","std::collections::HashMap","std::result::Result","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::num::NonZeroI16","std::ops::Range","std::num::NonZeroUsize","std::path::PathBuf","std::option::Option","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::sync::Arc","std::net::Ipv6Addr","std::sync::Mutex","std::collections::HashSet","std::ops::RangeInclusive"]},"std::collections::HashMap":{"K":["std::string::String","std::option::Option","std::num::NonZeroI64","std::num::NonZeroI16","std::num::NonZeroU16","std::net::Ipv6Addr","std::num::NonZeroU32","std::marker::PhantomData","std::num::NonZeroU128","std::num::NonZeroI32","std::path::PathBuf","std::collections::Bound","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroUsize","std::rc::Rc","std::num::NonZeroU8","std::net::SocketAddr","std::num::NonZeroIsize","std::net::IpAddr"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::cell::Cell","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::ffi::CString","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::sync::Arc","std::net::SocketAddrV6","std::string::String","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::rc::Rc","std::num::NonZeroU8","std::net::SocketAddrV4","std::cell::RefCell","std::net::Ipv4Addr","std::time::Duration","std::ops::RangeInclusive","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroI64","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::collections::BinaryHeap","std::num::NonZeroIsize","std::collections::HashMap","std::net::IpAddr","std::boxed::Box","std::option::Option","std::num::NonZeroU128","std::num::NonZeroI8","std::borrow::Cow","std::result::Result","std::time::SystemTime","std::path::PathBuf","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::sync::RwLock","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::ops::Range","std::num::NonZeroI32","std::marker::PhantomData","std::vec::Vec","std::collections::Bound","std::sync::Mutex"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU16","std::num::NonZeroUsize","std::num::NonZeroU8","std::net::SocketAddrV6","std::num::NonZeroI32","std::rc::Rc","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroI128","std::time::Duration","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroI8","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroU64","std::option::Option","std::num::NonZeroU32","std::time::SystemTime","std::collections::Bound"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::net::SocketAddrV4","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::time::SystemTime","std::vec::Vec","std::collections::Bound","std::sync::atomic::AtomicU64","std::collections::HashMap","std::sync::Mutex","std::sync::atomic::AtomicI8","std::option::Option","std::num::NonZeroU64","std::num::NonZeroI64","std::rc::Rc","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::num::NonZeroI128","std::num::NonZeroI16","std::boxed::Box","std::collections::HashSet","std::net::SocketAddrV6","std::path::PathBuf","std::num::NonZeroI8","std::net::IpAddr","std::result::Result","std::ops::Range","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::BTreeSet","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::ffi::CString","std::sync::RwLock","std::cell::Cell","std::cell::RefCell","std::net::SocketAddr","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::num::NonZeroU128","std::net::Ipv4Addr","std::num::NonZeroU32","std::time::Duration","std::collections::BTreeMap","std::borrow::Cow","std::string::String","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::time::SystemTime","std::num::NonZeroU64","std::sync::RwLock","std::time::Duration","std::collections::Bound","std::option::Option","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::result::Result","std::num::NonZeroI128","std::ffi::CString","std::string::String","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::collections::HashSet","std::sync::Arc","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroIsize","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::num::NonZeroUsize","std::collections::BTreeMap","std::net::IpAddr","std::num::NonZeroI8","std::path::PathBuf","std::boxed::Box","std::borrow::Cow","std::cell::Cell","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::rc::Rc","std::net::SocketAddr","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::cell::RefCell","std::collections::HashMap","std::net::Ipv4Addr","std::net::SocketAddrV6","std::ops::Range","std::num::NonZeroU128","std::vec::Vec","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::num::NonZeroI32","std::sync::Mutex"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::boxed::Box","std::net::SocketAddr","std::collections::BTreeSet","std::collections::HashMap","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::net::Ipv4Addr","std::collections::VecDeque","std::string::String","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::ffi::CString","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::option::Option","std::ops::Range","std::marker::PhantomData","std::sync::Mutex","std::rc::Rc","std::net::SocketAddrV4","std::cell::Cell","std::vec::Vec","std::sync::Arc","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroU8","std::collections::HashSet","std::path::PathBuf","std::collections::BTreeMap","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::collections::Bound","std::net::IpAddr","std::result::Result","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::borrow::Cow","std::time::Duration","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::sync::atomic::AtomicU32","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroU16","std::sync::atomic::AtomicIsize"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::result::Result","std::collections::HashSet","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroU32","std::cell::Cell","std::net::IpAddr","std::sync::atomic::AtomicU8","std::ffi::CString","std::num::NonZeroI32","std::collections::BinaryHeap","std::net::SocketAddr","std::num::NonZeroI128","std::ops::RangeInclusive","std::num::NonZeroU128","std::sync::RwLock","std::ops::Range","std::cell::RefCell","std::collections::BTreeSet","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::vec::Vec","std::collections::VecDeque","std::num::NonZeroU64","std::collections::HashMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::collections::Bound","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::collections::BTreeMap","std::borrow::Cow","std::sync::Mutex","std::marker::PhantomData","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::rc::Rc","std::sync::atomic::AtomicBool","std::sync::Arc","std::net::SocketAddrV4","std::time::Duration","std::string::String","std::num::NonZeroU16","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroI8","std::num::NonZeroU8","std::boxed::Box","std::num::NonZeroUsize","std::option::Option"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::borrow_decode(p0);
+<(A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::decode":{"A":["de::Decode","std::marker::Sized"],"B":["std::marker::Sized","de::Decode"],"C":["std::marker::Sized","de::Decode"],"D":["std::marker::Sized","de::Decode"],"DE":["de::Decoder","std::marker::Sized"],"E":["std::marker::Sized","de::Decode"],"F":["std::marker::Sized","de::Decode"],"G":["std::marker::Sized","de::Decode"],"H":["de::Decode","std::marker::Sized"],"I":["de::Decode","std::marker::Sized"],"J":["de::Decode","std::marker::Sized"],"K":["de::Decode","std::marker::Sized"],"L":["std::marker::Sized","de::Decode"],"M":["std::marker::Sized","de::Decode"],"N":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["de::Decode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord","enc::Encode"],"V":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["std::cmp::Ord","de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::cmp::Ord","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::Bound":{"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::hash::Hash","std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode","std::cmp::Eq"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["std::hash::Hash","de::BorrowDecode","enc::Encode","std::marker::Sized","std::cmp::Eq","de::Decode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","std::clone::impls::<impl std::clone::Clone for *const T>","config::Fixint","config::NoLimit","config::Limit","config::Varint","config::BigEndian","config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::decode":{"A":["std::num::NonZeroU32","std::collections::VecDeque","std::vec::Vec","std::collections::HashSet","std::ops::Range","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::time::SystemTime","std::ops::RangeInclusive","std::time::Duration","std::cell::Cell","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::collections::BTreeMap","std::net::IpAddr","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::rc::Rc","std::collections::BTreeSet","std::num::NonZeroU8","std::boxed::Box","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::result::Result","std::collections::Bound","std::num::NonZeroU64","std::num::NonZeroU128","std::path::PathBuf","std::cell::RefCell","std::sync::Mutex","std::sync::RwLock","std::num::NonZeroI16","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::sync::Arc","std::borrow::Cow","std::num::NonZeroUsize","std::ffi::CString","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::option::Option","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::num::NonZeroI8","std::string::String","std::marker::PhantomData","std::net::SocketAddrV4","std::collections::HashMap","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::num::NonZeroI32"],"B":["std::collections::HashSet","std::num::NonZeroU128","std::num::NonZeroU64","std::cell::Cell","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::net::Ipv4Addr","std::collections::BTreeMap","std::num::NonZeroIsize","std::collections::BTreeSet","std::time::SystemTime","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::result::Result","std::string::String","std::collections::HashMap","std::sync::atomic::AtomicU32","std::ops::Range","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::collections::Bound","std::collections::VecDeque","std::ffi::CString","std::num::NonZeroI32","std::borrow::Cow","std::collections::BinaryHeap","std::net::SocketAddrV6","std::num::NonZeroI16","std::net::SocketAddr","std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroI8","std::net::Ipv6Addr","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::vec::Vec","std::path::PathBuf","std::time::Duration","std::net::IpAddr","std::sync::atomic::AtomicI16","std::rc::Rc","std::num::NonZeroU32","std::sync::Arc","std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::sync::RwLock"],"C":["std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroI128","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::sync::Mutex","std::collections::HashMap","std::net::IpAddr","std::num::NonZeroU16","std::net::Ipv6Addr","std::cell::Cell","std::sync::atomic::AtomicBool","std::rc::Rc","std::sync::atomic::AtomicU64","std::option::Option","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::num::NonZeroU32","std::ffi::CString","std::ops::Range","std::collections::VecDeque","std::borrow::Cow","std::vec::Vec","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::num::NonZeroU64","std::num::NonZeroU8","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::Arc","std::num::NonZeroI16","std::collections::HashSet","std::collections::BinaryHeap","std::boxed::Box","std::path::PathBuf","std::net::SocketAddr","std::result::Result","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::num::NonZeroI32","std::collections::Bound","std::num::NonZeroIsize","std::string::String","std::num::NonZeroU128","std::time::SystemTime","std::sync::RwLock","std::time::Duration"],"D":["std::collections::Bound","std::sync::atomic::AtomicI16","std::result::Result","std::rc::Rc","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::ops::Range","std::collections::BTreeMap","std::borrow::Cow","std::net::Ipv6Addr","std::collections::HashMap","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroI8","std::boxed::Box","std::net::IpAddr","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::sync::Mutex","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::time::Duration","std::sync::Arc","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::num::NonZeroI32","std::path::PathBuf","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::num::NonZeroU32","std::collections::BinaryHeap","std::num::NonZeroI16","std::ops::RangeInclusive","std::vec::Vec","std::cell::RefCell","std::cell::Cell","std::sync::RwLock","std::collections::HashSet","std::option::Option","std::string::String","std::ffi::CString","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::net::SocketAddr","std::time::SystemTime","std::sync::atomic::AtomicI64","std::num::NonZeroIsize"],"DE":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"E":["std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::cell::RefCell","std::option::Option","std::num::NonZeroI8","std::collections::VecDeque","std::time::SystemTime","std::num::NonZeroU16","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroU128","std::rc::Rc","std::net::SocketAddr","std::sync::RwLock","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::collections::Bound","std::path::PathBuf","std::borrow::Cow","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::net::SocketAddrV6","std::boxed::Box","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::collections::BTreeMap","std::num::NonZeroIsize","std::num::NonZeroI32","std::cell::Cell","std::result::Result","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::num::NonZeroU8","std::time::Duration","std::collections::HashSet","std::vec::Vec","std::string::String","std::ops::Range","std::sync::Arc","std::net::IpAddr","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::sync::Mutex","std::ffi::CString","std::collections::HashMap","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::num::NonZeroU64","std::sync::atomic::AtomicUsize"],"F":["std::collections::BinaryHeap","std::sync::Mutex","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::ffi::CString","std::cell::RefCell","std::num::NonZeroI64","std::option::Option","std::num::NonZeroI16","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::collections::HashSet","std::num::NonZeroI32","std::marker::PhantomData","std::ops::Range","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::result::Result","std::sync::atomic::AtomicU16","std::string::String","std::net::SocketAddr","std::num::NonZeroI128","std::path::PathBuf","std::collections::Bound","std::net::Ipv4Addr","std::sync::Arc","std::collections::HashMap","std::sync::RwLock","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::ops::RangeInclusive","std::rc::Rc","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::time::SystemTime","std::sync::atomic::AtomicU8","std::vec::Vec","std::boxed::Box","std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroU128","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::cell::Cell","std::borrow::Cow","std::num::NonZeroU16"],"G":["std::rc::Rc","std::borrow::Cow","std::ops::RangeInclusive","std::sync::RwLock","std::collections::HashMap","std::num::NonZeroU16","std::ffi::CString","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::cell::RefCell","std::sync::Mutex","std::collections::BTreeSet","std::net::SocketAddrV6","std::collections::Bound","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::net::SocketAddr","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::net::IpAddr","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::collections::VecDeque","std::result::Result","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::net::Ipv6Addr","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::vec::Vec","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::num::NonZeroUsize","std::sync::Arc","std::ops::Range","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::collections::BinaryHeap","std::num::NonZeroI16","std::option::Option","std::boxed::Box","std::time::SystemTime","std::num::NonZeroU64","std::time::Duration","std::num::NonZeroU128","std::string::String","std::cell::Cell","std::net::SocketAddrV4"],"H":["std::num::NonZeroIsize","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::collections::BinaryHeap","std::collections::BTreeMap","std::num::NonZeroI64","std::boxed::Box","std::time::Duration","std::time::SystemTime","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::rc::Rc","std::cell::Cell","std::sync::atomic::AtomicU16","std::string::String","std::sync::atomic::AtomicI32","std::ops::Range","std::num::NonZeroU8","std::borrow::Cow","std::sync::atomic::AtomicI64","std::collections::Bound","std::sync::RwLock","std::net::IpAddr","std::result::Result","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroU64","std::net::Ipv6Addr","std::num::NonZeroU32","std::collections::BTreeSet","std::net::SocketAddr","std::sync::Mutex","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::option::Option","std::sync::Arc","std::cell::RefCell","std::sync::atomic::AtomicU8","std::vec::Vec","std::num::NonZeroI8","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::ffi::CString","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::net::SocketAddrV4","std::path::PathBuf","std::collections::VecDeque","std::net::Ipv4Addr","std::net::SocketAddrV6"],"I":["std::collections::BTreeMap","std::num::NonZeroU16","std::num::NonZeroU8","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::collections::BTreeSet","std::vec::Vec","std::net::IpAddr","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::num::NonZeroI16","std::num::NonZeroI8","std::net::SocketAddrV4","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::ops::Range","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::sync::RwLock","std::time::SystemTime","std::num::NonZeroU64","std::option::Option","std::collections::Bound","std::num::NonZeroIsize","std::string::String","std::path::PathBuf","std::collections::HashMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::cell::Cell","std::rc::Rc","std::sync::Arc","std::sync::atomic::AtomicIsize","std::ffi::CString","std::collections::HashSet","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroUsize","std::boxed::Box","std::sync::Mutex","std::marker::PhantomData","std::result::Result","std::num::NonZeroU128","std::net::Ipv6Addr","std::collections::BinaryHeap","std::collections::VecDeque","std::time::Duration","std::sync::atomic::AtomicU8","std::cell::RefCell"],"J":["std::sync::Arc","std::sync::Mutex","std::cell::RefCell","std::rc::Rc","std::sync::atomic::AtomicBool","std::cell::Cell","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::string::String","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::net::IpAddr","std::option::Option","std::collections::HashSet","std::num::NonZeroI32","std::marker::PhantomData","std::path::PathBuf","std::time::Duration","std::sync::atomic::AtomicI64","std::vec::Vec","std::num::NonZeroU64","std::net::Ipv6Addr","std::borrow::Cow","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::time::SystemTime","std::ops::Range","std::sync::RwLock","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::ffi::CString","std::net::Ipv4Addr","std::num::NonZeroI16","std::ops::RangeInclusive","std::boxed::Box","std::num::NonZeroI8","std::collections::HashMap","std::collections::Bound","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::num::NonZeroI64","std::result::Result","std::num::NonZeroI128","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::num::NonZeroU8","std::net::SocketAddrV6","std::collections::VecDeque","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::collections::BTreeSet","std::sync::atomic::AtomicU32"],"K":["std::boxed::Box","std::ffi::CString","std::num::NonZeroU64","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::sync::Arc","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroU16","std::net::SocketAddrV6","std::vec::Vec","std::net::SocketAddr","std::time::Duration","std::num::NonZeroIsize","std::sync::RwLock","std::option::Option","std::collections::HashSet","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::collections::Bound","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::ops::Range","std::sync::Mutex","std::sync::atomic::AtomicI64","std::cell::Cell","std::collections::BTreeSet","std::cell::RefCell","std::sync::atomic::AtomicU64","std::collections::HashMap","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::result::Result","std::sync::atomic::AtomicU32","std::time::SystemTime","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::path::PathBuf","std::collections::BinaryHeap","std::num::NonZeroU8","std::net::Ipv4Addr","std::ops::RangeInclusive","std::borrow::Cow","std::num::NonZeroU128","std::collections::BTreeMap","std::string::String","std::net::SocketAddrV4","std::rc::Rc"],"L":["std::net::SocketAddr","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::collections::Bound","std::cell::Cell","std::marker::PhantomData","std::time::Duration","std::ops::RangeInclusive","std::string::String","std::num::NonZeroI16","std::ops::Range","std::time::SystemTime","std::ffi::CString","std::num::NonZeroU8","std::num::NonZeroU64","std::collections::VecDeque","std::collections::HashSet","std::boxed::Box","std::sync::Mutex","std::num::NonZeroUsize","std::path::PathBuf","std::sync::atomic::AtomicBool","std::collections::HashMap","std::num::NonZeroI64","std::num::NonZeroIsize","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::option::Option","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::result::Result","std::sync::atomic::AtomicU64","std::net::IpAddr","std::net::SocketAddrV4","std::sync::Arc","std::borrow::Cow","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroI32","std::vec::Vec","std::collections::BTreeMap","std::net::Ipv6Addr","std::net::Ipv4Addr","std::num::NonZeroI128","std::num::NonZeroU128","std::sync::RwLock","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::num::NonZeroI8","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::rc::Rc"],"M":["std::collections::VecDeque","std::result::Result","std::sync::atomic::AtomicI8","std::boxed::Box","std::collections::HashSet","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::num::NonZeroU64","std::num::NonZeroI32","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::net::IpAddr","std::collections::BinaryHeap","std::collections::BTreeSet","std::rc::Rc","std::sync::RwLock","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::net::Ipv4Addr","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::borrow::Cow","std::collections::HashMap","std::collections::Bound","std::ops::Range","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::num::NonZeroU16","std::sync::Mutex","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::string::String","std::vec::Vec","std::sync::Arc","std::cell::Cell","std::net::SocketAddrV6","std::time::Duration","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::ffi::CString","std::option::Option","std::num::NonZeroU8","std::time::SystemTime","std::cell::RefCell","std::sync::atomic::AtomicU8"],"N":["std::net::SocketAddrV4","std::collections::HashMap","std::num::NonZeroU64","std::net::Ipv6Addr","std::num::NonZeroI64","std::collections::BinaryHeap","std::boxed::Box","std::collections::VecDeque","std::path::PathBuf","std::sync::atomic::AtomicU16","std::collections::Bound","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::cell::RefCell","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::num::NonZeroI32","std::net::Ipv4Addr","std::result::Result","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::sync::Mutex","std::vec::Vec","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::ops::Range","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::ffi::CString","std::collections::HashSet","std::sync::atomic::AtomicI16","std::rc::Rc","std::sync::Arc","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::borrow::Cow","std::collections::BTreeSet","std::sync::RwLock","std::sync::atomic::AtomicU32","std::string::String","std::num::NonZeroI8","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::time::Duration"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::CStr","std::ffi::OsStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::time::SystemTime","std::num::NonZeroU16","std::ffi::CString","std::num::NonZeroI16","std::num::NonZeroU32","std::net::SocketAddrV6","std::marker::PhantomData","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroI128","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroIsize","std::cell::RefCell","std::num::NonZeroI64","std::cell::Cell","std::option::Option","std::num::NonZeroU128","std::num::NonZeroUsize","std::path::PathBuf","std::net::SocketAddrV4","std::time::Duration","std::string::String","std::net::Ipv6Addr","std::net::Ipv4Addr"],"V":["std::ffi::CString","std::num::NonZeroU8","std::net::SocketAddrV4","std::collections::BTreeMap","std::result::Result","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::num::NonZeroUsize","std::sync::Arc","std::sync::Mutex","std::num::NonZeroU128","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::time::SystemTime","std::net::IpAddr","std::sync::atomic::AtomicBool","std::collections::HashSet","std::num::NonZeroI32","std::cell::RefCell","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::num::NonZeroI16","std::net::SocketAddrV6","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::ops::Range","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::ops::RangeInclusive","std::net::Ipv4Addr","std::boxed::Box","std::collections::Bound","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::rc::Rc","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::vec::Vec","std::cell::Cell","std::sync::atomic::AtomicI16","std::collections::HashMap","std::string::String","std::time::Duration","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::path::PathBuf","std::collections::BTreeSet","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::option::Option","std::sync::RwLock"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI8","std::ffi::CString","std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroI128","std::num::NonZeroUsize","std::net::IpAddr","std::num::NonZeroU16","std::time::Duration","std::net::Ipv4Addr","std::string::String","std::net::SocketAddrV4","std::sync::Arc","std::rc::Rc","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroU128","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroU64"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU8","std::net::IpAddr","std::path::PathBuf","std::net::Ipv6Addr","std::num::NonZeroUsize","std::time::SystemTime","std::num::NonZeroU128","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroU16","std::ffi::CString","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroU32","std::cell::RefCell","std::num::NonZeroIsize","std::option::Option","std::num::NonZeroU64","std::num::NonZeroI32","std::num::NonZeroI16","std::sync::Arc","std::num::NonZeroI64","std::net::SocketAddrV6"]},"std::collections::Bound":{"T":["std::net::SocketAddr","std::collections::BinaryHeap","std::net::SocketAddrV4","std::cell::Cell","std::num::NonZeroU8","std::collections::HashSet","std::sync::Mutex","std::collections::Bound","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::vec::Vec","std::sync::atomic::AtomicU64","std::ffi::CString","std::string::String","std::marker::PhantomData","std::num::NonZeroI128","std::num::NonZeroIsize","std::boxed::Box","std::num::NonZeroI64","std::sync::Arc","std::ops::RangeInclusive","std::net::SocketAddrV6","std::time::SystemTime","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::num::NonZeroU64","std::result::Result","std::cell::RefCell","std::borrow::Cow","std::net::IpAddr","std::collections::BTreeSet","std::collections::BTreeMap","std::num::NonZeroI32","std::num::NonZeroUsize","std::ops::Range","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::collections::HashMap","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::rc::Rc","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::option::Option","std::sync::RwLock","std::sync::atomic::AtomicI64","std::time::Duration"]},"std::collections::HashMap":{"K":["std::path::PathBuf","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroI128","std::option::Option","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroU64","std::num::NonZeroIsize","std::marker::PhantomData","std::num::NonZeroU32","std::net::SocketAddrV4"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::num::NonZeroUsize","std::net::Ipv4Addr","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::sync::RwLock","std::result::Result","std::net::SocketAddrV4","std::collections::Bound","std::sync::atomic::AtomicI64","std::option::Option","std::cell::Cell","std::sync::Arc","std::boxed::Box","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::ffi::CString","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::num::NonZeroU8","std::net::Ipv6Addr","std::collections::VecDeque","std::num::NonZeroI8","std::time::Duration","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::net::IpAddr","std::collections::BinaryHeap","std::marker::PhantomData","std::collections::HashMap","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::cell::RefCell","std::rc::Rc","std::collections::HashSet","std::num::NonZeroU128","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::borrow::Cow","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::ops::Range","std::sync::atomic::AtomicI16","std::string::String","std::vec::Vec","std::ops::RangeInclusive","std::sync::Mutex"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU128","std::option::Option","std::net::Ipv4Addr","std::collections::Bound","std::num::NonZeroI128","std::rc::Rc","std::string::String","std::num::NonZeroU8","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroU64","std::path::PathBuf","std::sync::Arc","std::time::SystemTime","std::num::NonZeroI8","std::time::Duration","std::num::NonZeroU32"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::collections::HashMap","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::num::NonZeroU8","std::string::String","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::vec::Vec","std::cell::Cell","std::collections::BinaryHeap","std::ffi::CString","std::borrow::Cow","std::collections::BTreeSet","std::net::Ipv6Addr","std::option::Option","std::sync::Arc","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroU32","std::path::PathBuf","std::net::IpAddr","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::num::NonZeroU16","std::rc::Rc","std::net::SocketAddrV6","std::collections::VecDeque","std::sync::RwLock","std::sync::atomic::AtomicU8","std::time::Duration","std::num::NonZeroUsize","std::time::SystemTime","std::num::NonZeroU64","std::cell::RefCell","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::sync::Mutex","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::boxed::Box","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::net::SocketAddrV4","std::collections::Bound","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::result::Result","std::ops::Range","std::net::Ipv4Addr","std::collections::HashSet","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::atomic::AtomicI64"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::Ipv4Addr","std::cell::Cell","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::sync::RwLock","std::sync::atomic::AtomicU16","std::result::Result","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::net::IpAddr","std::vec::Vec","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::collections::VecDeque","std::num::NonZeroI64","std::sync::Mutex","std::collections::BTreeMap","std::time::SystemTime","std::borrow::Cow","std::num::NonZeroI32","std::net::Ipv6Addr","std::num::NonZeroU8","std::collections::HashSet","std::option::Option","std::num::NonZeroI16","std::collections::BTreeSet","std::rc::Rc","std::time::Duration","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::ops::Range","std::collections::Bound","std::num::NonZeroIsize","std::path::PathBuf","std::collections::BinaryHeap","std::num::NonZeroUsize","std::sync::Arc","std::net::SocketAddrV4","std::collections::HashMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::boxed::Box","std::cell::RefCell","std::ffi::CString","std::sync::atomic::AtomicI8","std::string::String","std::sync::atomic::AtomicI32","std::ops::RangeInclusive"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::ops::Range","std::ops::RangeInclusive","std::collections::VecDeque","std::collections::Bound","std::option::Option","std::borrow::Cow","std::collections::BTreeSet","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::result::Result","std::num::NonZeroI128","std::collections::HashSet","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::string::String","std::net::IpAddr","std::path::PathBuf","std::boxed::Box","std::sync::Mutex","std::collections::HashMap","std::net::SocketAddrV6","std::cell::RefCell","std::collections::BinaryHeap","std::cell::Cell","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::marker::PhantomData","std::ffi::CString","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::sync::Arc","std::time::SystemTime","std::num::NonZeroI64","std::num::NonZeroU8","std::num::NonZeroUsize","std::vec::Vec","std::sync::RwLock","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::num::NonZeroU64"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::sync::Arc","std::ops::Range","std::num::NonZeroI64","std::boxed::Box","std::sync::Mutex","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::cell::RefCell","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroI128","std::net::Ipv4Addr","std::rc::Rc","std::sync::atomic::AtomicI16","std::string::String","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::collections::Bound","std::borrow::Cow","std::collections::BTreeSet","std::net::SocketAddrV6","std::num::NonZeroUsize","std::num::NonZeroU16","std::num::NonZeroI32","std::net::SocketAddr","std::path::PathBuf","std::result::Result","std::num::NonZeroI8","std::num::NonZeroIsize","std::num::NonZeroU8","std::net::IpAddr","std::sync::atomic::AtomicI8","std::vec::Vec","std::collections::HashSet","std::collections::VecDeque","std::ffi::CString","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::cell::Cell","std::collections::BTreeMap","std::option::Option","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::time::Duration","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::num::NonZeroI16","std::sync::RwLock","std::collections::HashMap"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::decode(p0);
+<(A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::borrow_decode":{"A":["std::marker::Sized","de::BorrowDecode"],"B":["std::marker::Sized","de::BorrowDecode"],"BD":["std::marker::Sized","de::BorrowDecoder"],"C":["std::marker::Sized","de::BorrowDecode"],"D":["de::BorrowDecode","std::marker::Sized"],"E":["de::BorrowDecode","std::marker::Sized"],"F":["std::marker::Sized","de::BorrowDecode"],"G":["std::marker::Sized","de::BorrowDecode"],"H":["std::marker::Sized","de::BorrowDecode"],"I":["de::BorrowDecode","std::marker::Sized"],"J":["std::marker::Sized","de::BorrowDecode"],"K":["de::BorrowDecode","std::marker::Sized"],"L":["std::marker::Sized","de::BorrowDecode"],"M":["std::marker::Sized","de::BorrowDecode"],"N":["de::BorrowDecode","std::marker::Sized"],"O":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord"],"V":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized","std::cmp::Ord"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["std::hash::Hash","std::cmp::Eq","de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","std::hash::Hash","de::Decode","std::cmp::Eq","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Fixint","config::Limit","config::Varint","config::LittleEndian","config::Configuration","config::BigEndian","std::clone::impls::<impl std::clone::Clone for *mut T>","config::NoLimit"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::borrow_decode":{"A":["std::collections::HashMap","std::cell::Cell","std::net::Ipv4Addr","std::net::SocketAddrV4","std::collections::BTreeMap","std::collections::Bound","std::time::Duration","std::collections::BTreeSet","std::collections::HashSet","std::vec::Vec","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::sync::Arc","std::net::IpAddr","std::string::String","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::result::Result","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::ffi::CString","std::net::SocketAddrV6","std::sync::RwLock","std::net::SocketAddr","std::num::NonZeroI64","std::cell::RefCell","std::sync::Mutex","std::num::NonZeroU16","std::borrow::Cow","std::boxed::Box","std::num::NonZeroU128","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::option::Option","std::num::NonZeroU8","std::ops::Range","std::num::NonZeroIsize","std::collections::VecDeque","std::num::NonZeroI128","std::time::SystemTime","std::collections::BinaryHeap","std::num::NonZeroU32","std::ops::RangeInclusive","std::num::NonZeroI16","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::rc::Rc"],"B":["std::sync::atomic::AtomicU16","std::sync::Mutex","std::result::Result","std::sync::Arc","std::rc::Rc","std::sync::RwLock","std::num::NonZeroI8","std::num::NonZeroU32","std::collections::HashSet","std::num::NonZeroI64","std::path::PathBuf","std::collections::BTreeSet","std::net::Ipv6Addr","std::time::Duration","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::time::SystemTime","std::net::SocketAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::net::IpAddr","std::string::String","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::ops::Range","std::cell::Cell","std::num::NonZeroU8","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::borrow::Cow","std::net::SocketAddrV6","std::net::Ipv4Addr","std::net::SocketAddrV4","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroU64","std::vec::Vec","std::num::NonZeroU128","std::collections::BTreeMap","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::boxed::Box","std::option::Option","std::num::NonZeroI128","std::cell::RefCell","std::collections::Bound","std::collections::BinaryHeap","std::collections::HashMap"],"BD":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"C":["std::num::NonZeroU16","std::num::NonZeroU128","std::collections::BTreeMap","std::num::NonZeroIsize","std::ops::Range","std::collections::VecDeque","std::net::Ipv4Addr","std::num::NonZeroU8","std::collections::HashMap","std::sync::atomic::AtomicI16","std::string::String","std::num::NonZeroU64","std::num::NonZeroI8","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::result::Result","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::rc::Rc","std::num::NonZeroI32","std::num::NonZeroI16","std::collections::Bound","std::cell::RefCell","std::collections::BTreeSet","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::option::Option","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::ffi::CString","std::path::PathBuf","std::marker::PhantomData","std::net::Ipv6Addr","std::net::IpAddr","std::cell::Cell","std::collections::HashSet","std::ops::RangeInclusive","std::sync::RwLock","std::num::NonZeroU32","std::sync::Mutex","std::net::SocketAddrV4","std::sync::Arc","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::time::Duration","std::net::SocketAddrV6","std::vec::Vec","std::sync::atomic::AtomicBool","std::time::SystemTime","std::num::NonZeroI128","std::borrow::Cow","std::boxed::Box"],"D":["std::net::SocketAddr","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::num::NonZeroU32","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::result::Result","std::sync::atomic::AtomicI8","std::string::String","std::ffi::CString","std::collections::BinaryHeap","std::marker::PhantomData","std::cell::RefCell","std::net::Ipv6Addr","std::borrow::Cow","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::collections::HashSet","std::cell::Cell","std::collections::BTreeMap","std::num::NonZeroU16","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroUsize","std::collections::VecDeque","std::ops::RangeInclusive","std::time::Duration","std::net::IpAddr","std::net::SocketAddrV4","std::sync::RwLock","std::ops::Range","std::collections::Bound","std::sync::Mutex","std::num::NonZeroI8","std::sync::Arc","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::rc::Rc","std::collections::HashMap","std::num::NonZeroU64","std::option::Option","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::num::NonZeroU128","std::time::SystemTime","std::num::NonZeroIsize","std::boxed::Box","std::sync::atomic::AtomicI64","std::vec::Vec","std::net::SocketAddrV6","std::sync::atomic::AtomicI16"],"E":["std::sync::atomic::AtomicI64","std::ops::Range","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::net::SocketAddrV6","std::marker::PhantomData","std::num::NonZeroU16","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::collections::HashSet","std::num::NonZeroI32","std::cell::RefCell","std::net::IpAddr","std::collections::BTreeSet","std::option::Option","std::time::Duration","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::num::NonZeroUsize","std::net::SocketAddr","std::collections::BTreeMap","std::num::NonZeroU8","std::num::NonZeroU64","std::sync::RwLock","std::collections::Bound","std::num::NonZeroIsize","std::sync::Mutex","std::boxed::Box","std::num::NonZeroU32","std::collections::BinaryHeap","std::time::SystemTime","std::sync::atomic::AtomicBool","std::string::String","std::sync::Arc","std::sync::atomic::AtomicI32","std::vec::Vec","std::sync::atomic::AtomicI16","std::ffi::CString","std::collections::HashMap","std::path::PathBuf","std::net::Ipv4Addr","std::rc::Rc","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::result::Result","std::net::Ipv6Addr","std::num::NonZeroI128","std::cell::Cell"],"F":["std::result::Result","std::ffi::CString","std::sync::atomic::AtomicIsize","std::option::Option","std::num::NonZeroUsize","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::cell::Cell","std::num::NonZeroIsize","std::collections::HashSet","std::num::NonZeroI8","std::net::SocketAddr","std::vec::Vec","std::collections::BTreeMap","std::ops::RangeInclusive","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::sync::Mutex","std::time::SystemTime","std::num::NonZeroU16","std::net::IpAddr","std::sync::atomic::AtomicU64","std::time::Duration","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::ops::Range","std::collections::Bound","std::marker::PhantomData","std::num::NonZeroU8","std::collections::VecDeque","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::rc::Rc","std::borrow::Cow","std::collections::BinaryHeap","std::collections::BTreeSet","std::sync::Arc","std::num::NonZeroI32","std::path::PathBuf","std::num::NonZeroU128","std::boxed::Box","std::collections::HashMap","std::net::SocketAddrV4","std::string::String","std::sync::RwLock","std::cell::RefCell","std::net::SocketAddrV6","std::sync::atomic::AtomicBool"],"G":["std::num::NonZeroI8","std::marker::PhantomData","std::num::NonZeroI16","std::num::NonZeroUsize","std::sync::RwLock","std::sync::atomic::AtomicBool","std::path::PathBuf","std::collections::BTreeSet","std::sync::Mutex","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::ops::Range","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::result::Result","std::ffi::CString","std::cell::RefCell","std::sync::atomic::AtomicU64","std::vec::Vec","std::borrow::Cow","std::rc::Rc","std::collections::VecDeque","std::collections::HashMap","std::time::Duration","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::collections::HashSet","std::ops::RangeInclusive","std::string::String","std::sync::atomic::AtomicI16","std::option::Option","std::collections::Bound","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroI128","std::sync::Arc","std::cell::Cell","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::collections::BinaryHeap","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroU64","std::num::NonZeroU128","std::boxed::Box","std::num::NonZeroIsize","std::collections::BTreeMap","std::net::SocketAddrV4"],"H":["std::net::SocketAddrV6","std::net::Ipv4Addr","std::net::Ipv6Addr","std::ops::Range","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::time::SystemTime","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::option::Option","std::num::NonZeroU64","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::time::Duration","std::string::String","std::sync::atomic::AtomicI16","std::collections::Bound","std::num::NonZeroU8","std::cell::Cell","std::num::NonZeroUsize","std::num::NonZeroI16","std::collections::VecDeque","std::ffi::CString","std::borrow::Cow","std::sync::atomic::AtomicBool","std::sync::RwLock","std::sync::Mutex","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::num::NonZeroU16","std::collections::HashMap","std::cell::RefCell","std::result::Result","std::sync::atomic::AtomicI32","std::net::IpAddr","std::num::NonZeroU32","std::collections::BinaryHeap","std::ops::RangeInclusive","std::num::NonZeroIsize","std::collections::BTreeSet","std::num::NonZeroI128","std::num::NonZeroI8","std::boxed::Box","std::net::SocketAddrV4","std::path::PathBuf","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::rc::Rc","std::vec::Vec","std::sync::atomic::AtomicI8","std::sync::Arc","std::marker::PhantomData"],"I":["std::num::NonZeroUsize","std::borrow::Cow","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::rc::Rc","std::option::Option","std::vec::Vec","std::string::String","std::collections::BTreeMap","std::num::NonZeroU32","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::cell::Cell","std::net::SocketAddr","std::net::IpAddr","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::collections::HashMap","std::net::Ipv4Addr","std::boxed::Box","std::num::NonZeroU16","std::sync::Arc","std::ffi::CString","std::net::Ipv6Addr","std::path::PathBuf","std::ops::Range","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::marker::PhantomData","std::sync::Mutex","std::cell::RefCell","std::time::Duration","std::collections::Bound","std::num::NonZeroI64","std::num::NonZeroI8","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::result::Result","std::num::NonZeroU8","std::collections::VecDeque","std::collections::HashSet","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::sync::RwLock"],"J":["std::cell::RefCell","std::option::Option","std::num::NonZeroIsize","std::num::NonZeroI8","std::rc::Rc","std::sync::Mutex","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::sync::Arc","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::collections::HashSet","std::borrow::Cow","std::result::Result","std::ops::Range","std::net::IpAddr","std::ops::RangeInclusive","std::collections::BinaryHeap","std::collections::Bound","std::num::NonZeroU32","std::net::SocketAddrV6","std::num::NonZeroU16","std::collections::VecDeque","std::time::SystemTime","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::sync::RwLock","std::vec::Vec","std::collections::HashMap","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::boxed::Box","std::net::SocketAddr","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroI128","std::num::NonZeroU64","std::string::String","std::net::SocketAddrV4","std::num::NonZeroU128","std::cell::Cell","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::ffi::CString","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::num::NonZeroU8","std::collections::BTreeSet","std::collections::BTreeMap"],"K":["std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::num::NonZeroI32","std::collections::HashSet","std::net::IpAddr","std::num::NonZeroU16","std::boxed::Box","std::num::NonZeroI16","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::option::Option","std::sync::Arc","std::ffi::CString","std::net::Ipv4Addr","std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroI128","std::sync::Mutex","std::collections::BTreeMap","std::vec::Vec","std::sync::atomic::AtomicU8","std::time::Duration","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::collections::Bound","std::net::SocketAddrV4","std::num::NonZeroUsize","std::sync::atomic::AtomicI64","std::collections::HashMap","std::borrow::Cow","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::cell::RefCell","std::path::PathBuf","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroIsize","std::rc::Rc","std::num::NonZeroU8","std::ops::Range","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::string::String","std::num::NonZeroU64","std::result::Result","std::cell::Cell","std::sync::RwLock","std::marker::PhantomData"],"L":["std::net::SocketAddr","std::sync::Mutex","std::num::NonZeroI8","std::num::NonZeroU8","std::ops::Range","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::borrow::Cow","std::num::NonZeroUsize","std::rc::Rc","std::sync::RwLock","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::time::SystemTime","std::ffi::CString","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::cell::RefCell","std::sync::atomic::AtomicI64","std::result::Result","std::cell::Cell","std::collections::BTreeMap","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicU64","std::collections::HashMap","std::num::NonZeroU16","std::ops::RangeInclusive","std::num::NonZeroI128","std::time::Duration","std::num::NonZeroIsize","std::collections::BTreeSet","std::vec::Vec","std::collections::HashSet","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::collections::Bound","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::string::String","std::sync::Arc","std::path::PathBuf","std::net::IpAddr","std::collections::VecDeque","std::boxed::Box","std::num::NonZeroU32"],"M":["std::net::Ipv6Addr","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::ffi::CString","std::time::Duration","std::num::NonZeroI128","std::ops::RangeInclusive","std::num::NonZeroU64","std::num::NonZeroI64","std::cell::Cell","std::num::NonZeroU128","std::collections::BinaryHeap","std::option::Option","std::net::SocketAddr","std::string::String","std::rc::Rc","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::collections::HashSet","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::sync::Mutex","std::num::NonZeroU32","std::collections::BTreeSet","std::net::SocketAddrV4","std::collections::HashMap","std::num::NonZeroI16","std::cell::RefCell","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::net::IpAddr","std::result::Result","std::collections::BTreeMap","std::boxed::Box","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::net::SocketAddrV6","std::vec::Vec","std::collections::Bound","std::num::NonZeroI8","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::sync::RwLock","std::ops::Range","std::marker::PhantomData","std::sync::atomic::AtomicI8"],"N":["std::num::NonZeroI128","std::net::SocketAddr","std::string::String","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::option::Option","std::collections::BTreeSet","std::num::NonZeroU128","std::net::Ipv6Addr","std::time::Duration","std::num::NonZeroU32","std::collections::BTreeMap","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::sync::Arc","std::ops::Range","std::sync::Mutex","std::num::NonZeroIsize","std::num::NonZeroU8","std::collections::Bound","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::cell::RefCell","std::result::Result","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::rc::Rc","std::num::NonZeroI8","std::ffi::CString","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::sync::atomic::AtomicBool","std::boxed::Box","std::sync::RwLock","std::time::SystemTime","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::net::IpAddr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::borrow::Cow","std::collections::VecDeque","std::collections::HashMap","std::sync::atomic::AtomicU16","std::collections::HashSet","std::ops::RangeInclusive","std::net::Ipv4Addr","std::vec::Vec","std::cell::Cell"],"O":["std::collections::Bound","std::collections::BinaryHeap","std::sync::Mutex","std::num::NonZeroI8","std::ops::Range","std::option::Option","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::borrow::Cow","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::rc::Rc","std::string::String","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::net::IpAddr","std::num::NonZeroIsize","std::boxed::Box","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::collections::VecDeque","std::ffi::CString","std::sync::RwLock","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::cell::RefCell","std::num::NonZeroI32","std::marker::PhantomData","std::collections::HashSet","std::num::NonZeroI128","std::collections::HashMap","std::net::SocketAddr","std::collections::BTreeMap","std::time::SystemTime","std::num::NonZeroUsize","std::net::SocketAddrV4","std::path::PathBuf","std::result::Result","std::time::Duration","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::cell::Cell","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::num::NonZeroU128","std::num::NonZeroU16","std::vec::Vec","std::sync::Arc","std::collections::BTreeSet","std::num::NonZeroU8","std::num::NonZeroI16","std::net::Ipv4Addr"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::sync::Arc","std::rc::Rc","std::net::Ipv6Addr","std::net::Ipv4Addr","std::cell::RefCell","std::string::String","std::option::Option","std::num::NonZeroI8","std::cell::Cell","std::time::Duration","std::num::NonZeroU16","std::num::NonZeroU64","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroI128","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroI32","std::num::NonZeroI64","std::num::NonZeroI16","std::net::IpAddr"],"V":["std::sync::atomic::AtomicI8","std::vec::Vec","std::collections::HashSet","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::ffi::CString","std::sync::atomic::AtomicI64","std::borrow::Cow","std::boxed::Box","std::net::Ipv6Addr","std::net::SocketAddrV6","std::collections::Bound","std::net::SocketAddr","std::net::Ipv4Addr","std::collections::BTreeMap","std::collections::HashMap","std::result::Result","std::string::String","std::option::Option","std::sync::Mutex","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::net::IpAddr","std::marker::PhantomData","std::time::SystemTime","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::path::PathBuf","std::cell::RefCell","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::time::Duration","std::num::NonZeroU16","std::sync::RwLock","std::cell::Cell","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::sync::Arc","std::net::SocketAddrV4","std::ops::Range","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::rc::Rc","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroUsize","std::net::IpAddr","std::net::SocketAddrV4","std::marker::PhantomData","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroI8","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroU8","std::time::SystemTime","std::option::Option","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroU64","std::num::NonZeroI32","std::rc::Rc","std::sync::Arc","std::cell::RefCell","std::num::NonZeroU32","std::time::Duration","std::string::String","std::num::NonZeroIsize"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddrV4","std::net::SocketAddrV6","std::net::Ipv4Addr","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroU16","std::net::SocketAddr","std::option::Option","std::num::NonZeroU128","std::cell::RefCell","std::num::NonZeroI32","std::net::IpAddr","std::net::Ipv6Addr","std::string::String","std::cell::Cell","std::num::NonZeroI128","std::marker::PhantomData","std::num::NonZeroU8"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::num::NonZeroU32","std::num::NonZeroI16","std::ffi::CString","std::result::Result","std::marker::PhantomData","std::net::SocketAddr","std::collections::BTreeMap","std::time::Duration","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::net::IpAddr","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::vec::Vec","std::num::NonZeroIsize","std::collections::Bound","std::collections::BinaryHeap","std::num::NonZeroUsize","std::boxed::Box","std::num::NonZeroU128","std::num::NonZeroI64","std::string::String","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::num::NonZeroU16","std::collections::HashSet","std::net::SocketAddrV6","std::net::Ipv4Addr","std::time::SystemTime","std::sync::Mutex","std::option::Option","std::num::NonZeroU8","std::sync::RwLock","std::cell::Cell","std::collections::BTreeSet","std::net::Ipv6Addr","std::net::SocketAddrV4","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::path::PathBuf","std::rc::Rc","std::sync::Arc","std::sync::atomic::AtomicU32","std::borrow::Cow","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::cell::RefCell","std::ops::Range"]},"std::collections::HashMap":{"K":["std::num::NonZeroU32","std::num::NonZeroI64","std::net::SocketAddrV4","std::num::NonZeroI8","std::num::NonZeroU16","std::marker::PhantomData","std::time::Duration","std::net::Ipv4Addr","std::time::SystemTime","std::rc::Rc","std::sync::Arc","std::string::String","std::num::NonZeroI16","std::num::NonZeroI32","std::net::Ipv6Addr","std::path::PathBuf","std::option::Option","std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroU64","std::collections::Bound"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::time::SystemTime","std::collections::BTreeSet","std::num::NonZeroU32","std::num::NonZeroI32","std::num::NonZeroU128","std::num::NonZeroUsize","std::time::Duration","std::vec::Vec","std::collections::BTreeMap","std::ops::Range","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::boxed::Box","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::sync::RwLock","std::num::NonZeroU64","std::sync::Mutex","std::ffi::CString","std::num::NonZeroI8","std::option::Option","std::net::Ipv6Addr","std::string::String","std::collections::HashMap","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::num::NonZeroU16","std::sync::Arc","std::num::NonZeroI128","std::cell::Cell","std::net::IpAddr","std::collections::Bound","std::collections::VecDeque","std::net::SocketAddrV6","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::result::Result","std::marker::PhantomData","std::path::PathBuf","std::rc::Rc","std::borrow::Cow","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::cell::RefCell","std::sync::atomic::AtomicI32","std::collections::HashSet","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::num::NonZeroIsize"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU64","std::string::String","std::collections::Bound","std::num::NonZeroIsize","std::num::NonZeroU32","std::marker::PhantomData","std::time::SystemTime","std::rc::Rc","std::num::NonZeroI64","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI32","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroI8","std::num::NonZeroI128","std::sync::Arc","std::net::SocketAddr","std::net::Ipv6Addr","std::net::Ipv4Addr"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::collections::BinaryHeap","std::num::NonZeroU8","std::boxed::Box","std::net::SocketAddrV6","std::rc::Rc","std::sync::atomic::AtomicU64","std::option::Option","std::sync::RwLock","std::time::SystemTime","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::path::PathBuf","std::borrow::Cow","std::num::NonZeroI128","std::num::NonZeroU32","std::ops::RangeInclusive","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::net::IpAddr","std::num::NonZeroUsize","std::result::Result","std::net::Ipv4Addr","std::num::NonZeroU64","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::collections::HashSet","std::num::NonZeroU16","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::marker::PhantomData","std::sync::Mutex","std::ops::Range","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::collections::HashMap","std::ffi::CString","std::string::String","std::vec::Vec","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::num::NonZeroI64","std::collections::Bound","std::sync::Arc","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::collections::BTreeMap","std::cell::Cell","std::num::NonZeroI32","std::time::Duration","std::num::NonZeroI16"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::marker::PhantomData","std::num::NonZeroI32","std::collections::VecDeque","std::collections::Bound","std::time::SystemTime","std::ffi::CString","std::collections::BinaryHeap","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::vec::Vec","std::net::Ipv6Addr","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::ops::Range","std::sync::Mutex","std::borrow::Cow","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::cell::RefCell","std::num::NonZeroIsize","std::sync::RwLock","std::num::NonZeroU32","std::string::String","std::collections::HashSet","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::boxed::Box","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::rc::Rc","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::path::PathBuf","std::time::Duration","std::collections::BTreeMap","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::collections::HashMap","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::sync::Arc","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::option::Option","std::result::Result","std::cell::Cell","std::num::NonZeroUsize","std::net::SocketAddrV4","std::net::SocketAddr","std::net::IpAddr"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroU128","std::time::Duration","std::num::NonZeroI128","std::sync::RwLock","std::net::SocketAddrV6","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::collections::HashMap","std::num::NonZeroUsize","std::rc::Rc","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::num::NonZeroU64","std::ffi::CString","std::net::Ipv6Addr","std::result::Result","std::num::NonZeroI16","std::vec::Vec","std::ops::RangeInclusive","std::num::NonZeroU8","std::path::PathBuf","std::sync::atomic::AtomicU64","std::ops::Range","std::num::NonZeroI8","std::time::SystemTime","std::num::NonZeroI64","std::collections::VecDeque","std::net::SocketAddrV4","std::net::IpAddr","std::collections::BinaryHeap","std::sync::Mutex","std::collections::HashSet","std::net::SocketAddr","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroU32","std::boxed::Box","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::cell::Cell","std::collections::Bound","std::option::Option","std::cell::RefCell","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::borrow::Cow","std::sync::atomic::AtomicU16","std::string::String","std::collections::BTreeSet","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::num::NonZeroU16"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::boxed::Box","std::num::NonZeroU32","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::num::NonZeroI64","std::collections::BinaryHeap","std::rc::Rc","std::num::NonZeroU16","std::num::NonZeroI32","std::num::NonZeroIsize","std::collections::BTreeSet","std::cell::Cell","std::collections::HashMap","std::cell::RefCell","std::num::NonZeroI8","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::borrow::Cow","std::ffi::CString","std::result::Result","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::vec::Vec","std::collections::HashSet","std::collections::Bound","std::time::Duration","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::net::IpAddr","std::time::SystemTime","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::net::Ipv4Addr","std::path::PathBuf","std::option::Option","std::num::NonZeroI128","std::sync::Mutex","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::string::String","std::sync::atomic::AtomicU8","std::sync::RwLock","std::sync::Arc","std::sync::atomic::AtomicUsize","std::ops::Range","std::ops::RangeInclusive","std::net::SocketAddrV4","std::sync::atomic::AtomicU64"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::borrow_decode(p0);
+<(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::decode":{"A":["std::marker::Sized","de::Decode"],"B":["de::Decode","std::marker::Sized"],"C":["de::Decode","std::marker::Sized"],"D":["de::Decode","std::marker::Sized"],"DE":["de::Decoder","std::marker::Sized"],"E":["std::marker::Sized","de::Decode"],"F":["std::marker::Sized","de::Decode"],"G":["de::Decode","std::marker::Sized"],"H":["de::Decode","std::marker::Sized"],"I":["de::Decode","std::marker::Sized"],"J":["std::marker::Sized","de::Decode"],"K":["std::marker::Sized","de::Decode"],"L":["std::marker::Sized","de::Decode"],"M":["std::marker::Sized","de::Decode"],"N":["std::marker::Sized","de::Decode"],"O":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["enc::Encode","de::BorrowDecode","de::Decode","std::cmp::Ord","std::marker::Sized"],"V":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["std::cmp::Ord","enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::Bound":{"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::collections::HashMap":{"K":["enc::Encode","de::Decode","std::cmp::Eq","std::marker::Sized","std::hash::Hash","de::BorrowDecode"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["enc::Encode","std::cmp::Eq","de::Decode","std::marker::Sized","de::BorrowDecode","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::Configuration","config::LittleEndian","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Varint","config::BigEndian","config::NoLimit","config::Fixint"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::decode":{"A":["std::num::NonZeroI64","std::collections::VecDeque","std::net::SocketAddrV6","std::collections::HashSet","std::borrow::Cow","std::collections::BTreeMap","std::num::NonZeroI32","std::ops::RangeInclusive","std::cell::Cell","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::collections::BTreeSet","std::collections::Bound","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::num::NonZeroI16","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::result::Result","std::ffi::CString","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroUsize","std::ops::Range","std::sync::RwLock","std::num::NonZeroU64","std::vec::Vec","std::sync::Mutex","std::time::Duration","std::string::String","std::cell::RefCell","std::path::PathBuf","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::collections::HashMap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::net::IpAddr","std::sync::atomic::AtomicI16","std::boxed::Box","std::time::SystemTime","std::num::NonZeroIsize","std::collections::BinaryHeap","std::sync::Arc","std::option::Option","std::num::NonZeroI8","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::rc::Rc"],"B":["std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroU32","std::net::SocketAddrV6","std::sync::RwLock","std::collections::Bound","std::marker::PhantomData","std::ops::Range","std::num::NonZeroU8","std::sync::Mutex","std::collections::HashMap","std::num::NonZeroIsize","std::collections::HashSet","std::vec::Vec","std::collections::BinaryHeap","std::sync::Arc","std::cell::RefCell","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::string::String","std::collections::BTreeSet","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::net::SocketAddr","std::boxed::Box","std::num::NonZeroI128","std::ffi::CString","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::num::NonZeroU16","std::time::SystemTime","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::net::Ipv6Addr","std::rc::Rc","std::sync::atomic::AtomicI16","std::option::Option","std::result::Result","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::cell::Cell","std::time::Duration","std::path::PathBuf","std::net::IpAddr","std::collections::BTreeMap","std::borrow::Cow","std::num::NonZeroUsize"],"C":["std::string::String","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::time::Duration","std::num::NonZeroU8","std::collections::BTreeSet","std::collections::BinaryHeap","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::num::NonZeroIsize","std::net::Ipv6Addr","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::ffi::CString","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::collections::HashSet","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::boxed::Box","std::collections::BTreeMap","std::num::NonZeroUsize","std::option::Option","std::rc::Rc","std::num::NonZeroI8","std::result::Result","std::sync::atomic::AtomicU64","std::net::IpAddr","std::ops::Range","std::num::NonZeroU16","std::net::SocketAddrV6","std::ops::RangeInclusive","std::collections::Bound","std::num::NonZeroU64","std::vec::Vec","std::num::NonZeroI32","std::collections::HashMap","std::sync::RwLock","std::path::PathBuf","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::cell::Cell","std::net::SocketAddr","std::cell::RefCell","std::sync::atomic::AtomicI32","std::borrow::Cow","std::time::SystemTime","std::sync::Mutex","std::num::NonZeroI64","std::collections::VecDeque"],"D":["std::net::Ipv6Addr","std::num::NonZeroU8","std::sync::Mutex","std::collections::HashSet","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::ffi::CString","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::boxed::Box","std::net::SocketAddr","std::cell::Cell","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::net::Ipv4Addr","std::num::NonZeroU64","std::net::IpAddr","std::ops::RangeInclusive","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::rc::Rc","std::result::Result","std::net::SocketAddrV4","std::time::Duration","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::string::String","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::time::SystemTime","std::option::Option","std::collections::BinaryHeap","std::borrow::Cow","std::vec::Vec","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::path::PathBuf","std::cell::RefCell","std::num::NonZeroUsize","std::collections::HashMap","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::sync::Arc","std::num::NonZeroI128","std::ops::Range","std::sync::RwLock","std::collections::BTreeMap","std::collections::VecDeque","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::collections::Bound"],"DE":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"E":["std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::path::PathBuf","std::cell::RefCell","std::num::NonZeroU8","std::collections::BTreeSet","std::num::NonZeroU16","std::collections::HashSet","std::sync::atomic::AtomicU8","std::ops::Range","std::net::SocketAddrV4","std::collections::VecDeque","std::num::NonZeroI32","std::net::Ipv4Addr","std::net::SocketAddr","std::sync::Mutex","std::num::NonZeroU32","std::marker::PhantomData","std::ffi::CString","std::sync::atomic::AtomicI8","std::time::SystemTime","std::sync::atomic::AtomicI32","std::sync::RwLock","std::sync::atomic::AtomicU32","std::string::String","std::collections::Bound","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::boxed::Box","std::net::Ipv6Addr","std::vec::Vec","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::result::Result","std::num::NonZeroI64","std::time::Duration","std::collections::BTreeMap","std::borrow::Cow","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::collections::HashMap","std::rc::Rc","std::option::Option","std::cell::Cell","std::collections::BinaryHeap","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroIsize","std::net::IpAddr"],"F":["std::net::Ipv4Addr","std::net::SocketAddrV6","std::cell::Cell","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::string::String","std::time::Duration","std::num::NonZeroI128","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::collections::Bound","std::vec::Vec","std::sync::atomic::AtomicU32","std::ops::Range","std::sync::atomic::AtomicU8","std::ffi::CString","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::rc::Rc","std::num::NonZeroU32","std::net::Ipv6Addr","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::net::IpAddr","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroI32","std::collections::HashMap","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::sync::RwLock","std::num::NonZeroI16","std::collections::VecDeque","std::borrow::Cow","std::sync::Arc","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::path::PathBuf","std::num::NonZeroU8","std::num::NonZeroIsize","std::net::SocketAddrV4","std::collections::BTreeSet","std::collections::BTreeMap","std::result::Result","std::time::SystemTime","std::sync::atomic::AtomicU64","std::sync::Mutex","std::cell::RefCell","std::boxed::Box","std::num::NonZeroI64"],"G":["std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::collections::VecDeque","std::collections::Bound","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::marker::PhantomData","std::string::String","std::collections::HashSet","std::net::SocketAddr","std::borrow::Cow","std::num::NonZeroI16","std::path::PathBuf","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::num::NonZeroU32","std::num::NonZeroU128","std::sync::RwLock","std::num::NonZeroI128","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::time::Duration","std::num::NonZeroU16","std::boxed::Box","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::time::SystemTime","std::rc::Rc","std::num::NonZeroU8","std::collections::BinaryHeap","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::collections::HashMap","std::option::Option","std::cell::Cell","std::sync::Arc","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::net::IpAddr","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::ops::Range","std::collections::BTreeSet","std::ffi::CString","std::num::NonZeroU64","std::ops::RangeInclusive","std::vec::Vec","std::sync::Mutex","std::net::Ipv6Addr","std::result::Result"],"H":["std::collections::VecDeque","std::sync::Arc","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::collections::BTreeSet","std::sync::Mutex","std::marker::PhantomData","std::num::NonZeroU64","std::string::String","std::collections::HashSet","std::sync::atomic::AtomicI32","std::collections::Bound","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::cell::RefCell","std::num::NonZeroI8","std::collections::BinaryHeap","std::num::NonZeroU16","std::ops::Range","std::boxed::Box","std::sync::atomic::AtomicU32","std::time::Duration","std::sync::atomic::AtomicBool","std::option::Option","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::num::NonZeroU128","std::ops::RangeInclusive","std::vec::Vec","std::rc::Rc","std::net::SocketAddrV4","std::net::Ipv4Addr","std::path::PathBuf","std::cell::Cell","std::result::Result","std::num::NonZeroIsize","std::ffi::CString","std::sync::RwLock","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::time::SystemTime","std::borrow::Cow","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroI64"],"I":["std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::sync::RwLock","std::sync::atomic::AtomicI8","std::boxed::Box","std::num::NonZeroU16","std::collections::VecDeque","std::num::NonZeroU64","std::num::NonZeroI128","std::borrow::Cow","std::collections::HashMap","std::sync::atomic::AtomicI16","std::result::Result","std::num::NonZeroU128","std::collections::BinaryHeap","std::vec::Vec","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::time::Duration","std::sync::Mutex","std::net::SocketAddr","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::sync::Arc","std::ops::RangeInclusive","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::time::SystemTime","std::num::NonZeroI32","std::collections::BTreeMap","std::net::Ipv4Addr","std::string::String","std::rc::Rc","std::net::SocketAddrV4","std::cell::Cell","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::collections::HashSet","std::cell::RefCell","std::num::NonZeroIsize","std::option::Option","std::net::IpAddr","std::num::NonZeroI64","std::num::NonZeroI16","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::collections::Bound","std::collections::BTreeSet","std::ffi::CString","std::ops::Range"],"J":["std::sync::atomic::AtomicI64","std::net::IpAddr","std::num::NonZeroI8","std::collections::HashMap","std::string::String","std::collections::HashSet","std::time::SystemTime","std::num::NonZeroU64","std::collections::Bound","std::net::Ipv4Addr","std::ops::RangeInclusive","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::cell::Cell","std::time::Duration","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::rc::Rc","std::num::NonZeroU16","std::cell::RefCell","std::net::SocketAddr","std::sync::Mutex","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::num::NonZeroI128","std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::option::Option","std::marker::PhantomData","std::ffi::CString","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::ops::Range","std::collections::BinaryHeap","std::result::Result","std::vec::Vec","std::sync::RwLock","std::boxed::Box","std::sync::Arc","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::borrow::Cow","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::net::SocketAddrV4"],"K":["std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroU16","std::cell::RefCell","std::net::Ipv4Addr","std::num::NonZeroI32","std::option::Option","std::num::NonZeroI128","std::num::NonZeroIsize","std::path::PathBuf","std::vec::Vec","std::sync::atomic::AtomicI32","std::sync::Arc","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::num::NonZeroI16","std::collections::VecDeque","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::boxed::Box","std::collections::Bound","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::time::Duration","std::result::Result","std::collections::HashSet","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::net::SocketAddr","std::num::NonZeroI8","std::collections::BTreeMap","std::ffi::CString","std::ops::RangeInclusive","std::marker::PhantomData","std::time::SystemTime","std::cell::Cell","std::collections::HashMap","std::ops::Range","std::string::String","std::num::NonZeroU128","std::borrow::Cow","std::sync::RwLock","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::rc::Rc","std::net::SocketAddrV4","std::sync::Mutex","std::collections::BTreeSet"],"L":["std::ops::RangeInclusive","std::collections::VecDeque","std::num::NonZeroI8","std::sync::Arc","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::borrow::Cow","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::collections::HashSet","std::net::Ipv6Addr","std::num::NonZeroU64","std::boxed::Box","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroI64","std::net::IpAddr","std::ops::Range","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::sync::RwLock","std::num::NonZeroI16","std::collections::BTreeMap","std::collections::BinaryHeap","std::path::PathBuf","std::num::NonZeroU16","std::net::Ipv4Addr","std::collections::HashMap","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::cell::Cell","std::result::Result","std::time::SystemTime","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::vec::Vec","std::sync::atomic::AtomicBool","std::cell::RefCell","std::time::Duration","std::rc::Rc","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::net::SocketAddr","std::ffi::CString","std::string::String","std::num::NonZeroI32","std::num::NonZeroU8","std::num::NonZeroU32","std::collections::Bound","std::sync::atomic::AtomicU16","std::option::Option"],"M":["std::collections::VecDeque","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::collections::HashMap","std::num::NonZeroUsize","std::result::Result","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::borrow::Cow","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::num::NonZeroIsize","std::net::SocketAddrV4","std::collections::BTreeSet","std::collections::Bound","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::sync::Arc","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::cell::RefCell","std::sync::atomic::AtomicBool","std::time::SystemTime","std::sync::RwLock","std::vec::Vec","std::num::NonZeroI64","std::collections::BTreeMap","std::net::IpAddr","std::sync::Mutex","std::num::NonZeroI8","std::num::NonZeroU64","std::option::Option","std::string::String","std::cell::Cell","std::path::PathBuf","std::ffi::CString","std::ops::RangeInclusive","std::num::NonZeroI128","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroU8","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::rc::Rc","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::boxed::Box","std::num::NonZeroI16","std::num::NonZeroU16","std::collections::BinaryHeap","std::time::Duration","std::ops::Range"],"N":["std::marker::PhantomData","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::collections::Bound","std::net::SocketAddrV4","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::ffi::CString","std::sync::atomic::AtomicU8","std::sync::RwLock","std::num::NonZeroI128","std::time::Duration","std::path::PathBuf","std::borrow::Cow","std::sync::Arc","std::sync::atomic::AtomicU32","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::collections::BTreeMap","std::ops::RangeInclusive","std::ops::Range","std::collections::BTreeSet","std::option::Option","std::string::String","std::num::NonZeroU64","std::boxed::Box","std::num::NonZeroIsize","std::collections::HashMap","std::vec::Vec","std::net::SocketAddrV6","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::cell::Cell","std::num::NonZeroUsize","std::rc::Rc","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::num::NonZeroI16","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::net::IpAddr","std::num::NonZeroU8","std::net::Ipv4Addr","std::collections::HashSet","std::cell::RefCell","std::result::Result","std::collections::BinaryHeap"],"O":["std::sync::Arc","std::result::Result","std::num::NonZeroU16","std::net::Ipv6Addr","std::collections::VecDeque","std::net::SocketAddr","std::collections::BinaryHeap","std::marker::PhantomData","std::num::NonZeroU64","std::time::Duration","std::borrow::Cow","std::collections::Bound","std::ops::Range","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::collections::HashMap","std::time::SystemTime","std::ffi::CString","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::num::NonZeroI128","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroU128","std::num::NonZeroI64","std::string::String","std::net::IpAddr","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::vec::Vec","std::collections::BTreeSet","std::sync::RwLock","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::num::NonZeroI32","std::boxed::Box","std::rc::Rc","std::sync::Mutex","std::cell::Cell","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::cell::RefCell","std::num::NonZeroI16","std::option::Option","std::collections::HashSet"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::path::Path","<T as std::borrow::ToOwned>","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroU32","std::num::NonZeroU128","std::rc::Rc","std::cell::Cell","std::sync::Arc","std::num::NonZeroI32","std::string::String","std::net::SocketAddr","std::cell::RefCell","std::num::NonZeroI8","std::num::NonZeroI16","std::net::IpAddr","std::time::SystemTime","std::net::SocketAddrV6","std::num::NonZeroU16","std::num::NonZeroI64","std::num::NonZeroI128","std::net::Ipv6Addr","std::net::Ipv4Addr","std::net::SocketAddrV4","std::path::PathBuf","std::marker::PhantomData"],"V":["std::ffi::CString","std::collections::BinaryHeap","std::time::Duration","std::num::NonZeroUsize","std::num::NonZeroIsize","std::boxed::Box","std::net::SocketAddrV4","std::collections::Bound","std::string::String","std::num::NonZeroI128","std::borrow::Cow","std::num::NonZeroU32","std::ops::RangeInclusive","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::sync::RwLock","std::option::Option","std::num::NonZeroU128","std::sync::Arc","std::sync::atomic::AtomicI64","std::result::Result","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::net::SocketAddr","std::time::SystemTime","std::num::NonZeroI16","std::num::NonZeroI32","std::cell::RefCell","std::collections::HashSet","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::ops::Range","std::sync::atomic::AtomicU16","std::collections::HashMap","std::sync::atomic::AtomicI32","std::cell::Cell","std::sync::Mutex","std::vec::Vec","std::net::SocketAddrV6","std::net::IpAddr","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::path::PathBuf","std::rc::Rc","std::net::Ipv6Addr","std::num::NonZeroU16","std::collections::VecDeque","std::num::NonZeroI8","std::sync::atomic::AtomicU64"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::Ipv4Addr","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroU64","std::net::IpAddr","std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroI128","std::num::NonZeroIsize","std::net::SocketAddr","std::net::Ipv6Addr","std::option::Option","std::num::NonZeroI64","std::cell::Cell","std::path::PathBuf","std::marker::PhantomData","std::num::NonZeroU8"]},"std::collections::BinaryHeap":{"T":["std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroI16","std::cell::Cell","std::net::SocketAddrV6","std::rc::Rc","std::num::NonZeroI8","std::time::Duration","std::net::SocketAddr","std::cell::RefCell","std::net::Ipv6Addr","std::num::NonZeroIsize","std::num::NonZeroI128","std::string::String","std::marker::PhantomData","std::num::NonZeroU64","std::num::NonZeroI64","std::option::Option","std::num::NonZeroU128","std::path::PathBuf","std::ffi::CString","std::sync::Arc","std::num::NonZeroUsize","std::net::SocketAddrV4"]},"std::collections::Bound":{"T":["std::num::NonZeroIsize","std::borrow::Cow","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::net::SocketAddr","std::collections::BTreeMap","std::cell::RefCell","std::num::NonZeroU64","std::num::NonZeroI32","std::ops::RangeInclusive","std::num::NonZeroUsize","std::sync::RwLock","std::vec::Vec","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::num::NonZeroU128","std::sync::Arc","std::marker::PhantomData","std::num::NonZeroU8","std::path::PathBuf","std::result::Result","std::num::NonZeroU16","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::collections::Bound","std::sync::Mutex","std::string::String","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::option::Option","std::net::IpAddr","std::collections::VecDeque","std::time::SystemTime","std::num::NonZeroI64","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::ffi::CString","std::rc::Rc","std::collections::BTreeSet","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::cell::Cell","std::ops::Range","std::boxed::Box","std::sync::atomic::AtomicI16","std::time::Duration","std::collections::HashMap"]},"std::collections::HashMap":{"K":["std::num::NonZeroI16","std::net::IpAddr","std::num::NonZeroI128","std::sync::Arc","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroUsize","std::num::NonZeroI32","std::num::NonZeroIsize","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroI64","std::marker::PhantomData","std::rc::Rc"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicIsize","std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroU64","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::path::PathBuf","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::collections::VecDeque","std::num::NonZeroI128","std::net::IpAddr","std::num::NonZeroU16","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::borrow::Cow","std::cell::Cell","std::marker::PhantomData","std::collections::Bound","std::num::NonZeroI8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::num::NonZeroU8","std::collections::HashMap","std::time::SystemTime","std::collections::BinaryHeap","std::sync::RwLock","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::collections::HashSet","std::cell::RefCell","std::sync::Mutex","std::collections::BTreeMap","std::net::SocketAddrV4","std::sync::Arc","std::sync::atomic::AtomicU64","std::result::Result","std::time::Duration","std::net::Ipv4Addr","std::vec::Vec","std::collections::BTreeSet","std::ops::Range","std::string::String","std::option::Option","std::boxed::Box","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::num::NonZeroUsize","std::net::SocketAddrV6","std::rc::Rc"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroIsize","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroU64","std::path::PathBuf","std::string::String","std::option::Option","std::num::NonZeroI128","std::time::Duration","std::collections::Bound","std::num::NonZeroU16","std::net::Ipv4Addr","std::marker::PhantomData","std::net::Ipv6Addr"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::num::NonZeroU8","std::net::IpAddr","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::num::NonZeroUsize","std::path::PathBuf","std::num::NonZeroU64","std::net::SocketAddr","std::ops::RangeInclusive","std::boxed::Box","std::cell::Cell","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::sync::Arc","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::num::NonZeroIsize","std::collections::BTreeSet","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::collections::HashSet","std::sync::Mutex","std::num::NonZeroU32","std::option::Option","std::collections::HashMap","std::sync::RwLock","std::net::SocketAddrV6","std::collections::BinaryHeap","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::marker::PhantomData","std::num::NonZeroU16","std::ffi::CString","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::ops::Range","std::time::SystemTime","std::sync::atomic::AtomicU32","std::collections::Bound","std::string::String","std::cell::RefCell","std::rc::Rc","std::net::SocketAddrV4","std::borrow::Cow","std::time::Duration","std::sync::atomic::AtomicU16","std::result::Result","std::vec::Vec","std::num::NonZeroI64","std::num::NonZeroI32","std::sync::atomic::AtomicIsize"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroI128","std::net::SocketAddrV6","std::time::SystemTime","std::sync::atomic::AtomicU32","std::ffi::CString","std::cell::RefCell","std::borrow::Cow","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::num::NonZeroU16","std::rc::Rc","std::sync::atomic::AtomicU64","std::cell::Cell","std::vec::Vec","std::sync::Arc","std::result::Result","std::collections::HashSet","std::collections::BinaryHeap","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::time::Duration","std::boxed::Box","std::net::IpAddr","std::collections::VecDeque","std::string::String","std::net::Ipv4Addr","std::num::NonZeroI32","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::sync::RwLock","std::collections::Bound","std::num::NonZeroI16","std::num::NonZeroIsize","std::num::NonZeroU8","std::marker::PhantomData","std::collections::BTreeMap","std::num::NonZeroUsize","std::option::Option","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::collections::BTreeSet","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::ops::Range","std::sync::atomic::AtomicU16","std::collections::HashMap","std::path::PathBuf","std::sync::Mutex"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::borrow::Cow","std::num::NonZeroU64","std::collections::BTreeSet","std::ffi::CString","std::net::IpAddr","std::collections::HashSet","std::string::String","std::num::NonZeroIsize","std::num::NonZeroI16","std::marker::PhantomData","std::result::Result","std::sync::atomic::AtomicI32","std::collections::Bound","std::sync::atomic::AtomicU64","std::cell::RefCell","std::sync::atomic::AtomicI64","std::collections::HashMap","std::sync::atomic::AtomicBool","std::vec::Vec","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::net::Ipv6Addr","std::time::SystemTime","std::boxed::Box","std::sync::Arc","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::option::Option","std::num::NonZeroI32","std::collections::BTreeMap","std::num::NonZeroI64","std::num::NonZeroI8","std::collections::VecDeque","std::rc::Rc","std::sync::atomic::AtomicI8","std::cell::Cell","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::net::SocketAddrV6","std::num::NonZeroU128","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::sync::Mutex","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::net::Ipv4Addr","std::num::NonZeroUsize","std::num::NonZeroU32","std::ops::Range","std::time::Duration","std::collections::BinaryHeap"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::marker::PhantomData","std::collections::VecDeque","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::cell::RefCell","std::string::String","std::sync::Mutex","std::sync::atomic::AtomicU8","std::result::Result","std::net::IpAddr","std::net::Ipv6Addr","std::rc::Rc","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::vec::Vec","std::num::NonZeroIsize","std::boxed::Box","std::num::NonZeroU32","std::borrow::Cow","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::path::PathBuf","std::net::SocketAddrV4","std::ops::Range","std::num::NonZeroU8","std::num::NonZeroI16","std::sync::Arc","std::collections::HashMap","std::net::SocketAddr","std::time::Duration","std::num::NonZeroU64","std::num::NonZeroUsize","std::option::Option","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::collections::HashSet","std::collections::Bound","std::time::SystemTime","std::ffi::CString","std::ops::RangeInclusive","std::net::SocketAddrV6","std::collections::BTreeSet","std::num::NonZeroI64","std::num::NonZeroI32","std::collections::BinaryHeap","std::cell::Cell","std::num::NonZeroI8","std::sync::RwLock","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::num::NonZeroU16"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::decode(p0);
+<(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::borrow_decode":{"A":["de::BorrowDecode","std::marker::Sized"],"B":["de::BorrowDecode","std::marker::Sized"],"BD":["std::marker::Sized","de::BorrowDecoder"],"C":["std::marker::Sized","de::BorrowDecode"],"D":["de::BorrowDecode","std::marker::Sized"],"E":["de::BorrowDecode","std::marker::Sized"],"F":["std::marker::Sized","de::BorrowDecode"],"G":["std::marker::Sized","de::BorrowDecode"],"H":["de::BorrowDecode","std::marker::Sized"],"I":["de::BorrowDecode","std::marker::Sized"],"J":["de::BorrowDecode","std::marker::Sized"],"K":["de::BorrowDecode","std::marker::Sized"],"L":["std::marker::Sized","de::BorrowDecode"],"M":["de::BorrowDecode","std::marker::Sized"],"N":["de::BorrowDecode","std::marker::Sized"],"O":["std::marker::Sized","de::BorrowDecode"],"P":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode"],"V":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::BorrowDecode","de::Decode","enc::Encode","std::cmp::Ord","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","enc::Encode","std::cmp::Ord","de::Decode","std::marker::Sized"]},"std::collections::Bound":{"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","std::marker::Sized","enc::Encode","de::BorrowDecode","std::hash::Hash","de::Decode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["de::BorrowDecode","de::Decode","std::cmp::Eq","std::hash::Hash","enc::Encode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::NoLimit","config::Limit","config::BigEndian","config::Configuration","config::Varint","config::Fixint","std::clone::impls::<impl std::clone::Clone for *mut T>"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::borrow_decode":{"A":["std::cell::RefCell","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::collections::HashSet","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::time::SystemTime","std::collections::Bound","std::result::Result","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::net::Ipv4Addr","std::string::String","std::sync::atomic::AtomicU8","std::sync::RwLock","std::num::NonZeroI8","std::borrow::Cow","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::net::IpAddr","std::option::Option","std::collections::BinaryHeap","std::net::SocketAddrV6","std::num::NonZeroI128","std::num::NonZeroI32","std::time::Duration","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::sync::Mutex","std::num::NonZeroU32","std::cell::Cell","std::collections::BTreeSet","std::net::Ipv6Addr","std::rc::Rc","std::sync::atomic::AtomicI32","std::sync::Arc","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::ffi::CString","std::path::PathBuf","std::ops::Range","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::boxed::Box","std::collections::VecDeque","std::num::NonZeroU8","std::vec::Vec","std::ops::RangeInclusive"],"B":["std::option::Option","std::sync::atomic::AtomicU16","std::path::PathBuf","std::time::SystemTime","std::num::NonZeroU8","std::sync::Arc","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::borrow::Cow","std::time::Duration","std::vec::Vec","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::ops::RangeInclusive","std::num::NonZeroI8","std::result::Result","std::rc::Rc","std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::ops::Range","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::collections::VecDeque","std::num::NonZeroIsize","std::num::NonZeroUsize","std::net::SocketAddrV4","std::collections::Bound","std::net::SocketAddr","std::sync::RwLock","std::boxed::Box","std::num::NonZeroI16","std::string::String","std::cell::RefCell","std::collections::BTreeMap","std::num::NonZeroU128","std::collections::BTreeSet","std::ffi::CString","std::net::Ipv4Addr","std::net::IpAddr","std::collections::BinaryHeap","std::collections::HashMap","std::cell::Cell","std::collections::HashSet","std::num::NonZeroI64","std::num::NonZeroU64","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool"],"BD":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"C":["std::ffi::CString","std::time::Duration","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::time::SystemTime","std::collections::HashSet","std::vec::Vec","std::collections::HashMap","std::sync::RwLock","std::num::NonZeroU32","std::rc::Rc","std::sync::atomic::AtomicU16","std::cell::RefCell","std::ops::Range","std::option::Option","std::string::String","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroU64","std::num::NonZeroI128","std::collections::BinaryHeap","std::path::PathBuf","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::num::NonZeroI64","std::result::Result","std::sync::Mutex","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::num::NonZeroU128","std::marker::PhantomData","std::cell::Cell","std::ops::RangeInclusive","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::borrow::Cow","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::collections::BTreeMap","std::boxed::Box","std::net::SocketAddrV6","std::num::NonZeroIsize","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::collections::Bound","std::sync::Arc","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8"],"D":["std::sync::RwLock","std::sync::Mutex","std::net::Ipv6Addr","std::option::Option","std::path::PathBuf","std::num::NonZeroU32","std::net::SocketAddrV6","std::time::Duration","std::marker::PhantomData","std::collections::VecDeque","std::num::NonZeroI16","std::num::NonZeroUsize","std::string::String","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::ops::Range","std::collections::HashMap","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::net::IpAddr","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::rc::Rc","std::vec::Vec","std::sync::atomic::AtomicBool","std::cell::Cell","std::collections::BinaryHeap","std::collections::BTreeMap","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroIsize","std::num::NonZeroI8","std::ops::RangeInclusive","std::num::NonZeroU128","std::boxed::Box","std::collections::BTreeSet","std::num::NonZeroI32","std::cell::RefCell","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::sync::Arc","std::num::NonZeroU16","std::borrow::Cow","std::time::SystemTime","std::sync::atomic::AtomicI32","std::result::Result","std::sync::atomic::AtomicI64","std::ffi::CString","std::num::NonZeroU64","std::collections::Bound"],"E":["std::vec::Vec","std::cell::RefCell","std::ops::RangeInclusive","std::collections::HashMap","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroI16","std::num::NonZeroU16","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::ops::Range","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::num::NonZeroUsize","std::string::String","std::num::NonZeroI128","std::collections::Bound","std::net::Ipv4Addr","std::ffi::CString","std::rc::Rc","std::borrow::Cow","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::net::SocketAddrV6","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::boxed::Box","std::sync::atomic::AtomicI64","std::result::Result","std::num::NonZeroIsize","std::option::Option","std::sync::atomic::AtomicI32","std::sync::RwLock","std::path::PathBuf","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::time::Duration","std::sync::Mutex","std::num::NonZeroU32","std::num::NonZeroU8","std::net::SocketAddr","std::cell::Cell","std::collections::BTreeMap","std::collections::BTreeSet","std::collections::HashSet","std::net::IpAddr","std::sync::Arc","std::collections::BinaryHeap","std::sync::atomic::AtomicU8"],"F":["std::num::NonZeroU8","std::cell::RefCell","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::num::NonZeroU128","std::result::Result","std::net::Ipv4Addr","std::borrow::Cow","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::path::PathBuf","std::collections::HashMap","std::sync::atomic::AtomicI8","std::rc::Rc","std::collections::BinaryHeap","std::net::SocketAddrV6","std::boxed::Box","std::sync::Mutex","std::time::Duration","std::num::NonZeroI8","std::cell::Cell","std::sync::atomic::AtomicI64","std::ffi::CString","std::num::NonZeroU32","std::sync::Arc","std::num::NonZeroIsize","std::collections::VecDeque","std::option::Option","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::net::SocketAddrV4","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::string::String","std::collections::HashSet","std::net::IpAddr","std::ops::Range","std::num::NonZeroI128","std::num::NonZeroI64","std::vec::Vec","std::sync::atomic::AtomicI32","std::collections::Bound","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::sync::RwLock","std::time::SystemTime","std::net::Ipv6Addr"],"G":["std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::boxed::Box","std::num::NonZeroUsize","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::time::Duration","std::result::Result","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::sync::Arc","std::string::String","std::cell::Cell","std::ffi::CString","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::sync::atomic::AtomicBool","std::ops::Range","std::cell::RefCell","std::collections::HashSet","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::option::Option","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroI128","std::marker::PhantomData","std::num::NonZeroI32","std::num::NonZeroI8","std::path::PathBuf","std::num::NonZeroI64","std::sync::Mutex","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::borrow::Cow","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::sync::RwLock","std::collections::BTreeMap","std::vec::Vec","std::net::SocketAddrV6","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::time::SystemTime","std::rc::Rc","std::num::NonZeroU128","std::collections::Bound","std::collections::BTreeSet","std::net::IpAddr","std::sync::atomic::AtomicI64"],"H":["std::option::Option","std::vec::Vec","std::cell::RefCell","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::num::NonZeroU128","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::ffi::CString","std::net::Ipv6Addr","std::sync::Mutex","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::borrow::Cow","std::num::NonZeroU8","std::sync::RwLock","std::collections::BTreeSet","std::num::NonZeroI32","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::time::SystemTime","std::num::NonZeroU16","std::rc::Rc","std::sync::Arc","std::collections::BinaryHeap","std::num::NonZeroI16","std::collections::HashMap","std::ops::Range","std::boxed::Box","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::cell::Cell","std::num::NonZeroIsize","std::collections::Bound","std::num::NonZeroI8","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::result::Result","std::num::NonZeroU64","std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroU32","std::num::NonZeroI64","std::path::PathBuf","std::sync::atomic::AtomicU32","std::string::String","std::collections::BTreeMap","std::collections::HashSet","std::marker::PhantomData","std::net::IpAddr"],"I":["std::num::NonZeroI16","std::net::SocketAddrV6","std::ops::RangeInclusive","std::option::Option","std::net::IpAddr","std::collections::HashMap","std::collections::VecDeque","std::rc::Rc","std::time::SystemTime","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::vec::Vec","std::collections::Bound","std::sync::atomic::AtomicUsize","std::cell::Cell","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::ops::Range","std::result::Result","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroU64","std::collections::BTreeMap","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::path::PathBuf","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::num::NonZeroU32","std::num::NonZeroU16","std::net::SocketAddrV4","std::sync::RwLock","std::collections::BinaryHeap","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::num::NonZeroI128","std::net::Ipv6Addr","std::boxed::Box","std::num::NonZeroI64","std::cell::RefCell","std::string::String","std::ffi::CString","std::sync::Mutex","std::sync::atomic::AtomicU32","std::collections::HashSet","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::time::Duration","std::net::Ipv4Addr","std::collections::BTreeSet"],"J":["std::sync::Mutex","std::collections::Bound","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::ops::Range","std::sync::atomic::AtomicU8","std::sync::RwLock","std::ffi::CString","std::string::String","std::num::NonZeroUsize","std::num::NonZeroI128","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::cell::Cell","std::rc::Rc","std::time::Duration","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::ops::RangeInclusive","std::num::NonZeroI8","std::marker::PhantomData","std::sync::Arc","std::net::IpAddr","std::vec::Vec","std::option::Option","std::collections::VecDeque","std::net::Ipv6Addr","std::result::Result","std::collections::BTreeSet","std::net::SocketAddr","std::path::PathBuf","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::boxed::Box","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::time::SystemTime","std::cell::RefCell","std::borrow::Cow","std::net::Ipv4Addr","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::collections::HashSet","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::net::SocketAddrV4","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::collections::HashMap","std::num::NonZeroI32"],"K":["std::collections::BTreeSet","std::num::NonZeroI8","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::ffi::CString","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::num::NonZeroU64","std::cell::Cell","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::sync::RwLock","std::collections::Bound","std::net::SocketAddr","std::collections::VecDeque","std::result::Result","std::num::NonZeroI16","std::collections::BinaryHeap","std::time::Duration","std::rc::Rc","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::borrow::Cow","std::sync::atomic::AtomicI64","std::time::SystemTime","std::num::NonZeroU128","std::net::Ipv4Addr","std::num::NonZeroI128","std::boxed::Box","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::sync::Mutex","std::net::SocketAddrV6","std::string::String","std::ops::Range","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroU16","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::option::Option","std::collections::HashSet","std::vec::Vec","std::cell::RefCell","std::net::Ipv6Addr","std::num::NonZeroI32"],"L":["std::num::NonZeroUsize","std::path::PathBuf","std::borrow::Cow","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::rc::Rc","std::vec::Vec","std::collections::BTreeMap","std::collections::BinaryHeap","std::num::NonZeroU64","std::num::NonZeroI128","std::net::SocketAddrV6","std::marker::PhantomData","std::string::String","std::cell::Cell","std::net::IpAddr","std::time::SystemTime","std::sync::atomic::AtomicBool","std::sync::Mutex","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::net::SocketAddr","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroU16","std::collections::HashMap","std::boxed::Box","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::option::Option","std::sync::RwLock","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::cell::RefCell","std::collections::BTreeSet","std::time::Duration","std::net::Ipv6Addr","std::collections::HashSet","std::result::Result","std::collections::Bound","std::num::NonZeroU8","std::ops::RangeInclusive","std::ops::Range","std::collections::VecDeque","std::net::Ipv4Addr","std::sync::atomic::AtomicI8"],"M":["std::collections::HashSet","std::time::Duration","std::num::NonZeroU32","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::collections::BTreeSet","std::num::NonZeroI32","std::cell::RefCell","std::cell::Cell","std::net::SocketAddrV4","std::net::SocketAddr","std::num::NonZeroU16","std::net::SocketAddrV6","std::sync::Mutex","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroI16","std::collections::HashMap","std::net::IpAddr","std::sync::atomic::AtomicU64","std::path::PathBuf","std::num::NonZeroUsize","std::rc::Rc","std::sync::atomic::AtomicI64","std::time::SystemTime","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::BTreeMap","std::num::NonZeroU64","std::borrow::Cow","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::ops::RangeInclusive","std::option::Option","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::vec::Vec","std::collections::Bound","std::ffi::CString","std::net::Ipv6Addr","std::boxed::Box","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::result::Result","std::collections::VecDeque","std::ops::Range","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::string::String","std::sync::atomic::AtomicI8"],"N":["std::sync::RwLock","std::cell::RefCell","std::cell::Cell","std::collections::HashMap","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::collections::VecDeque","std::time::SystemTime","std::collections::HashSet","std::net::SocketAddrV6","std::num::NonZeroIsize","std::num::NonZeroI16","std::num::NonZeroU128","std::result::Result","std::sync::atomic::AtomicI8","std::rc::Rc","std::collections::BinaryHeap","std::net::SocketAddrV4","std::boxed::Box","std::time::Duration","std::option::Option","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::num::NonZeroU16","std::ops::RangeInclusive","std::num::NonZeroU8","std::num::NonZeroU32","std::num::NonZeroUsize","std::net::SocketAddr","std::ops::Range","std::net::Ipv6Addr","std::collections::BTreeMap","std::num::NonZeroI32","std::sync::Mutex","std::vec::Vec","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::num::NonZeroI8","std::net::IpAddr","std::borrow::Cow","std::sync::Arc","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::ffi::CString","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::path::PathBuf","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::collections::Bound","std::string::String","std::num::NonZeroU64"],"O":["std::sync::Arc","std::boxed::Box","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::option::Option","std::cell::Cell","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::cell::RefCell","std::num::NonZeroI128","std::num::NonZeroU64","std::borrow::Cow","std::result::Result","std::collections::VecDeque","std::ops::Range","std::path::PathBuf","std::collections::HashSet","std::net::IpAddr","std::num::NonZeroI64","std::num::NonZeroU32","std::rc::Rc","std::string::String","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::vec::Vec","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroI32","std::num::NonZeroU8","std::num::NonZeroU128","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::time::Duration","std::collections::BTreeSet","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::time::SystemTime","std::collections::HashMap","std::num::NonZeroIsize","std::marker::PhantomData","std::num::NonZeroUsize","std::collections::Bound"],"P":["std::sync::Arc","std::net::Ipv6Addr","std::vec::Vec","std::marker::PhantomData","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::ffi::CString","std::sync::atomic::AtomicI64","std::cell::RefCell","std::num::NonZeroIsize","std::num::NonZeroU32","std::collections::VecDeque","std::num::NonZeroU64","std::net::SocketAddrV6","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::sync::Mutex","std::option::Option","std::sync::RwLock","std::net::IpAddr","std::net::SocketAddr","std::time::SystemTime","std::borrow::Cow","std::collections::HashMap","std::num::NonZeroU8","std::num::NonZeroI8","std::boxed::Box","std::num::NonZeroI64","std::collections::Bound","std::cell::Cell","std::string::String","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::time::Duration","std::net::SocketAddrV4","std::collections::BTreeMap","std::result::Result","std::net::Ipv4Addr","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::collections::HashSet","std::ops::Range","std::ops::RangeInclusive","std::num::NonZeroUsize","std::path::PathBuf","std::rc::Rc","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::sync::atomic::AtomicI8"]},"std::borrow::Cow":{"B":["std::ffi::CStr","<T as std::borrow::ToOwned>","std::path::Path","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::net::SocketAddr","std::num::NonZeroI128","std::net::Ipv4Addr","std::num::NonZeroU8","std::option::Option","std::num::NonZeroI16","std::num::NonZeroU128","std::cell::RefCell","std::string::String","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroI8","std::rc::Rc","std::ffi::CString","std::path::PathBuf","std::cell::Cell","std::num::NonZeroI32","std::num::NonZeroU16","std::net::IpAddr","std::sync::Arc","std::time::Duration","std::num::NonZeroI64","std::marker::PhantomData","std::time::SystemTime"],"V":["std::marker::PhantomData","std::collections::HashMap","std::borrow::Cow","std::net::SocketAddrV6","std::result::Result","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroU128","std::ops::RangeInclusive","std::num::NonZeroU16","std::num::NonZeroIsize","std::time::Duration","std::collections::BTreeSet","std::num::NonZeroI16","std::net::IpAddr","std::collections::HashSet","std::collections::BTreeMap","std::boxed::Box","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::collections::Bound","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::path::PathBuf","std::sync::Mutex","std::sync::atomic::AtomicU32","std::ffi::CString","std::option::Option","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroU8","std::cell::Cell","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::sync::RwLock","std::collections::BinaryHeap","std::num::NonZeroI8","std::num::NonZeroU64","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::cell::RefCell","std::string::String","std::ops::Range","std::net::Ipv6Addr","std::num::NonZeroUsize","std::vec::Vec","std::num::NonZeroI32","std::sync::atomic::AtomicBool"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::path::PathBuf","std::net::SocketAddrV6","std::net::Ipv6Addr","std::marker::PhantomData","std::num::NonZeroI128","std::net::IpAddr","std::num::NonZeroU16","std::sync::Arc","std::option::Option","std::net::SocketAddr","std::cell::Cell","std::time::SystemTime","std::num::NonZeroU8","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroI8","std::num::NonZeroU128","std::ffi::CString","std::string::String"]},"std::collections::BinaryHeap":{"T":["std::sync::Arc","std::num::NonZeroU8","std::num::NonZeroI64","std::num::NonZeroU16","std::net::Ipv6Addr","std::num::NonZeroU128","std::net::SocketAddrV6","std::cell::Cell","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroU32","std::net::Ipv4Addr","std::num::NonZeroU64","std::num::NonZeroIsize","std::net::IpAddr","std::marker::PhantomData","std::time::SystemTime","std::num::NonZeroUsize","std::option::Option","std::rc::Rc"]},"std::collections::Bound":{"T":["std::sync::Arc","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::sync::RwLock","std::sync::atomic::AtomicBool","std::cell::RefCell","std::string::String","std::sync::Mutex","std::num::NonZeroUsize","std::collections::VecDeque","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::boxed::Box","std::num::NonZeroI32","std::collections::Bound","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::ops::Range","std::collections::HashSet","std::ffi::CString","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::time::Duration","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::option::Option","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroU64","std::collections::BTreeSet","std::time::SystemTime","std::num::NonZeroU8","std::net::Ipv6Addr","std::rc::Rc","std::collections::HashMap","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::vec::Vec","std::num::NonZeroI64","std::result::Result","std::num::NonZeroU16","std::net::IpAddr","std::sync::atomic::AtomicU8","std::cell::Cell","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::borrow::Cow"]},"std::collections::HashMap":{"K":["std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroI64","std::string::String","std::num::NonZeroU128","std::num::NonZeroU16","std::net::IpAddr","std::num::NonZeroU64","std::num::NonZeroI8","std::option::Option","std::num::NonZeroI16","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroU32","std::net::Ipv6Addr","std::net::SocketAddrV6","std::net::Ipv4Addr","std::time::SystemTime","std::marker::PhantomData"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::borrow::Cow","std::path::PathBuf","std::num::NonZeroI64","std::collections::HashMap","std::num::NonZeroUsize","std::collections::BinaryHeap","std::option::Option","std::collections::Bound","std::net::SocketAddrV6","std::num::NonZeroI16","std::net::SocketAddr","std::num::NonZeroU32","std::rc::Rc","std::sync::atomic::AtomicU8","std::sync::Mutex","std::num::NonZeroI128","std::cell::RefCell","std::num::NonZeroIsize","std::sync::RwLock","std::sync::atomic::AtomicBool","std::collections::HashSet","std::collections::VecDeque","std::ffi::CString","std::ops::Range","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::time::SystemTime","std::num::NonZeroU8","std::vec::Vec","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::string::String","std::net::IpAddr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::cell::Cell","std::sync::atomic::AtomicU16","std::sync::Arc","std::num::NonZeroU64","std::num::NonZeroU16","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::marker::PhantomData","std::time::Duration","std::collections::BTreeMap","std::boxed::Box","std::sync::atomic::AtomicU32","std::result::Result","std::num::NonZeroI32","std::num::NonZeroU128","std::net::Ipv6Addr","std::net::SocketAddrV4"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::string::String","std::num::NonZeroI32","std::num::NonZeroU32","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroI8","std::num::NonZeroU16","std::marker::PhantomData","std::num::NonZeroU64","std::num::NonZeroU128","std::num::NonZeroI64","std::net::Ipv6Addr","std::ffi::CString","std::time::Duration","std::net::Ipv4Addr"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::collections::BTreeSet","std::net::SocketAddrV6","std::path::PathBuf","std::net::Ipv4Addr","std::sync::Arc","std::collections::HashSet","std::collections::VecDeque","std::num::NonZeroI16","std::num::NonZeroU128","std::sync::Mutex","std::collections::HashMap","std::sync::atomic::AtomicI16","std::boxed::Box","std::marker::PhantomData","std::borrow::Cow","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroUsize","std::num::NonZeroU8","std::collections::BTreeMap","std::net::SocketAddr","std::time::Duration","std::collections::Bound","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::ops::Range","std::num::NonZeroI32","std::sync::RwLock","std::option::Option","std::collections::BinaryHeap","std::ops::RangeInclusive","std::cell::RefCell","std::rc::Rc","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::cell::Cell","std::num::NonZeroU16","std::num::NonZeroU64","std::num::NonZeroIsize","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::string::String","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::ffi::CString","std::result::Result","std::time::SystemTime","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::vec::Vec"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::ffi::CString","std::result::Result","std::sync::atomic::AtomicIsize","std::rc::Rc","std::time::SystemTime","std::collections::HashMap","std::net::Ipv6Addr","std::collections::HashSet","std::num::NonZeroU8","std::num::NonZeroU128","std::net::SocketAddr","std::cell::Cell","std::option::Option","std::net::SocketAddrV6","std::sync::RwLock","std::num::NonZeroI32","std::num::NonZeroIsize","std::boxed::Box","std::sync::atomic::AtomicU16","std::path::PathBuf","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::collections::BinaryHeap","std::num::NonZeroU16","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::sync::Mutex","std::collections::Bound","std::collections::BTreeSet","std::net::Ipv4Addr","std::time::Duration","std::num::NonZeroI16","std::cell::RefCell","std::string::String","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::collections::VecDeque","std::num::NonZeroU64","std::marker::PhantomData","std::vec::Vec","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::net::SocketAddrV4","std::borrow::Cow","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::collections::BTreeMap","std::net::IpAddr","std::ops::Range","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::sync::Arc"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::VecDeque","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::sync::Arc","std::sync::atomic::AtomicI32","std::sync::Mutex","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::ops::RangeInclusive","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::ffi::CString","std::sync::atomic::AtomicU8","std::result::Result","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::net::Ipv6Addr","std::num::NonZeroU8","std::borrow::Cow","std::collections::BTreeMap","std::net::SocketAddr","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::string::String","std::marker::PhantomData","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::collections::HashSet","std::sync::atomic::AtomicBool","std::collections::HashMap","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::time::Duration","std::net::Ipv4Addr","std::net::SocketAddrV6","std::rc::Rc","std::collections::Bound","std::time::SystemTime","std::path::PathBuf","std::num::NonZeroI32","std::boxed::Box","std::cell::Cell","std::sync::RwLock","std::net::SocketAddrV4","std::ops::Range","std::vec::Vec","std::net::IpAddr","std::collections::BTreeSet","std::option::Option","std::cell::RefCell","std::num::NonZeroUsize","std::num::NonZeroIsize","std::num::NonZeroU32"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::cell::RefCell","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::result::Result","std::time::Duration","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::string::String","std::collections::Bound","std::collections::BTreeMap","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroUsize","std::num::NonZeroI128","std::cell::Cell","std::sync::atomic::AtomicUsize","std::option::Option","std::time::SystemTime","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::sync::Arc","std::num::NonZeroU64","std::collections::HashSet","std::borrow::Cow","std::sync::Mutex","std::net::SocketAddrV4","std::num::NonZeroI16","std::net::Ipv6Addr","std::net::SocketAddrV6","std::ffi::CString","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::sync::RwLock","std::net::SocketAddr","std::ops::Range","std::net::Ipv4Addr","std::collections::HashMap","std::path::PathBuf","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::collections::BTreeSet","std::net::IpAddr","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::collections::BinaryHeap","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::boxed::Box","std::rc::Rc","std::vec::Vec"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // BD
+de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::borrow_decode(p0);
+crate::de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::borrow_decode(p0);
+<(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::borrow_decode(p0);
-----------------
src/de/impl_tuples.rs de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::decode":{"A":["de::Decode","std::marker::Sized"],"B":["std::marker::Sized","de::Decode"],"C":["de::Decode","std::marker::Sized"],"D":["std::marker::Sized","de::Decode"],"DE":["de::Decoder","std::marker::Sized"],"E":["de::Decode","std::marker::Sized"],"F":["std::marker::Sized","de::Decode"],"G":["de::Decode","std::marker::Sized"],"H":["std::marker::Sized","de::Decode"],"I":["de::Decode","std::marker::Sized"],"J":["std::marker::Sized","de::Decode"],"K":["std::marker::Sized","de::Decode"],"L":["de::Decode","std::marker::Sized"],"M":["std::marker::Sized","de::Decode"],"N":["de::Decode","std::marker::Sized"],"O":["std::marker::Sized","de::Decode"],"P":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["de::Decode","enc::Encode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode"],"V":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Ord","std::marker::Sized"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","enc::Encode","std::cmp::Eq","std::marker::Sized","std::hash::Hash","de::Decode"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["enc::Encode","de::Decode","std::cmp::Eq","std::hash::Hash","std::marker::Sized","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","config::Limit","config::NoLimit","config::Varint","config::Fixint","config::BigEndian","std::clone::impls::<impl std::clone::Clone for &T>","config::LittleEndian"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::decode":{"A":["std::net::IpAddr","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::net::SocketAddrV6","std::string::String","std::sync::atomic::AtomicI8","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroI32","std::sync::Arc","std::sync::atomic::AtomicU16","std::option::Option","std::vec::Vec","std::net::Ipv6Addr","std::borrow::Cow","std::collections::BinaryHeap","std::ops::Range","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::time::SystemTime","std::cell::Cell","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::collections::HashMap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroI128","std::boxed::Box","std::net::SocketAddr","std::collections::Bound","std::num::NonZeroU32","std::collections::BTreeSet","std::collections::BTreeMap","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroI64","std::ffi::CString","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::num::NonZeroU128","std::sync::RwLock","std::sync::Mutex","std::collections::HashSet","std::cell::RefCell","std::result::Result","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::ops::RangeInclusive"],"B":["std::result::Result","std::path::PathBuf","std::num::NonZeroI8","std::time::Duration","std::sync::Mutex","std::num::NonZeroU64","std::num::NonZeroUsize","std::cell::Cell","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::net::IpAddr","std::num::NonZeroU8","std::ffi::CString","std::net::SocketAddrV6","std::collections::HashMap","std::string::String","std::time::SystemTime","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::ops::RangeInclusive","std::collections::HashSet","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::collections::BTreeMap","std::num::NonZeroU128","std::num::NonZeroIsize","std::borrow::Cow","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::num::NonZeroU16","std::boxed::Box","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::collections::Bound","std::collections::VecDeque","std::rc::Rc","std::ops::Range","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::sync::Arc","std::collections::BTreeSet","std::collections::BinaryHeap","std::net::Ipv6Addr","std::option::Option","std::vec::Vec","std::sync::atomic::AtomicU64","std::sync::RwLock","std::net::Ipv4Addr"],"C":["std::option::Option","std::collections::Bound","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::path::PathBuf","std::borrow::Cow","std::num::NonZeroUsize","std::sync::RwLock","std::boxed::Box","std::string::String","std::cell::Cell","std::ops::Range","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::result::Result","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::vec::Vec","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::collections::HashMap","std::collections::HashSet","std::num::NonZeroU8","std::net::SocketAddr","std::num::NonZeroIsize","std::cell::RefCell","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::num::NonZeroU64","std::time::SystemTime","std::num::NonZeroI64","std::time::Duration","std::num::NonZeroI8","std::net::SocketAddrV6","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::sync::Arc","std::rc::Rc","std::ffi::CString","std::net::Ipv6Addr","std::num::NonZeroI32","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::sync::Mutex","std::num::NonZeroI128","std::collections::BTreeSet","std::marker::PhantomData","std::collections::BTreeMap","std::net::IpAddr","std::num::NonZeroU16"],"D":["std::path::PathBuf","std::num::NonZeroU64","std::net::IpAddr","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::num::NonZeroUsize","std::net::SocketAddrV6","std::cell::RefCell","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::collections::BTreeSet","std::option::Option","std::net::Ipv4Addr","std::collections::BinaryHeap","std::sync::RwLock","std::collections::BTreeMap","std::net::SocketAddr","std::collections::Bound","std::sync::atomic::AtomicU8","std::boxed::Box","std::rc::Rc","std::ops::Range","std::num::NonZeroIsize","std::sync::Arc","std::vec::Vec","std::num::NonZeroU8","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::cell::Cell","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::string::String","std::borrow::Cow","std::num::NonZeroI16","std::collections::VecDeque","std::ffi::CString","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::result::Result","std::time::SystemTime","std::collections::HashMap","std::num::NonZeroI32","std::num::NonZeroI64","std::time::Duration","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8"],"DE":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"E":["std::path::PathBuf","std::num::NonZeroIsize","std::borrow::Cow","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::num::NonZeroU32","std::num::NonZeroU128","std::ops::RangeInclusive","std::num::NonZeroUsize","std::ops::Range","std::sync::RwLock","std::net::Ipv4Addr","std::num::NonZeroU16","std::ffi::CString","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::vec::Vec","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::collections::BinaryHeap","std::collections::BTreeMap","std::net::IpAddr","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::time::Duration","std::sync::Arc","std::string::String","std::sync::atomic::AtomicIsize","std::rc::Rc","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::time::SystemTime","std::collections::Bound","std::net::SocketAddrV6","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::cell::RefCell","std::sync::Mutex","std::option::Option","std::num::NonZeroI64","std::boxed::Box","std::net::SocketAddrV4","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::collections::HashMap","std::cell::Cell","std::result::Result"],"F":["std::num::NonZeroI128","std::cell::RefCell","std::borrow::Cow","std::sync::atomic::AtomicU32","std::collections::Bound","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::collections::HashSet","std::string::String","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::time::Duration","std::ops::Range","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::num::NonZeroU32","std::collections::BinaryHeap","std::path::PathBuf","std::ffi::CString","std::ops::RangeInclusive","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroI64","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroU16","std::sync::Arc","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::collections::HashMap","std::collections::BTreeMap","std::cell::Cell","std::num::NonZeroI32","std::result::Result","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::rc::Rc","std::net::SocketAddr","std::boxed::Box","std::sync::atomic::AtomicU8","std::vec::Vec","std::num::NonZeroU64","std::sync::RwLock","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::collections::VecDeque","std::num::NonZeroUsize","std::option::Option"],"G":["std::marker::PhantomData","std::collections::BTreeSet","std::num::NonZeroI128","std::collections::VecDeque","std::num::NonZeroI16","std::sync::RwLock","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::num::NonZeroU8","std::net::SocketAddrV6","std::num::NonZeroI8","std::net::Ipv4Addr","std::num::NonZeroI64","std::string::String","std::net::IpAddr","std::num::NonZeroU64","std::path::PathBuf","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::sync::Arc","std::collections::HashMap","std::sync::atomic::AtomicI16","std::boxed::Box","std::ops::RangeInclusive","std::result::Result","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::rc::Rc","std::collections::BinaryHeap","std::num::NonZeroUsize","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::sync::Mutex","std::net::SocketAddr","std::cell::RefCell","std::cell::Cell","std::sync::atomic::AtomicI32","std::time::Duration","std::collections::BTreeMap","std::borrow::Cow","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::collections::Bound","std::ops::Range","std::ffi::CString","std::sync::atomic::AtomicBool","std::vec::Vec","std::collections::HashSet","std::option::Option","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::time::SystemTime","std::num::NonZeroU16"],"H":["std::time::SystemTime","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::num::NonZeroI8","std::path::PathBuf","std::num::NonZeroI128","std::time::Duration","std::net::SocketAddrV6","std::net::Ipv6Addr","std::marker::PhantomData","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::cell::Cell","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroI16","std::collections::Bound","std::net::IpAddr","std::num::NonZeroU32","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::sync::Arc","std::result::Result","std::rc::Rc","std::net::SocketAddr","std::string::String","std::num::NonZeroUsize","std::num::NonZeroIsize","std::ops::RangeInclusive","std::ffi::CString","std::sync::atomic::AtomicI32","std::option::Option","std::num::NonZeroI32","std::collections::BinaryHeap","std::num::NonZeroU16","std::sync::RwLock","std::boxed::Box","std::borrow::Cow","std::vec::Vec","std::collections::VecDeque","std::collections::BTreeMap","std::collections::HashMap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::sync::Mutex","std::collections::BTreeSet","std::ops::Range","std::sync::atomic::AtomicIsize"],"I":["std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroU64","std::collections::BinaryHeap","std::collections::Bound","std::string::String","std::net::IpAddr","std::num::NonZeroI32","std::collections::VecDeque","std::ops::RangeInclusive","std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroU32","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::time::Duration","std::sync::atomic::AtomicI8","std::vec::Vec","std::sync::atomic::AtomicU16","std::option::Option","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::sync::atomic::AtomicI64","std::sync::RwLock","std::path::PathBuf","std::result::Result","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::time::SystemTime","std::cell::RefCell","std::sync::Arc","std::collections::HashSet","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::borrow::Cow","std::net::SocketAddr","std::ffi::CString","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::num::NonZeroI128","std::net::Ipv4Addr","std::boxed::Box","std::sync::atomic::AtomicUsize","std::rc::Rc","std::net::Ipv6Addr","std::collections::BTreeMap","std::ops::Range","std::net::SocketAddrV6","std::collections::BTreeSet"],"J":["std::collections::HashSet","std::option::Option","std::collections::BinaryHeap","std::num::NonZeroI128","std::num::NonZeroI8","std::borrow::Cow","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::cell::Cell","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::ops::Range","std::num::NonZeroU16","std::collections::Bound","std::vec::Vec","std::collections::BTreeMap","std::result::Result","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::marker::PhantomData","std::time::SystemTime","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::time::Duration","std::cell::RefCell","std::ffi::CString","std::num::NonZeroI16","std::net::SocketAddr","std::net::SocketAddrV6","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::boxed::Box","std::num::NonZeroU128","std::num::NonZeroI32","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::net::IpAddr","std::collections::VecDeque","std::string::String","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::num::NonZeroUsize","std::sync::Arc","std::rc::Rc","std::sync::RwLock","std::sync::atomic::AtomicBool","std::path::PathBuf","std::ops::RangeInclusive","std::net::Ipv4Addr","std::sync::Mutex"],"K":["std::num::NonZeroI32","std::collections::BTreeSet","std::num::NonZeroUsize","std::collections::VecDeque","std::option::Option","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::rc::Rc","std::collections::HashSet","std::vec::Vec","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::cell::RefCell","std::cell::Cell","std::sync::RwLock","std::collections::HashMap","std::net::SocketAddrV6","std::time::SystemTime","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::net::Ipv4Addr","std::borrow::Cow","std::sync::atomic::AtomicI16","std::sync::Mutex","std::time::Duration","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::collections::Bound","std::num::NonZeroIsize","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::path::PathBuf","std::result::Result","std::num::NonZeroI8","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::num::NonZeroU64","std::num::NonZeroU8","std::string::String","std::boxed::Box","std::sync::atomic::AtomicU16","std::sync::Arc","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::num::NonZeroU128","std::marker::PhantomData","std::net::IpAddr","std::ops::Range","std::num::NonZeroU16","std::ffi::CString","std::sync::atomic::AtomicI8"],"L":["std::time::Duration","std::sync::atomic::AtomicU16","std::collections::HashMap","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::sync::Arc","std::num::NonZeroI16","std::vec::Vec","std::cell::Cell","std::collections::VecDeque","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::string::String","std::sync::Mutex","std::option::Option","std::ffi::CString","std::sync::atomic::AtomicU32","std::cell::RefCell","std::ops::Range","std::net::Ipv4Addr","std::marker::PhantomData","std::collections::BinaryHeap","std::num::NonZeroIsize","std::ops::RangeInclusive","std::net::SocketAddr","std::collections::HashSet","std::net::Ipv6Addr","std::result::Result","std::collections::BTreeSet","std::boxed::Box","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::borrow::Cow","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::time::SystemTime","std::net::IpAddr","std::collections::Bound","std::sync::atomic::AtomicBool","std::path::PathBuf","std::collections::BTreeMap","std::num::NonZeroI64","std::rc::Rc","std::sync::RwLock"],"M":["std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::sync::Mutex","std::time::Duration","std::option::Option","std::sync::RwLock","std::collections::VecDeque","std::ops::RangeInclusive","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::collections::BinaryHeap","std::boxed::Box","std::sync::Arc","std::num::NonZeroI128","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::collections::HashSet","std::collections::HashMap","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::num::NonZeroI32","std::net::Ipv6Addr","std::num::NonZeroU128","std::num::NonZeroU16","std::net::SocketAddrV6","std::string::String","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::vec::Vec","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::path::PathBuf","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::collections::Bound","std::ffi::CString","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::rc::Rc","std::ops::Range","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::cell::Cell","std::borrow::Cow","std::time::SystemTime","std::num::NonZeroIsize","std::result::Result","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::net::IpAddr"],"N":["std::collections::Bound","std::time::Duration","std::vec::Vec","std::ops::Range","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::collections::BinaryHeap","std::result::Result","std::sync::RwLock","std::path::PathBuf","std::sync::Arc","std::collections::HashMap","std::rc::Rc","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::num::NonZeroU8","std::string::String","std::sync::atomic::AtomicBool","std::net::IpAddr","std::cell::RefCell","std::ops::RangeInclusive","std::num::NonZeroU128","std::time::SystemTime","std::ffi::CString","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::Mutex","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::boxed::Box","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::net::SocketAddrV6","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroU64","std::num::NonZeroI32","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::net::Ipv4Addr","std::num::NonZeroI128","std::option::Option","std::num::NonZeroUsize","std::cell::Cell","std::collections::BTreeMap","std::collections::HashSet","std::borrow::Cow","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16"],"O":["std::path::PathBuf","std::time::Duration","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::collections::HashMap","std::num::NonZeroU8","std::sync::Mutex","std::cell::Cell","std::option::Option","std::collections::BinaryHeap","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::sync::Arc","std::sync::atomic::AtomicI8","std::vec::Vec","std::num::NonZeroI8","std::collections::BTreeSet","std::borrow::Cow","std::string::String","std::sync::atomic::AtomicI64","std::cell::RefCell","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::rc::Rc","std::net::Ipv6Addr","std::boxed::Box","std::ops::Range","std::sync::RwLock","std::result::Result","std::net::SocketAddr","std::num::NonZeroU16","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::num::NonZeroI64","std::collections::BTreeMap","std::time::SystemTime","std::ops::RangeInclusive","std::net::SocketAddrV6","std::num::NonZeroU32","std::ffi::CString","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::collections::Bound","std::collections::HashSet","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8"],"P":["std::sync::Arc","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::net::Ipv4Addr","std::collections::HashSet","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::time::Duration","std::num::NonZeroIsize","std::collections::VecDeque","std::time::SystemTime","std::net::SocketAddrV4","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::num::NonZeroU16","std::num::NonZeroU128","std::boxed::Box","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::collections::Bound","std::net::SocketAddr","std::result::Result","std::rc::Rc","std::vec::Vec","std::cell::Cell","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::num::NonZeroU64","std::net::Ipv6Addr","std::net::IpAddr","std::collections::BinaryHeap","std::path::PathBuf","std::borrow::Cow","std::collections::BTreeMap","std::ffi::CString","std::sync::Mutex","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::num::NonZeroUsize","std::num::NonZeroI8","std::ops::Range","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::string::String","std::collections::HashMap"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::ffi::CStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::sync::Arc","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroU64","std::num::NonZeroIsize","std::path::PathBuf","std::num::NonZeroI16","std::cell::RefCell","std::marker::PhantomData","std::time::Duration","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroI128","std::num::NonZeroI64","std::string::String","std::net::SocketAddrV6","std::net::SocketAddrV4","std::rc::Rc","std::time::SystemTime","std::num::NonZeroU16","std::ffi::CString","std::net::IpAddr","std::cell::Cell"],"V":["std::collections::Bound","std::ops::Range","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroUsize","std::sync::RwLock","std::sync::atomic::AtomicI64","std::sync::Arc","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::boxed::Box","std::option::Option","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::collections::VecDeque","std::sync::Mutex","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::cell::Cell","std::cell::RefCell","std::sync::atomic::AtomicU16","std::time::SystemTime","std::vec::Vec","std::collections::BTreeMap","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::num::NonZeroI8","std::rc::Rc","std::collections::BTreeSet","std::num::NonZeroI16","std::borrow::Cow","std::collections::HashSet","std::num::NonZeroU16","std::collections::HashMap","std::result::Result","std::num::NonZeroU32","std::num::NonZeroU128","std::net::IpAddr","std::time::Duration","std::sync::atomic::AtomicBool","std::ffi::CString","std::num::NonZeroI128","std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroU64","std::string::String"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::net::Ipv6Addr","std::num::NonZeroUsize","std::num::NonZeroU64","std::net::Ipv4Addr","std::marker::PhantomData","std::string::String","std::cell::Cell","std::num::NonZeroI64","std::ffi::CString","std::sync::Arc","std::time::Duration","std::option::Option","std::num::NonZeroU32","std::num::NonZeroI16","std::num::NonZeroU16","std::path::PathBuf","std::num::NonZeroI32","std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroU8"]},"std::collections::BinaryHeap":{"T":["std::net::IpAddr","std::option::Option","std::num::NonZeroU32","std::net::SocketAddrV4","std::sync::Arc","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroI8","std::ffi::CString"]},"std::collections::Bound":{"T":["std::sync::Mutex","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::ops::Range","std::collections::BinaryHeap","std::time::SystemTime","std::net::SocketAddrV4","std::ops::RangeInclusive","std::cell::RefCell","std::string::String","std::collections::VecDeque","std::num::NonZeroUsize","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::time::Duration","std::collections::Bound","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::cell::Cell","std::ffi::CString","std::num::NonZeroI8","std::num::NonZeroU64","std::num::NonZeroI128","std::net::Ipv4Addr","std::rc::Rc","std::collections::HashMap","std::option::Option","std::num::NonZeroU32","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::path::PathBuf","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::sync::Arc","std::marker::PhantomData","std::num::NonZeroU16","std::borrow::Cow","std::num::NonZeroI32","std::result::Result","std::net::SocketAddr","std::net::IpAddr","std::collections::HashSet","std::sync::RwLock","std::boxed::Box","std::net::SocketAddrV6","std::num::NonZeroU8","std::vec::Vec","std::collections::BTreeSet","std::collections::BTreeMap"]},"std::collections::HashMap":{"K":["std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroI128","std::num::NonZeroI64","std::net::IpAddr","std::net::Ipv6Addr","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroU64","std::net::SocketAddr","std::net::Ipv4Addr","std::net::SocketAddrV6","std::sync::Arc","std::num::NonZeroU128","std::string::String","std::num::NonZeroI32","std::ffi::CString"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::marker::PhantomData","std::net::Ipv6Addr","std::sync::Arc","std::net::SocketAddrV4","std::ops::RangeInclusive","std::num::NonZeroU16","std::cell::RefCell","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::result::Result","std::collections::Bound","std::rc::Rc","std::collections::VecDeque","std::time::SystemTime","std::num::NonZeroUsize","std::collections::HashMap","std::sync::RwLock","std::num::NonZeroU64","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::option::Option","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::ffi::CString","std::sync::atomic::AtomicU16","std::sync::Mutex","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::time::Duration","std::boxed::Box","std::net::SocketAddr","std::num::NonZeroI128","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::collections::BinaryHeap","std::vec::Vec","std::cell::Cell","std::borrow::Cow","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::collections::BTreeSet","std::string::String","std::sync::atomic::AtomicU8","std::ops::Range","std::collections::HashSet"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::net::Ipv4Addr","std::num::NonZeroU8","std::sync::Arc","std::string::String","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroI64","std::time::SystemTime","std::num::NonZeroI128","std::time::Duration","std::num::NonZeroI8","std::net::SocketAddrV4","std::ffi::CString","std::marker::PhantomData","std::net::SocketAddr"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroI128","std::path::PathBuf","std::collections::HashMap","std::net::IpAddr","std::boxed::Box","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::sync::Mutex","std::num::NonZeroU16","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::option::Option","std::ops::Range","std::net::Ipv6Addr","std::collections::BTreeSet","std::string::String","std::num::NonZeroU64","std::sync::Arc","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::time::SystemTime","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::cell::Cell","std::net::SocketAddr","std::marker::PhantomData","std::collections::BinaryHeap","std::result::Result","std::num::NonZeroU32","std::collections::Bound","std::vec::Vec","std::cell::RefCell","std::ffi::CString","std::sync::RwLock","std::time::Duration","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::collections::HashSet","std::rc::Rc","std::num::NonZeroI64","std::net::Ipv4Addr","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroUsize","std::borrow::Cow"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::string::String","std::collections::BTreeSet","std::net::SocketAddrV6","std::result::Result","std::num::NonZeroI8","std::path::PathBuf","std::cell::RefCell","std::boxed::Box","std::collections::VecDeque","std::num::NonZeroU64","std::num::NonZeroU16","std::net::SocketAddr","std::borrow::Cow","std::ops::RangeInclusive","std::num::NonZeroU32","std::ffi::CString","std::num::NonZeroI32","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::num::NonZeroI64","std::option::Option","std::sync::atomic::AtomicI32","std::collections::Bound","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::num::NonZeroU8","std::cell::Cell","std::ops::Range","std::sync::RwLock","std::marker::PhantomData","std::sync::Mutex","std::net::SocketAddrV4","std::time::Duration","std::net::IpAddr","std::rc::Rc","std::sync::Arc","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::time::SystemTime","std::net::Ipv4Addr","std::collections::HashSet","std::vec::Vec","std::num::NonZeroU128","std::sync::atomic::AtomicI64"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicU32","std::collections::HashMap","std::collections::BTreeMap","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::time::SystemTime","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::ops::Range","std::sync::atomic::AtomicI64","std::cell::Cell","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::string::String","std::num::NonZeroU128","std::ops::RangeInclusive","std::rc::Rc","std::result::Result","std::option::Option","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::borrow::Cow","std::num::NonZeroUsize","std::num::NonZeroIsize","std::marker::PhantomData","std::collections::HashSet","std::num::NonZeroI32","std::net::IpAddr","std::vec::Vec","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::boxed::Box","std::num::NonZeroI64","std::sync::RwLock","std::sync::Mutex","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::sync::Arc","std::collections::BTreeSet","std::collections::Bound","std::time::Duration","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::cell::RefCell","std::net::SocketAddrV4","std::num::NonZeroU8"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::sync::Mutex","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::collections::HashMap","std::collections::Bound","std::sync::atomic::AtomicU32","std::string::String","std::sync::Arc","std::net::IpAddr","std::net::SocketAddr","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::sync::RwLock","std::option::Option","std::collections::BTreeMap","std::num::NonZeroI8","std::vec::Vec","std::num::NonZeroUsize","std::cell::RefCell","std::rc::Rc","std::ops::RangeInclusive","std::time::SystemTime","std::num::NonZeroI64","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::num::NonZeroI32","std::net::Ipv6Addr","std::result::Result","std::time::Duration","std::ops::Range","std::num::NonZeroU8","std::collections::HashSet","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::boxed::Box","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::ffi::CString","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::collections::BinaryHeap","std::num::NonZeroU64","std::cell::Cell","std::num::NonZeroU32","std::net::SocketAddrV6","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::borrow::Cow","std::path::PathBuf"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // DE
+de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::decode(p0);
+crate::de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::decode(p0);
+<(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for bool>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::Decode for bool>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for bool>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for bool>::decode(p0);
+crate::de::impls::<impl de::Decode for bool>::decode(p0);
+<bool>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for bool>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for bool>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for bool>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for bool>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for bool>::borrow_decode(p0);
+<bool>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for u8>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::Decode for u8>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for u8>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for u8>::decode(p0);
+crate::de::impls::<impl de::Decode for u8>::decode(p0);
+<u8>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for u8>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::BorrowDecode<'de> for u8>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for u8>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for u8>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for u8>::borrow_decode(p0);
+<u8>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::num::NonZeroU8>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::Decode for std::num::NonZeroU8>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::num::NonZeroU8>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::num::NonZeroU8>::decode(p0);
+crate::de::impls::<impl de::Decode for std::num::NonZeroU8>::decode(p0);
+<std::num::NonZeroU8>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU8>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU8>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU8>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU8>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU8>::borrow_decode(p0);
+<std::num::NonZeroU8>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for u16>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::Decode for u16>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for u16>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for u16>::decode(p0);
+crate::de::impls::<impl de::Decode for u16>::decode(p0);
+<u16>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for u16>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"L":["std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for u16>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for u16>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for u16>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for u16>::borrow_decode(p0);
+<u16>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::num::NonZeroU16>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"de::impls::<impl de::Decode for std::num::NonZeroU16>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::num::NonZeroU16>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::num::NonZeroU16>::decode(p0);
+crate::de::impls::<impl de::Decode for std::num::NonZeroU16>::decode(p0);
+<std::num::NonZeroU16>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU16>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU16>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU16>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU16>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU16>::borrow_decode(p0);
+<std::num::NonZeroU16>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for u32>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"de::impls::<impl de::Decode for u32>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for u32>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for u32>::decode(p0);
+crate::de::impls::<impl de::Decode for u32>::decode(p0);
+<u32>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for u32>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for u32>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for u32>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for u32>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for u32>::borrow_decode(p0);
+<u32>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::num::NonZeroU32>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::Decode for std::num::NonZeroU32>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::num::NonZeroU32>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::num::NonZeroU32>::decode(p0);
+crate::de::impls::<impl de::Decode for std::num::NonZeroU32>::decode(p0);
+<std::num::NonZeroU32>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU32>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU32>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU32>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU32>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU32>::borrow_decode(p0);
+<std::num::NonZeroU32>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for u64>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"de::impls::<impl de::Decode for u64>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for u64>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for u64>::decode(p0);
+crate::de::impls::<impl de::Decode for u64>::decode(p0);
+<u64>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for u64>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for u64>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for u64>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for u64>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for u64>::borrow_decode(p0);
+<u64>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::num::NonZeroU64>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::Decode for std::num::NonZeroU64>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::num::NonZeroU64>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::num::NonZeroU64>::decode(p0);
+crate::de::impls::<impl de::Decode for std::num::NonZeroU64>::decode(p0);
+<std::num::NonZeroU64>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU64>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU64>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU64>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU64>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU64>::borrow_decode(p0);
+<std::num::NonZeroU64>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for u128>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::Decode for u128>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for u128>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for u128>::decode(p0);
+crate::de::impls::<impl de::Decode for u128>::decode(p0);
+<u128>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for u128>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for u128>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for u128>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for u128>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for u128>::borrow_decode(p0);
+<u128>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::num::NonZeroU128>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::Decode for std::num::NonZeroU128>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::num::NonZeroU128>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::num::NonZeroU128>::decode(p0);
+crate::de::impls::<impl de::Decode for std::num::NonZeroU128>::decode(p0);
+<std::num::NonZeroU128>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU128>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU128>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU128>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU128>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU128>::borrow_decode(p0);
+<std::num::NonZeroU128>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for usize>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::Decode for usize>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for usize>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for usize>::decode(p0);
+crate::de::impls::<impl de::Decode for usize>::decode(p0);
+<usize>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for usize>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::BorrowDecode<'de> for usize>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for usize>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for usize>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for usize>::borrow_decode(p0);
+<usize>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::num::NonZeroUsize>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"de::impls::<impl de::Decode for std::num::NonZeroUsize>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::num::NonZeroUsize>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::num::NonZeroUsize>::decode(p0);
+crate::de::impls::<impl de::Decode for std::num::NonZeroUsize>::decode(p0);
+<std::num::NonZeroUsize>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroUsize>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroUsize>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroUsize>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroUsize>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroUsize>::borrow_decode(p0);
+<std::num::NonZeroUsize>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for i8>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"de::impls::<impl de::Decode for i8>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for i8>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for i8>::decode(p0);
+crate::de::impls::<impl de::Decode for i8>::decode(p0);
+<i8>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for i8>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for i8>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for i8>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for i8>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for i8>::borrow_decode(p0);
+<i8>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::num::NonZeroI8>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::Decode for std::num::NonZeroI8>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::num::NonZeroI8>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::num::NonZeroI8>::decode(p0);
+crate::de::impls::<impl de::Decode for std::num::NonZeroI8>::decode(p0);
+<std::num::NonZeroI8>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI8>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI8>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI8>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI8>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI8>::borrow_decode(p0);
+<std::num::NonZeroI8>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for i16>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::Decode for i16>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for i16>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for i16>::decode(p0);
+crate::de::impls::<impl de::Decode for i16>::decode(p0);
+<i16>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for i16>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for i16>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for i16>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for i16>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for i16>::borrow_decode(p0);
+<i16>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::num::NonZeroI16>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::Decode for std::num::NonZeroI16>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::num::NonZeroI16>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::num::NonZeroI16>::decode(p0);
+crate::de::impls::<impl de::Decode for std::num::NonZeroI16>::decode(p0);
+<std::num::NonZeroI16>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI16>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI16>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI16>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI16>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI16>::borrow_decode(p0);
+<std::num::NonZeroI16>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for i32>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::Decode for i32>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for i32>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for i32>::decode(p0);
+crate::de::impls::<impl de::Decode for i32>::decode(p0);
+<i32>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for i32>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Copy"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for i32>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for i32>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for i32>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for i32>::borrow_decode(p0);
+<i32>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::num::NonZeroI32>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::Decode for std::num::NonZeroI32>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::num::NonZeroI32>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::num::NonZeroI32>::decode(p0);
+crate::de::impls::<impl de::Decode for std::num::NonZeroI32>::decode(p0);
+<std::num::NonZeroI32>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI32>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI32>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI32>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI32>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI32>::borrow_decode(p0);
+<std::num::NonZeroI32>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for i64>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::Decode for i64>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for i64>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for i64>::decode(p0);
+crate::de::impls::<impl de::Decode for i64>::decode(p0);
+<i64>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for i64>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::BorrowDecode<'de> for i64>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for i64>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for i64>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for i64>::borrow_decode(p0);
+<i64>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::num::NonZeroI64>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::Decode for std::num::NonZeroI64>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::num::NonZeroI64>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::num::NonZeroI64>::decode(p0);
+crate::de::impls::<impl de::Decode for std::num::NonZeroI64>::decode(p0);
+<std::num::NonZeroI64>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI64>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI64>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI64>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI64>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI64>::borrow_decode(p0);
+<std::num::NonZeroI64>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for i128>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::Decode for i128>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for i128>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for i128>::decode(p0);
+crate::de::impls::<impl de::Decode for i128>::decode(p0);
+<i128>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for i128>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::BorrowDecode<'de> for i128>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for i128>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for i128>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for i128>::borrow_decode(p0);
+<i128>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::num::NonZeroI128>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::Decode for std::num::NonZeroI128>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::num::NonZeroI128>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::num::NonZeroI128>::decode(p0);
+crate::de::impls::<impl de::Decode for std::num::NonZeroI128>::decode(p0);
+<std::num::NonZeroI128>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI128>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI128>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI128>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI128>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI128>::borrow_decode(p0);
+<std::num::NonZeroI128>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for isize>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"de::impls::<impl de::Decode for isize>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for isize>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for isize>::decode(p0);
+crate::de::impls::<impl de::Decode for isize>::decode(p0);
+<isize>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for isize>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for isize>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for isize>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for isize>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for isize>::borrow_decode(p0);
+<isize>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::num::NonZeroIsize>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::Decode for std::num::NonZeroIsize>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::num::NonZeroIsize>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::num::NonZeroIsize>::decode(p0);
+crate::de::impls::<impl de::Decode for std::num::NonZeroIsize>::decode(p0);
+<std::num::NonZeroIsize>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroIsize>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroIsize>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroIsize>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroIsize>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroIsize>::borrow_decode(p0);
+<std::num::NonZeroIsize>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for f32>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::Decode for f32>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for f32>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for f32>::decode(p0);
+crate::de::impls::<impl de::Decode for f32>::decode(p0);
+<f32>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for f32>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for f32>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for f32>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for f32>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for f32>::borrow_decode(p0);
+<f32>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for f64>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::Decode for f64>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for f64>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for f64>::decode(p0);
+crate::de::impls::<impl de::Decode for f64>::decode(p0);
+<f64>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for f64>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Copy"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"I":["std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for f64>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for f64>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for f64>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for f64>::borrow_decode(p0);
+<f64>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for char>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::Decode for char>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for char>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for char>::decode(p0);
+crate::de::impls::<impl de::Decode for char>::decode(p0);
+<char>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for char>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for char>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for char>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for char>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for char>::borrow_decode(p0);
+<char>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::BorrowDecode<'de> for &'a [u8]>::borrow_decode
'a,'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for &'a [u8]>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for &'a [u8]>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for &'a [u8]>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for &'a [u8]>::borrow_decode(p0);
+<&'a [u8]>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::BorrowDecode<'de> for &'a str>::borrow_decode
'a,'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for &'a str>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for &'a str>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for &'a str>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for &'a str>::borrow_decode(p0);
+<&'a str>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for [T; N]>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::Decode for [T; N]>::decode":{"D":["de::Decoder","std::marker::Sized"],"T":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode","std::cmp::Ord"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::cmp::Ord","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::Bound":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::HashMap":{"K":["std::marker::Sized","de::Decode","std::cmp::Eq","de::BorrowDecode","std::hash::Hash","enc::Encode"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["de::Decode","std::hash::Hash","de::BorrowDecode","std::marker::Sized","enc::Encode","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Fixint","config::Configuration","config::LittleEndian","config::Varint","std::clone::impls::<impl std::clone::Clone for *const T>","config::BigEndian","config::NoLimit","config::Limit"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for [T; N]>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"T":["std::sync::RwLock","std::collections::VecDeque","std::cell::Cell","std::marker::PhantomData","std::boxed::Box","std::vec::Vec","std::net::SocketAddrV4","std::sync::Arc","std::option::Option","std::borrow::Cow","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::collections::BinaryHeap","std::num::NonZeroU64","std::num::NonZeroI16","std::num::NonZeroU16","std::num::NonZeroUsize","std::ops::Range","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::num::NonZeroU32","std::net::Ipv4Addr","std::num::NonZeroI64","std::cell::RefCell","std::collections::HashSet","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::collections::Bound","std::num::NonZeroIsize","std::ffi::CString","std::time::Duration","std::string::String","std::sync::atomic::AtomicU64","std::time::SystemTime","std::num::NonZeroU128","std::net::Ipv6Addr","std::collections::BTreeSet","std::net::IpAddr","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::sync::Mutex","std::collections::HashMap","std::num::NonZeroU8","std::ops::RangeInclusive","std::result::Result","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::path::PathBuf","std::rc::Rc","std::sync::atomic::AtomicU16"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::path::Path","<T as std::borrow::ToOwned>","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::cell::Cell","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroU64","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroU32","std::num::NonZeroI32","std::num::NonZeroI64","std::string::String","std::num::NonZeroU8","std::net::SocketAddrV6","std::net::IpAddr","std::sync::Arc","std::num::NonZeroU16","std::time::SystemTime","std::rc::Rc","std::time::Duration","std::num::NonZeroI8","std::net::Ipv4Addr","std::num::NonZeroIsize","std::marker::PhantomData","std::cell::RefCell","std::option::Option"],"V":["std::num::NonZeroI128","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::cell::Cell","std::collections::HashSet","std::num::NonZeroU16","std::marker::PhantomData","std::cell::RefCell","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::vec::Vec","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::net::IpAddr","std::net::SocketAddr","std::result::Result","std::net::Ipv6Addr","std::ops::Range","std::option::Option","std::ffi::CString","std::collections::VecDeque","std::num::NonZeroI32","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::rc::Rc","std::boxed::Box","std::string::String","std::net::Ipv4Addr","std::collections::Bound","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::collections::HashMap","std::time::SystemTime","std::num::NonZeroU8","std::sync::Mutex","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::net::SocketAddrV4","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::path::PathBuf","std::num::NonZeroI16","std::sync::RwLock","std::borrow::Cow","std::num::NonZeroI64","std::time::Duration"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI8","std::cell::Cell","std::num::NonZeroI128","std::option::Option","std::net::SocketAddr","std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroU16","std::num::NonZeroIsize","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroUsize","std::marker::PhantomData","std::time::SystemTime","std::sync::Arc","std::num::NonZeroI64","std::net::Ipv4Addr","std::net::IpAddr","std::time::Duration","std::net::Ipv6Addr","std::num::NonZeroU128","std::num::NonZeroU64","std::string::String","std::num::NonZeroI32"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddr","std::net::Ipv6Addr","std::option::Option","std::marker::PhantomData","std::rc::Rc","std::num::NonZeroIsize","std::num::NonZeroI32","std::num::NonZeroU16","std::num::NonZeroU64","std::cell::RefCell","std::cell::Cell","std::net::SocketAddrV4","std::num::NonZeroU8","std::path::PathBuf","std::num::NonZeroI8","std::num::NonZeroU32","std::sync::Arc","std::ffi::CString","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroI16","std::net::IpAddr","std::num::NonZeroUsize","std::time::SystemTime","std::num::NonZeroI128","std::net::SocketAddrV6","std::string::String"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::collections::BinaryHeap","std::sync::Arc","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::time::Duration","std::borrow::Cow","std::option::Option","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::collections::HashSet","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::net::SocketAddrV6","std::time::SystemTime","std::sync::atomic::AtomicU8","std::ffi::CString","std::num::NonZeroI8","std::ops::Range","std::num::NonZeroIsize","std::num::NonZeroU16","std::path::PathBuf","std::sync::RwLock","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::string::String","std::collections::BTreeMap","std::marker::PhantomData","std::num::NonZeroU64","std::num::NonZeroI128","std::net::SocketAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::boxed::Box","std::num::NonZeroI64","std::num::NonZeroI16","std::net::Ipv4Addr","std::result::Result","std::net::Ipv6Addr","std::collections::BTreeSet","std::collections::HashMap","std::cell::RefCell","std::sync::Mutex","std::rc::Rc","std::sync::atomic::AtomicI16","std::collections::Bound","std::vec::Vec","std::net::IpAddr","std::cell::Cell"]},"std::collections::HashMap":{"K":["std::num::NonZeroU128","std::num::NonZeroIsize","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroU32","std::num::NonZeroI64","std::num::NonZeroI8","std::num::NonZeroI32","std::num::NonZeroUsize"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::result::Result","std::marker::PhantomData","std::num::NonZeroU32","std::net::SocketAddrV4","std::ops::RangeInclusive","std::option::Option","std::net::Ipv6Addr","std::collections::BTreeSet","std::borrow::Cow","std::collections::BTreeMap","std::sync::RwLock","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::rc::Rc","std::boxed::Box","std::ffi::CString","std::time::Duration","std::time::SystemTime","std::num::NonZeroUsize","std::num::NonZeroI64","std::net::IpAddr","std::collections::HashMap","std::net::SocketAddr","std::num::NonZeroI128","std::num::NonZeroU64","std::sync::Mutex","std::cell::Cell","std::collections::VecDeque","std::sync::Arc","std::sync::atomic::AtomicU64","std::collections::Bound","std::net::SocketAddrV6","std::vec::Vec","std::path::PathBuf","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::string::String","std::cell::RefCell","std::sync::atomic::AtomicU16","std::ops::Range","std::num::NonZeroIsize","std::num::NonZeroU8","std::net::Ipv4Addr","std::num::NonZeroI16","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::collections::HashSet"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::sync::Arc","std::collections::Bound","std::num::NonZeroU16","std::num::NonZeroU128","std::num::NonZeroI64","std::rc::Rc","std::num::NonZeroU32","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroI32","std::string::String","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroI8","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroI128","std::option::Option","std::time::SystemTime"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::collections::Bound","std::rc::Rc","std::sync::atomic::AtomicU32","std::result::Result","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::sync::atomic::AtomicI64","std::sync::RwLock","std::num::NonZeroIsize","std::num::NonZeroI128","std::collections::BinaryHeap","std::collections::HashSet","std::cell::Cell","std::net::SocketAddr","std::ops::RangeInclusive","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroI8","std::string::String","std::ops::Range","std::sync::atomic::AtomicU64","std::time::Duration","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::num::NonZeroI64","std::boxed::Box","std::sync::Arc","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::borrow::Cow","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::collections::VecDeque","std::option::Option","std::num::NonZeroI16","std::collections::HashMap","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::sync::Mutex","std::time::SystemTime","std::net::SocketAddrV4","std::vec::Vec","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::collections::BTreeSet","std::net::IpAddr","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::num::NonZeroU64"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::boxed::Box","std::time::Duration","std::cell::RefCell","std::time::SystemTime","std::vec::Vec","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::string::String","std::net::Ipv6Addr","std::num::NonZeroIsize","std::cell::Cell","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::sync::RwLock","std::collections::HashSet","std::sync::atomic::AtomicI16","std::result::Result","std::net::SocketAddr","std::net::SocketAddrV6","std::marker::PhantomData","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::net::IpAddr","std::sync::Mutex","std::collections::Bound","std::ops::RangeInclusive","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::collections::BinaryHeap","std::num::NonZeroI32","std::num::NonZeroI8","std::collections::HashMap","std::num::NonZeroU64","std::rc::Rc","std::path::PathBuf","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::ffi::CString","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::ops::Range","std::num::NonZeroU32","std::num::NonZeroI16","std::sync::Arc","std::option::Option","std::collections::BTreeMap","std::sync::atomic::AtomicU8"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::time::SystemTime","std::num::NonZeroU64","std::string::String","std::collections::Bound","std::sync::Arc","std::num::NonZeroI8","std::vec::Vec","std::rc::Rc","std::ops::RangeInclusive","std::boxed::Box","std::sync::atomic::AtomicU8","std::time::Duration","std::net::IpAddr","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::ops::Range","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::collections::HashMap","std::marker::PhantomData","std::option::Option","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::num::NonZeroUsize","std::result::Result","std::num::NonZeroU8","std::sync::Mutex","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::collections::BTreeMap","std::sync::RwLock","std::borrow::Cow","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::cell::Cell","std::path::PathBuf","std::num::NonZeroI128","std::ffi::CString","std::net::SocketAddrV4","std::collections::HashSet","std::num::NonZeroI16","std::net::Ipv6Addr"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::sync::RwLock","std::collections::HashSet","std::vec::Vec","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::result::Result","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::borrow::Cow","std::option::Option","std::sync::atomic::AtomicU32","std::boxed::Box","std::num::NonZeroU64","std::cell::Cell","std::collections::Bound","std::net::SocketAddrV6","std::collections::BTreeSet","std::collections::BinaryHeap","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::ffi::CString","std::num::NonZeroU32","std::time::Duration","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::sync::Arc","std::net::IpAddr","std::marker::PhantomData","std::path::PathBuf","std::cell::RefCell","std::time::SystemTime","std::net::SocketAddrV4","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::num::NonZeroIsize","std::num::NonZeroU8","std::num::NonZeroI8","std::collections::BTreeMap","std::rc::Rc","std::string::String","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::collections::HashMap","std::ops::Range","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::sync::Mutex"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for [T; N]>::decode(p0);
+crate::de::impls::<impl de::Decode for [T; N]>::decode(p0);
+<[T; N]>::decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::BorrowDecode<'de> for [T; N]>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::BorrowDecode<'de> for [T; N]>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"],"T":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized","std::cmp::Ord"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::Decode","std::cmp::Ord","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::Bound":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::HashMap":{"K":["std::hash::Hash","enc::Encode","de::BorrowDecode","std::cmp::Eq","de::Decode","std::marker::Sized"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["de::Decode","std::cmp::Eq","de::BorrowDecode","std::marker::Sized","enc::Encode","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::BigEndian","config::Configuration","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Fixint","config::NoLimit","config::Limit","config::Varint"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for [T; N]>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"T":["std::marker::PhantomData","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::option::Option","std::sync::atomic::AtomicU16","std::sync::RwLock","std::num::NonZeroU8","std::vec::Vec","std::borrow::Cow","std::result::Result","std::ops::Range","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::cell::RefCell","std::sync::Arc","std::num::NonZeroU32","std::collections::BTreeSet","std::net::SocketAddr","std::num::NonZeroUsize","std::net::SocketAddrV6","std::boxed::Box","std::num::NonZeroU128","std::rc::Rc","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::collections::Bound","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::time::Duration","std::collections::HashSet","std::collections::VecDeque","std::ffi::CString","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::collections::BTreeMap","std::num::NonZeroU16","std::num::NonZeroI32","std::collections::HashMap","std::num::NonZeroU64","std::cell::Cell","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::string::String","std::time::SystemTime","std::num::NonZeroI64","std::sync::Mutex"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::path::Path","<T as std::borrow::ToOwned>","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::cell::Cell","std::time::Duration","std::net::SocketAddr","std::num::NonZeroI64","std::path::PathBuf","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroU64","std::marker::PhantomData","std::string::String","std::cell::RefCell","std::num::NonZeroI8","std::num::NonZeroI128","std::net::Ipv4Addr","std::ffi::CString","std::net::IpAddr","std::option::Option","std::num::NonZeroU16","std::sync::Arc","std::num::NonZeroU8"],"V":["std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::time::Duration","std::net::SocketAddrV4","std::time::SystemTime","std::sync::atomic::AtomicI16","std::vec::Vec","std::net::Ipv6Addr","std::num::NonZeroU16","std::sync::Arc","std::string::String","std::num::NonZeroU64","std::collections::HashSet","std::cell::RefCell","std::net::Ipv4Addr","std::net::SocketAddr","std::rc::Rc","std::boxed::Box","std::num::NonZeroU8","std::option::Option","std::collections::BinaryHeap","std::sync::RwLock","std::num::NonZeroU32","std::result::Result","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::ffi::CString","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::cell::Cell","std::collections::HashMap","std::collections::BTreeSet","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::num::NonZeroI32","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroI128","std::collections::BTreeMap","std::collections::VecDeque","std::marker::PhantomData","std::sync::Mutex","std::ops::Range","std::collections::Bound","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::borrow::Cow","std::sync::atomic::AtomicU32","std::net::IpAddr"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroIsize","std::num::NonZeroU16","std::num::NonZeroI128","std::path::PathBuf","std::net::Ipv6Addr","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroUsize","std::num::NonZeroU128","std::num::NonZeroU8","std::sync::Arc","std::cell::RefCell","std::string::String","std::num::NonZeroU64","std::num::NonZeroI16","std::net::Ipv4Addr","std::num::NonZeroI32","std::time::Duration"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroI32","std::ffi::CString","std::path::PathBuf","std::num::NonZeroU8","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroU32","std::num::NonZeroU16","std::num::NonZeroU64","std::time::Duration","std::cell::Cell","std::marker::PhantomData","std::time::SystemTime","std::sync::Arc","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroI8"]},"std::collections::Bound":{"T":["std::collections::BTreeMap","std::num::NonZeroI32","std::collections::BinaryHeap","std::path::PathBuf","std::num::NonZeroI16","std::sync::Arc","std::sync::atomic::AtomicUsize","std::ffi::CString","std::num::NonZeroUsize","std::net::Ipv4Addr","std::vec::Vec","std::cell::Cell","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::ops::RangeInclusive","std::sync::RwLock","std::option::Option","std::rc::Rc","std::net::IpAddr","std::ops::Range","std::sync::atomic::AtomicI16","std::collections::HashSet","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::string::String","std::collections::BTreeSet","std::num::NonZeroU128","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::collections::Bound","std::sync::Mutex","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::num::NonZeroIsize","std::borrow::Cow","std::num::NonZeroU64","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroU8","std::result::Result","std::boxed::Box","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::cell::RefCell","std::time::SystemTime","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::num::NonZeroU32","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::time::Duration","std::collections::HashMap","std::net::SocketAddrV4"]},"std::collections::HashMap":{"K":["std::time::SystemTime","std::num::NonZeroU64","std::marker::PhantomData","std::net::SocketAddr","std::string::String","std::sync::Arc","std::net::IpAddr","std::option::Option","std::num::NonZeroU16","std::net::SocketAddrV6","std::rc::Rc","std::time::Duration","std::num::NonZeroI128","std::net::Ipv6Addr","std::num::NonZeroU8","std::net::Ipv4Addr","std::num::NonZeroI32","std::num::NonZeroUsize"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::marker::PhantomData","std::num::NonZeroI16","std::collections::BinaryHeap","std::time::Duration","std::cell::RefCell","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::ops::Range","std::collections::VecDeque","std::ops::RangeInclusive","std::net::IpAddr","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::path::PathBuf","std::collections::HashSet","std::collections::BTreeMap","std::cell::Cell","std::collections::BTreeSet","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::boxed::Box","std::num::NonZeroI32","std::num::NonZeroU128","std::num::NonZeroU16","std::net::SocketAddr","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::borrow::Cow","std::option::Option","std::rc::Rc","std::sync::atomic::AtomicU64","std::result::Result","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::net::SocketAddrV4","std::sync::Arc","std::net::SocketAddrV6","std::vec::Vec","std::num::NonZeroUsize","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::collections::HashMap","std::sync::atomic::AtomicI16","std::ffi::CString","std::sync::RwLock","std::num::NonZeroI128","std::string::String","std::sync::Mutex","std::collections::Bound","std::time::SystemTime","std::num::NonZeroU8"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::sync::Arc","std::string::String","std::num::NonZeroI8","std::ffi::CString","std::num::NonZeroI32","std::time::SystemTime","std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroU32","std::num::NonZeroUsize","std::path::PathBuf","std::collections::Bound","std::num::NonZeroU64","std::option::Option","std::net::IpAddr","std::num::NonZeroI128","std::net::Ipv6Addr"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::net::SocketAddrV4","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::rc::Rc","std::ffi::CString","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::string::String","std::sync::atomic::AtomicU32","std::path::PathBuf","std::collections::BTreeSet","std::time::Duration","std::option::Option","std::boxed::Box","std::sync::atomic::AtomicU8","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::ops::Range","std::num::NonZeroI16","std::cell::RefCell","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::vec::Vec","std::collections::VecDeque","std::net::SocketAddrV6","std::cell::Cell","std::num::NonZeroI8","std::collections::Bound","std::collections::BinaryHeap","std::num::NonZeroUsize","std::collections::BTreeMap","std::sync::Arc","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroU128","std::result::Result","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::collections::HashMap","std::num::NonZeroI128","std::sync::Mutex","std::borrow::Cow","std::net::SocketAddr","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::num::NonZeroI64","std::marker::PhantomData","std::sync::RwLock","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::num::NonZeroU16","std::collections::HashSet","std::sync::atomic::AtomicU64"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicI32","std::sync::Arc","std::num::NonZeroI128","std::num::NonZeroUsize","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::borrow::Cow","std::collections::Bound","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::path::PathBuf","std::time::SystemTime","std::rc::Rc","std::num::NonZeroI16","std::marker::PhantomData","std::num::NonZeroU16","std::string::String","std::collections::BTreeMap","std::cell::RefCell","std::net::Ipv6Addr","std::num::NonZeroI8","std::sync::Mutex","std::result::Result","std::net::Ipv4Addr","std::vec::Vec","std::ops::RangeInclusive","std::collections::HashSet","std::ops::Range","std::boxed::Box","std::cell::Cell","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::num::NonZeroU64","std::net::SocketAddrV4","std::collections::HashMap","std::collections::BTreeSet","std::ffi::CString","std::net::SocketAddr","std::net::SocketAddrV6","std::collections::VecDeque","std::net::IpAddr","std::sync::atomic::AtomicI16","std::time::Duration","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::sync::RwLock","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::option::Option","std::sync::atomic::AtomicU32"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicI64","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::path::PathBuf","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::net::SocketAddrV4","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::num::NonZeroIsize","std::collections::BinaryHeap","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::ops::Range","std::collections::BTreeMap","std::rc::Rc","std::num::NonZeroI16","std::cell::RefCell","std::num::NonZeroI32","std::time::SystemTime","std::sync::atomic::AtomicU32","std::time::Duration","std::collections::BTreeSet","std::net::Ipv6Addr","std::result::Result","std::collections::HashSet","std::boxed::Box","std::sync::atomic::AtomicUsize","std::sync::Arc","std::vec::Vec","std::ffi::CString","std::sync::Mutex","std::num::NonZeroI8","std::option::Option","std::sync::RwLock","std::num::NonZeroU64","std::num::NonZeroI128","std::collections::Bound","std::string::String","std::ops::RangeInclusive","std::borrow::Cow","std::collections::HashMap","std::num::NonZeroU32","std::net::IpAddr","std::cell::Cell","std::sync::atomic::AtomicU8","std::num::NonZeroU8"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU16","std::sync::Mutex","std::cell::Cell","std::num::NonZeroI32","std::sync::RwLock","std::num::NonZeroI8","std::net::SocketAddrV4","std::ops::Range","std::net::IpAddr","std::collections::BinaryHeap","std::ops::RangeInclusive","std::path::PathBuf","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::ffi::CString","std::cell::RefCell","std::collections::HashMap","std::num::NonZeroI64","std::time::Duration","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::num::NonZeroIsize","std::net::Ipv4Addr","std::num::NonZeroU32","std::num::NonZeroU128","std::sync::atomic::AtomicI16","std::rc::Rc","std::option::Option","std::net::SocketAddr","std::borrow::Cow","std::vec::Vec","std::num::NonZeroU8","std::collections::HashSet","std::time::SystemTime","std::string::String","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::result::Result","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::sync::Arc","std::collections::VecDeque","std::boxed::Box","std::collections::BTreeMap","std::num::NonZeroU64","std::collections::BTreeSet","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::collections::Bound","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::net::SocketAddrV6"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for [T; N]>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for [T; N]>::borrow_decode(p0);
+<[T; N]>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for ()>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::Decode for ()>::decode":{"D":["de::Decoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for ()>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for ()>::decode(p0);
+crate::de::impls::<impl de::Decode for ()>::decode(p0);
+<()>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for ()>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for ()>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for ()>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for ()>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for ()>::borrow_decode(p0);
+<()>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::marker::PhantomData<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"de::impls::<impl de::Decode for std::marker::PhantomData<T>>::decode":{"D":["de::Decoder","std::marker::Sized"],"T":["std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::marker::PhantomData<T>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"T":["RUG_ANY"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::marker::PhantomData<T>>::decode(p0);
+crate::de::impls::<impl de::Decode for std::marker::PhantomData<T>>::decode(p0);
+<std::marker::PhantomData<T>>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::marker::PhantomData<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::BorrowDecode<'de> for std::marker::PhantomData<T>>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"],"T":["std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::marker::PhantomData<T>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"T":["RUG_ANY"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::marker::PhantomData<T>>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::marker::PhantomData<T>>::borrow_decode(p0);
+<std::marker::PhantomData<T>>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::option::Option<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]},"de::impls::<impl de::Decode for std::option::Option<T>>::decode":{"D":["de::Decoder","std::marker::Sized"],"T":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::BorrowDecode","de::Decode","std::marker::Sized","std::cmp::Ord","enc::Encode"],"V":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["std::marker::Sized","de::BorrowDecode","std::cmp::Ord","de::Decode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","std::cmp::Ord","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::Bound":{"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","de::Decode","std::cmp::Eq","enc::Encode","std::marker::Sized","std::hash::Hash"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::cmp::Eq","std::marker::Sized","std::hash::Hash","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::Configuration","config::BigEndian","config::Varint","config::NoLimit","config::LittleEndian","std::clone::impls::<impl std::clone::Clone for *const T>","config::Fixint"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::option::Option<T>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"T":["std::num::NonZeroI128","std::boxed::Box","std::vec::Vec","std::sync::atomic::AtomicI16","std::collections::HashSet","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::sync::RwLock","std::num::NonZeroI64","std::cell::Cell","std::ffi::CString","std::num::NonZeroU16","std::string::String","std::sync::atomic::AtomicI8","std::time::SystemTime","std::net::SocketAddrV6","std::num::NonZeroU64","std::borrow::Cow","std::sync::atomic::AtomicU64","std::net::IpAddr","std::option::Option","std::collections::VecDeque","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::result::Result","std::num::NonZeroI8","std::num::NonZeroI32","std::sync::Mutex","std::sync::Arc","std::sync::atomic::AtomicU32","std::collections::Bound","std::collections::BTreeMap","std::num::NonZeroU128","std::rc::Rc","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::num::NonZeroU8","std::ops::RangeInclusive","std::cell::RefCell","std::time::Duration","std::collections::BinaryHeap","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::ops::Range","std::num::NonZeroU32","std::net::Ipv4Addr","std::collections::HashMap"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroIsize","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroU64","std::num::NonZeroI32","std::path::PathBuf","std::net::SocketAddrV4","std::string::String","std::num::NonZeroU16","std::net::IpAddr","std::cell::Cell","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroU32","std::option::Option"],"V":["std::sync::RwLock","std::ffi::CString","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::collections::Bound","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::num::NonZeroU32","std::net::Ipv4Addr","std::collections::HashSet","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::time::SystemTime","std::collections::BTreeSet","std::sync::Mutex","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::vec::Vec","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::net::IpAddr","std::collections::BinaryHeap","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::collections::BTreeMap","std::num::NonZeroU128","std::num::NonZeroI64","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::num::NonZeroU64","std::borrow::Cow","std::sync::atomic::AtomicU64","std::cell::Cell","std::boxed::Box","std::path::PathBuf","std::marker::PhantomData","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::string::String","std::ops::Range","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::ops::RangeInclusive","std::option::Option","std::collections::HashMap","std::result::Result","std::rc::Rc","std::time::Duration","std::sync::Arc","std::net::Ipv6Addr"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU16","std::string::String","std::rc::Rc","std::cell::RefCell","std::option::Option","std::cell::Cell","std::time::SystemTime","std::num::NonZeroU64","std::net::Ipv4Addr","std::num::NonZeroIsize","std::num::NonZeroI128","std::net::Ipv6Addr","std::net::SocketAddrV4","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroU32","std::sync::Arc","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroI16"]},"std::collections::BinaryHeap":{"T":["std::string::String","std::net::Ipv6Addr","std::time::Duration","std::num::NonZeroUsize","std::marker::PhantomData","std::net::SocketAddrV4","std::option::Option","std::cell::Cell","std::ffi::CString","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroIsize","std::path::PathBuf","std::cell::RefCell","std::num::NonZeroI64","std::num::NonZeroI16","std::num::NonZeroU32","std::num::NonZeroI32","std::num::NonZeroI128","std::num::NonZeroI8","std::num::NonZeroU16","std::num::NonZeroU128","std::num::NonZeroU64"]},"std::collections::Bound":{"T":["std::time::Duration","std::string::String","std::borrow::Cow","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::num::NonZeroU64","std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroI128","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::num::NonZeroI64","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroU32","std::collections::BinaryHeap","std::net::Ipv4Addr","std::num::NonZeroUsize","std::sync::Arc","std::sync::RwLock","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::collections::Bound","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroU8","std::vec::Vec","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::result::Result","std::sync::atomic::AtomicU32","std::cell::RefCell","std::collections::HashSet","std::net::SocketAddr","std::rc::Rc","std::collections::BTreeMap","std::boxed::Box","std::num::NonZeroI8","std::cell::Cell","std::ops::Range","std::option::Option","std::collections::HashMap","std::sync::Mutex","std::ops::RangeInclusive"]},"std::collections::HashMap":{"K":["std::rc::Rc","std::net::SocketAddrV6","std::time::Duration","std::collections::Bound","std::num::NonZeroUsize","std::num::NonZeroI16","std::num::NonZeroI8","std::num::NonZeroU64","std::net::Ipv4Addr","std::num::NonZeroIsize","std::string::String","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI128","std::sync::Arc","std::net::SocketAddr","std::marker::PhantomData","std::net::IpAddr","std::num::NonZeroU128"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::num::NonZeroI64","std::collections::BTreeMap","std::sync::Arc","std::sync::atomic::AtomicI8","std::collections::Bound","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::num::NonZeroU8","std::time::SystemTime","std::sync::atomic::AtomicU64","std::rc::Rc","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::num::NonZeroIsize","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::time::Duration","std::ops::Range","std::cell::Cell","std::string::String","std::net::IpAddr","std::ffi::CString","std::result::Result","std::collections::HashSet","std::sync::Mutex","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::vec::Vec","std::collections::BTreeSet","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::boxed::Box","std::borrow::Cow","std::num::NonZeroI16","std::net::Ipv4Addr","std::cell::RefCell","std::collections::HashMap","std::option::Option","std::num::NonZeroI32","std::num::NonZeroI128","std::num::NonZeroI8","std::sync::RwLock","std::collections::BinaryHeap","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::num::NonZeroU32","std::net::SocketAddrV4"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::collections::Bound","std::time::SystemTime","std::string::String","std::time::Duration","std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroUsize","std::num::NonZeroU32","std::num::NonZeroIsize","std::num::NonZeroI8","std::num::NonZeroU64","std::net::IpAddr","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroI128","std::num::NonZeroI32","std::rc::Rc","std::net::Ipv6Addr"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::collections::VecDeque","std::path::PathBuf","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::net::IpAddr","std::net::SocketAddrV4","std::time::Duration","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::cell::RefCell","std::sync::RwLock","std::cell::Cell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::num::NonZeroU32","std::result::Result","std::sync::atomic::AtomicI16","std::collections::Bound","std::string::String","std::time::SystemTime","std::sync::Mutex","std::collections::HashSet","std::ops::Range","std::ffi::CString","std::option::Option","std::net::SocketAddr","std::vec::Vec","std::num::NonZeroI16","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::boxed::Box","std::num::NonZeroU64","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroIsize","std::ops::RangeInclusive","std::collections::HashMap","std::rc::Rc","std::sync::Arc","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::net::SocketAddrV6","std::num::NonZeroU16","std::num::NonZeroI32","std::borrow::Cow","std::collections::BTreeSet","std::num::NonZeroUsize"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroI128","std::time::Duration","std::collections::BinaryHeap","std::borrow::Cow","std::net::IpAddr","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::option::Option","std::collections::VecDeque","std::boxed::Box","std::sync::atomic::AtomicU64","std::string::String","std::ffi::CString","std::net::Ipv4Addr","std::num::NonZeroIsize","std::sync::Mutex","std::sync::atomic::AtomicU32","std::sync::RwLock","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroU128","std::collections::HashMap","std::collections::BTreeSet","std::num::NonZeroI16","std::cell::RefCell","std::ops::RangeInclusive","std::path::PathBuf","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::rc::Rc","std::ops::Range","std::num::NonZeroI64","std::result::Result","std::vec::Vec","std::sync::Arc","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::collections::BTreeMap","std::collections::Bound","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::cell::Cell","std::marker::PhantomData","std::collections::HashSet"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::path::PathBuf","std::sync::Mutex","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::ffi::CString","std::boxed::Box","std::net::Ipv4Addr","std::num::NonZeroU8","std::num::NonZeroI16","std::string::String","std::num::NonZeroI64","std::option::Option","std::sync::Arc","std::sync::RwLock","std::collections::VecDeque","std::num::NonZeroU32","std::collections::HashMap","std::num::NonZeroU128","std::borrow::Cow","std::cell::Cell","std::ops::RangeInclusive","std::collections::HashSet","std::sync::atomic::AtomicI16","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroIsize","std::rc::Rc","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::net::SocketAddrV4","std::num::NonZeroU64","std::collections::BTreeMap","std::net::SocketAddrV6","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::time::Duration","std::result::Result","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::ops::Range","std::vec::Vec","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::marker::PhantomData","std::collections::Bound","std::net::SocketAddr"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI16","std::string::String","std::rc::Rc","std::collections::BinaryHeap","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::collections::HashMap","std::ffi::CString","std::option::Option","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::time::SystemTime","std::collections::Bound","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::num::NonZeroI32","std::collections::HashSet","std::num::NonZeroU16","std::net::Ipv6Addr","std::num::NonZeroU64","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::cell::Cell","std::boxed::Box","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::path::PathBuf","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::sync::RwLock","std::ops::RangeInclusive","std::sync::Arc","std::time::Duration","std::net::SocketAddrV6","std::ops::Range","std::vec::Vec","std::sync::Mutex","std::borrow::Cow","std::collections::BTreeSet","std::cell::RefCell","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::result::Result","std::net::SocketAddr","std::collections::VecDeque","std::num::NonZeroUsize","std::num::NonZeroI64","std::net::SocketAddrV4"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::option::Option<T>>::decode(p0);
+crate::de::impls::<impl de::Decode for std::option::Option<T>>::decode(p0);
+<std::option::Option<T>>::decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::BorrowDecode<'de> for std::option::Option<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::option::Option<T>>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"],"T":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"K":["std::marker::Sized","de::BorrowDecode","de::Decode","std::cmp::Ord","enc::Encode"],"V":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["std::cmp::Ord","enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","std::cmp::Ord","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::Bound":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized","std::hash::Hash","std::cmp::Eq"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["de::BorrowDecode","std::marker::Sized","std::cmp::Eq","de::Decode","enc::Encode","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Varint","config::NoLimit","config::Limit","config::Fixint","std::clone::impls::<impl std::clone::Clone for *mut T>","config::BigEndian","config::LittleEndian","config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::option::Option<T>>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"T":["std::ops::Range","std::net::SocketAddrV4","std::cell::Cell","std::cell::RefCell","std::collections::VecDeque","std::net::Ipv4Addr","std::num::NonZeroU128","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::collections::HashMap","std::num::NonZeroI32","std::collections::HashSet","std::num::NonZeroU32","std::num::NonZeroU64","std::collections::BinaryHeap","std::num::NonZeroI8","std::boxed::Box","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::option::Option","std::num::NonZeroI64","std::sync::RwLock","std::collections::Bound","std::result::Result","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::ffi::CString","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::borrow::Cow","std::sync::Mutex","std::sync::atomic::AtomicI16","std::rc::Rc","std::string::String","std::collections::BTreeMap","std::num::NonZeroI16","std::num::NonZeroU16","std::vec::Vec","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::sync::Arc","std::sync::atomic::AtomicU16","std::path::PathBuf","std::marker::PhantomData","std::time::Duration","std::net::IpAddr","std::net::SocketAddr","std::time::SystemTime"]},"std::borrow::Cow":{"B":["std::path::Path","<T as std::borrow::ToOwned>","std::ffi::OsStr","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroUsize","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroI32","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroU32","std::num::NonZeroIsize","std::net::SocketAddrV6","std::num::NonZeroU16","std::num::NonZeroU128","std::cell::Cell","std::option::Option","std::num::NonZeroU64","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroI8","std::time::Duration","std::num::NonZeroU8","std::num::NonZeroI128","std::time::SystemTime"],"V":["std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::sync::Mutex","std::sync::atomic::AtomicU16","std::time::Duration","std::num::NonZeroIsize","std::marker::PhantomData","std::cell::Cell","std::result::Result","std::num::NonZeroU128","std::num::NonZeroI8","std::string::String","std::net::IpAddr","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroU16","std::option::Option","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::collections::BTreeSet","std::boxed::Box","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::ops::Range","std::collections::Bound","std::collections::VecDeque","std::path::PathBuf","std::sync::Arc","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroU8","std::rc::Rc","std::cell::RefCell","std::collections::BinaryHeap","std::sync::RwLock","std::vec::Vec","std::num::NonZeroI128","std::collections::HashMap","std::num::NonZeroU32","std::num::NonZeroI64","std::time::SystemTime","std::collections::HashSet","std::borrow::Cow"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroI64","std::net::Ipv6Addr","std::string::String","std::num::NonZeroUsize","std::net::Ipv4Addr","std::num::NonZeroU16","std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroIsize","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroI128","std::time::Duration","std::num::NonZeroI8","std::num::NonZeroI16","std::cell::Cell","std::cell::RefCell","std::path::PathBuf","std::sync::Arc","std::num::NonZeroU32"]},"std::collections::BinaryHeap":{"T":["std::option::Option","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroIsize","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroI16","std::time::Duration","std::cell::RefCell","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroI32","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroI128","std::num::NonZeroU128","std::num::NonZeroU8","std::ffi::CString","std::sync::Arc","std::net::SocketAddrV6","std::time::SystemTime","std::cell::Cell","std::path::PathBuf"]},"std::collections::Bound":{"T":["std::collections::VecDeque","std::marker::PhantomData","std::num::NonZeroI32","std::collections::BTreeSet","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::num::NonZeroI16","std::ffi::CString","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::time::SystemTime","std::sync::Arc","std::num::NonZeroU8","std::num::NonZeroU64","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::collections::HashSet","std::num::NonZeroU16","std::num::NonZeroI64","std::boxed::Box","std::cell::RefCell","std::collections::BTreeMap","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::sync::Mutex","std::net::IpAddr","std::option::Option","std::net::SocketAddr","std::path::PathBuf","std::cell::Cell","std::net::Ipv4Addr","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::net::SocketAddrV6","std::string::String","std::result::Result","std::net::SocketAddrV4","std::vec::Vec","std::rc::Rc","std::collections::Bound","std::borrow::Cow","std::num::NonZeroU128","std::sync::RwLock","std::sync::atomic::AtomicI16","std::ops::Range","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::time::Duration"]},"std::collections::HashMap":{"K":["std::num::NonZeroU8","std::num::NonZeroU32","std::num::NonZeroI16","std::num::NonZeroU16","std::num::NonZeroU64","std::net::SocketAddr","std::path::PathBuf","std::net::IpAddr","std::string::String","std::marker::PhantomData","std::num::NonZeroI64","std::option::Option","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroI8","std::num::NonZeroUsize","std::num::NonZeroIsize","std::net::Ipv4Addr"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::net::Ipv4Addr","std::num::NonZeroI128","std::time::Duration","std::num::NonZeroU32","std::num::NonZeroIsize","std::num::NonZeroU128","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::collections::HashSet","std::marker::PhantomData","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::option::Option","std::sync::atomic::AtomicI16","std::sync::RwLock","std::num::NonZeroU64","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::net::SocketAddrV6","std::vec::Vec","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::num::NonZeroI64","std::collections::BinaryHeap","std::net::Ipv6Addr","std::num::NonZeroU8","std::cell::RefCell","std::boxed::Box","std::collections::Bound","std::rc::Rc","std::sync::atomic::AtomicU16","std::ops::Range","std::collections::BTreeMap","std::sync::Mutex","std::cell::Cell","std::net::IpAddr","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::result::Result","std::string::String","std::path::PathBuf","std::time::SystemTime","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::net::SocketAddrV4","std::ffi::CString","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::sync::Arc","std::borrow::Cow"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::sync::Arc","std::num::NonZeroU8","std::collections::Bound","std::string::String","std::net::SocketAddr","std::num::NonZeroI8","std::path::PathBuf","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroU128","std::time::Duration","std::num::NonZeroI128","std::net::SocketAddrV6","std::net::Ipv4Addr","std::num::NonZeroI32","std::net::SocketAddrV4"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::ops::RangeInclusive","std::collections::VecDeque","std::num::NonZeroU8","std::collections::HashSet","std::sync::Arc","std::rc::Rc","std::collections::BTreeMap","std::boxed::Box","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::time::SystemTime","std::sync::atomic::AtomicI64","std::option::Option","std::num::NonZeroI16","std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroI64","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::collections::Bound","std::net::Ipv4Addr","std::num::NonZeroIsize","std::net::SocketAddrV6","std::num::NonZeroU128","std::borrow::Cow","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::path::PathBuf","std::sync::Mutex","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroI32","std::num::NonZeroU64","std::num::NonZeroU32","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::collections::HashMap","std::vec::Vec","std::string::String","std::result::Result","std::sync::atomic::AtomicI16","std::cell::Cell","std::ops::Range","std::sync::atomic::AtomicU32","std::cell::RefCell","std::num::NonZeroI128","std::num::NonZeroI8","std::ffi::CString","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::sync::RwLock"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::boxed::Box","std::num::NonZeroU8","std::collections::BTreeSet","std::sync::Mutex","std::ops::Range","std::num::NonZeroI128","std::num::NonZeroUsize","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::vec::Vec","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::cell::Cell","std::collections::BTreeMap","std::option::Option","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::collections::HashSet","std::sync::atomic::AtomicBool","std::sync::Arc","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::borrow::Cow","std::ops::RangeInclusive","std::num::NonZeroIsize","std::net::SocketAddrV6","std::rc::Rc","std::string::String","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::time::SystemTime","std::num::NonZeroI8","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::net::IpAddr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::time::Duration","std::collections::VecDeque","std::num::NonZeroI16","std::sync::RwLock","std::ffi::CString","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::num::NonZeroU32","std::collections::Bound","std::marker::PhantomData","std::net::Ipv6Addr","std::result::Result","std::collections::HashMap","std::num::NonZeroU16"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::SocketAddrV4","std::ops::Range","std::net::IpAddr","std::sync::Mutex","std::collections::HashMap","std::sync::atomic::AtomicI8","std::rc::Rc","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::num::NonZeroUsize","std::borrow::Cow","std::option::Option","std::collections::Bound","std::num::NonZeroU128","std::boxed::Box","std::cell::Cell","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::Arc","std::num::NonZeroU64","std::time::Duration","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::num::NonZeroI64","std::net::Ipv6Addr","std::collections::BTreeMap","std::collections::BTreeSet","std::string::String","std::ffi::CString","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::collections::HashSet","std::net::SocketAddr","std::collections::VecDeque","std::result::Result","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::cell::RefCell","std::collections::BinaryHeap","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::vec::Vec","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::num::NonZeroI128","std::num::NonZeroI16","std::marker::PhantomData","std::num::NonZeroU16"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::num::NonZeroI32","std::time::Duration","std::ops::RangeInclusive","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::num::NonZeroU128","std::cell::Cell","std::sync::Mutex","std::num::NonZeroI128","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroU8","std::num::NonZeroI64","std::num::NonZeroU64","std::num::NonZeroU16","std::collections::BTreeMap","std::cell::RefCell","std::rc::Rc","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::result::Result","std::collections::BinaryHeap","std::sync::RwLock","std::num::NonZeroU32","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::collections::HashSet","std::borrow::Cow","std::num::NonZeroI16","std::sync::Arc","std::net::IpAddr","std::boxed::Box","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::option::Option","std::collections::Bound","std::ops::Range","std::collections::BTreeSet","std::vec::Vec","std::time::SystemTime","std::string::String","std::sync::atomic::AtomicI8","std::collections::HashMap","std::path::PathBuf"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::option::Option<T>>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::option::Option<T>>::borrow_decode(p0);
+<std::option::Option<T>>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::result::Result<T, U>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::Decode for std::result::Result<T, U>>::decode":{"D":["std::marker::Sized","de::Decoder"],"T":["de::Decode","std::marker::Sized"],"U":["de::Decode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["de::Decode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode","enc::Encode"],"V":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["std::cmp::Ord","std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::cmp::Ord","std::marker::Sized","de::Decode","enc::Encode"]},"std::collections::Bound":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::HashMap":{"K":["de::Decode","std::hash::Hash","std::marker::Sized","de::BorrowDecode","enc::Encode","std::cmp::Eq"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::cmp::Eq","de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for &T>","config::Fixint","config::Varint","config::NoLimit","config::LittleEndian","config::Limit","config::BigEndian","config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::result::Result<T, U>>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"T":["std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::marker::PhantomData","std::num::NonZeroU16","std::cell::Cell","std::num::NonZeroI8","std::collections::HashSet","std::sync::Mutex","std::net::SocketAddr","std::net::SocketAddrV6","std::collections::BTreeSet","std::collections::Bound","std::sync::atomic::AtomicU8","std::collections::HashMap","std::path::PathBuf","std::net::IpAddr","std::time::SystemTime","std::sync::atomic::AtomicI8","std::borrow::Cow","std::result::Result","std::num::NonZeroI32","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::ops::Range","std::cell::RefCell","std::collections::BTreeMap","std::collections::BinaryHeap","std::net::Ipv4Addr","std::ops::RangeInclusive","std::boxed::Box","std::option::Option","std::string::String","std::num::NonZeroU8","std::time::Duration","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::rc::Rc","std::vec::Vec","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroI16","std::ffi::CString","std::sync::atomic::AtomicU32","std::sync::Arc","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64"],"U":["std::collections::VecDeque","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::collections::Bound","std::num::NonZeroU32","std::net::SocketAddrV4","std::collections::BinaryHeap","std::sync::Arc","std::borrow::Cow","std::net::IpAddr","std::num::NonZeroIsize","std::result::Result","std::sync::atomic::AtomicU32","std::option::Option","std::string::String","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::collections::HashSet","std::collections::HashMap","std::sync::atomic::AtomicU8","std::time::Duration","std::ops::Range","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::collections::BTreeMap","std::rc::Rc","std::time::SystemTime","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::collections::BTreeSet","std::cell::Cell","std::marker::PhantomData","std::ffi::CString","std::sync::atomic::AtomicI32","std::sync::Mutex","std::net::Ipv4Addr","std::net::SocketAddr","std::boxed::Box","std::net::SocketAddrV6","std::num::NonZeroI128","std::num::NonZeroUsize","std::sync::RwLock","std::num::NonZeroI64","std::ops::RangeInclusive","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::vec::Vec","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroU8","std::sync::atomic::AtomicBool"]},"std::borrow::Cow":{"B":["std::ffi::CStr","<T as std::borrow::ToOwned>","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroI8","std::num::NonZeroU64","std::net::IpAddr","std::net::Ipv6Addr","std::cell::Cell","std::option::Option","std::num::NonZeroU128","std::marker::PhantomData","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroI128","std::string::String","std::num::NonZeroI64","std::num::NonZeroU32","std::path::PathBuf","std::net::SocketAddrV4","std::cell::RefCell","std::num::NonZeroU8","std::time::SystemTime","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroIsize","std::num::NonZeroI16","std::net::Ipv4Addr"],"V":["std::num::NonZeroU8","std::net::SocketAddrV4","std::net::IpAddr","std::vec::Vec","std::cell::Cell","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::collections::HashSet","std::num::NonZeroI128","std::num::NonZeroU32","std::time::SystemTime","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::result::Result","std::sync::Mutex","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::num::NonZeroI32","std::net::SocketAddrV6","std::collections::BinaryHeap","std::num::NonZeroI16","std::ops::RangeInclusive","std::num::NonZeroU64","std::collections::HashMap","std::net::Ipv4Addr","std::net::Ipv6Addr","std::borrow::Cow","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::option::Option","std::time::Duration","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::ops::Range","std::boxed::Box","std::sync::atomic::AtomicUsize","std::collections::Bound","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::ffi::CString","std::sync::Arc","std::path::PathBuf","std::num::NonZeroUsize","std::collections::VecDeque","std::cell::RefCell","std::sync::RwLock","std::sync::atomic::AtomicU32","std::string::String","std::num::NonZeroI8","std::collections::BTreeSet","std::net::SocketAddr","std::marker::PhantomData","std::rc::Rc"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::SocketAddrV6","std::num::NonZeroI128","std::num::NonZeroI8","std::num::NonZeroI16","std::string::String","std::cell::RefCell","std::time::Duration","std::net::IpAddr","std::num::NonZeroU16","std::num::NonZeroU32","std::option::Option","std::net::SocketAddr","std::num::NonZeroIsize","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroI32","std::time::SystemTime","std::rc::Rc","std::sync::Arc","std::net::Ipv6Addr","std::ffi::CString","std::net::Ipv4Addr","std::num::NonZeroU64","std::marker::PhantomData"]},"std::collections::BinaryHeap":{"T":["std::marker::PhantomData","std::num::NonZeroI64","std::time::SystemTime","std::num::NonZeroIsize","std::cell::RefCell","std::net::SocketAddrV4","std::net::IpAddr","std::num::NonZeroUsize","std::net::Ipv4Addr","std::cell::Cell","std::net::Ipv6Addr","std::net::SocketAddrV6","std::num::NonZeroU64","std::sync::Arc","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroU8","std::path::PathBuf","std::ffi::CString"]},"std::collections::Bound":{"T":["std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::num::NonZeroIsize","std::net::IpAddr","std::num::NonZeroI16","std::num::NonZeroU32","std::ffi::CString","std::num::NonZeroI32","std::option::Option","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::collections::Bound","std::collections::BinaryHeap","std::net::SocketAddr","std::cell::Cell","std::net::Ipv4Addr","std::sync::Arc","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::borrow::Cow","std::time::SystemTime","std::sync::Mutex","std::sync::atomic::AtomicI64","std::rc::Rc","std::collections::HashMap","std::num::NonZeroUsize","std::net::SocketAddrV4","std::boxed::Box","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::collections::VecDeque","std::result::Result","std::sync::RwLock","std::string::String","std::num::NonZeroU128","std::num::NonZeroU16","std::vec::Vec","std::sync::atomic::AtomicBool","std::ops::Range","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::collections::BTreeMap","std::net::SocketAddrV6","std::collections::HashSet","std::sync::atomic::AtomicI32","std::path::PathBuf","std::time::Duration","std::num::NonZeroU8"]},"std::collections::HashMap":{"K":["std::num::NonZeroU32","std::num::NonZeroI32","std::num::NonZeroU16","std::sync::Arc","std::string::String","std::net::Ipv4Addr","std::num::NonZeroIsize","std::num::NonZeroI8","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroUsize","std::num::NonZeroU128","std::num::NonZeroI16","std::net::SocketAddr","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroU64","std::marker::PhantomData","std::net::Ipv6Addr","std::collections::Bound"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroIsize","std::num::NonZeroI16","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroI128","std::string::String","std::result::Result","std::net::IpAddr","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::ffi::CString","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::cell::RefCell","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::path::PathBuf","std::collections::VecDeque","std::option::Option","std::collections::HashSet","std::vec::Vec","std::net::SocketAddrV6","std::boxed::Box","std::num::NonZeroU64","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::borrow::Cow","std::rc::Rc","std::num::NonZeroU128","std::time::SystemTime","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::num::NonZeroI32","std::num::NonZeroU16","std::collections::HashMap","std::ops::Range","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::sync::RwLock","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::num::NonZeroUsize","std::collections::BTreeMap","std::time::Duration","std::collections::BinaryHeap","std::collections::BTreeSet","std::collections::Bound","std::cell::Cell"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroU16","std::path::PathBuf","std::marker::PhantomData","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroI128","std::num::NonZeroIsize","std::num::NonZeroU8","std::string::String","std::num::NonZeroI64","std::num::NonZeroI16","std::num::NonZeroU32","std::num::NonZeroI32","std::net::SocketAddrV6","std::ffi::CString","std::option::Option","std::net::IpAddr"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicI8","std::collections::VecDeque","std::time::Duration","std::collections::BTreeMap","std::collections::HashMap","std::borrow::Cow","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::rc::Rc","std::num::NonZeroU64","std::vec::Vec","std::time::SystemTime","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::net::SocketAddrV4","std::num::NonZeroIsize","std::num::NonZeroU32","std::cell::Cell","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::num::NonZeroI16","std::num::NonZeroU16","std::num::NonZeroI32","std::marker::PhantomData","std::ops::Range","std::option::Option","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::ops::RangeInclusive","std::collections::Bound","std::sync::atomic::AtomicU64","std::ffi::CString","std::sync::RwLock","std::collections::BTreeSet","std::sync::Mutex","std::num::NonZeroU8","std::net::SocketAddr","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::boxed::Box","std::sync::Arc","std::result::Result","std::string::String","std::cell::RefCell","std::collections::BinaryHeap","std::net::SocketAddrV6","std::net::IpAddr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::num::NonZeroI8"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroU32","std::vec::Vec","std::ops::RangeInclusive","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::time::Duration","std::path::PathBuf","std::net::IpAddr","std::num::NonZeroU128","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicU64","std::cell::Cell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::collections::BinaryHeap","std::num::NonZeroIsize","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::collections::Bound","std::net::SocketAddr","std::time::SystemTime","std::ffi::CString","std::collections::BTreeMap","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::num::NonZeroUsize","std::sync::RwLock","std::collections::HashMap","std::sync::Mutex","std::sync::Arc","std::marker::PhantomData","std::borrow::Cow","std::boxed::Box","std::rc::Rc","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroU16","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::ops::Range","std::string::String","std::result::Result","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::num::NonZeroI64","std::result::Result","std::num::NonZeroI32","std::option::Option","std::sync::atomic::AtomicIsize","std::ffi::CString","std::cell::Cell","std::sync::atomic::AtomicU64","std::collections::HashSet","std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroU16","std::net::SocketAddrV6","std::ops::Range","std::num::NonZeroU64","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroI16","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroU128","std::collections::HashMap","std::sync::RwLock","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::vec::Vec","std::collections::BTreeMap","std::collections::Bound","std::num::NonZeroI128","std::num::NonZeroU8","std::collections::VecDeque","std::sync::Arc","std::sync::atomic::AtomicI16","std::borrow::Cow","std::rc::Rc","std::ops::RangeInclusive","std::net::SocketAddrV4","std::string::String","std::num::NonZeroIsize","std::net::IpAddr","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::num::NonZeroI8","std::boxed::Box","std::time::Duration"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroI64","std::ffi::CString","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroIsize","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::num::NonZeroU16","std::option::Option","std::result::Result","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::num::NonZeroI16","std::cell::RefCell","std::num::NonZeroI8","std::net::SocketAddr","std::cell::Cell","std::time::Duration","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::num::NonZeroU32","std::collections::BTreeSet","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::collections::HashSet","std::boxed::Box","std::ops::Range","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::vec::Vec","std::net::Ipv6Addr","std::collections::BTreeMap","std::net::SocketAddrV4","std::string::String","std::num::NonZeroU128","std::collections::Bound","std::sync::Arc","std::path::PathBuf","std::net::SocketAddrV6","std::sync::RwLock","std::collections::HashMap","std::rc::Rc"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::result::Result<T, U>>::decode(p0);
+crate::de::impls::<impl de::Decode for std::result::Result<T, U>>::decode(p0);
+<std::result::Result<T, U>>::decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::BorrowDecode<'de> for std::result::Result<T, U>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::result::Result<T, U>>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"],"T":["de::BorrowDecode","std::marker::Sized"],"U":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"K":["de::Decode","std::cmp::Ord","std::marker::Sized","enc::Encode","de::BorrowDecode"],"V":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","std::cmp::Ord","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::Decode","de::BorrowDecode","std::cmp::Ord","std::marker::Sized"]},"std::collections::Bound":{"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashMap":{"K":["std::marker::Sized","std::cmp::Eq","std::hash::Hash","enc::Encode","de::BorrowDecode","de::Decode"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["de::Decode","std::cmp::Eq","de::BorrowDecode","std::hash::Hash","enc::Encode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Fixint","std::clone::impls::<impl std::clone::Clone for &mut T>","config::Varint","config::NoLimit","config::LittleEndian","config::Configuration","config::BigEndian","config::Limit"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::result::Result<T, U>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"T":["std::ops::Range","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::num::NonZeroU64","std::num::NonZeroU32","std::collections::HashSet","std::collections::BinaryHeap","std::net::Ipv4Addr","std::ffi::CString","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::cell::Cell","std::net::IpAddr","std::net::SocketAddr","std::ops::RangeInclusive","std::rc::Rc","std::vec::Vec","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::string::String","std::sync::atomic::AtomicI32","std::time::Duration","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::result::Result","std::num::NonZeroI64","std::collections::BTreeMap","std::option::Option","std::collections::HashMap","std::borrow::Cow","std::boxed::Box","std::num::NonZeroIsize","std::num::NonZeroI16","std::num::NonZeroU128","std::sync::Mutex","std::sync::atomic::AtomicI8","std::path::PathBuf","std::net::Ipv6Addr","std::cell::RefCell","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::sync::Arc","std::num::NonZeroI8","std::sync::RwLock","std::collections::Bound","std::time::SystemTime","std::sync::atomic::AtomicI64"],"U":["std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::result::Result","std::sync::Arc","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::num::NonZeroI128","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::sync::Mutex","std::num::NonZeroU64","std::collections::BTreeSet","std::net::Ipv4Addr","std::num::NonZeroU32","std::net::SocketAddr","std::cell::RefCell","std::ffi::CString","std::rc::Rc","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::string::String","std::sync::atomic::AtomicU64","std::boxed::Box","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::cell::Cell","std::option::Option","std::num::NonZeroI16","std::collections::BinaryHeap","std::collections::Bound","std::collections::HashMap","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::vec::Vec","std::path::PathBuf","std::collections::HashSet","std::num::NonZeroI32","std::net::IpAddr","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::num::NonZeroU8","std::num::NonZeroI64","std::marker::PhantomData","std::ops::Range","std::ops::RangeInclusive","std::num::NonZeroIsize","std::num::NonZeroUsize","std::borrow::Cow","std::time::Duration"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::path::Path","std::ffi::CStr","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI128","std::net::Ipv6Addr","std::cell::RefCell","std::option::Option","std::num::NonZeroU128","std::num::NonZeroU8","std::net::SocketAddrV6","std::num::NonZeroIsize","std::string::String","std::net::SocketAddr","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroI32","std::sync::Arc","std::net::Ipv4Addr","std::time::Duration","std::num::NonZeroI64","std::net::IpAddr"],"V":["std::ops::Range","std::collections::BinaryHeap","std::time::SystemTime","std::num::NonZeroU128","std::sync::Mutex","std::cell::Cell","std::net::SocketAddr","std::collections::BTreeMap","std::num::NonZeroU16","std::num::NonZeroIsize","std::boxed::Box","std::path::PathBuf","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::time::Duration","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::vec::Vec","std::collections::BTreeSet","std::num::NonZeroI128","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::sync::Arc","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::ffi::CString","std::net::IpAddr","std::num::NonZeroU8","std::collections::Bound","std::net::Ipv6Addr","std::cell::RefCell","std::string::String","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::option::Option","std::sync::RwLock","std::marker::PhantomData","std::num::NonZeroUsize","std::num::NonZeroI8","std::result::Result","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::borrow::Cow","std::sync::atomic::AtomicBool","std::rc::Rc","std::num::NonZeroI16","std::net::SocketAddrV6","std::collections::HashMap","std::collections::VecDeque"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::net::Ipv6Addr","std::num::NonZeroIsize","std::cell::Cell","std::sync::Arc","std::time::Duration","std::time::SystemTime","std::marker::PhantomData","std::string::String","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroU32","std::num::NonZeroU8","std::num::NonZeroU64","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroU16","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroI128","std::ffi::CString"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroU64","std::num::NonZeroI32","std::net::SocketAddr","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroUsize","std::sync::Arc","std::time::Duration","std::string::String","std::rc::Rc","std::marker::PhantomData","std::num::NonZeroI64","std::option::Option","std::path::PathBuf","std::cell::RefCell","std::net::Ipv6Addr","std::ffi::CString","std::cell::Cell","std::net::IpAddr","std::num::NonZeroU32","std::num::NonZeroI16"]},"std::collections::Bound":{"T":["std::ops::RangeInclusive","std::num::NonZeroU8","std::num::NonZeroIsize","std::rc::Rc","std::result::Result","std::boxed::Box","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::string::String","std::ops::Range","std::sync::RwLock","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::time::Duration","std::cell::RefCell","std::num::NonZeroUsize","std::collections::VecDeque","std::num::NonZeroI32","std::collections::BTreeMap","std::time::SystemTime","std::collections::Bound","std::sync::atomic::AtomicU64","std::collections::HashSet","std::sync::atomic::AtomicU8","std::vec::Vec","std::num::NonZeroU128","std::cell::Cell","std::num::NonZeroI64","std::num::NonZeroI128","std::net::SocketAddrV6","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::path::PathBuf","std::num::NonZeroU64","std::ffi::CString","std::collections::BTreeSet","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::option::Option","std::borrow::Cow","std::sync::Mutex","std::sync::Arc","std::marker::PhantomData","std::collections::HashMap","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::num::NonZeroI8","std::net::IpAddr"]},"std::collections::HashMap":{"K":["std::string::String","std::num::NonZeroI8","std::num::NonZeroU64","std::option::Option","std::marker::PhantomData","std::rc::Rc","std::ffi::CString","std::net::Ipv4Addr","std::time::SystemTime","std::sync::Arc","std::num::NonZeroU16","std::num::NonZeroIsize","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroI128","std::num::NonZeroI64"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::path::PathBuf","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::ffi::CString","std::collections::HashMap","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::collections::BTreeMap","std::vec::Vec","std::num::NonZeroIsize","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroU32","std::num::NonZeroUsize","std::result::Result","std::borrow::Cow","std::sync::Mutex","std::time::Duration","std::cell::Cell","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::rc::Rc","std::ops::RangeInclusive","std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroU8","std::sync::Arc","std::collections::VecDeque","std::collections::Bound","std::time::SystemTime","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::num::NonZeroU64","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::option::Option","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::net::SocketAddrV4","std::collections::BTreeSet","std::ops::Range","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::cell::RefCell","std::boxed::Box","std::sync::atomic::AtomicU16","std::net::IpAddr","std::string::String","std::sync::atomic::AtomicU8","std::sync::RwLock"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::option::Option","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroIsize","std::num::NonZeroU64","std::num::NonZeroU128","std::string::String","std::collections::Bound","std::num::NonZeroI8","std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroU32"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::time::Duration","std::num::NonZeroI64","std::num::NonZeroU64","std::ffi::CString","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::option::Option","std::collections::HashSet","std::vec::Vec","std::boxed::Box","std::net::IpAddr","std::sync::atomic::AtomicU32","std::ops::Range","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::cell::RefCell","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroU128","std::time::SystemTime","std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroIsize","std::collections::Bound","std::ops::RangeInclusive","std::collections::BTreeMap","std::sync::RwLock","std::rc::Rc","std::sync::Arc","std::num::NonZeroI128","std::collections::BinaryHeap","std::net::SocketAddrV6","std::cell::Cell","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::sync::Mutex","std::string::String","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::borrow::Cow","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::result::Result","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::collections::VecDeque","std::num::NonZeroU32","std::collections::HashMap","std::marker::PhantomData"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroI16","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::borrow::Cow","std::num::NonZeroUsize","std::cell::RefCell","std::collections::HashMap","std::sync::atomic::AtomicI32","std::sync::Mutex","std::marker::PhantomData","std::num::NonZeroU8","std::collections::Bound","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::option::Option","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::collections::HashSet","std::num::NonZeroI8","std::boxed::Box","std::num::NonZeroU64","std::collections::BTreeSet","std::net::SocketAddrV4","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::string::String","std::sync::atomic::AtomicIsize","std::ops::Range","std::sync::RwLock","std::num::NonZeroU32","std::num::NonZeroI64","std::collections::BTreeMap","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::sync::Arc","std::rc::Rc","std::path::PathBuf","std::collections::VecDeque","std::ffi::CString","std::result::Result","std::net::IpAddr","std::net::SocketAddrV6","std::time::Duration","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::vec::Vec","std::net::Ipv6Addr","std::sync::atomic::AtomicU32"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::time::Duration","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::collections::HashMap","std::vec::Vec","std::sync::atomic::AtomicU64","std::rc::Rc","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroI128","std::collections::VecDeque","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::option::Option","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::ops::Range","std::sync::atomic::AtomicU32","std::collections::HashSet","std::time::SystemTime","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::borrow::Cow","std::cell::Cell","std::num::NonZeroU32","std::string::String","std::sync::atomic::AtomicI16","std::net::IpAddr","std::ops::RangeInclusive","std::boxed::Box","std::sync::atomic::AtomicI64","std::ffi::CString","std::collections::BTreeSet","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroI16","std::result::Result","std::collections::Bound","std::num::NonZeroU128","std::num::NonZeroI8","std::sync::Mutex","std::num::NonZeroU16","std::num::NonZeroU8","std::net::SocketAddr","std::sync::Arc","std::sync::RwLock","std::net::Ipv6Addr"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::RwLock","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::num::NonZeroIsize","std::borrow::Cow","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::net::Ipv6Addr","std::collections::VecDeque","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::string::String","std::cell::RefCell","std::collections::Bound","std::sync::Mutex","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::collections::BTreeSet","std::boxed::Box","std::num::NonZeroI8","std::ops::Range","std::cell::Cell","std::time::SystemTime","std::marker::PhantomData","std::vec::Vec","std::num::NonZeroUsize","std::net::SocketAddr","std::collections::HashMap","std::num::NonZeroU16","std::option::Option","std::path::PathBuf","std::num::NonZeroU32","std::collections::HashSet","std::rc::Rc","std::ops::RangeInclusive","std::num::NonZeroU64","std::num::NonZeroI64","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::result::Result","std::sync::Arc","std::collections::BTreeMap","std::num::NonZeroI128","std::ffi::CString","std::time::Duration","std::net::SocketAddrV4"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::result::Result<T, U>>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::result::Result<T, U>>::borrow_decode(p0);
+<std::result::Result<T, U>>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::cell::Cell<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::Decode for std::cell::Cell<T>>::decode":{"D":["std::marker::Sized","de::Decoder"],"T":["de::Decode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::marker::Sized","de::Decode","std::cmp::Ord","enc::Encode","de::BorrowDecode"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","de::Decode","std::cmp::Ord","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","enc::Encode","de::Decode","std::cmp::Ord","de::BorrowDecode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::HashMap":{"K":["std::marker::Sized","std::cmp::Eq","de::BorrowDecode","de::Decode","enc::Encode","std::hash::Hash"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::marker::Sized","std::hash::Hash","enc::Encode","de::BorrowDecode","de::Decode","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::BigEndian","config::Varint","config::NoLimit","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Fixint","config::LittleEndian","config::Limit","config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::cell::Cell<T>>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"T":["std::cell::RefCell","std::string::String","std::num::NonZeroU128","std::net::SocketAddrV6","std::sync::RwLock","std::sync::Arc","std::collections::Bound","std::sync::atomic::AtomicI32","std::time::Duration","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::result::Result","std::time::SystemTime","std::rc::Rc","std::net::IpAddr","std::num::NonZeroU16","std::num::NonZeroIsize","std::cell::Cell","std::option::Option","std::collections::HashSet","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::vec::Vec","std::path::PathBuf","std::sync::atomic::AtomicI16","std::collections::HashMap","std::borrow::Cow","std::boxed::Box","std::sync::Mutex","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::ops::Range","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroI8","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::collections::BTreeMap","std::num::NonZeroU8","std::num::NonZeroI16","std::collections::VecDeque","std::ops::RangeInclusive","std::num::NonZeroI128","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::ffi::CString","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","<T as std::borrow::ToOwned>","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU64","std::cell::RefCell","std::marker::PhantomData","std::num::NonZeroI16","std::net::SocketAddrV6","std::time::Duration","std::net::Ipv4Addr","std::path::PathBuf","std::net::SocketAddr","std::cell::Cell","std::net::IpAddr","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroUsize","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroU32","std::net::SocketAddrV4","std::string::String","std::num::NonZeroU16"],"V":["std::option::Option","std::collections::HashSet","std::time::Duration","std::net::Ipv4Addr","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::result::Result","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::vec::Vec","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroIsize","std::num::NonZeroU64","std::cell::RefCell","std::sync::atomic::AtomicU64","std::sync::Arc","std::sync::atomic::AtomicI64","std::cell::Cell","std::sync::atomic::AtomicU16","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroI8","std::collections::BTreeSet","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::sync::RwLock","std::path::PathBuf","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::string::String","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::ops::Range","std::marker::PhantomData","std::net::SocketAddrV6","std::ffi::CString","std::net::IpAddr","std::collections::BTreeMap","std::num::NonZeroI128","std::collections::Bound","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::num::NonZeroI64","std::boxed::Box","std::borrow::Cow","std::ops::RangeInclusive","std::num::NonZeroU128","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::sync::Mutex","std::rc::Rc","std::collections::VecDeque"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::option::Option","std::num::NonZeroIsize","std::net::IpAddr","std::num::NonZeroI8","std::path::PathBuf","std::marker::PhantomData","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroI32","std::string::String","std::time::Duration","std::num::NonZeroU16","std::net::Ipv6Addr","std::sync::Arc","std::cell::RefCell","std::net::SocketAddrV4","std::net::Ipv4Addr","std::num::NonZeroUsize","std::num::NonZeroU64"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroIsize","std::ffi::CString","std::net::Ipv6Addr","std::time::Duration","std::marker::PhantomData","std::num::NonZeroU32","std::net::Ipv4Addr","std::cell::Cell","std::sync::Arc","std::num::NonZeroI8","std::cell::RefCell","std::option::Option","std::num::NonZeroI32","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroUsize","std::num::NonZeroU128","std::net::IpAddr","std::string::String","std::path::PathBuf","std::net::SocketAddrV4"]},"std::collections::Bound":{"T":["std::rc::Rc","std::path::PathBuf","std::num::NonZeroI32","std::time::SystemTime","std::collections::VecDeque","std::collections::BTreeSet","std::num::NonZeroU32","std::net::SocketAddr","std::collections::BinaryHeap","std::boxed::Box","std::cell::RefCell","std::net::SocketAddrV4","std::collections::HashMap","std::net::SocketAddrV6","std::num::NonZeroI64","std::collections::BTreeMap","std::sync::Arc","std::sync::atomic::AtomicU8","std::time::Duration","std::collections::HashSet","std::net::Ipv4Addr","std::num::NonZeroU64","std::net::Ipv6Addr","std::num::NonZeroU128","std::num::NonZeroI128","std::num::NonZeroU8","std::result::Result","std::ffi::CString","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::sync::Mutex","std::num::NonZeroU16","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::borrow::Cow","std::sync::RwLock","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::option::Option","std::vec::Vec","std::string::String","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::collections::Bound","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::cell::Cell","std::sync::atomic::AtomicI32","std::ops::Range","std::ops::RangeInclusive"]},"std::collections::HashMap":{"K":["std::num::NonZeroI128","std::net::IpAddr","std::net::SocketAddrV4","std::collections::Bound","std::rc::Rc","std::string::String","std::net::SocketAddrV6","std::net::Ipv4Addr","std::net::SocketAddr","std::path::PathBuf","std::num::NonZeroI8","std::num::NonZeroI64","std::sync::Arc"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::collections::BTreeSet","std::net::Ipv4Addr","std::cell::Cell","std::collections::BinaryHeap","std::net::Ipv6Addr","std::borrow::Cow","std::ops::Range","std::cell::RefCell","std::num::NonZeroU32","std::sync::Mutex","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::time::Duration","std::num::NonZeroI128","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::sync::Arc","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::boxed::Box","std::num::NonZeroU64","std::vec::Vec","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::collections::HashMap","std::num::NonZeroI16","std::collections::Bound","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::num::NonZeroI8","std::net::IpAddr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroU128","std::path::PathBuf","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicBool","std::result::Result","std::rc::Rc","std::num::NonZeroUsize","std::num::NonZeroI32","std::num::NonZeroU16","std::time::SystemTime","std::net::SocketAddrV4","std::collections::HashSet","std::sync::atomic::AtomicU8","std::string::String"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI8","std::num::NonZeroI32","std::net::Ipv4Addr","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroI128","std::num::NonZeroU16","std::ffi::CString","std::num::NonZeroUsize","std::sync::Arc","std::collections::Bound","std::net::IpAddr","std::time::SystemTime","std::option::Option"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::string::String","std::num::NonZeroU8","std::net::SocketAddrV6","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroUsize","std::collections::VecDeque","std::ffi::CString","std::sync::atomic::AtomicI32","std::boxed::Box","std::sync::atomic::AtomicU32","std::cell::Cell","std::collections::Bound","std::result::Result","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::num::NonZeroU16","std::option::Option","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::sync::Arc","std::collections::HashSet","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::num::NonZeroIsize","std::collections::BinaryHeap","std::time::Duration","std::rc::Rc","std::num::NonZeroI64","std::sync::Mutex","std::borrow::Cow","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::collections::BTreeMap","std::num::NonZeroI128","std::marker::PhantomData","std::net::Ipv6Addr","std::num::NonZeroU128","std::ops::Range","std::net::IpAddr","std::vec::Vec","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::collections::HashMap","std::path::PathBuf","std::sync::atomic::AtomicUsize"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::option::Option","std::boxed::Box","std::net::Ipv4Addr","std::path::PathBuf","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::vec::Vec","std::net::Ipv6Addr","std::time::SystemTime","std::sync::Arc","std::marker::PhantomData","std::collections::BTreeSet","std::net::SocketAddr","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::ffi::CString","std::num::NonZeroI8","std::num::NonZeroI16","std::ops::Range","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::sync::RwLock","std::collections::BinaryHeap","std::time::Duration","std::collections::HashSet","std::sync::Mutex","std::num::NonZeroI32","std::net::IpAddr","std::result::Result","std::collections::HashMap","std::borrow::Cow","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::collections::Bound","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::cell::Cell","std::rc::Rc","std::num::NonZeroU64","std::ops::RangeInclusive","std::num::NonZeroU8","std::collections::VecDeque","std::string::String","std::cell::RefCell","std::num::NonZeroUsize"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::VecDeque","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::collections::BTreeSet","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::collections::Bound","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroI32","std::ffi::CString","std::time::Duration","std::num::NonZeroU64","std::num::NonZeroIsize","std::sync::Arc","std::num::NonZeroU32","std::sync::RwLock","std::time::SystemTime","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::rc::Rc","std::vec::Vec","std::ops::RangeInclusive","std::num::NonZeroI128","std::cell::Cell","std::net::Ipv6Addr","std::borrow::Cow","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::boxed::Box","std::collections::HashSet","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::ops::Range","std::result::Result","std::sync::atomic::AtomicI64","std::string::String","std::sync::atomic::AtomicI16","std::cell::RefCell","std::collections::BinaryHeap","std::sync::Mutex","std::net::SocketAddrV6","std::num::NonZeroI16","std::collections::BTreeMap","std::collections::HashMap","std::option::Option","std::net::IpAddr"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::net::SocketAddr","std::net::Ipv6Addr","std::net::SocketAddrV6","std::ops::RangeInclusive","std::collections::HashMap","std::sync::atomic::AtomicI32","std::time::Duration","std::result::Result","std::sync::RwLock","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::collections::VecDeque","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroU128","std::marker::PhantomData","std::ops::Range","std::cell::RefCell","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::vec::Vec","std::sync::Arc","std::collections::BinaryHeap","std::boxed::Box","std::borrow::Cow","std::sync::atomic::AtomicU64","std::cell::Cell","std::sync::Mutex","std::time::SystemTime","std::collections::BTreeSet","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::path::PathBuf","std::num::NonZeroU64","std::num::NonZeroU8","std::num::NonZeroI32","std::option::Option","std::string::String","std::net::IpAddr","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::rc::Rc","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::collections::Bound","std::sync::atomic::AtomicU32","std::ffi::CString","std::collections::HashSet","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::net::Ipv4Addr"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::cell::Cell<T>>::decode(p0);
+crate::de::impls::<impl de::Decode for std::cell::Cell<T>>::decode(p0);
+<std::cell::Cell<T>>::decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::BorrowDecode<'de> for std::cell::Cell<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for std::cell::Cell<T>>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::Decode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","std::cmp::Ord","enc::Encode"]},"std::collections::Bound":{"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","enc::Encode","std::hash::Hash","de::Decode","std::marker::Sized","std::cmp::Eq"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::cmp::Eq","std::marker::Sized","enc::Encode","de::Decode","std::hash::Hash","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for *const T>","config::Limit","config::Fixint","config::NoLimit","config::Configuration","config::LittleEndian","config::BigEndian","config::Varint"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::cell::Cell<T>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"T":["std::num::NonZeroI128","std::rc::Rc","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::vec::Vec","std::collections::VecDeque","std::collections::BTreeSet","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::marker::PhantomData","std::collections::Bound","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::option::Option","std::num::NonZeroI64","std::sync::RwLock","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroIsize","std::net::Ipv6Addr","std::num::NonZeroI16","std::sync::Arc","std::borrow::Cow","std::num::NonZeroUsize","std::boxed::Box","std::net::IpAddr","std::sync::atomic::AtomicI16","std::time::SystemTime","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::num::NonZeroU64","std::result::Result","std::ffi::CString","std::ops::Range","std::num::NonZeroU16","std::num::NonZeroU32","std::cell::Cell","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::time::Duration","std::string::String","std::collections::HashSet","std::net::SocketAddrV4","std::collections::BTreeMap","std::net::Ipv4Addr","std::num::NonZeroU8","std::sync::atomic::AtomicI8"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::ffi::CStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::net::SocketAddr","std::num::NonZeroU16","std::sync::Arc","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI32","std::num::NonZeroI8","std::net::Ipv4Addr","std::net::IpAddr","std::option::Option","std::num::NonZeroI128","std::net::Ipv6Addr","std::cell::Cell","std::num::NonZeroI64","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroIsize","std::cell::RefCell","std::net::SocketAddrV6","std::num::NonZeroU8","std::rc::Rc"],"V":["std::sync::atomic::AtomicIsize","std::borrow::Cow","std::num::NonZeroU8","std::path::PathBuf","std::result::Result","std::net::SocketAddrV4","std::sync::RwLock","std::sync::Arc","std::ops::Range","std::num::NonZeroI16","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::ffi::CString","std::vec::Vec","std::boxed::Box","std::num::NonZeroI128","std::num::NonZeroIsize","std::net::SocketAddrV6","std::collections::HashMap","std::option::Option","std::collections::BinaryHeap","std::num::NonZeroU32","std::collections::BTreeMap","std::collections::BTreeSet","std::collections::Bound","std::time::SystemTime","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::collections::HashSet","std::net::SocketAddr","std::net::IpAddr","std::num::NonZeroI64","std::cell::Cell","std::collections::VecDeque","std::time::Duration","std::net::Ipv4Addr","std::marker::PhantomData","std::string::String","std::num::NonZeroU128","std::net::Ipv6Addr","std::sync::Mutex","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::rc::Rc","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::sync::Arc","std::num::NonZeroI64","std::rc::Rc","std::net::Ipv4Addr","std::option::Option","std::path::PathBuf","std::string::String","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroU8","std::net::IpAddr","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroU16","std::ffi::CString","std::num::NonZeroI32","std::num::NonZeroU128","std::cell::RefCell","std::num::NonZeroI128","std::net::SocketAddrV6"]},"std::collections::BinaryHeap":{"T":["std::path::PathBuf","std::num::NonZeroU64","std::net::IpAddr","std::num::NonZeroI64","std::cell::RefCell","std::marker::PhantomData","std::time::SystemTime","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroI128","std::rc::Rc","std::num::NonZeroI32","std::sync::Arc","std::net::SocketAddrV4","std::num::NonZeroIsize","std::net::Ipv6Addr","std::num::NonZeroI16","std::net::Ipv4Addr","std::net::SocketAddr","std::string::String","std::num::NonZeroU32","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroU128"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::cell::Cell","std::borrow::Cow","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::path::PathBuf","std::cell::RefCell","std::string::String","std::num::NonZeroU16","std::boxed::Box","std::num::NonZeroIsize","std::num::NonZeroI128","std::rc::Rc","std::option::Option","std::sync::atomic::AtomicI8","std::time::SystemTime","std::collections::HashSet","std::vec::Vec","std::ops::Range","std::ops::RangeInclusive","std::collections::BTreeMap","std::time::Duration","std::net::SocketAddrV4","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::sync::Arc","std::net::IpAddr","std::num::NonZeroUsize","std::num::NonZeroU32","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::ffi::CString","std::result::Result","std::sync::Mutex","std::num::NonZeroU128","std::num::NonZeroI16","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::collections::HashMap","std::sync::RwLock","std::collections::Bound","std::collections::BinaryHeap","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroI64"]},"std::collections::HashMap":{"K":["std::num::NonZeroIsize","std::time::SystemTime","std::ffi::CString","std::num::NonZeroU32","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroU8","std::num::NonZeroI8","std::num::NonZeroI64","std::num::NonZeroI32","std::net::Ipv6Addr","std::num::NonZeroUsize","std::net::SocketAddrV4","std::collections::Bound","std::num::NonZeroU16","std::time::Duration","std::net::SocketAddr","std::num::NonZeroU64","std::net::SocketAddrV6"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::time::Duration","std::num::NonZeroI128","std::rc::Rc","std::path::PathBuf","std::num::NonZeroU128","std::collections::BinaryHeap","std::collections::BTreeMap","std::borrow::Cow","std::sync::atomic::AtomicI32","std::string::String","std::sync::atomic::AtomicU32","std::sync::RwLock","std::collections::BTreeSet","std::sync::Mutex","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::ops::Range","std::vec::Vec","std::time::SystemTime","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::boxed::Box","std::collections::Bound","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::net::IpAddr","std::cell::RefCell","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::result::Result","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::ops::RangeInclusive","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::marker::PhantomData","std::collections::VecDeque","std::net::Ipv6Addr","std::num::NonZeroI8","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::collections::HashSet","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::num::NonZeroI64","std::cell::Cell","std::sync::Arc","std::num::NonZeroI32","std::ffi::CString","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::option::Option"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::rc::Rc","std::num::NonZeroI64","std::num::NonZeroIsize","std::marker::PhantomData","std::num::NonZeroI16","std::net::SocketAddr","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroUsize","std::string::String","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroU64","std::time::Duration","std::option::Option","std::path::PathBuf","std::net::SocketAddrV6","std::num::NonZeroU8"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::string::String","std::marker::PhantomData","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::cell::RefCell","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::cell::Cell","std::sync::atomic::AtomicUsize","std::time::Duration","std::sync::Arc","std::num::NonZeroU32","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::collections::HashSet","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::num::NonZeroI8","std::net::SocketAddr","std::ffi::CString","std::sync::RwLock","std::rc::Rc","std::sync::atomic::AtomicU32","std::sync::Mutex","std::result::Result","std::collections::HashMap","std::ops::RangeInclusive","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroI16","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::path::PathBuf","std::net::Ipv4Addr","std::collections::BinaryHeap","std::collections::Bound","std::time::SystemTime","std::vec::Vec","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::num::NonZeroUsize","std::ops::Range","std::net::IpAddr","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::borrow::Cow","std::boxed::Box","std::net::SocketAddrV4","std::num::NonZeroU8","std::collections::BTreeSet","std::num::NonZeroU128"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::HashMap","std::collections::BTreeMap","std::ffi::CString","std::sync::atomic::AtomicUsize","std::cell::Cell","std::option::Option","std::cell::RefCell","std::collections::HashSet","std::num::NonZeroU64","std::collections::Bound","std::net::IpAddr","std::borrow::Cow","std::rc::Rc","std::sync::Arc","std::sync::atomic::AtomicI8","std::path::PathBuf","std::sync::atomic::AtomicU64","std::result::Result","std::num::NonZeroU8","std::collections::BTreeSet","std::num::NonZeroU16","std::num::NonZeroI64","std::net::SocketAddrV6","std::marker::PhantomData","std::net::SocketAddrV4","std::vec::Vec","std::num::NonZeroI128","std::num::NonZeroUsize","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::boxed::Box","std::num::NonZeroU128","std::time::SystemTime","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::num::NonZeroI16","std::sync::RwLock","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::ops::RangeInclusive","std::net::Ipv4Addr","std::collections::VecDeque","std::num::NonZeroIsize","std::net::SocketAddr","std::sync::Mutex","std::ops::Range","std::sync::atomic::AtomicI64","std::time::Duration","std::num::NonZeroI8","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::string::String","std::sync::atomic::AtomicU16"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroI16","std::ops::Range","std::num::NonZeroU128","std::path::PathBuf","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::sync::RwLock","std::marker::PhantomData","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::collections::HashMap","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::collections::BTreeSet","std::sync::Arc","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroI64","std::sync::Mutex","std::borrow::Cow","std::cell::RefCell","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::collections::Bound","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::collections::HashSet","std::num::NonZeroU64","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::boxed::Box","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::rc::Rc","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::time::SystemTime","std::time::Duration","std::vec::Vec","std::num::NonZeroI32","std::result::Result","std::net::IpAddr","std::num::NonZeroU16","std::net::SocketAddrV6","std::cell::Cell","std::option::Option","std::num::NonZeroI128","std::string::String"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::net::Ipv4Addr","std::num::NonZeroU128","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::collections::Bound","std::collections::BTreeSet","std::collections::BinaryHeap","std::num::NonZeroI8","std::cell::RefCell","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::collections::HashMap","std::ops::Range","std::collections::HashSet","std::ffi::CString","std::num::NonZeroI64","std::num::NonZeroU16","std::num::NonZeroU64","std::num::NonZeroU32","std::vec::Vec","std::sync::Arc","std::time::Duration","std::net::SocketAddrV6","std::string::String","std::net::IpAddr","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::cell::Cell","std::rc::Rc","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::result::Result","std::ops::RangeInclusive","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::option::Option","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::borrow::Cow","std::time::SystemTime","std::num::NonZeroI32","std::sync::Mutex","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::path::PathBuf","std::net::Ipv6Addr","std::sync::RwLock","std::boxed::Box","std::sync::atomic::AtomicUsize"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::cell::Cell<T>>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::cell::Cell<T>>::borrow_decode(p0);
+<std::cell::Cell<T>>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::cell::RefCell<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]},"de::impls::<impl de::Decode for std::cell::RefCell<T>>::decode":{"D":["std::marker::Sized","de::Decoder"],"T":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"K":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode","std::cmp::Ord"],"V":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","std::cmp::Ord","enc::Encode","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::cmp::Ord","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::Bound":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["enc::Encode","de::Decode","std::marker::Sized","std::cmp::Eq","std::hash::Hash","de::BorrowDecode"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["de::Decode","enc::Encode","std::hash::Hash","std::cmp::Eq","de::BorrowDecode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for *mut T>","config::LittleEndian","config::NoLimit","config::Limit","config::Varint","config::Fixint","config::Configuration","config::BigEndian"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::cell::RefCell<T>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"T":["std::num::NonZeroI8","std::cell::Cell","std::net::Ipv4Addr","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::net::SocketAddr","std::time::SystemTime","std::net::SocketAddrV6","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::vec::Vec","std::sync::atomic::AtomicU16","std::option::Option","std::num::NonZeroU32","std::sync::Mutex","std::num::NonZeroI32","std::num::NonZeroI128","std::net::SocketAddrV4","std::rc::Rc","std::string::String","std::ffi::CString","std::collections::HashSet","std::path::PathBuf","std::sync::atomic::AtomicU8","std::cell::RefCell","std::num::NonZeroU64","std::num::NonZeroUsize","std::collections::HashMap","std::collections::BinaryHeap","std::num::NonZeroI16","std::collections::Bound","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::ops::Range","std::net::IpAddr","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::num::NonZeroIsize","std::sync::Arc","std::result::Result","std::net::Ipv6Addr","std::sync::RwLock","std::sync::atomic::AtomicI64","std::time::Duration","std::num::NonZeroU16","std::borrow::Cow","std::sync::atomic::AtomicU32","std::boxed::Box","std::num::NonZeroI64"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::CStr","std::ffi::OsStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroIsize","std::ffi::CString","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroU32","std::net::SocketAddrV4","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroI16","std::num::NonZeroU8","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroU64","std::time::Duration","std::num::NonZeroI64","std::string::String"],"V":["std::sync::atomic::AtomicU32","std::collections::HashMap","std::ops::RangeInclusive","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::cell::Cell","std::sync::Arc","std::num::NonZeroU32","std::collections::HashSet","std::vec::Vec","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::num::NonZeroUsize","std::time::SystemTime","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::boxed::Box","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::marker::PhantomData","std::collections::BTreeSet","std::result::Result","std::collections::Bound","std::cell::RefCell","std::collections::BTreeMap","std::path::PathBuf","std::string::String","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::rc::Rc","std::sync::atomic::AtomicBool","std::net::IpAddr","std::ops::Range","std::net::SocketAddrV4","std::num::NonZeroI32","std::time::Duration","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::option::Option","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::net::SocketAddr","std::num::NonZeroI16","std::collections::VecDeque","std::collections::BinaryHeap","std::net::Ipv6Addr","std::ffi::CString","std::sync::RwLock","std::num::NonZeroU16","std::num::NonZeroI64"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::IpAddr","std::num::NonZeroI32","std::marker::PhantomData","std::string::String","std::net::SocketAddr","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroU128","std::path::PathBuf","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroI64","std::cell::Cell","std::num::NonZeroU8","std::net::SocketAddrV6","std::net::SocketAddrV4","std::time::Duration","std::net::Ipv4Addr","std::num::NonZeroI128","std::num::NonZeroI16","std::cell::RefCell","std::time::SystemTime","std::num::NonZeroU16"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroUsize","std::string::String","std::net::IpAddr","std::cell::Cell","std::num::NonZeroU16","std::num::NonZeroI128","std::cell::RefCell","std::option::Option","std::num::NonZeroU32","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroU64","std::num::NonZeroU128","std::num::NonZeroI32","std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroU8","std::num::NonZeroI8","std::net::Ipv6Addr","std::num::NonZeroI64","std::num::NonZeroI16","std::marker::PhantomData"]},"std::collections::Bound":{"T":["std::collections::BinaryHeap","std::net::Ipv6Addr","std::boxed::Box","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::ops::Range","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::string::String","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::result::Result","std::vec::Vec","std::path::PathBuf","std::num::NonZeroU64","std::time::Duration","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::num::NonZeroU16","std::ops::RangeInclusive","std::collections::HashMap","std::net::IpAddr","std::sync::RwLock","std::collections::HashSet","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::sync::Arc","std::num::NonZeroU8","std::net::SocketAddr","std::num::NonZeroI128","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::time::SystemTime","std::sync::atomic::AtomicI64","std::rc::Rc","std::sync::atomic::AtomicI16","std::cell::Cell","std::collections::Bound","std::collections::BTreeSet","std::collections::VecDeque","std::sync::Mutex","std::cell::RefCell","std::num::NonZeroI8","std::net::SocketAddrV6","std::option::Option","std::ffi::CString","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::borrow::Cow","std::num::NonZeroU128","std::num::NonZeroIsize"]},"std::collections::HashMap":{"K":["std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroI128","std::net::SocketAddrV6","std::net::SocketAddr","std::rc::Rc","std::time::Duration","std::sync::Arc","std::collections::Bound","std::num::NonZeroU32","std::num::NonZeroI32","std::num::NonZeroI8","std::net::Ipv6Addr","std::num::NonZeroU64","std::net::SocketAddrV4","std::num::NonZeroIsize","std::num::NonZeroI64","std::ffi::CString"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicU8","std::path::PathBuf","std::sync::Mutex","std::net::IpAddr","std::boxed::Box","std::ffi::CString","std::net::SocketAddrV4","std::borrow::Cow","std::num::NonZeroU16","std::ops::Range","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::marker::PhantomData","std::num::NonZeroU32","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::num::NonZeroU64","std::num::NonZeroI8","std::collections::VecDeque","std::vec::Vec","std::collections::HashSet","std::net::Ipv6Addr","std::collections::HashMap","std::num::NonZeroIsize","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroI32","std::cell::RefCell","std::string::String","std::time::Duration","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::result::Result","std::time::SystemTime","std::num::NonZeroI128","std::sync::Arc","std::cell::Cell","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::collections::Bound","std::sync::atomic::AtomicU64","std::sync::RwLock","std::collections::BTreeSet","std::num::NonZeroI16","std::option::Option","std::sync::atomic::AtomicU16"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroI8","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroU64","std::sync::Arc","std::time::SystemTime","std::num::NonZeroIsize","std::path::PathBuf","std::net::Ipv4Addr","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroU8","std::num::NonZeroI64","std::rc::Rc"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::collections::BTreeMap","std::sync::RwLock","std::cell::RefCell","std::collections::HashSet","std::borrow::Cow","std::num::NonZeroI128","std::num::NonZeroI32","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::result::Result","std::net::Ipv6Addr","std::num::NonZeroU32","std::num::NonZeroU128","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::net::IpAddr","std::num::NonZeroU8","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::sync::Mutex","std::net::SocketAddrV6","std::collections::VecDeque","std::boxed::Box","std::num::NonZeroI16","std::time::Duration","std::ops::Range","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::net::SocketAddr","std::collections::BTreeSet","std::option::Option","std::marker::PhantomData","std::rc::Rc","std::sync::atomic::AtomicI32","std::path::PathBuf","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::collections::Bound","std::num::NonZeroU64","std::cell::Cell","std::collections::HashMap","std::sync::atomic::AtomicI16","std::string::String","std::ops::RangeInclusive","std::num::NonZeroU16","std::vec::Vec","std::ffi::CString","std::sync::atomic::AtomicU64"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::ops::RangeInclusive","std::vec::Vec","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::sync::Mutex","std::time::Duration","std::num::NonZeroIsize","std::num::NonZeroUsize","std::result::Result","std::path::PathBuf","std::sync::atomic::AtomicU8","std::net::IpAddr","std::ops::Range","std::ffi::CString","std::marker::PhantomData","std::collections::Bound","std::sync::atomic::AtomicBool","std::rc::Rc","std::net::Ipv4Addr","std::boxed::Box","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::num::NonZeroI64","std::num::NonZeroI128","std::collections::BTreeSet","std::sync::Arc","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::num::NonZeroU128","std::net::SocketAddr","std::collections::VecDeque","std::string::String","std::num::NonZeroI32","std::collections::HashSet","std::num::NonZeroU32","std::collections::BinaryHeap","std::collections::HashMap","std::time::SystemTime","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::option::Option","std::num::NonZeroI16","std::cell::RefCell","std::sync::RwLock","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::cell::Cell","std::sync::atomic::AtomicI16","std::borrow::Cow"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::string::String","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroU128","std::num::NonZeroU8","std::rc::Rc","std::num::NonZeroU32","std::num::NonZeroUsize","std::collections::BTreeMap","std::sync::RwLock","std::ops::Range","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::ffi::CString","std::net::IpAddr","std::collections::HashMap","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::time::Duration","std::collections::HashSet","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::cell::RefCell","std::sync::Arc","std::num::NonZeroI128","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::option::Option","std::num::NonZeroIsize","std::result::Result","std::num::NonZeroU16","std::net::Ipv4Addr","std::vec::Vec","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::borrow::Cow","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::sync::Mutex","std::cell::Cell","std::sync::atomic::AtomicU16","std::collections::Bound","std::boxed::Box","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::marker::PhantomData","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::time::SystemTime"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::num::NonZeroU64","std::ops::RangeInclusive","std::num::NonZeroU16","std::path::PathBuf","std::rc::Rc","std::ffi::CString","std::num::NonZeroI8","std::num::NonZeroIsize","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::net::Ipv4Addr","std::option::Option","std::sync::atomic::AtomicUsize","std::string::String","std::collections::VecDeque","std::ops::Range","std::collections::HashSet","std::cell::Cell","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::collections::BTreeSet","std::num::NonZeroU32","std::sync::RwLock","std::time::SystemTime","std::net::SocketAddrV4","std::vec::Vec","std::collections::BTreeMap","std::collections::Bound","std::num::NonZeroI128","std::sync::Arc","std::boxed::Box","std::num::NonZeroI32","std::net::SocketAddr","std::borrow::Cow","std::sync::atomic::AtomicI32","std::result::Result","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroU128","std::cell::RefCell","std::time::Duration","std::sync::atomic::AtomicI16","std::collections::HashMap","std::sync::Mutex","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::collections::BinaryHeap"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::cell::RefCell<T>>::decode(p0);
+crate::de::impls::<impl de::Decode for std::cell::RefCell<T>>::decode(p0);
+<std::cell::RefCell<T>>::decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::BorrowDecode<'de> for std::cell::RefCell<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::cell::RefCell<T>>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["de::Decode","std::marker::Sized","de::BorrowDecode","std::cmp::Ord","enc::Encode"],"V":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::Bound":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashMap":{"K":["enc::Encode","std::cmp::Eq","std::hash::Hash","std::marker::Sized","de::BorrowDecode","de::Decode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","std::hash::Hash","enc::Encode","std::cmp::Eq","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::BigEndian","config::NoLimit","config::Varint","config::Configuration","std::clone::impls::<impl std::clone::Clone for &mut T>","config::Limit","config::Fixint","config::LittleEndian"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::cell::RefCell<T>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"T":["std::net::SocketAddrV4","std::num::NonZeroU16","std::net::SocketAddr","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::num::NonZeroI16","std::time::SystemTime","std::num::NonZeroI128","std::string::String","std::ffi::CString","std::ops::Range","std::sync::Arc","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::cell::Cell","std::vec::Vec","std::num::NonZeroU32","std::collections::VecDeque","std::path::PathBuf","std::num::NonZeroU8","std::collections::Bound","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::num::NonZeroU128","std::marker::PhantomData","std::collections::HashMap","std::boxed::Box","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::num::NonZeroI8","std::collections::BTreeSet","std::cell::RefCell","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::rc::Rc","std::ops::RangeInclusive","std::result::Result","std::sync::atomic::AtomicBool","std::borrow::Cow","std::collections::HashSet","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::option::Option","std::sync::Mutex","std::time::Duration","std::sync::RwLock","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::cell::RefCell","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroU64","std::num::NonZeroI8","std::num::NonZeroU32","std::time::Duration","std::time::SystemTime","std::num::NonZeroI16","std::option::Option","std::cell::Cell","std::num::NonZeroU128","std::sync::Arc","std::net::Ipv6Addr","std::net::Ipv4Addr","std::num::NonZeroUsize","std::rc::Rc","std::num::NonZeroU16"],"V":["std::collections::HashSet","std::num::NonZeroU32","std::sync::RwLock","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::num::NonZeroI128","std::path::PathBuf","std::cell::Cell","std::option::Option","std::ops::RangeInclusive","std::cell::RefCell","std::collections::BTreeMap","std::boxed::Box","std::time::SystemTime","std::num::NonZeroU16","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::borrow::Cow","std::collections::HashMap","std::net::SocketAddr","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::sync::Arc","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::net::IpAddr","std::net::Ipv4Addr","std::num::NonZeroI64","std::net::SocketAddrV6","std::collections::VecDeque","std::ffi::CString","std::time::Duration","std::ops::Range","std::num::NonZeroU8","std::string::String","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::num::NonZeroI16","std::num::NonZeroU64","std::result::Result","std::collections::Bound","std::collections::BinaryHeap","std::vec::Vec","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::Ipv6Addr","std::rc::Rc","std::path::PathBuf","std::num::NonZeroUsize","std::time::SystemTime","std::option::Option","std::num::NonZeroI32","std::net::IpAddr","std::num::NonZeroU8","std::num::NonZeroI64","std::net::SocketAddrV6","std::string::String","std::cell::Cell","std::num::NonZeroU16","std::num::NonZeroI128","std::ffi::CString","std::num::NonZeroU32","std::num::NonZeroU64","std::marker::PhantomData"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroIsize","std::num::NonZeroU8","std::time::Duration","std::net::Ipv4Addr","std::net::SocketAddrV6","std::num::NonZeroI64","std::time::SystemTime","std::net::SocketAddr","std::rc::Rc","std::net::Ipv6Addr","std::net::SocketAddrV4","std::num::NonZeroUsize","std::num::NonZeroU32","std::num::NonZeroI32","std::ffi::CString","std::num::NonZeroU16","std::num::NonZeroU64","std::net::IpAddr","std::path::PathBuf","std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroI16","std::cell::RefCell"]},"std::collections::Bound":{"T":["std::net::IpAddr","std::num::NonZeroU128","std::collections::BTreeMap","std::cell::Cell","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::marker::PhantomData","std::num::NonZeroI128","std::num::NonZeroI32","std::num::NonZeroU64","std::num::NonZeroU32","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::ops::Range","std::time::Duration","std::collections::HashSet","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::collections::VecDeque","std::sync::Arc","std::num::NonZeroUsize","std::net::Ipv6Addr","std::vec::Vec","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::sync::RwLock","std::sync::atomic::AtomicBool","std::collections::Bound","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::cell::RefCell","std::collections::BinaryHeap","std::num::NonZeroU16","std::time::SystemTime","std::collections::HashMap","std::rc::Rc","std::string::String","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::borrow::Cow","std::collections::BTreeSet","std::path::PathBuf","std::boxed::Box","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::result::Result","std::ffi::CString","std::net::SocketAddrV4","std::sync::Mutex","std::option::Option","std::sync::atomic::AtomicU16"]},"std::collections::HashMap":{"K":["std::num::NonZeroI32","std::num::NonZeroIsize","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroU16","std::marker::PhantomData","std::num::NonZeroI16","std::sync::Arc","std::num::NonZeroI8","std::time::SystemTime","std::num::NonZeroU32","std::rc::Rc","std::net::Ipv6Addr"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::ops::RangeInclusive","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroU64","std::num::NonZeroU8","std::collections::Bound","std::net::SocketAddrV4","std::num::NonZeroU128","std::option::Option","std::num::NonZeroUsize","std::collections::HashSet","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::result::Result","std::ffi::CString","std::num::NonZeroU32","std::borrow::Cow","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::time::SystemTime","std::net::IpAddr","std::net::SocketAddr","std::time::Duration","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::vec::Vec","std::num::NonZeroI128","std::string::String","std::collections::VecDeque","std::sync::Mutex","std::sync::atomic::AtomicI32","std::ops::Range","std::num::NonZeroI16","std::path::PathBuf","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::cell::Cell","std::collections::BTreeMap","std::boxed::Box","std::num::NonZeroIsize","std::sync::Arc","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::cell::RefCell","std::rc::Rc","std::collections::BinaryHeap","std::net::SocketAddrV6"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::net::IpAddr","std::num::NonZeroI32","std::num::NonZeroU128","std::num::NonZeroI64","std::ffi::CString","std::num::NonZeroIsize","std::num::NonZeroI128","std::sync::Arc","std::rc::Rc","std::net::SocketAddr","std::num::NonZeroI16"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::cell::RefCell","std::net::SocketAddrV4","std::collections::BTreeSet","std::collections::BTreeMap","std::cell::Cell","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::ops::Range","std::num::NonZeroUsize","std::time::SystemTime","std::num::NonZeroI8","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::time::Duration","std::rc::Rc","std::string::String","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::sync::Mutex","std::sync::atomic::AtomicU32","std::vec::Vec","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::borrow::Cow","std::num::NonZeroI32","std::option::Option","std::net::SocketAddrV6","std::net::IpAddr","std::collections::Bound","std::collections::VecDeque","std::boxed::Box","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::sync::Arc","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::num::NonZeroI16","std::collections::HashMap","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::path::PathBuf","std::num::NonZeroI64","std::ffi::CString","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::result::Result","std::net::Ipv6Addr","std::num::NonZeroU64","std::collections::HashSet","std::sync::RwLock"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroU32","std::num::NonZeroU128","std::option::Option","std::sync::atomic::AtomicI64","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::borrow::Cow","std::collections::HashMap","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::rc::Rc","std::net::SocketAddrV6","std::net::Ipv6Addr","std::sync::RwLock","std::ffi::CString","std::result::Result","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::vec::Vec","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::collections::HashSet","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroIsize","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::path::PathBuf","std::num::NonZeroI16","std::net::Ipv4Addr","std::cell::Cell","std::net::IpAddr","std::net::SocketAddr","std::collections::Bound","std::collections::VecDeque","std::num::NonZeroU16","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::time::Duration","std::sync::atomic::AtomicU64","std::time::SystemTime","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::sync::Mutex","std::boxed::Box","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroI64","std::marker::PhantomData","std::ops::Range","std::sync::atomic::AtomicI8","std::string::String"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::BTreeMap","std::time::Duration","std::ops::RangeInclusive","std::collections::HashMap","std::net::IpAddr","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::borrow::Cow","std::result::Result","std::num::NonZeroIsize","std::collections::HashSet","std::collections::BTreeSet","std::sync::Arc","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::net::SocketAddrV6","std::time::SystemTime","std::boxed::Box","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::collections::Bound","std::option::Option","std::cell::RefCell","std::net::Ipv6Addr","std::net::SocketAddrV4","std::sync::RwLock","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::string::String","std::num::NonZeroI64","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::ffi::CString","std::num::NonZeroI16","std::num::NonZeroU8","std::vec::Vec","std::marker::PhantomData","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::num::NonZeroU128","std::cell::Cell","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::rc::Rc","std::sync::Mutex","std::num::NonZeroI32","std::num::NonZeroI128","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::ops::Range"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::net::IpAddr","std::collections::BinaryHeap","std::num::NonZeroIsize","std::num::NonZeroU64","std::collections::BTreeSet","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::num::NonZeroI8","std::sync::Mutex","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::boxed::Box","std::sync::Arc","std::borrow::Cow","std::num::NonZeroI128","std::net::Ipv6Addr","std::collections::VecDeque","std::collections::BTreeMap","std::num::NonZeroU16","std::net::SocketAddrV6","std::collections::Bound","std::rc::Rc","std::sync::RwLock","std::time::SystemTime","std::num::NonZeroU32","std::result::Result","std::sync::atomic::AtomicI16","std::option::Option","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::ffi::CString","std::vec::Vec","std::collections::HashMap","std::ops::Range","std::net::Ipv4Addr","std::num::NonZeroUsize","std::cell::Cell","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::collections::HashSet","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::time::Duration","std::sync::atomic::AtomicBool","std::string::String","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::sync::atomic::AtomicI32"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::cell::RefCell<T>>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::cell::RefCell<T>>::borrow_decode(p0);
+<std::cell::RefCell<T>>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::time::Duration>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::Decode for std::time::Duration>::decode":{"D":["std::marker::Sized","de::Decoder"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::time::Duration>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::time::Duration>::decode(p0);
+crate::de::impls::<impl de::Decode for std::time::Duration>::decode(p0);
+<std::time::Duration>::decode(p0);
-----------------
src/de/mod.rs de::impls::<impl de::BorrowDecode<'de> for std::time::Duration>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for std::time::Duration>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::time::Duration>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::time::Duration>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::time::Duration>::borrow_decode(p0);
+<std::time::Duration>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::ops::Range<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::Decode for std::ops::Range<T>>::decode":{"D":["de::Decoder","std::marker::Sized"],"T":["de::Decode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::Decode","std::cmp::Ord","enc::Encode","std::marker::Sized","de::BorrowDecode"],"V":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","std::cmp::Ord","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","std::cmp::Ord","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::Bound":{"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashMap":{"K":["enc::Encode","std::marker::Sized","de::BorrowDecode","std::cmp::Eq","std::hash::Hash","de::Decode"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["de::BorrowDecode","std::marker::Sized","std::cmp::Eq","std::hash::Hash","enc::Encode","de::Decode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for *const T>","config::Limit","config::Configuration","config::Fixint","config::NoLimit","config::BigEndian","config::LittleEndian","config::Varint"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::ops::Range<T>>::decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"],"T":["std::collections::BinaryHeap","std::net::Ipv6Addr","std::borrow::Cow","std::time::SystemTime","std::option::Option","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::net::IpAddr","std::num::NonZeroU128","std::num::NonZeroI64","std::collections::BTreeMap","std::num::NonZeroU8","std::boxed::Box","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::collections::HashSet","std::ops::Range","std::net::SocketAddrV4","std::num::NonZeroU64","std::ffi::CString","std::sync::atomic::AtomicBool","std::cell::Cell","std::result::Result","std::cell::RefCell","std::num::NonZeroIsize","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::vec::Vec","std::net::Ipv4Addr","std::num::NonZeroI128","std::collections::Bound","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::string::String","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::collections::HashMap","std::num::NonZeroI8","std::ops::RangeInclusive","std::sync::RwLock","std::marker::PhantomData","std::rc::Rc","std::time::Duration","std::num::NonZeroI32","std::sync::Arc","std::sync::Mutex","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::collections::BTreeSet","std::collections::VecDeque","std::sync::atomic::AtomicIsize"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::path::Path","std::ffi::OsStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::cell::RefCell","std::num::NonZeroU64","std::net::SocketAddrV4","std::net::IpAddr","std::string::String","std::net::Ipv4Addr","std::option::Option","std::cell::Cell","std::net::SocketAddrV6","std::sync::Arc","std::num::NonZeroI128","std::net::SocketAddr","std::num::NonZeroU8","std::rc::Rc","std::num::NonZeroU32","std::num::NonZeroI8","std::net::Ipv6Addr","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroUsize"],"V":["std::num::NonZeroUsize","std::collections::BTreeMap","std::collections::Bound","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::sync::RwLock","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroI32","std::collections::BTreeSet","std::num::NonZeroU8","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::cell::Cell","std::net::SocketAddrV4","std::collections::HashMap","std::borrow::Cow","std::num::NonZeroU128","std::num::NonZeroU16","std::num::NonZeroU64","std::ops::RangeInclusive","std::net::SocketAddr","std::num::NonZeroI128","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::result::Result","std::vec::Vec","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::ops::Range","std::time::Duration","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::collections::VecDeque","std::path::PathBuf","std::marker::PhantomData","std::net::Ipv6Addr","std::cell::RefCell","std::rc::Rc","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::collections::HashSet","std::sync::Arc","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::string::String","std::sync::Mutex","std::ffi::CString"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::ffi::CString","std::num::NonZeroIsize","std::option::Option","std::rc::Rc","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroI32","std::num::NonZeroUsize","std::num::NonZeroU32","std::num::NonZeroI64","std::num::NonZeroU128","std::cell::Cell","std::num::NonZeroI128","std::net::Ipv4Addr","std::string::String","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroI16","std::net::SocketAddr","std::num::NonZeroU64","std::cell::RefCell","std::num::NonZeroU16"]},"std::collections::BinaryHeap":{"T":["std::path::PathBuf","std::net::SocketAddrV6","std::net::Ipv6Addr","std::ffi::CString","std::option::Option","std::num::NonZeroI128","std::string::String","std::num::NonZeroI32","std::num::NonZeroU8","std::num::NonZeroUsize","std::time::SystemTime","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroI8","std::net::IpAddr","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroIsize","std::num::NonZeroU64","std::num::NonZeroI16"]},"std::collections::Bound":{"T":["std::option::Option","std::num::NonZeroI8","std::num::NonZeroUsize","std::borrow::Cow","std::sync::atomic::AtomicU16","std::rc::Rc","std::sync::atomic::AtomicU8","std::result::Result","std::ops::RangeInclusive","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::sync::Arc","std::num::NonZeroI128","std::collections::BTreeSet","std::collections::HashMap","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::sync::Mutex","std::ffi::CString","std::collections::Bound","std::num::NonZeroI16","std::sync::RwLock","std::ops::Range","std::net::SocketAddr","std::num::NonZeroU128","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::string::String","std::num::NonZeroU64","std::collections::BTreeMap","std::cell::RefCell","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::cell::Cell","std::boxed::Box","std::net::Ipv4Addr","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::num::NonZeroI64","std::collections::HashSet","std::net::SocketAddrV6","std::time::SystemTime","std::net::IpAddr","std::marker::PhantomData","std::vec::Vec","std::time::Duration","std::num::NonZeroIsize"]},"std::collections::HashMap":{"K":["std::net::SocketAddrV4","std::net::Ipv4Addr","std::time::SystemTime","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroIsize","std::num::NonZeroI16","std::marker::PhantomData","std::sync::Arc","std::num::NonZeroU128","std::option::Option","std::string::String","std::ffi::CString","std::num::NonZeroU16","std::net::Ipv6Addr","std::num::NonZeroI32"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::string::String","std::ffi::CString","std::ops::Range","std::collections::HashMap","std::option::Option","std::cell::RefCell","std::net::SocketAddr","std::num::NonZeroU128","std::net::Ipv4Addr","std::ops::RangeInclusive","std::collections::BinaryHeap","std::time::Duration","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::vec::Vec","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::rc::Rc","std::borrow::Cow","std::sync::atomic::AtomicI8","std::collections::Bound","std::sync::Arc","std::collections::HashSet","std::net::Ipv6Addr","std::marker::PhantomData","std::num::NonZeroU64","std::num::NonZeroI32","std::net::IpAddr","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::boxed::Box","std::num::NonZeroU16","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::sync::RwLock","std::num::NonZeroU32","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroIsize","std::time::SystemTime","std::cell::Cell","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::result::Result"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI8","std::collections::Bound","std::net::SocketAddrV4","std::net::SocketAddrV6","std::num::NonZeroI32","std::option::Option","std::net::Ipv6Addr","std::time::SystemTime","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroIsize","std::num::NonZeroI64","std::sync::Arc","std::path::PathBuf","std::num::NonZeroU32","std::string::String","std::ffi::CString"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::marker::PhantomData","std::cell::Cell","std::ops::RangeInclusive","std::net::SocketAddrV4","std::num::NonZeroUsize","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::collections::Bound","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroI16","std::sync::RwLock","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroU16","std::num::NonZeroI64","std::ops::Range","std::rc::Rc","std::collections::HashMap","std::time::Duration","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::boxed::Box","std::num::NonZeroI128","std::sync::Arc","std::time::SystemTime","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::num::NonZeroI32","std::vec::Vec","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::string::String","std::ffi::CString","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroIsize","std::result::Result","std::borrow::Cow","std::sync::Mutex","std::num::NonZeroI8","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::collections::VecDeque"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::BTreeMap","std::collections::BinaryHeap","std::sync::Mutex","std::time::SystemTime","std::sync::atomic::AtomicI32","std::boxed::Box","std::net::SocketAddrV4","std::borrow::Cow","std::num::NonZeroUsize","std::num::NonZeroIsize","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroI16","std::collections::HashSet","std::sync::RwLock","std::ops::RangeInclusive","std::collections::Bound","std::ops::Range","std::net::SocketAddr","std::cell::RefCell","std::collections::BTreeSet","std::num::NonZeroI64","std::vec::Vec","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::collections::HashMap","std::rc::Rc","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::ffi::CString","std::cell::Cell","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::time::Duration","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::string::String","std::result::Result","std::sync::atomic::AtomicU8","std::path::PathBuf","std::sync::atomic::AtomicU32","std::sync::Arc","std::net::Ipv6Addr","std::net::IpAddr","std::collections::VecDeque","std::net::Ipv4Addr","std::num::NonZeroU8","std::num::NonZeroU32","std::num::NonZeroI8","std::sync::atomic::AtomicI8"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroU8","std::collections::BTreeMap","std::ops::Range","std::num::NonZeroU16","std::net::SocketAddr","std::num::NonZeroU64","std::vec::Vec","std::ffi::CString","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::rc::Rc","std::marker::PhantomData","std::time::Duration","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::collections::HashMap","std::num::NonZeroU32","std::result::Result","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::sync::RwLock","std::collections::HashSet","std::cell::Cell","std::sync::Arc","std::borrow::Cow","std::net::IpAddr","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::ops::RangeInclusive","std::sync::Mutex","std::collections::BTreeSet","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::collections::Bound","std::net::SocketAddrV4","std::num::NonZeroI8","std::num::NonZeroI128","std::cell::RefCell","std::path::PathBuf","std::sync::atomic::AtomicI32","std::boxed::Box","std::num::NonZeroI32","std::string::String","std::collections::BinaryHeap","std::option::Option","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::sync::atomic::AtomicU64"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::collections::BTreeMap","std::cell::RefCell","std::num::NonZeroUsize","std::num::NonZeroI16","std::result::Result","std::ops::Range","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::collections::HashMap","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::sync::Mutex","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::collections::HashSet","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::rc::Rc","std::boxed::Box","std::sync::atomic::AtomicU32","std::borrow::Cow","std::ffi::CString","std::sync::atomic::AtomicU8","std::string::String","std::sync::atomic::AtomicU64","std::sync::RwLock","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::path::PathBuf","std::cell::Cell","std::num::NonZeroU128","std::net::Ipv6Addr","std::vec::Vec","std::num::NonZeroU64","std::net::SocketAddr","std::collections::Bound","std::num::NonZeroI128","std::time::Duration","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::net::SocketAddrV4","std::net::IpAddr","std::num::NonZeroI64","std::sync::Arc","std::ops::RangeInclusive","std::num::NonZeroU8","std::time::SystemTime","std::sync::atomic::AtomicI8","std::option::Option","std::net::SocketAddrV6","std::num::NonZeroU32"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::ops::Range<T>>::decode(p0);
+crate::de::impls::<impl de::Decode for std::ops::Range<T>>::decode(p0);
+<std::ops::Range<T>>::decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::BorrowDecode<'de> for std::ops::Range<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for std::ops::Range<T>>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"K":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Ord"],"V":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["enc::Encode","de::BorrowDecode","std::cmp::Ord","de::Decode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::Bound":{"T":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::HashMap":{"K":["std::marker::Sized","std::cmp::Eq","enc::Encode","std::hash::Hash","de::BorrowDecode","de::Decode"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["std::cmp::Eq","std::hash::Hash","de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::BigEndian","config::Fixint","config::NoLimit","config::Limit","config::Varint","config::Configuration","std::clone::impls::<impl std::clone::Clone for &mut T>"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::ops::Range<T>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"T":["std::cell::RefCell","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::ffi::CString","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::sync::atomic::AtomicBool","std::time::SystemTime","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::collections::BTreeSet","std::time::Duration","std::collections::BTreeMap","std::num::NonZeroIsize","std::num::NonZeroU8","std::sync::Mutex","std::collections::HashSet","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::collections::BinaryHeap","std::num::NonZeroU16","std::path::PathBuf","std::net::Ipv4Addr","std::cell::Cell","std::net::IpAddr","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::sync::Arc","std::string::String","std::vec::Vec","std::collections::HashMap","std::boxed::Box","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::ops::Range","std::option::Option","std::num::NonZeroI128","std::net::SocketAddrV4","std::rc::Rc","std::borrow::Cow","std::num::NonZeroUsize","std::collections::Bound","std::result::Result","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroU64","std::ops::RangeInclusive"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::CStr","std::ffi::OsStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::net::Ipv4Addr","std::num::NonZeroU128","std::num::NonZeroU16","std::num::NonZeroI8","std::net::SocketAddrV6","std::net::IpAddr","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroI32","std::string::String","std::num::NonZeroU32","std::cell::Cell","std::time::Duration","std::num::NonZeroUsize","std::net::SocketAddr","std::ffi::CString","std::cell::RefCell","std::option::Option","std::num::NonZeroIsize","std::num::NonZeroI128"],"V":["std::num::NonZeroU32","std::sync::Arc","std::net::SocketAddr","std::net::IpAddr","std::cell::Cell","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::collections::Bound","std::vec::Vec","std::string::String","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::num::NonZeroI8","std::time::SystemTime","std::cell::RefCell","std::collections::HashSet","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::boxed::Box","std::result::Result","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::num::NonZeroIsize","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::num::NonZeroI64","std::collections::HashMap","std::time::Duration","std::sync::atomic::AtomicU8","std::option::Option","std::num::NonZeroI16","std::sync::Mutex","std::num::NonZeroU64","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::ffi::CString","std::collections::VecDeque","std::rc::Rc","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::borrow::Cow","std::sync::RwLock","std::num::NonZeroU128","std::ops::Range","std::num::NonZeroU16","std::sync::atomic::AtomicI64"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::Ipv6Addr","std::net::Ipv4Addr","std::path::PathBuf","std::cell::RefCell","std::time::Duration","std::num::NonZeroIsize","std::num::NonZeroUsize","std::net::IpAddr","std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroU8","std::rc::Rc","std::num::NonZeroI32","std::num::NonZeroU16","std::net::SocketAddrV4","std::num::NonZeroI64","std::cell::Cell","std::num::NonZeroU64","std::num::NonZeroI128","std::sync::Arc","std::net::SocketAddr"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI64","std::num::NonZeroU16","std::num::NonZeroU64","std::sync::Arc","std::num::NonZeroI128","std::net::SocketAddrV6","std::net::SocketAddrV4","std::cell::Cell","std::num::NonZeroUsize","std::time::Duration","std::rc::Rc","std::path::PathBuf","std::num::NonZeroU128","std::num::NonZeroI32","std::time::SystemTime","std::num::NonZeroI8","std::net::Ipv4Addr","std::string::String"]},"std::collections::Bound":{"T":["std::time::Duration","std::num::NonZeroUsize","std::net::IpAddr","std::boxed::Box","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::ops::Range","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::cell::RefCell","std::net::Ipv4Addr","std::rc::Rc","std::marker::PhantomData","std::ffi::CString","std::ops::RangeInclusive","std::collections::HashSet","std::num::NonZeroU64","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroU16","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::result::Result","std::net::SocketAddrV6","std::collections::BTreeSet","std::sync::Mutex","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::option::Option","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::string::String","std::sync::Arc","std::num::NonZeroI128","std::net::SocketAddrV4","std::sync::RwLock","std::num::NonZeroI32","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::vec::Vec","std::path::PathBuf","std::collections::Bound","std::collections::HashMap","std::collections::BTreeMap","std::cell::Cell","std::borrow::Cow"]},"std::collections::HashMap":{"K":["std::num::NonZeroU8","std::num::NonZeroI128","std::num::NonZeroU32","std::num::NonZeroU16","std::num::NonZeroU128","std::num::NonZeroI32","std::time::SystemTime","std::net::SocketAddrV4","std::string::String","std::time::Duration","std::num::NonZeroI8","std::sync::Arc","std::ffi::CString","std::net::Ipv4Addr","std::num::NonZeroI16"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::net::SocketAddr","std::num::NonZeroU16","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::time::SystemTime","std::collections::VecDeque","std::num::NonZeroI64","std::collections::BinaryHeap","std::sync::Mutex","std::collections::HashMap","std::net::Ipv4Addr","std::net::Ipv6Addr","std::sync::RwLock","std::cell::RefCell","std::sync::atomic::AtomicI8","std::string::String","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::num::NonZeroI32","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::ffi::CString","std::collections::BTreeMap","std::vec::Vec","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::time::Duration","std::num::NonZeroUsize","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::boxed::Box","std::ops::Range","std::result::Result","std::path::PathBuf","std::num::NonZeroI16","std::net::IpAddr","std::sync::Arc","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::borrow::Cow","std::collections::HashSet","std::collections::BTreeSet","std::collections::Bound","std::rc::Rc","std::num::NonZeroI128","std::cell::Cell","std::sync::atomic::AtomicBool","std::option::Option","std::sync::atomic::AtomicU64","std::marker::PhantomData"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::net::SocketAddr","std::collections::Bound","std::sync::Arc","std::num::NonZeroU16","std::num::NonZeroU32","std::num::NonZeroI32","std::num::NonZeroUsize","std::string::String","std::ffi::CString","std::num::NonZeroI8","std::path::PathBuf","std::num::NonZeroIsize","std::marker::PhantomData","std::net::IpAddr","std::rc::Rc"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::boxed::Box","std::time::Duration","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::vec::Vec","std::cell::RefCell","std::sync::RwLock","std::net::SocketAddrV4","std::collections::BinaryHeap","std::net::Ipv6Addr","std::string::String","std::marker::PhantomData","std::num::NonZeroUsize","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::time::SystemTime","std::borrow::Cow","std::option::Option","std::net::IpAddr","std::collections::HashMap","std::collections::BTreeSet","std::cell::Cell","std::num::NonZeroI64","std::sync::Mutex","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::result::Result","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::sync::Arc","std::sync::atomic::AtomicI16","std::rc::Rc","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroI8","std::net::SocketAddrV6","std::collections::HashSet","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::net::SocketAddr","std::ops::RangeInclusive","std::net::Ipv4Addr","std::num::NonZeroI128","std::path::PathBuf","std::num::NonZeroU16","std::ops::Range","std::collections::Bound"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::IpAddr","std::net::Ipv4Addr","std::ops::Range","std::net::SocketAddrV4","std::net::SocketAddrV6","std::borrow::Cow","std::collections::VecDeque","std::num::NonZeroU16","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::collections::HashMap","std::num::NonZeroU32","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::string::String","std::result::Result","std::option::Option","std::ops::RangeInclusive","std::path::PathBuf","std::ffi::CString","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroI64","std::sync::Arc","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::num::NonZeroUsize","std::num::NonZeroI128","std::collections::BTreeMap","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroI16","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::vec::Vec","std::num::NonZeroU8","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::cell::Cell","std::time::Duration","std::boxed::Box","std::time::SystemTime","std::sync::RwLock","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::sync::Mutex","std::collections::HashSet","std::collections::Bound","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::BinaryHeap","std::collections::Bound","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::sync::Arc","std::num::NonZeroI16","std::net::SocketAddrV6","std::cell::RefCell","std::sync::atomic::AtomicU32","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::num::NonZeroI8","std::net::Ipv4Addr","std::collections::HashSet","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::cell::Cell","std::ops::Range","std::sync::Mutex","std::num::NonZeroU128","std::num::NonZeroU32","std::time::Duration","std::num::NonZeroUsize","std::vec::Vec","std::rc::Rc","std::string::String","std::ffi::CString","std::boxed::Box","std::num::NonZeroIsize","std::num::NonZeroI32","std::sync::RwLock","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::result::Result","std::collections::BTreeSet","std::net::SocketAddr","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::collections::BTreeMap","std::option::Option","std::collections::HashMap","std::net::Ipv6Addr","std::net::IpAddr","std::sync::atomic::AtomicU8"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::time::Duration","std::num::NonZeroI8","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::path::PathBuf","std::ops::Range","std::num::NonZeroUsize","std::sync::Mutex","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::cell::Cell","std::num::NonZeroI16","std::rc::Rc","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::num::NonZeroI128","std::result::Result","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::time::SystemTime","std::collections::HashSet","std::vec::Vec","std::collections::BTreeMap","std::option::Option","std::collections::Bound","std::boxed::Box","std::sync::Arc","std::ffi::CString","std::net::IpAddr","std::borrow::Cow","std::string::String","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::marker::PhantomData","std::num::NonZeroU64","std::net::SocketAddr","std::num::NonZeroI64","std::sync::RwLock","std::collections::HashMap","std::num::NonZeroU128","std::net::Ipv4Addr","std::net::SocketAddrV6","std::num::NonZeroIsize"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::ops::Range<T>>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::ops::Range<T>>::borrow_decode(p0);
+<std::ops::Range<T>>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::ops::RangeInclusive<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::Reader","de::read::BorrowReader"]},"de::impls::<impl de::Decode for std::ops::RangeInclusive<T>>::decode":{"D":["de::Decoder","std::marker::Sized"],"T":["std::marker::Sized","de::Decode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["std::cmp::Ord","std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"],"V":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Ord","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Ord"]},"std::collections::Bound":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashMap":{"K":["enc::Encode","std::cmp::Eq","de::BorrowDecode","std::marker::Sized","de::Decode","std::hash::Hash"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::marker::Sized","de::Decode","std::cmp::Eq","std::hash::Hash","de::BorrowDecode","enc::Encode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for *const T>","config::Configuration","config::NoLimit","config::Limit","config::Fixint","config::Varint","config::BigEndian","config::LittleEndian"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::ops::RangeInclusive<T>>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"T":["std::collections::HashMap","std::num::NonZeroUsize","std::cell::RefCell","std::sync::Arc","std::option::Option","std::net::IpAddr","std::time::SystemTime","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::num::NonZeroU128","std::net::Ipv4Addr","std::boxed::Box","std::sync::RwLock","std::ffi::CString","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::sync::Mutex","std::result::Result","std::vec::Vec","std::sync::atomic::AtomicI8","std::cell::Cell","std::num::NonZeroI16","std::collections::BTreeSet","std::string::String","std::collections::BTreeMap","std::marker::PhantomData","std::num::NonZeroI8","std::net::Ipv6Addr","std::net::SocketAddrV6","std::num::NonZeroU32","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::num::NonZeroU64","std::collections::Bound","std::num::NonZeroI64","std::time::Duration","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::collections::HashSet","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::num::NonZeroU16","std::ops::Range","std::ops::RangeInclusive","std::rc::Rc","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::sync::atomic::AtomicU8"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::CStr","<T as std::borrow::ToOwned>","std::ffi::OsStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroU32","std::path::PathBuf","std::cell::Cell","std::num::NonZeroUsize","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroI8","std::string::String","std::ffi::CString","std::net::SocketAddrV4","std::num::NonZeroU8","std::net::Ipv4Addr","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroU16","std::marker::PhantomData","std::num::NonZeroU128","std::cell::RefCell","std::time::SystemTime"],"V":["std::boxed::Box","std::sync::atomic::AtomicU8","std::sync::Arc","std::sync::Mutex","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::collections::Bound","std::sync::atomic::AtomicIsize","std::string::String","std::collections::HashSet","std::num::NonZeroI16","std::num::NonZeroU16","std::option::Option","std::ops::RangeInclusive","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::path::PathBuf","std::num::NonZeroU32","std::result::Result","std::num::NonZeroU128","std::net::SocketAddrV4","std::ops::Range","std::sync::RwLock","std::num::NonZeroUsize","std::num::NonZeroIsize","std::time::SystemTime","std::cell::Cell","std::marker::PhantomData","std::collections::VecDeque","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::num::NonZeroI32","std::num::NonZeroI8","std::vec::Vec","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::net::Ipv6Addr","std::net::IpAddr","std::cell::RefCell","std::time::Duration","std::borrow::Cow","std::num::NonZeroI128","std::collections::HashMap","std::num::NonZeroU64","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::ffi::CString","std::rc::Rc"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::marker::PhantomData","std::num::NonZeroIsize","std::path::PathBuf","std::num::NonZeroI128","std::num::NonZeroUsize","std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroU32","std::sync::Arc","std::num::NonZeroI16","std::num::NonZeroI64","std::cell::Cell","std::ffi::CString","std::num::NonZeroU128","std::string::String","std::num::NonZeroU8","std::num::NonZeroI8","std::net::SocketAddr","std::net::Ipv6Addr","std::time::Duration"]},"std::collections::BinaryHeap":{"T":["std::marker::PhantomData","std::net::SocketAddr","std::cell::RefCell","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroI32","std::net::IpAddr","std::net::SocketAddrV4","std::num::NonZeroI64","std::time::SystemTime","std::sync::Arc","std::num::NonZeroI8","std::option::Option","std::string::String","std::net::Ipv6Addr","std::num::NonZeroI16","std::net::Ipv4Addr","std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroU128","std::cell::Cell","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroU64"]},"std::collections::Bound":{"T":["std::sync::RwLock","std::time::Duration","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::net::SocketAddrV4","std::vec::Vec","std::net::IpAddr","std::num::NonZeroI8","std::collections::BTreeMap","std::num::NonZeroI128","std::sync::Mutex","std::collections::VecDeque","std::rc::Rc","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::net::Ipv4Addr","std::collections::BTreeSet","std::num::NonZeroU64","std::collections::BinaryHeap","std::ops::Range","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::option::Option","std::num::NonZeroU16","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::boxed::Box","std::sync::atomic::AtomicBool","std::collections::HashMap","std::num::NonZeroU8","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::collections::HashSet","std::time::SystemTime","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroU32","std::collections::Bound","std::num::NonZeroI32","std::cell::RefCell","std::ffi::CString","std::string::String","std::result::Result","std::cell::Cell","std::sync::atomic::AtomicI32","std::path::PathBuf","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::ops::RangeInclusive"]},"std::collections::HashMap":{"K":["std::num::NonZeroI16","std::num::NonZeroIsize","std::num::NonZeroU16","std::ffi::CString","std::net::SocketAddrV4","std::option::Option","std::marker::PhantomData","std::net::IpAddr","std::net::SocketAddr","std::net::Ipv4Addr","std::collections::Bound","std::num::NonZeroU8","std::string::String","std::sync::Arc","std::time::Duration","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroU128"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::net::Ipv6Addr","std::time::SystemTime","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::ffi::CString","std::net::SocketAddrV4","std::cell::RefCell","std::time::Duration","std::num::NonZeroUsize","std::boxed::Box","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::num::NonZeroI8","std::borrow::Cow","std::marker::PhantomData","std::collections::BTreeMap","std::collections::Bound","std::net::SocketAddrV6","std::rc::Rc","std::num::NonZeroI64","std::collections::HashMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::collections::HashSet","std::sync::RwLock","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::vec::Vec","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::string::String","std::sync::Arc","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::num::NonZeroIsize","std::collections::BinaryHeap","std::num::NonZeroI128","std::num::NonZeroI32","std::num::NonZeroU32","std::cell::Cell","std::net::IpAddr","std::num::NonZeroU8","std::ops::Range","std::net::SocketAddr","std::sync::Mutex","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::result::Result","std::num::NonZeroU128","std::option::Option","std::num::NonZeroU64","std::path::PathBuf"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::marker::PhantomData","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroU8","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroIsize","std::num::NonZeroI32","std::net::SocketAddrV6","std::num::NonZeroI64","std::net::SocketAddr","std::net::SocketAddrV4"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::net::SocketAddrV4","std::rc::Rc","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::num::NonZeroU8","std::num::NonZeroU16","std::collections::BTreeMap","std::collections::HashMap","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::result::Result","std::time::Duration","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::num::NonZeroI8","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::vec::Vec","std::option::Option","std::num::NonZeroI128","std::ops::RangeInclusive","std::borrow::Cow","std::sync::RwLock","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::ops::Range","std::net::SocketAddr","std::num::NonZeroU64","std::sync::Arc","std::collections::Bound","std::num::NonZeroU128","std::collections::VecDeque","std::ffi::CString","std::path::PathBuf","std::sync::Mutex","std::net::SocketAddrV6","std::string::String","std::collections::HashSet","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::cell::RefCell","std::boxed::Box","std::marker::PhantomData","std::num::NonZeroU32","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::net::IpAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::cell::Cell"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::num::NonZeroI128","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::num::NonZeroU128","std::net::SocketAddr","std::vec::Vec","std::num::NonZeroU32","std::sync::RwLock","std::cell::Cell","std::net::SocketAddrV4","std::num::NonZeroI32","std::rc::Rc","std::ops::RangeInclusive","std::collections::BTreeMap","std::num::NonZeroU64","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::boxed::Box","std::collections::HashMap","std::cell::RefCell","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::sync::Arc","std::collections::BTreeSet","std::sync::Mutex","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::num::NonZeroI8","std::time::Duration","std::net::Ipv4Addr","std::num::NonZeroUsize","std::string::String","std::sync::atomic::AtomicU32","std::result::Result","std::collections::HashSet","std::time::SystemTime","std::sync::atomic::AtomicU8","std::option::Option","std::net::IpAddr","std::path::PathBuf","std::collections::Bound","std::borrow::Cow","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::ffi::CString","std::ops::Range"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::rc::Rc","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::collections::HashSet","std::sync::Mutex","std::num::NonZeroI128","std::string::String","std::sync::atomic::AtomicI64","std::boxed::Box","std::sync::RwLock","std::num::NonZeroI32","std::cell::RefCell","std::net::SocketAddrV4","std::num::NonZeroUsize","std::num::NonZeroU8","std::ops::Range","std::sync::atomic::AtomicI32","std::collections::HashMap","std::num::NonZeroI8","std::cell::Cell","std::vec::Vec","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::ffi::CString","std::ops::RangeInclusive","std::marker::PhantomData","std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::time::Duration","std::num::NonZeroU64","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::net::IpAddr","std::borrow::Cow","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::time::SystemTime","std::collections::VecDeque","std::sync::Arc","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::collections::Bound","std::num::NonZeroIsize","std::option::Option","std::result::Result","std::sync::atomic::AtomicBool"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::collections::BTreeSet","std::collections::Bound","std::sync::atomic::AtomicUsize","std::time::Duration","std::num::NonZeroI32","std::collections::HashSet","std::cell::Cell","std::ops::RangeInclusive","std::num::NonZeroI128","std::sync::Mutex","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroI8","std::num::NonZeroI64","std::path::PathBuf","std::sync::atomic::AtomicI8","std::net::IpAddr","std::sync::Arc","std::collections::VecDeque","std::num::NonZeroU64","std::string::String","std::ffi::CString","std::sync::RwLock","std::collections::BinaryHeap","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::borrow::Cow","std::collections::HashMap","std::net::SocketAddr","std::result::Result","std::option::Option","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::rc::Rc","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::sync::atomic::AtomicU32","std::ops::Range","std::sync::atomic::AtomicI64","std::boxed::Box","std::collections::BTreeMap","std::net::Ipv4Addr","std::marker::PhantomData","std::num::NonZeroU32","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::time::SystemTime","std::vec::Vec","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::num::NonZeroIsize"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::ops::RangeInclusive<T>>::decode(p0);
+crate::de::impls::<impl de::Decode for std::ops::RangeInclusive<T>>::decode(p0);
+<std::ops::RangeInclusive<T>>::decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::BorrowDecode<'de> for std::ops::RangeInclusive<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::BorrowDecode<'de> for std::ops::RangeInclusive<T>>::borrow_decode":{"D":["de::BorrowDecoder","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord"],"V":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","std::hash::Hash","std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","std::cmp::Eq","std::hash::Hash","de::BorrowDecode","enc::Encode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::NoLimit","std::clone::impls::<impl std::clone::Clone for *const T>","config::Fixint","config::Configuration","config::Limit","config::Varint","config::BigEndian"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::ops::RangeInclusive<T>>::borrow_decode":{"D":["de::decoder::DecoderImpl","<&'a mut T as de::BorrowDecoder<'de>>"],"T":["std::num::NonZeroU8","std::num::NonZeroIsize","std::rc::Rc","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::collections::HashSet","std::time::SystemTime","std::net::Ipv4Addr","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::time::Duration","std::path::PathBuf","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::cell::RefCell","std::net::SocketAddr","std::borrow::Cow","std::collections::Bound","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::net::SocketAddrV6","std::net::IpAddr","std::sync::Arc","std::result::Result","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroI32","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::sync::atomic::AtomicI32","std::boxed::Box","std::collections::BinaryHeap","std::num::NonZeroU128","std::vec::Vec","std::collections::BTreeSet","std::ops::Range","std::sync::RwLock","std::ffi::CString","std::net::Ipv6Addr","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::string::String","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::option::Option","std::num::NonZeroUsize","std::sync::Mutex","std::collections::BTreeMap"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::path::Path","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroI32","std::string::String","std::path::PathBuf","std::marker::PhantomData","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroI128","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroI8","std::num::NonZeroU32","std::option::Option","std::time::SystemTime","std::net::SocketAddr","std::num::NonZeroU128","std::rc::Rc","std::num::NonZeroU64","std::cell::Cell","std::time::Duration","std::num::NonZeroU16","std::net::IpAddr","std::num::NonZeroUsize"],"V":["std::net::SocketAddrV6","std::rc::Rc","std::ffi::CString","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::option::Option","std::borrow::Cow","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::time::Duration","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::sync::Mutex","std::sync::RwLock","std::num::NonZeroU8","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::ops::RangeInclusive","std::collections::HashSet","std::net::Ipv6Addr","std::ops::Range","std::num::NonZeroUsize","std::num::NonZeroI128","std::time::SystemTime","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::collections::HashMap","std::sync::Arc","std::num::NonZeroIsize","std::collections::BTreeMap","std::collections::Bound","std::result::Result","std::num::NonZeroU128","std::vec::Vec","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::net::IpAddr","std::sync::atomic::AtomicI8","std::path::PathBuf","std::string::String","std::num::NonZeroI16","std::num::NonZeroU16","std::cell::Cell","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::boxed::Box","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::num::NonZeroI32"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU32","std::num::NonZeroI32","std::cell::Cell","std::num::NonZeroIsize","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroU8","std::cell::RefCell","std::num::NonZeroI16","std::num::NonZeroI8","std::time::SystemTime","std::ffi::CString","std::path::PathBuf","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroU64","std::net::SocketAddrV6","std::num::NonZeroI128"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU32","std::cell::RefCell","std::num::NonZeroU16","std::num::NonZeroI8","std::marker::PhantomData","std::num::NonZeroU64","std::net::Ipv4Addr","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroI64","std::rc::Rc","std::string::String","std::option::Option","std::num::NonZeroU128","std::num::NonZeroUsize","std::path::PathBuf","std::num::NonZeroIsize","std::num::NonZeroI32","std::cell::Cell","std::net::IpAddr"]},"std::collections::Bound":{"T":["std::ops::RangeInclusive","std::num::NonZeroI8","std::collections::BTreeSet","std::path::PathBuf","std::marker::PhantomData","std::time::Duration","std::result::Result","std::collections::BTreeMap","std::boxed::Box","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::collections::Bound","std::ops::Range","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::num::NonZeroIsize","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroI32","std::num::NonZeroI128","std::num::NonZeroU8","std::collections::HashSet","std::option::Option","std::cell::RefCell","std::vec::Vec","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::collections::HashMap","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::num::NonZeroUsize","std::sync::Mutex","std::sync::atomic::AtomicU8","std::rc::Rc","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::sync::RwLock","std::time::SystemTime","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::collections::BinaryHeap","std::ffi::CString","std::cell::Cell","std::num::NonZeroI64","std::sync::Arc","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::collections::VecDeque","std::num::NonZeroU128","std::string::String","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::net::IpAddr"]},"std::collections::HashMap":{"K":["std::string::String","std::num::NonZeroI16","std::num::NonZeroIsize","std::path::PathBuf","std::num::NonZeroU128","std::num::NonZeroU16","std::net::SocketAddr","std::ffi::CString","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroUsize","std::collections::Bound","std::net::Ipv4Addr","std::num::NonZeroI8"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::vec::Vec","std::num::NonZeroIsize","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::net::IpAddr","std::net::SocketAddr","std::sync::RwLock","std::collections::HashSet","std::collections::Bound","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroI8","std::time::SystemTime","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::ops::Range","std::string::String","std::result::Result","std::collections::VecDeque","std::time::Duration","std::path::PathBuf","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroI128","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroU32","std::cell::RefCell","std::num::NonZeroU8","std::cell::Cell","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::num::NonZeroU128","std::net::Ipv6Addr","std::collections::HashMap","std::sync::Mutex","std::collections::BTreeSet","std::option::Option","std::num::NonZeroU16","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::boxed::Box","std::sync::Arc"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::net::SocketAddrV4","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroI128","std::string::String","std::time::Duration","std::path::PathBuf","std::net::SocketAddr","std::rc::Rc","std::ffi::CString","std::num::NonZeroU8"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::time::Duration","std::path::PathBuf","std::ops::RangeInclusive","std::collections::Bound","std::num::NonZeroI128","std::collections::BinaryHeap","std::num::NonZeroIsize","std::ffi::CString","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::string::String","std::net::SocketAddrV4","std::net::SocketAddr","std::collections::VecDeque","std::borrow::Cow","std::collections::HashMap","std::ops::Range","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::time::SystemTime","std::net::Ipv4Addr","std::boxed::Box","std::num::NonZeroU32","std::sync::Mutex","std::option::Option","std::cell::RefCell","std::sync::atomic::AtomicI32","std::collections::HashSet","std::net::IpAddr","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::num::NonZeroI64","std::num::NonZeroI16","std::sync::RwLock","std::num::NonZeroU8","std::cell::Cell","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::result::Result","std::num::NonZeroU64","std::num::NonZeroU128","std::vec::Vec","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::rc::Rc","std::num::NonZeroU16","std::sync::Arc","std::num::NonZeroI32"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::borrow::Cow","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::ops::Range","std::boxed::Box","std::marker::PhantomData","std::num::NonZeroU16","std::collections::BTreeSet","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::ops::RangeInclusive","std::sync::Arc","std::num::NonZeroI32","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::result::Result","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::ffi::CString","std::collections::HashSet","std::vec::Vec","std::collections::HashMap","std::sync::atomic::AtomicI32","std::rc::Rc","std::sync::Mutex","std::collections::VecDeque","std::num::NonZeroIsize","std::collections::Bound","std::cell::Cell","std::net::IpAddr","std::sync::atomic::AtomicI16","std::string::String","std::cell::RefCell","std::num::NonZeroU128","std::net::SocketAddr","std::option::Option","std::collections::BTreeMap","std::time::SystemTime","std::path::PathBuf","std::num::NonZeroI128","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::time::Duration","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::sync::RwLock","std::num::NonZeroU32"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::num::NonZeroI16","std::ops::RangeInclusive","std::net::SocketAddr","std::cell::Cell","std::sync::atomic::AtomicU64","std::collections::Bound","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::vec::Vec","std::num::NonZeroU32","std::ffi::CString","std::num::NonZeroU64","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::num::NonZeroI64","std::sync::RwLock","std::num::NonZeroI8","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::sync::Arc","std::boxed::Box","std::collections::BinaryHeap","std::option::Option","std::net::IpAddr","std::net::Ipv4Addr","std::time::Duration","std::string::String","std::cell::RefCell","std::collections::HashSet","std::ops::Range","std::net::SocketAddrV6","std::sync::Mutex","std::net::Ipv6Addr","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::collections::HashMap","std::path::PathBuf","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::num::NonZeroUsize","std::rc::Rc","std::borrow::Cow","std::collections::VecDeque","std::num::NonZeroI32","std::num::NonZeroU128","std::result::Result","std::time::SystemTime"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroI16","std::time::Duration","std::boxed::Box","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::collections::HashSet","std::string::String","std::num::NonZeroI64","std::collections::VecDeque","std::num::NonZeroI128","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroU32","std::net::Ipv6Addr","std::cell::Cell","std::rc::Rc","std::net::Ipv4Addr","std::sync::Arc","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::collections::BTreeSet","std::ops::Range","std::sync::atomic::AtomicU32","std::result::Result","std::vec::Vec","std::ops::RangeInclusive","std::collections::BTreeMap","std::net::IpAddr","std::num::NonZeroI8","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroIsize","std::num::NonZeroU64","std::cell::RefCell","std::time::SystemTime","std::path::PathBuf","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::sync::Mutex","std::num::NonZeroU128","std::ffi::CString","std::sync::atomic::AtomicI16","std::collections::Bound","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::option::Option","std::sync::atomic::AtomicI8","std::sync::RwLock","std::sync::atomic::AtomicI64","std::collections::HashMap","std::net::SocketAddrV4","std::collections::BinaryHeap"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::ops::RangeInclusive<T>>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::ops::RangeInclusive<T>>::borrow_decode(p0);
+<std::ops::RangeInclusive<T>>::borrow_decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::Decode for std::collections::Bound<T>>::decode
deps:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]},"de::impls::<impl de::Decode for std::collections::Bound<T>>::decode":{"D":["std::marker::Sized","de::Decoder"],"T":["de::Decode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["de::BorrowDecode","enc::Encode","std::marker::Sized","std::cmp::Ord","de::Decode"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::Bound":{"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::collections::HashMap":{"K":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode","std::cmp::Eq","std::hash::Hash"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::marker::Sized","std::cmp::Eq","std::hash::Hash","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","config::Fixint","config::LittleEndian","config::NoLimit","config::Varint","std::clone::impls::<impl std::clone::Clone for &T>","config::BigEndian","config::Limit"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::Decode for std::collections::Bound<T>>::decode":{"D":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"],"T":["std::ffi::CString","std::num::NonZeroI64","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::num::NonZeroIsize","std::collections::BTreeSet","std::num::NonZeroU32","std::boxed::Box","std::sync::atomic::AtomicU8","std::path::PathBuf","std::sync::Mutex","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::cell::RefCell","std::num::NonZeroU64","std::sync::RwLock","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::ops::Range","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::cell::Cell","std::string::String","std::net::Ipv6Addr","std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::num::NonZeroI128","std::vec::Vec","std::time::Duration","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::net::Ipv4Addr","std::option::Option","std::collections::HashMap","std::num::NonZeroI16","std::result::Result","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::sync::Arc","std::time::SystemTime","std::borrow::Cow","std::ops::RangeInclusive","std::collections::HashSet","std::collections::Bound","std::num::NonZeroI32","std::net::SocketAddr"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::path::Path","<T as std::borrow::ToOwned>","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::string::String","std::num::NonZeroU64","std::net::Ipv6Addr","std::net::IpAddr","std::cell::Cell","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroU16","std::sync::Arc","std::path::PathBuf","std::num::NonZeroUsize","std::num::NonZeroU128","std::num::NonZeroI8","std::cell::RefCell","std::num::NonZeroI128","std::option::Option","std::time::SystemTime","std::num::NonZeroI16","std::time::Duration","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroI64"],"V":["std::num::NonZeroU64","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::ffi::CString","std::borrow::Cow","std::boxed::Box","std::sync::atomic::AtomicBool","std::rc::Rc","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::num::NonZeroU32","std::ops::RangeInclusive","std::option::Option","std::result::Result","std::net::IpAddr","std::time::Duration","std::collections::HashMap","std::cell::Cell","std::num::NonZeroI8","std::net::SocketAddr","std::collections::BTreeMap","std::collections::BinaryHeap","std::time::SystemTime","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::num::NonZeroI64","std::sync::RwLock","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::cell::RefCell","std::net::Ipv6Addr","std::num::NonZeroI16","std::net::SocketAddrV6","std::collections::Bound","std::path::PathBuf","std::marker::PhantomData","std::vec::Vec","std::sync::atomic::AtomicU8","std::string::String","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::sync::Mutex","std::num::NonZeroI128","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::collections::HashSet","std::ops::Range","std::collections::VecDeque","std::net::Ipv4Addr","std::num::NonZeroIsize"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU128","std::time::Duration","std::cell::RefCell","std::cell::Cell","std::option::Option","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroIsize","std::net::SocketAddrV6","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroU64","std::string::String","std::net::IpAddr","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroU16","std::rc::Rc","std::time::SystemTime"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU64","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroI8","std::path::PathBuf","std::net::SocketAddrV4","std::net::Ipv4Addr","std::rc::Rc","std::option::Option","std::num::NonZeroU8","std::num::NonZeroUsize","std::time::SystemTime","std::num::NonZeroI128","std::marker::PhantomData","std::ffi::CString","std::num::NonZeroU16","std::time::Duration"]},"std::collections::Bound":{"T":["std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::num::NonZeroU8","std::num::NonZeroI64","std::net::IpAddr","std::ffi::CString","std::num::NonZeroUsize","std::net::Ipv6Addr","std::num::NonZeroU128","std::result::Result","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::time::Duration","std::ops::Range","std::num::NonZeroU16","std::rc::Rc","std::collections::HashMap","std::vec::Vec","std::sync::atomic::AtomicIsize","std::sync::Arc","std::collections::BTreeSet","std::num::NonZeroU64","std::path::PathBuf","std::sync::atomic::AtomicI8","std::boxed::Box","std::ops::RangeInclusive","std::net::SocketAddrV4","std::num::NonZeroI32","std::string::String","std::sync::atomic::AtomicU16","std::sync::Mutex","std::marker::PhantomData","std::net::SocketAddrV6","std::sync::RwLock","std::cell::Cell","std::collections::BinaryHeap","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::option::Option","std::cell::RefCell","std::sync::atomic::AtomicU8","std::time::SystemTime","std::borrow::Cow","std::sync::atomic::AtomicU64","std::collections::HashSet","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::num::NonZeroI16","std::num::NonZeroU32","std::collections::Bound"]},"std::collections::HashMap":{"K":["std::rc::Rc","std::string::String","std::num::NonZeroI8","std::num::NonZeroI64","std::num::NonZeroU32","std::net::IpAddr","std::collections::Bound","std::num::NonZeroU128","std::path::PathBuf","std::num::NonZeroIsize","std::num::NonZeroU64","std::option::Option","std::time::Duration","std::num::NonZeroU16","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroI128"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::result::Result","std::rc::Rc","std::net::Ipv4Addr","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::string::String","std::marker::PhantomData","std::net::Ipv6Addr","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::borrow::Cow","std::num::NonZeroIsize","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::boxed::Box","std::ffi::CString","std::sync::Arc","std::ops::Range","std::sync::atomic::AtomicU8","std::option::Option","std::time::SystemTime","std::sync::Mutex","std::collections::HashMap","std::num::NonZeroU128","std::num::NonZeroI16","std::cell::RefCell","std::cell::Cell","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::sync::RwLock","std::collections::Bound","std::net::SocketAddrV4","std::num::NonZeroU32","std::collections::HashSet","std::num::NonZeroU8","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::net::SocketAddrV6","std::path::PathBuf","std::num::NonZeroU16","std::num::NonZeroUsize","std::time::Duration","std::net::IpAddr","std::vec::Vec"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::sync::Arc","std::net::SocketAddrV6","std::string::String","std::time::Duration","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroI64","std::option::Option","std::ffi::CString","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroI32","std::net::IpAddr","std::num::NonZeroU64"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::collections::Bound","std::net::SocketAddr","std::ops::Range","std::num::NonZeroU8","std::collections::HashMap","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroU64","std::sync::Arc","std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroI8","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::ffi::CString","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::path::PathBuf","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::num::NonZeroI32","std::num::NonZeroI64","std::collections::VecDeque","std::num::NonZeroI16","std::time::Duration","std::net::SocketAddrV4","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::cell::RefCell","std::net::Ipv6Addr","std::collections::HashSet","std::net::IpAddr","std::result::Result","std::collections::BTreeMap","std::num::NonZeroU128","std::sync::RwLock","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::boxed::Box","std::cell::Cell","std::sync::Mutex","std::ops::RangeInclusive","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::option::Option","std::string::String","std::vec::Vec"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::time::Duration","std::num::NonZeroI32","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::collections::BTreeSet","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroI128","std::ops::RangeInclusive","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::cell::Cell","std::vec::Vec","std::result::Result","std::cell::RefCell","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::ops::Range","std::collections::HashSet","std::net::SocketAddr","std::num::NonZeroI16","std::borrow::Cow","std::sync::Arc","std::collections::HashMap","std::num::NonZeroU16","std::num::NonZeroI8","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroU8","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::ffi::CString","std::net::Ipv6Addr","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::collections::Bound","std::marker::PhantomData","std::boxed::Box","std::collections::VecDeque","std::collections::BTreeMap","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::string::String","std::option::Option","std::rc::Rc","std::num::NonZeroU32","std::sync::Mutex","std::sync::RwLock"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::Arc","std::net::IpAddr","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::borrow::Cow","std::collections::BTreeMap","std::sync::Mutex","std::sync::atomic::AtomicU64","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroI64","std::ops::Range","std::time::SystemTime","std::collections::HashMap","std::net::Ipv4Addr","std::num::NonZeroU128","std::num::NonZeroUsize","std::rc::Rc","std::sync::atomic::AtomicU32","std::option::Option","std::collections::HashSet","std::ops::RangeInclusive","std::net::SocketAddr","std::result::Result","std::num::NonZeroI8","std::boxed::Box","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::sync::RwLock","std::marker::PhantomData","std::string::String","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::collections::Bound","std::collections::BinaryHeap","std::num::NonZeroI16","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::collections::BTreeSet","std::net::SocketAddrV6","std::vec::Vec","std::ffi::CString","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::time::Duration","std::num::NonZeroI128","std::num::NonZeroU32","std::cell::Cell","std::net::Ipv6Addr"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::collections::BTreeSet","std::result::Result","std::num::NonZeroUsize","std::boxed::Box","std::num::NonZeroI8","std::time::SystemTime","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::path::PathBuf","std::num::NonZeroIsize","std::num::NonZeroI16","std::net::Ipv6Addr","std::sync::Arc","std::collections::BTreeMap","std::net::Ipv4Addr","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::collections::BinaryHeap","std::cell::Cell","std::sync::RwLock","std::ffi::CString","std::sync::atomic::AtomicUsize","std::option::Option","std::sync::atomic::AtomicI32","std::borrow::Cow","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::collections::HashMap","std::sync::Mutex","std::sync::atomic::AtomicI64","std::ops::Range","std::vec::Vec","std::num::NonZeroU32","std::num::NonZeroU64","std::num::NonZeroU128","std::collections::Bound","std::time::Duration","std::sync::atomic::AtomicU64","std::net::IpAddr","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::collections::HashSet","std::collections::VecDeque","std::num::NonZeroI128","std::num::NonZeroI32","std::string::String","std::rc::Rc","std::net::SocketAddrV4","std::num::NonZeroI64","std::cell::RefCell"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::Decode for std::collections::Bound<T>>::decode(p0);
+crate::de::impls::<impl de::Decode for std::collections::Bound<T>>::decode(p0);
+<std::collections::Bound<T>>::decode(p0);
-----------------
src/de/impls.rs de::impls::<impl de::BorrowDecode<'de> for std::collections::Bound<T>>::borrow_decode
'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","std::marker::Sized","de::read::Reader"]},"de::impls::<impl de::BorrowDecode<'de> for std::collections::Bound<T>>::borrow_decode":{"D":["std::marker::Sized","de::BorrowDecoder"],"T":["de::BorrowDecode","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::Decode","de::BorrowDecode","std::cmp::Ord","std::marker::Sized","enc::Encode"],"V":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode","std::cmp::Ord"]},"std::collections::Bound":{"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::HashMap":{"K":["de::Decode","std::cmp::Eq","std::hash::Hash","std::marker::Sized","enc::Encode","de::BorrowDecode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["std::hash::Hash","de::Decode","std::cmp::Eq","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&A as std::alloc::Allocator>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Fixint","config::Configuration","config::LittleEndian","config::NoLimit","config::Varint","std::clone::impls::<impl std::clone::Clone for &mut T>","config::Limit","config::BigEndian"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]},"de::impls::<impl de::BorrowDecode<'de> for std::collections::Bound<T>>::borrow_decode":{"D":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"],"T":["std::collections::VecDeque","std::sync::atomic::AtomicBool","std::rc::Rc","std::ffi::CString","std::collections::BTreeSet","std::collections::BinaryHeap","std::cell::Cell","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroU16","std::sync::Mutex","std::marker::PhantomData","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::ops::Range","std::num::NonZeroU64","std::path::PathBuf","std::option::Option","std::num::NonZeroU128","std::collections::BTreeMap","std::borrow::Cow","std::num::NonZeroI32","std::vec::Vec","std::collections::Bound","std::net::SocketAddrV4","std::num::NonZeroU8","std::net::IpAddr","std::ops::RangeInclusive","std::time::Duration","std::num::NonZeroI8","std::num::NonZeroU32","std::num::NonZeroI128","std::net::SocketAddrV6","std::num::NonZeroUsize","std::sync::Arc","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::string::String","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::sync::atomic::AtomicI16","std::collections::HashSet","std::sync::RwLock","std::net::Ipv6Addr","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::boxed::Box","std::result::Result","std::cell::RefCell"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::path::Path","std::ffi::OsStr","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::cell::Cell","std::num::NonZeroI8","std::path::PathBuf","std::sync::Arc","std::net::IpAddr","std::num::NonZeroU8","std::num::NonZeroU16","std::marker::PhantomData","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroU32","std::ffi::CString","std::num::NonZeroI64","std::string::String","std::net::Ipv6Addr","std::net::Ipv4Addr","std::option::Option","std::num::NonZeroI128","std::num::NonZeroU128","std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroI32","std::num::NonZeroI16"],"V":["std::net::IpAddr","std::num::NonZeroUsize","std::collections::VecDeque","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::sync::Mutex","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::num::NonZeroIsize","std::collections::HashSet","std::sync::RwLock","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::num::NonZeroU128","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::time::Duration","std::num::NonZeroI16","std::collections::Bound","std::vec::Vec","std::sync::atomic::AtomicI8","std::option::Option","std::num::NonZeroI128","std::time::SystemTime","std::num::NonZeroU64","std::collections::HashMap","std::marker::PhantomData","std::rc::Rc","std::cell::Cell","std::ops::RangeInclusive","std::ffi::CString","std::net::SocketAddrV6","std::cell::RefCell","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::boxed::Box","std::string::String","std::ops::Range","std::sync::atomic::AtomicU32","std::borrow::Cow","std::result::Result","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::collections::BinaryHeap","std::net::SocketAddrV4","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::sync::Arc","std::net::SocketAddr","std::collections::BTreeSet"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::rc::Rc","std::sync::Arc","std::cell::RefCell","std::num::NonZeroU16","std::num::NonZeroU32","std::num::NonZeroUsize","std::string::String","std::ffi::CString","std::num::NonZeroU8","std::net::Ipv6Addr","std::net::SocketAddrV6","std::cell::Cell","std::net::IpAddr","std::time::SystemTime","std::net::SocketAddr","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroI64","std::path::PathBuf","std::time::Duration","std::num::NonZeroI8","std::num::NonZeroI128","std::marker::PhantomData","std::option::Option"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU8","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroIsize","std::ffi::CString","std::net::Ipv6Addr","std::string::String","std::net::SocketAddrV6","std::rc::Rc","std::sync::Arc","std::cell::Cell","std::time::Duration","std::num::NonZeroUsize","std::net::Ipv4Addr","std::num::NonZeroI8","std::marker::PhantomData","std::num::NonZeroI32","std::net::SocketAddrV4","std::option::Option","std::path::PathBuf","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroU32","std::num::NonZeroI128","std::num::NonZeroU64"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicU32","std::collections::HashSet","std::sync::atomic::AtomicI16","std::collections::Bound","std::ops::RangeInclusive","std::num::NonZeroU128","std::time::Duration","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::sync::Arc","std::net::SocketAddrV6","std::collections::VecDeque","std::num::NonZeroI32","std::borrow::Cow","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroI16","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::rc::Rc","std::time::SystemTime","std::sync::atomic::AtomicBool","std::result::Result","std::vec::Vec","std::num::NonZeroU32","std::collections::HashMap","std::num::NonZeroI8","std::num::NonZeroU16","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::boxed::Box","std::collections::BinaryHeap","std::cell::RefCell","std::ops::Range","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::option::Option","std::net::IpAddr","std::num::NonZeroU64","std::sync::Mutex","std::sync::RwLock","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::string::String","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::net::SocketAddrV4","std::cell::Cell","std::ffi::CString","std::num::NonZeroUsize","std::collections::BTreeMap","std::collections::BTreeSet"]},"std::collections::HashMap":{"K":["std::num::NonZeroU64","std::time::SystemTime","std::net::SocketAddrV6","std::string::String","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroU16","std::time::Duration","std::sync::Arc"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::net::IpAddr","std::sync::atomic::AtomicBool","std::time::Duration","std::num::NonZeroIsize","std::sync::RwLock","std::net::Ipv6Addr","std::num::NonZeroI32","std::collections::HashMap","std::collections::BTreeSet","std::sync::Mutex","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::sync::Arc","std::collections::Bound","std::collections::HashSet","std::boxed::Box","std::cell::Cell","std::option::Option","std::num::NonZeroU64","std::net::SocketAddrV6","std::vec::Vec","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::string::String","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::result::Result","std::cell::RefCell","std::borrow::Cow","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::ops::Range","std::num::NonZeroU16","std::marker::PhantomData","std::net::SocketAddr","std::path::PathBuf","std::rc::Rc","std::ops::RangeInclusive","std::num::NonZeroU128","std::time::SystemTime","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::num::NonZeroUsize","std::net::SocketAddrV4","std::ffi::CString"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI64","std::net::SocketAddr","std::rc::Rc","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroI16","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroU128","std::time::Duration","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroU16","std::num::NonZeroI8","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroU64","std::string::String","std::option::Option"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::time::SystemTime","std::cell::RefCell","std::num::NonZeroIsize","std::vec::Vec","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::net::SocketAddrV4","std::collections::Bound","std::ops::Range","std::sync::atomic::AtomicI32","std::time::Duration","std::option::Option","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroI64","std::num::NonZeroI8","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::cell::Cell","std::collections::HashSet","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::ops::RangeInclusive","std::sync::RwLock","std::sync::Mutex","std::net::Ipv4Addr","std::ffi::CString","std::result::Result","std::sync::atomic::AtomicU16","std::collections::HashMap","std::collections::BTreeSet","std::boxed::Box","std::string::String","std::rc::Rc","std::num::NonZeroI32","std::path::PathBuf","std::collections::BTreeMap","std::collections::BinaryHeap","std::collections::VecDeque","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::sync::Arc","std::num::NonZeroU16","std::num::NonZeroI16","std::marker::PhantomData","std::num::NonZeroU64","std::borrow::Cow","std::net::IpAddr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32"]},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::HashSet","std::collections::BTreeMap","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::num::NonZeroIsize","std::cell::RefCell","std::ops::RangeInclusive","std::string::String","std::ops::Range","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::option::Option","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::result::Result","std::borrow::Cow","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::cell::Cell","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::vec::Vec","std::collections::BinaryHeap","std::path::PathBuf","std::num::NonZeroU16","std::num::NonZeroU32","std::collections::BTreeSet","std::rc::Rc","std::time::SystemTime","std::num::NonZeroUsize","std::num::NonZeroU8","std::collections::HashMap","std::sync::Arc","std::sync::RwLock","std::boxed::Box","std::collections::Bound","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::sync::Mutex","std::num::NonZeroI16","std::ffi::CString","std::net::Ipv4Addr","std::time::Duration","std::net::IpAddr","std::net::Ipv6Addr"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::IpAddr","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::num::NonZeroUsize","std::result::Result","std::collections::HashSet","std::ops::RangeInclusive","std::collections::HashMap","std::sync::Arc","std::marker::PhantomData","std::collections::BinaryHeap","std::num::NonZeroU8","std::num::NonZeroI8","std::option::Option","std::net::SocketAddr","std::num::NonZeroI32","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::vec::Vec","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroU16","std::cell::RefCell","std::sync::atomic::AtomicI8","std::time::SystemTime","std::net::Ipv6Addr","std::net::SocketAddrV6","std::cell::Cell","std::sync::RwLock","std::boxed::Box","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::string::String","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::time::Duration","std::collections::BTreeMap","std::num::NonZeroU32","std::ops::Range","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::rc::Rc","std::collections::Bound","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::num::NonZeroI64","std::ffi::CString","std::borrow::Cow","std::collections::BTreeSet"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::vec::Vec","std::sync::Mutex","std::net::SocketAddrV6","std::collections::BTreeMap","std::collections::BinaryHeap","std::result::Result","std::path::PathBuf","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::ffi::CString","std::collections::BTreeSet","std::num::NonZeroI64","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::collections::HashMap","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::string::String","std::marker::PhantomData","std::num::NonZeroI128","std::num::NonZeroU64","std::collections::VecDeque","std::time::Duration","std::borrow::Cow","std::sync::Arc","std::time::SystemTime","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::option::Option","std::net::SocketAddr","std::collections::Bound","std::sync::RwLock","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::net::Ipv6Addr","std::boxed::Box","std::ops::Range","std::cell::Cell","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::collections::HashSet","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::num::NonZeroI8","std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroUsize","std::cell::RefCell","std::sync::atomic::AtomicU16"]}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // D
+de::impls::<impl de::BorrowDecode<'de> for std::collections::Bound<T>>::borrow_decode(p0);
+crate::de::impls::<impl de::BorrowDecode<'de> for std::collections::Bound<T>>::borrow_decode(p0);
+<std::collections::Bound<T>>::borrow_decode(p0);
-----------------
src/de/read.rs <&mut T as de::read::Reader>::read
deps:{"<&mut T as de::read::Reader>":{},"<&mut T as de::read::Reader>::read":{"T":["de::read::Reader","std::marker::Sized"]},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"<&mut T as de::read::Reader>":{},"<&mut T as de::read::Reader>::read":{"T":["de::read::SliceReader","features::impl_std::IoReader","std::io::BufReader","<&mut T as de::read::Reader>"]},"features::impl_std::IoReader":{"R":["std::io::Stdin","std::sys::unix::stdio::Stdin","std::process::ChildStderr","std::io::BufReader<R>","std::io::StdinLock<'_>","std::boxed::Box<R>","&'a std::sys::unix::fd::FileDesc","&std::net::TcpStream","std::io::Chain<T, U>","std::os::unix::net::UnixStream","&std::fs::File","std::io::impls::<impl std::io::Read for &mut R>","std::process::ChildStdout","std::net::TcpStream","std::io::Take<T>","std::io::Empty","std::collections::VecDeque<u8, A>","&'a std::os::unix::net::UnixStream","std::fs::File","std::io::Cursor<T>","std::io::stdio::StdinRaw","std::io::Repeat"]},"std::io::BufReader":{"R":["std::fs::File","&std::net::TcpStream","std::io::BufReader<R>","std::io::Take<T>","std::io::Stdin","std::io::impls::<impl std::io::Read for &mut R>","std::boxed::Box<R>","std::collections::VecDeque<u8, A>","std::io::StdinLock<'_>","std::io::Repeat","std::io::stdio::StdinRaw","std::sys::unix::stdio::Stdin","std::io::Chain<T, U>","std::io::Empty","std::os::unix::net::UnixStream","std::io::Cursor<T>","&std::fs::File","&'a std::os::unix::net::UnixStream","std::net::TcpStream","std::process::ChildStdout","&'a std::sys::unix::fd::FileDesc","std::process::ChildStderr"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = &mut  &mut MaybeUninit::uninit().assume_init(); // T
let mut p1 = &mut [0u8].as_mut_slice(); // None+[u8]
+p0.read(p1);
+<&mut T as de::read::Reader>::read(p0, p1);
+crate::<&mut T as de::read::Reader>::read(p0, p1);
+<&mut T>::read(p0, p1);
-----------------
src/de/read.rs <&mut T as de::read::Reader>::peek_read
deps:{"<&mut T as de::read::Reader>":{},"<&mut T as de::read::Reader>::peek_read":{"T":["de::read::Reader","std::marker::Sized"]},"features::impl_std::IoReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::BufReader":{"R":["std::marker::Sized","std::io::Read"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"<&mut T as de::read::Reader>":{},"<&mut T as de::read::Reader>::peek_read":{"T":["<&mut T as de::read::Reader>","std::io::BufReader","de::read::SliceReader","features::impl_std::IoReader"]},"features::impl_std::IoReader":{"R":["&'a std::sys::unix::fd::FileDesc","std::io::Take<T>","std::process::ChildStderr","std::io::impls::<impl std::io::Read for &mut R>","std::fs::File","std::io::Empty","std::io::Chain<T, U>","std::sys::unix::stdio::Stdin","&'a std::os::unix::net::UnixStream","std::collections::VecDeque<u8, A>","&std::fs::File","std::io::BufReader<R>","std::process::ChildStdout","std::io::Repeat","std::io::stdio::StdinRaw","std::net::TcpStream","std::io::Cursor<T>","std::io::StdinLock<'_>","std::boxed::Box<R>","std::os::unix::net::UnixStream","std::io::Stdin","&std::net::TcpStream"]},"std::io::BufReader":{"R":["&std::fs::File","std::io::stdio::StdinRaw","std::io::StdinLock<'_>","&'a std::os::unix::net::UnixStream","std::io::Stdin","&std::net::TcpStream","std::io::Chain<T, U>","std::sys::unix::stdio::Stdin","std::process::ChildStdout","&'a std::sys::unix::fd::FileDesc","std::io::BufReader<R>","std::net::TcpStream","std::boxed::Box<R>","std::io::Take<T>","std::os::unix::net::UnixStream","std::fs::File","std::io::Empty","std::io::Cursor<T>","std::io::Repeat","std::io::impls::<impl std::io::Read for &mut R>","std::process::ChildStderr","std::collections::VecDeque<u8, A>"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = &mut  &mut MaybeUninit::uninit().assume_init(); // T
let mut p1 = 0usize; // None+usize
+p0.peek_read(p1);
+<&mut T as de::read::Reader>::peek_read(p0, p1);
+crate::<&mut T as de::read::Reader>::peek_read(p0, p1);
+<&mut T>::peek_read(p0, p1);
-----------------
src/de/read.rs <&mut T as de::read::Reader>::consume
deps:{"<&mut T as de::read::Reader>":{},"<&mut T as de::read::Reader>::consume":{"T":["de::read::Reader","std::marker::Sized"]},"features::impl_std::IoReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::BufReader":{"R":["std::io::Read","std::marker::Sized"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
candidates:{"<&mut T as de::read::Reader>":{},"<&mut T as de::read::Reader>::consume":{"T":["de::read::SliceReader","features::impl_std::IoReader","<&mut T as de::read::Reader>","std::io::BufReader"]},"features::impl_std::IoReader":{"R":["std::io::BufReader<R>","std::io::stdio::StdinRaw","&std::fs::File","std::os::unix::net::UnixStream","std::net::TcpStream","&std::net::TcpStream","&'a std::os::unix::net::UnixStream","std::boxed::Box<R>","std::collections::VecDeque<u8, A>","std::io::Chain<T, U>","std::io::Empty","std::io::Take<T>","std::process::ChildStderr","std::io::impls::<impl std::io::Read for &mut R>","std::io::StdinLock<'_>","std::io::Repeat","std::fs::File","std::io::Cursor<T>","std::process::ChildStdout","std::sys::unix::stdio::Stdin","std::io::Stdin","&'a std::sys::unix::fd::FileDesc"]},"std::io::BufReader":{"R":["std::io::Take<T>","std::fs::File","std::process::ChildStdout","&'a std::os::unix::net::UnixStream","std::io::BufReader<R>","std::io::StdinLock<'_>","std::collections::VecDeque<u8, A>","&std::fs::File","std::io::impls::<impl std::io::Read for &mut R>","std::boxed::Box<R>","std::process::ChildStderr","std::sys::unix::stdio::Stdin","&'a std::sys::unix::fd::FileDesc","std::io::Cursor<T>","std::io::Chain<T, U>","&std::net::TcpStream","std::os::unix::net::UnixStream","std::io::Empty","std::io::Repeat","std::io::stdio::StdinRaw","std::net::TcpStream","std::io::Stdin"]},"std::io::impls::<impl std::io::Read for &mut R>":{}}
let mut p0 = &mut  &mut MaybeUninit::uninit().assume_init(); // T
let mut p1 = 0usize; // None+usize
+p0.consume(p1);
+<&mut T as de::read::Reader>::consume(p0, p1);
+crate::<&mut T as de::read::Reader>::consume(p0, p1);
+<&mut T>::consume(p0, p1);
-----------------
src/de/read.rs de::read::SliceReader::<'storage>::new
'storage
deps:{}
candidates:{}
let mut p0 = [0u8,0,0].as_mut_slice(); // None+&[u8]
+de::read::SliceReader::<'storage>::new(p0);
+crate::de::read::SliceReader::<'storage>::new(p0);
+<de::read::SliceReader<'storage>>::new(p0);
-----------------
src/de/read.rs <de::read::SliceReader<'storage> as de::read::Reader>::read
'storage
deps:{}
candidates:{}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // de::read::SliceReader<'storage>
let mut p1 = &mut [0u8].as_mut_slice(); // None+[u8]
+p0.read(p1);
+<de::read::SliceReader<'storage> as de::read::Reader>::read(p0, p1);
+crate::<de::read::SliceReader<'storage> as de::read::Reader>::read(p0, p1);
+<de::read::SliceReader<'storage>>::read(p0, p1);
-----------------
src/de/read.rs <de::read::SliceReader<'storage> as de::read::Reader>::peek_read
'storage
deps:{}
candidates:{}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // de::read::SliceReader<'storage>
let mut p1 = 0usize; // None+usize
+p0.peek_read(p1);
+<de::read::SliceReader<'storage> as de::read::Reader>::peek_read(p0, p1);
+crate::<de::read::SliceReader<'storage> as de::read::Reader>::peek_read(p0, p1);
+<de::read::SliceReader<'storage>>::peek_read(p0, p1);
-----------------
src/de/read.rs <de::read::SliceReader<'storage> as de::read::Reader>::consume
'storage
deps:{}
candidates:{}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // de::read::SliceReader<'storage>
let mut p1 = 0usize; // None+usize
+p0.consume(p1);
+<de::read::SliceReader<'storage> as de::read::Reader>::consume(p0, p1);
+crate::<de::read::SliceReader<'storage> as de::read::Reader>::consume(p0, p1);
+<de::read::SliceReader<'storage>>::consume(p0, p1);
-----------------
src/de/read.rs <de::read::SliceReader<'storage> as de::read::BorrowReader<'storage>>::take_bytes
'storage
deps:{}
candidates:{}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // de::read::SliceReader<'storage>
let mut p1 = 0usize; // None+usize
+p0.take_bytes(p1);
+<de::read::SliceReader<'storage> as de::read::BorrowReader<'storage>>::take_bytes(p0, p1);
+crate::<de::read::SliceReader<'storage> as de::read::BorrowReader<'storage>>::take_bytes(p0, p1);
+<de::read::SliceReader<'storage>>::take_bytes(p0, p1);
-----------------
src/de/mod.rs <&'a mut T as de::Decoder>::reader
'a
deps:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as de::Decoder>::reader":{"T":["std::marker::Sized","de::Decoder"]},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::BorrowReader","de::read::Reader","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as de::Decoder>::reader":{"T":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  &mut MaybeUninit::uninit().assume_init(); // T
+p0.reader();
+<&'a mut T as de::Decoder>::reader(p0);
+crate::<&'a mut T as de::Decoder>::reader(p0);
+<&'a mut T>::reader(p0);
-----------------
src/de/mod.rs <&'a mut T as de::Decoder>::config
'a
deps:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as de::Decoder>::config":{"T":["std::marker::Sized","de::Decoder"]},"<T as config::Config>":{"T":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as de::Decoder>::config":{"T":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = & & MaybeUninit::uninit().assume_init(); // T
+p0.config();
+<&'a mut T as de::Decoder>::config(p0);
+crate::<&'a mut T as de::Decoder>::config(p0);
+<&'a mut T>::config(p0);
-----------------
src/de/mod.rs <&'a mut T as de::Decoder>::claim_bytes_read
'a
deps:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as de::Decoder>::claim_bytes_read":{"T":["de::Decoder","std::marker::Sized"]},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["de::read::Reader","std::marker::Sized","de::read::BorrowReader"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as de::Decoder>::claim_bytes_read":{"T":["<&'a mut T as de::Decoder>","de::decoder::DecoderImpl"]},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  &mut MaybeUninit::uninit().assume_init(); // T
let mut p1 = 0usize; // None+usize
+p0.claim_bytes_read(p1);
+<&'a mut T as de::Decoder>::claim_bytes_read(p0, p1);
+crate::<&'a mut T as de::Decoder>::claim_bytes_read(p0, p1);
+<&'a mut T>::claim_bytes_read(p0, p1);
-----------------
src/de/mod.rs <&'a mut T as de::Decoder>::unclaim_bytes_read
'a
deps:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as de::Decoder>::unclaim_bytes_read":{"T":["std::marker::Sized","de::Decoder"]},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["config::Config","std::marker::Sized"],"R":["de::read::Reader","de::read::BorrowReader","std::marker::Sized"]}}
candidates:{"<&'a mut T as de::Decoder>":{},"<&'a mut T as de::Decoder>::unclaim_bytes_read":{"T":["de::decoder::DecoderImpl","<&'a mut T as de::Decoder>"]},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  &mut MaybeUninit::uninit().assume_init(); // T
let mut p1 = 0usize; // None+usize
+p0.unclaim_bytes_read(p1);
+<&'a mut T as de::Decoder>::unclaim_bytes_read(p0, p1);
+crate::<&'a mut T as de::Decoder>::unclaim_bytes_read(p0, p1);
+<&'a mut T>::unclaim_bytes_read(p0, p1);
-----------------
src/de/mod.rs <&'a mut T as de::BorrowDecoder<'de>>::borrow_reader
'a,'de
deps:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&'a mut T as de::BorrowDecoder<'de>>::borrow_reader":{"T":["std::marker::Sized","de::BorrowDecoder"]},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"de::decoder::DecoderImpl":{"C":["std::marker::Sized","config::Config"],"R":["std::marker::Sized","de::read::BorrowReader","de::read::Reader"]}}
candidates:{"<&'a mut T as de::BorrowDecoder<'de>>":{},"<&'a mut T as de::BorrowDecoder<'de>>::borrow_reader":{"T":["<&'a mut T as de::BorrowDecoder<'de>>","de::decoder::DecoderImpl"]},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"de::decoder::DecoderImpl":{"C":["<T as config::Config>"],"R":["de::read::SliceReader"]}}
let mut p0 = &mut  &mut MaybeUninit::uninit().assume_init(); // T
+p0.borrow_reader();
+<&'a mut T as de::BorrowDecoder<'de>>::borrow_reader(p0);
+crate::<&'a mut T as de::BorrowDecoder<'de>>::borrow_reader(p0);
+<&'a mut T>::borrow_reader(p0);
-----------------
src/enc/encoder.rs enc::encoder::EncoderImpl::<W, C>::new
deps:{"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"enc::encoder::EncoderImpl::<W, C>::new":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl::<W, C>::new":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_std::IoWriter","features::impl_alloc::VecWriter"]},"features::impl_std::IoWriter":{"W":["&std::io::Stderr","std::os::unix::net::UnixStream","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::vec::Vec<u8, A>","std::sys::unix::stdio::Stdout","std::io::Cursor<std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stderr","std::io::Sink","std::io::Stderr","std::collections::VecDeque<u8, A>","&'a std::os::unix::net::UnixStream","std::io::Cursor<[u8; N]>","std::io::LineWriter<W>","std::io::stdio::StdoutRaw","std::io::Stdout","std::fs::File","&std::net::TcpStream","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::process::ChildStdin","std::io::Cursor<&mut [u8]>","&std::io::Sink","std::io::BorrowedCursor<'a>","&std::io::Stdout","std::io::StderrLock<'_>","&std::fs::File","std::net::TcpStream","std::boxed::Box<W>","std::io::BufWriter<W>","std::io::StdoutLock<'_>","std::process::ChildStdin","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::stdio::StderrRaw"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = MaybeUninit::uninit().assume_init(); // W
let mut p1 = MaybeUninit::uninit().assume_init(); // C
+enc::encoder::EncoderImpl::<W, C>::new(p0, p1);
+crate::enc::encoder::EncoderImpl::<W, C>::new(p0, p1);
+<enc::encoder::EncoderImpl<W, C>>::new(p0, p1);
-----------------
src/enc/encoder.rs enc::encoder::EncoderImpl::<W, C>::into_writer
deps:{"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy"]},"enc::encoder::EncoderImpl::<W, C>::into_writer":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl::<W, C>::into_writer":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>"]},"features::impl_std::IoWriter":{"W":["&std::fs::File","std::fs::File","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::BufWriter<W>","&std::io::Sink","std::io::StderrLock<'_>","std::io::StdoutLock<'_>","std::process::ChildStdin","std::vec::Vec<u8, A>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::net::TcpStream","&'a std::os::unix::net::UnixStream","&std::io::Stdout","std::io::BorrowedCursor<'a>","std::io::stdio::StdoutRaw","std::io::Cursor<[u8; N]>","&std::process::ChildStdin","std::io::Stdout","std::io::Sink","std::io::LineWriter<W>","std::sys::unix::stdio::Stdout","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::stdio::StderrRaw","std::io::Cursor<&mut [u8]>","std::collections::VecDeque<u8, A>","std::sys::unix::stdio::Stderr","&std::io::Stderr","std::io::Stderr","std::boxed::Box<W>","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::net::TcpStream","std::os::unix::net::UnixStream"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = MaybeUninit::uninit().assume_init(); // enc::encoder::EncoderImpl<W, C>
+p0.into_writer();
+enc::encoder::EncoderImpl::<W, C>::into_writer(p0);
+crate::enc::encoder::EncoderImpl::<W, C>::into_writer(p0);
+<enc::encoder::EncoderImpl<W, C>>::into_writer(p0);
-----------------
src/enc/encoder.rs <enc::encoder::EncoderImpl<W, C> as enc::Encoder>::writer
deps:{"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalEndianConfig"]},"<enc::encoder::EncoderImpl<W, C> as enc::Encoder>::writer":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"],"I":["std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<enc::encoder::EncoderImpl<W, C> as enc::Encoder>::writer":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","features::impl_alloc::VecWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"features::impl_std::IoWriter":{"W":["std::fs::File","std::io::Cursor<std::boxed::Box<[u8], A>>","std::os::unix::net::UnixStream","std::io::stdio::StdoutRaw","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<[u8; N]>","std::net::TcpStream","std::io::StderrLock<'_>","&'a std::os::unix::net::UnixStream","&std::io::Sink","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::fs::File","&std::net::TcpStream","std::collections::VecDeque<u8, A>","std::io::Stderr","std::io::StdoutLock<'_>","std::io::Sink","&std::io::Stdout","std::io::Cursor<std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stderr","std::boxed::Box<W>","std::io::Cursor<&mut [u8]>","std::vec::Vec<u8, A>","std::io::Stdout","std::io::BorrowedCursor<'a>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::BufWriter<W>","std::sys::unix::stdio::Stdout","&std::io::Stderr","std::io::LineWriter<W>","std::process::ChildStdin","std::io::stdio::StderrRaw","&std::process::ChildStdin"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // enc::encoder::EncoderImpl<W, C>
+p0.writer();
+<enc::encoder::EncoderImpl<W, C> as enc::Encoder>::writer(p0);
+crate::<enc::encoder::EncoderImpl<W, C> as enc::Encoder>::writer(p0);
+<enc::encoder::EncoderImpl<W, C>>::writer(p0);
-----------------
src/enc/encoder.rs <enc::encoder::EncoderImpl<W, C> as enc::Encoder>::config
deps:{"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"]},"<enc::encoder::EncoderImpl<W, C> as enc::Encoder>::config":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<enc::encoder::EncoderImpl<W, C> as enc::Encoder>::config":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SliceWriter","enc::write::SizeWriter","features::impl_std::IoWriter"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"features::impl_std::IoWriter":{"W":["std::io::stdio::StderrRaw","&std::io::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Sink","std::boxed::Box<W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Stdout","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Stderr","std::collections::VecDeque<u8, A>","&std::net::TcpStream","std::os::unix::net::UnixStream","&std::process::ChildStdin","std::io::BorrowedCursor<'a>","std::io::impls::<impl std::io::Write for &mut W>","std::sys::unix::stdio::Stderr","std::io::Cursor<std::vec::Vec<u8, A>>","std::fs::File","&std::io::Sink","std::vec::Vec<u8, A>","std::io::Cursor<[u8; N]>","std::io::stdio::StdoutRaw","std::sys::unix::stdio::Stdout","std::net::TcpStream","std::io::StderrLock<'_>","std::io::BufWriter<W>","&'a std::os::unix::net::UnixStream","&std::io::Stderr","std::io::LineWriter<W>","std::process::ChildStdin","std::io::Cursor<&mut [u8]>","std::io::StdoutLock<'_>","&std::fs::File"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // enc::encoder::EncoderImpl<W, C>
+p0.config();
+<enc::encoder::EncoderImpl<W, C> as enc::Encoder>::config(p0);
+crate::<enc::encoder::EncoderImpl<W, C> as enc::Encoder>::config(p0);
+<enc::encoder::EncoderImpl<W, C>>::config(p0);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A,)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impl_tuples::<impl enc::Encode for (A,)>::encode":{"A":["enc::Encode","std::marker::Sized"],"_E":["std::marker::Sized","enc::Encoder"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"K":["std::marker::Sized","std::cmp::Ord","de::BorrowDecode","de::Decode","enc::Encode"],"V":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::Decode","std::cmp::Ord","de::BorrowDecode","std::marker::Sized"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","std::hash::Hash","de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized","std::hash::Hash","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Fixint","config::LittleEndian","std::clone::impls::<impl std::clone::Clone for &mut T>","config::Varint","config::Configuration","config::NoLimit","config::Limit","config::BigEndian"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","enc::write::SizeWriter","features::impl_alloc::VecWriter","enc::write::SliceWriter","features::impl_std::IoWriter"]},"enc::impl_tuples::<impl enc::Encode for (A,)>::encode":{"A":["std::collections::BinaryHeap","std::num::NonZeroU64","std::rc::Rc","std::num::NonZeroI32","std::option::Option","std::sync::atomic::AtomicU64","std::time::SystemTime","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::ops::RangeInclusive","std::net::SocketAddrV6","std::sync::Arc","std::ops::Range","std::ffi::CString","std::sync::atomic::AtomicI8","std::cell::Cell","std::num::NonZeroU8","std::collections::BTreeMap","std::collections::HashMap","std::cell::RefCell","std::num::NonZeroUsize","std::net::SocketAddr","std::sync::RwLock","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::boxed::Box","std::sync::Mutex","std::collections::BTreeSet","std::net::SocketAddrV4","std::num::NonZeroI128","std::collections::HashSet","std::collections::Bound","std::num::NonZeroI16","std::vec::Vec","std::string::String","std::num::NonZeroU32","std::net::Ipv4Addr","std::result::Result","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::path::PathBuf","std::num::NonZeroI8","std::marker::PhantomData","std::borrow::Cow","std::net::IpAddr","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::time::Duration","std::sync::atomic::AtomicU16","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroIsize"],"_E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::collections::VecDeque<u8, A>","&std::fs::File","std::io::BufWriter<W>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::impls::<impl std::io::Write for &mut W>","std::fs::File","std::io::Stderr","std::io::Cursor<&mut [u8]>","std::io::Sink","std::process::ChildStdin","std::io::StderrLock<'_>","std::io::StdoutLock<'_>","std::os::unix::net::UnixStream","&std::net::TcpStream","&'a std::os::unix::net::UnixStream","std::io::LineWriter<W>","std::io::BorrowedCursor<'a>","&std::io::Sink","std::net::TcpStream","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::stdio::StdoutRaw","&std::process::ChildStdin","std::sys::unix::stdio::Stdout","std::io::stdio::StderrRaw","std::sys::unix::stdio::Stderr","&std::io::Stdout","std::vec::Vec<u8, A>","std::io::Cursor<[u8; N]>","std::boxed::Box<W>","&std::io::Stderr"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::cell::Cell","std::net::Ipv6Addr","std::time::Duration","std::net::SocketAddr","std::sync::Arc","std::num::NonZeroUsize","std::num::NonZeroI32","std::num::NonZeroU32","std::time::SystemTime","std::option::Option","std::net::SocketAddrV4","std::num::NonZeroIsize","std::cell::RefCell","std::num::NonZeroI128","std::num::NonZeroI8","std::ffi::CString","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroU8","std::net::IpAddr","std::string::String","std::marker::PhantomData","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroI16"],"V":["std::sync::atomic::AtomicIsize","std::rc::Rc","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::string::String","std::time::Duration","std::path::PathBuf","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::collections::HashSet","std::num::NonZeroU32","std::cell::Cell","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::collections::Bound","std::num::NonZeroI32","std::ops::RangeInclusive","std::result::Result","std::ops::Range","std::time::SystemTime","std::cell::RefCell","std::borrow::Cow","std::sync::Arc","std::collections::VecDeque","std::net::SocketAddr","std::vec::Vec","std::num::NonZeroI128","std::collections::BTreeMap","std::num::NonZeroIsize","std::num::NonZeroU64","std::sync::RwLock","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::ffi::CString","std::sync::Mutex","std::net::IpAddr","std::num::NonZeroU16","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicI8","std::collections::HashMap","std::num::NonZeroI8","std::marker::PhantomData","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::boxed::Box","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::collections::BinaryHeap","std::sync::atomic::AtomicBool"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::cell::RefCell","std::num::NonZeroUsize","std::string::String","std::path::PathBuf","std::num::NonZeroU128","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroIsize","std::num::NonZeroU32","std::sync::Arc","std::net::SocketAddr","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroI16","std::rc::Rc","std::marker::PhantomData","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroI8","std::num::NonZeroI64","std::num::NonZeroU64"]},"std::collections::BinaryHeap":{"T":["std::option::Option","std::num::NonZeroU64","std::num::NonZeroIsize","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroI8","std::num::NonZeroI64","std::num::NonZeroI32","std::net::SocketAddr","std::ffi::CString","std::net::Ipv6Addr","std::num::NonZeroI128","std::net::Ipv4Addr","std::path::PathBuf","std::string::String","std::num::NonZeroU8","std::num::NonZeroI16","std::net::SocketAddrV6","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroU32","std::marker::PhantomData"]},"std::collections::Bound":{"T":["std::sync::RwLock","std::net::SocketAddr","std::vec::Vec","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::sync::Mutex","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::num::NonZeroU64","std::net::Ipv4Addr","std::time::SystemTime","std::sync::Arc","std::collections::BinaryHeap","std::num::NonZeroI8","std::num::NonZeroU32","std::collections::HashMap","std::num::NonZeroIsize","std::num::NonZeroI32","std::collections::VecDeque","std::ops::Range","std::sync::atomic::AtomicU16","std::collections::Bound","std::ffi::CString","std::num::NonZeroI64","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::num::NonZeroU128","std::ops::RangeInclusive","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::borrow::Cow","std::time::Duration","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::boxed::Box","std::result::Result","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::option::Option","std::collections::BTreeMap","std::cell::Cell","std::collections::BTreeSet","std::string::String","std::num::NonZeroUsize","std::net::IpAddr","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::cell::RefCell"]},"std::collections::HashMap":{"K":["std::collections::Bound","std::num::NonZeroI128","std::option::Option","std::num::NonZeroI16","std::ffi::CString","std::net::SocketAddrV6","std::path::PathBuf","std::net::SocketAddr","std::string::String","std::num::NonZeroUsize","std::num::NonZeroI8","std::net::Ipv6Addr","std::num::NonZeroU64","std::net::Ipv4Addr"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::net::SocketAddrV4","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::boxed::Box","std::path::PathBuf","std::sync::RwLock","std::net::Ipv6Addr","std::string::String","std::rc::Rc","std::sync::Arc","std::time::SystemTime","std::collections::Bound","std::sync::atomic::AtomicBool","std::sync::Mutex","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::collections::BTreeSet","std::num::NonZeroI16","std::result::Result","std::collections::BTreeMap","std::num::NonZeroU64","std::collections::HashSet","std::option::Option","std::sync::atomic::AtomicI64","std::time::Duration","std::net::Ipv4Addr","std::ops::Range","std::num::NonZeroU8","std::borrow::Cow","std::num::NonZeroI8","std::cell::Cell","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::vec::Vec","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::net::IpAddr","std::ffi::CString","std::ops::RangeInclusive","std::cell::RefCell","std::num::NonZeroU16","std::net::SocketAddr","std::net::SocketAddrV6","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::num::NonZeroU32"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI16","std::net::SocketAddrV4","std::num::NonZeroUsize","std::net::Ipv6Addr","std::num::NonZeroU128","std::marker::PhantomData","std::collections::Bound","std::rc::Rc","std::sync::Arc","std::time::Duration","std::num::NonZeroI128","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroU8","std::string::String","std::net::Ipv4Addr","std::num::NonZeroIsize","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroU16","std::net::SocketAddr"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::collections::Bound","std::cell::Cell","std::sync::atomic::AtomicU8","std::cell::RefCell","std::result::Result","std::vec::Vec","std::net::Ipv6Addr","std::collections::VecDeque","std::net::Ipv4Addr","std::collections::HashMap","std::net::IpAddr","std::string::String","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::num::NonZeroU128","std::path::PathBuf","std::sync::RwLock","std::num::NonZeroI8","std::num::NonZeroIsize","std::boxed::Box","std::ffi::CString","std::borrow::Cow","std::net::SocketAddrV4","std::num::NonZeroU8","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::ops::Range","std::num::NonZeroI128","std::sync::Arc","std::marker::PhantomData","std::num::NonZeroU32","std::collections::BTreeMap","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::collections::HashSet","std::time::Duration","std::rc::Rc","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::sync::Mutex","std::option::Option"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroI32","std::ffi::CString","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::collections::Bound","std::net::Ipv6Addr","std::boxed::Box","std::sync::atomic::AtomicIsize","std::rc::Rc","std::sync::Mutex","std::ops::RangeInclusive","std::num::NonZeroU128","std::num::NonZeroI64","std::net::SocketAddrV4","std::time::Duration","std::cell::RefCell","std::net::IpAddr","std::num::NonZeroU32","std::num::NonZeroU8","std::sync::Arc","std::ops::Range","std::num::NonZeroU64","std::net::Ipv4Addr","std::collections::HashMap","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::collections::HashSet","std::borrow::Cow","std::collections::BTreeMap","std::collections::BinaryHeap","std::marker::PhantomData","std::num::NonZeroI16","std::path::PathBuf","std::vec::Vec","std::result::Result","std::sync::RwLock","std::num::NonZeroI128","std::time::SystemTime","std::option::Option","std::string::String","std::net::SocketAddrV6","std::sync::atomic::AtomicI8"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicUsize","std::borrow::Cow","std::collections::HashMap","std::collections::BTreeMap","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::ffi::CString","std::num::NonZeroI64","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::collections::Bound","std::collections::HashSet","std::path::PathBuf","std::option::Option","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::ops::RangeInclusive","std::vec::Vec","std::sync::atomic::AtomicU8","std::net::IpAddr","std::string::String","std::num::NonZeroU8","std::num::NonZeroU64","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::cell::RefCell","std::num::NonZeroUsize","std::sync::Mutex","std::sync::RwLock","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::collections::BTreeSet","std::ops::Range","std::time::Duration","std::net::SocketAddr","std::boxed::Box","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::rc::Rc","std::result::Result","std::num::NonZeroI16","std::num::NonZeroI32","std::sync::Arc","std::marker::PhantomData","std::net::Ipv6Addr","std::cell::Cell","std::num::NonZeroI128","std::num::NonZeroU16","std::collections::VecDeque","std::time::SystemTime","std::sync::atomic::AtomicIsize"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroU128","std::net::Ipv6Addr","std::string::String","std::collections::HashMap","std::boxed::Box","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::collections::Bound","std::num::NonZeroI16","std::net::IpAddr","std::result::Result","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::sync::RwLock","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::vec::Vec","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::borrow::Cow","std::num::NonZeroU32","std::marker::PhantomData","std::collections::HashSet","std::path::PathBuf","std::num::NonZeroI64","std::num::NonZeroI8","std::sync::Mutex","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::collections::BTreeSet","std::num::NonZeroIsize","std::net::SocketAddrV6","std::rc::Rc","std::cell::RefCell","std::option::Option","std::time::Duration","std::sync::Arc","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::ffi::CString","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::ops::Range","std::num::NonZeroU8","std::net::Ipv4Addr","std::time::SystemTime"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A,)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A,)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A,)>::encode(p0, p1);
+<(A,)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impl_tuples::<impl enc::Encode for (A, B)>::encode":{"A":["enc::Encode","std::marker::Sized"],"B":["std::marker::Sized","enc::Encode"],"_E":["std::marker::Sized","enc::Encoder"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["de::BorrowDecode","enc::Encode","std::cmp::Ord","std::marker::Sized","de::Decode"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","std::cmp::Ord","enc::Encode","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["de::Decode","std::marker::Sized","std::cmp::Ord","enc::Encode","de::BorrowDecode"]},"std::collections::Bound":{"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["enc::Encode","std::marker::Sized","std::hash::Hash","std::cmp::Eq","de::Decode","de::BorrowDecode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::hash::Hash","enc::Encode","de::Decode","de::BorrowDecode","std::cmp::Eq","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for &mut T>","config::BigEndian","config::Varint","config::Limit","config::NoLimit","config::Fixint","config::LittleEndian","config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SizeWriter","enc::write::SliceWriter","features::impl_std::IoWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B)>::encode":{"A":["std::num::NonZeroI16","std::collections::HashMap","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::sync::Mutex","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU8","std::net::SocketAddr","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::option::Option","std::cell::Cell","std::num::NonZeroI128","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroIsize","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::borrow::Cow","std::sync::RwLock","std::sync::atomic::AtomicI32","std::net::IpAddr","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::vec::Vec","std::time::Duration","std::rc::Rc","std::collections::BTreeSet","std::ffi::CString","std::collections::BinaryHeap","std::num::NonZeroI64","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::sync::Arc","std::num::NonZeroU32","std::net::Ipv6Addr","std::result::Result","std::net::Ipv4Addr","std::num::NonZeroU16","std::collections::VecDeque","std::collections::Bound","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::ops::Range","std::time::SystemTime","std::boxed::Box","std::sync::atomic::AtomicU8","std::collections::HashSet","std::path::PathBuf","std::string::String","std::cell::RefCell"],"B":["std::cell::Cell","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::rc::Rc","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::collections::HashSet","std::num::NonZeroIsize","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU16","std::collections::BTreeSet","std::num::NonZeroU64","std::sync::Mutex","std::sync::RwLock","std::vec::Vec","std::sync::Arc","std::num::NonZeroI32","std::net::IpAddr","std::boxed::Box","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::time::Duration","std::net::Ipv4Addr","std::collections::HashMap","std::num::NonZeroU8","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::ops::RangeInclusive","std::result::Result","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::time::SystemTime","std::ops::Range","std::path::PathBuf","std::option::Option","std::cell::RefCell","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::collections::Bound","std::ffi::CString","std::string::String","std::num::NonZeroI16","std::marker::PhantomData","std::num::NonZeroI64","std::borrow::Cow","std::num::NonZeroU32","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroUsize","std::sync::atomic::AtomicBool"],"_E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Sink","&std::io::Sink","std::collections::VecDeque<u8, A>","std::net::TcpStream","std::io::BufWriter<W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::fs::File","std::vec::Vec<u8, A>","std::io::StderrLock<'_>","&std::io::Stdout","std::io::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>","std::sys::unix::stdio::Stderr","std::process::ChildStdin","std::io::Cursor<&mut [u8]>","std::os::unix::net::UnixStream","std::io::StdoutLock<'_>","std::boxed::Box<W>","std::sys::unix::stdio::Stdout","std::fs::File","&std::io::Stderr","std::io::Stdout","std::io::stdio::StderrRaw","std::io::stdio::StdoutRaw","std::io::BorrowedCursor<'a>","&std::net::TcpStream","std::io::LineWriter<W>","std::io::impls::<impl std::io::Write for &mut W>","&std::process::ChildStdin","&'a std::os::unix::net::UnixStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<[u8; N]>","std::io::Cursor<std::vec::Vec<u8, A>>"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::OsStr","std::ffi::CStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI64","std::num::NonZeroI32","std::net::SocketAddrV6","std::num::NonZeroU32","std::rc::Rc","std::cell::RefCell","std::net::SocketAddrV4","std::marker::PhantomData","std::ffi::CString","std::num::NonZeroI128","std::num::NonZeroU8","std::time::Duration","std::num::NonZeroI16","std::net::Ipv4Addr","std::net::SocketAddr","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroU64"],"V":["std::net::Ipv4Addr","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::ffi::CString","std::sync::RwLock","std::num::NonZeroU32","std::result::Result","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::collections::BinaryHeap","std::vec::Vec","std::sync::atomic::AtomicI8","std::collections::Bound","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::collections::HashMap","std::boxed::Box","std::num::NonZeroIsize","std::time::Duration","std::ops::Range","std::sync::atomic::AtomicI32","std::string::String","std::time::SystemTime","std::sync::Arc","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::option::Option","std::path::PathBuf","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::net::Ipv6Addr","std::collections::BTreeSet","std::num::NonZeroI64","std::cell::RefCell","std::num::NonZeroI8","std::sync::Mutex","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::sync::atomic::AtomicI16","std::net::IpAddr","std::num::NonZeroI128","std::rc::Rc","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::num::NonZeroI32","std::num::NonZeroU16","std::ops::RangeInclusive","std::num::NonZeroU128"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::time::SystemTime","std::path::PathBuf","std::net::IpAddr","std::num::NonZeroIsize","std::option::Option","std::string::String","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroI8","std::num::NonZeroI32","std::ffi::CString","std::cell::Cell","std::num::NonZeroU64","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroI64","std::net::Ipv4Addr","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroI128","std::rc::Rc","std::cell::RefCell"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroI128","std::option::Option","std::time::SystemTime","std::marker::PhantomData","std::cell::Cell","std::num::NonZeroU64","std::num::NonZeroI8","std::time::Duration","std::num::NonZeroI32","std::net::Ipv4Addr","std::num::NonZeroIsize","std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroI64","std::num::NonZeroI16","std::string::String","std::sync::Arc","std::path::PathBuf","std::net::Ipv6Addr"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::collections::HashMap","std::num::NonZeroUsize","std::borrow::Cow","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::num::NonZeroI8","std::collections::HashSet","std::rc::Rc","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::string::String","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroU16","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::net::IpAddr","std::boxed::Box","std::num::NonZeroU64","std::time::Duration","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::cell::RefCell","std::net::Ipv4Addr","std::time::SystemTime","std::vec::Vec","std::collections::BinaryHeap","std::sync::RwLock","std::ffi::CString","std::option::Option","std::sync::Arc","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::result::Result","std::collections::Bound","std::num::NonZeroI64","std::net::Ipv6Addr","std::sync::Mutex","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::net::SocketAddrV6","std::ops::Range","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroI32"]},"std::collections::HashMap":{"K":["std::string::String","std::time::SystemTime","std::marker::PhantomData","std::rc::Rc","std::net::SocketAddrV4","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroIsize","std::net::SocketAddrV6","std::num::NonZeroU16","std::time::Duration","std::ffi::CString","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroU64","std::path::PathBuf","std::net::Ipv4Addr"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::num::NonZeroI128","std::collections::HashMap","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::num::NonZeroI64","std::sync::Mutex","std::collections::Bound","std::collections::HashSet","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::sync::Arc","std::sync::atomic::AtomicI8","std::path::PathBuf","std::num::NonZeroIsize","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::rc::Rc","std::boxed::Box","std::num::NonZeroUsize","std::net::SocketAddrV6","std::collections::BinaryHeap","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::net::SocketAddr","std::string::String","std::net::Ipv4Addr","std::num::NonZeroU32","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::option::Option","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::cell::RefCell","std::cell::Cell","std::net::IpAddr","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::num::NonZeroI16","std::sync::RwLock","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::marker::PhantomData","std::borrow::Cow","std::ffi::CString","std::num::NonZeroU8","std::time::SystemTime","std::result::Result","std::sync::atomic::AtomicU8","std::time::Duration","std::ops::Range","std::vec::Vec"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU8","std::path::PathBuf","std::ffi::CString","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroIsize","std::sync::Arc","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroI8","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroUsize","std::time::Duration","std::net::SocketAddrV6","std::num::NonZeroI32","std::string::String","std::num::NonZeroU16","std::num::NonZeroU64","std::num::NonZeroU32","std::rc::Rc"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::collections::BinaryHeap","std::collections::Bound","std::num::NonZeroU128","std::vec::Vec","std::collections::HashSet","std::sync::atomic::AtomicI16","std::cell::Cell","std::rc::Rc","std::collections::BTreeMap","std::ops::Range","std::collections::HashMap","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::num::NonZeroU64","std::result::Result","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::num::NonZeroU32","std::num::NonZeroIsize","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::boxed::Box","std::net::Ipv4Addr","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroI64","std::time::SystemTime","std::string::String","std::cell::RefCell","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::ffi::CString","std::net::SocketAddr","std::sync::Mutex","std::net::Ipv6Addr","std::borrow::Cow","std::sync::RwLock","std::path::PathBuf","std::sync::Arc","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::option::Option","std::net::IpAddr","std::ops::RangeInclusive","std::num::NonZeroI128","std::time::Duration"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::atomic::AtomicIsize","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::sync::Mutex","std::sync::RwLock","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::time::Duration","std::time::SystemTime","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::net::IpAddr","std::num::NonZeroU64","std::cell::Cell","std::string::String","std::collections::Bound","std::path::PathBuf","std::vec::Vec","std::num::NonZeroI16","std::boxed::Box","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::num::NonZeroU32","std::option::Option","std::sync::Arc","std::collections::HashMap","std::num::NonZeroI32","std::num::NonZeroIsize","std::rc::Rc","std::num::NonZeroI128","std::num::NonZeroU16","std::result::Result","std::ops::Range","std::sync::atomic::AtomicU8","std::cell::RefCell","std::num::NonZeroU8","std::collections::BTreeMap","std::collections::BinaryHeap","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::collections::HashSet","std::ffi::CString","std::borrow::Cow","std::num::NonZeroU128","std::net::SocketAddrV4","std::ops::RangeInclusive"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::IpAddr","std::sync::atomic::AtomicU64","std::boxed::Box","std::net::Ipv4Addr","std::vec::Vec","std::time::SystemTime","std::rc::Rc","std::sync::Arc","std::collections::HashMap","std::collections::HashSet","std::ops::RangeInclusive","std::num::NonZeroU128","std::num::NonZeroI16","std::net::SocketAddrV4","std::num::NonZeroUsize","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::option::Option","std::net::SocketAddr","std::collections::BinaryHeap","std::path::PathBuf","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::collections::VecDeque","std::sync::RwLock","std::sync::Mutex","std::num::NonZeroU8","std::marker::PhantomData","std::net::SocketAddrV6","std::cell::Cell","std::collections::BTreeMap","std::result::Result","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::time::Duration","std::num::NonZeroU64","std::num::NonZeroI64","std::ops::Range","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::string::String","std::collections::Bound","std::ffi::CString","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::num::NonZeroIsize","std::borrow::Cow","std::sync::atomic::AtomicUsize"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroI8","std::sync::atomic::AtomicUsize","std::ops::Range","std::sync::Arc","std::net::SocketAddrV4","std::num::NonZeroU128","std::time::SystemTime","std::num::NonZeroIsize","std::net::Ipv4Addr","std::boxed::Box","std::sync::atomic::AtomicIsize","std::time::Duration","std::collections::BTreeMap","std::rc::Rc","std::sync::Mutex","std::sync::RwLock","std::sync::atomic::AtomicU64","std::borrow::Cow","std::collections::BinaryHeap","std::num::NonZeroU32","std::num::NonZeroU64","std::string::String","std::sync::atomic::AtomicI32","std::option::Option","std::ops::RangeInclusive","std::collections::BTreeSet","std::cell::Cell","std::sync::atomic::AtomicU8","std::path::PathBuf","std::num::NonZeroI32","std::vec::Vec","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::collections::Bound","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::ffi::CString","std::result::Result","std::num::NonZeroUsize","std::net::SocketAddrV6","std::marker::PhantomData","std::collections::HashMap","std::sync::atomic::AtomicI8","std::cell::RefCell","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroI16","std::net::IpAddr","std::collections::VecDeque","std::collections::HashSet"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B)>::encode(p0, p1);
+<(A, B)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C)>::encode":{"A":["std::marker::Sized","enc::Encode"],"B":["std::marker::Sized","enc::Encode"],"C":["std::marker::Sized","enc::Encode"],"_E":["enc::Encoder","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::Bound":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","enc::Encode","std::hash::Hash","std::marker::Sized","de::BorrowDecode","de::Decode"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","std::cmp::Eq","de::BorrowDecode","std::hash::Hash","enc::Encode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::NoLimit","config::BigEndian","config::Fixint","config::Varint","config::Configuration","std::clone::impls::<impl std::clone::Clone for &mut T>","config::Limit"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C)>::encode":{"A":["std::num::NonZeroU64","std::net::Ipv6Addr","std::result::Result","std::collections::VecDeque","std::path::PathBuf","std::net::IpAddr","std::net::Ipv4Addr","std::num::NonZeroU32","std::sync::Mutex","std::vec::Vec","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::time::SystemTime","std::num::NonZeroU8","std::boxed::Box","std::ops::Range","std::num::NonZeroI8","std::time::Duration","std::sync::atomic::AtomicU8","std::collections::Bound","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::cell::Cell","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::sync::RwLock","std::collections::HashSet","std::num::NonZeroI32","std::option::Option","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::rc::Rc","std::net::SocketAddrV4","enc::impls::<impl enc::Encode for &'a T>","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::borrow::Cow","std::num::NonZeroU128","std::net::SocketAddr","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::num::NonZeroU16","std::num::NonZeroIsize","std::ffi::CString","std::sync::Arc","std::collections::BTreeMap","std::num::NonZeroI64","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::string::String"],"B":["std::string::String","std::path::PathBuf","std::sync::atomic::AtomicU8","std::ops::Range","std::sync::atomic::AtomicI64","std::sync::RwLock","std::sync::Arc","std::sync::Mutex","std::option::Option","std::collections::Bound","std::vec::Vec","std::num::NonZeroI8","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroI16","std::cell::RefCell","std::sync::atomic::AtomicU32","std::collections::HashSet","std::ffi::CString","std::net::SocketAddr","std::ops::RangeInclusive","std::net::Ipv6Addr","std::num::NonZeroU32","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::collections::VecDeque","std::rc::Rc","std::collections::BTreeSet","std::boxed::Box","std::net::IpAddr","std::borrow::Cow","std::num::NonZeroU128","enc::impls::<impl enc::Encode for &'a T>","std::time::Duration","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::num::NonZeroU64","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::cell::Cell","std::collections::HashMap","std::num::NonZeroIsize","std::collections::BinaryHeap","std::collections::BTreeMap","std::time::SystemTime","std::result::Result","std::sync::atomic::AtomicU64"],"C":["std::sync::Mutex","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::net::SocketAddrV6","std::path::PathBuf","std::cell::RefCell","std::collections::HashMap","std::option::Option","std::num::NonZeroUsize","std::net::Ipv6Addr","std::time::SystemTime","std::net::IpAddr","std::rc::Rc","std::ops::Range","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::ffi::CString","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::marker::PhantomData","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::result::Result","std::collections::VecDeque","std::collections::Bound","std::sync::atomic::AtomicI8","std::vec::Vec","std::sync::Arc","std::num::NonZeroU16","std::ops::RangeInclusive","std::num::NonZeroU32","std::collections::HashSet","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::string::String","std::sync::RwLock","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::boxed::Box","std::borrow::Cow","std::num::NonZeroI64","std::num::NonZeroU64","std::num::NonZeroI16","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::time::Duration"],"_E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::BufWriter<W>","std::vec::Vec<u8, A>","std::boxed::Box<W>","std::net::TcpStream","std::io::stdio::StderrRaw","std::io::impls::<impl std::io::Write for &mut W>","std::io::Stdout","std::sys::unix::stdio::Stderr","&std::io::Sink","std::io::Cursor<[u8; N]>","std::io::Stderr","std::sys::unix::stdio::Stdout","std::io::stdio::StdoutRaw","std::io::StdoutLock<'_>","std::io::Sink","std::fs::File","&'a std::os::unix::net::UnixStream","&std::fs::File","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::process::ChildStdin","std::io::LineWriter<W>","std::os::unix::net::UnixStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::net::TcpStream","std::io::StderrLock<'_>","std::collections::VecDeque<u8, A>","&std::io::Stderr","&std::io::Stdout","std::io::Cursor<&mut [u8]>","std::process::ChildStdin","std::io::BorrowedCursor<'a>","std::io::Cursor<&mut std::vec::Vec<u8, A>>"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::ffi::CStr","<T as std::borrow::ToOwned>","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::path::PathBuf","std::net::SocketAddrV6","std::num::NonZeroUsize","std::num::NonZeroI32","std::num::NonZeroI64","std::net::SocketAddr","std::time::Duration","std::net::Ipv6Addr","std::net::IpAddr","std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroIsize","std::rc::Rc","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroU32","std::num::NonZeroI16","std::num::NonZeroI8","std::option::Option","std::ffi::CString","std::cell::Cell","std::num::NonZeroU128"],"V":["std::sync::atomic::AtomicI64","std::time::Duration","std::net::IpAddr","std::sync::atomic::AtomicI8","std::ops::Range","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::num::NonZeroU64","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::collections::Bound","std::sync::atomic::AtomicU8","std::boxed::Box","std::sync::Arc","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::num::NonZeroU16","std::collections::VecDeque","std::vec::Vec","std::path::PathBuf","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::result::Result","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::option::Option","std::net::SocketAddrV6","std::cell::RefCell","std::rc::Rc","std::sync::RwLock","std::num::NonZeroI32","std::net::Ipv6Addr","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::string::String","std::collections::BTreeSet","std::ops::RangeInclusive","std::time::SystemTime","std::ffi::CString","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::sync::Mutex","std::net::SocketAddrV4","std::collections::HashMap","std::num::NonZeroU32","std::num::NonZeroI64","std::cell::Cell","std::marker::PhantomData","std::net::SocketAddr"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::SocketAddrV4","std::option::Option","std::num::NonZeroI16","std::num::NonZeroU16","std::sync::Arc","std::num::NonZeroI32","std::num::NonZeroIsize","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroU64","std::net::SocketAddrV6","std::string::String","std::path::PathBuf","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroI64","std::time::Duration","std::num::NonZeroUsize","std::net::IpAddr","std::num::NonZeroI128","std::num::NonZeroU32","std::cell::RefCell"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroUsize","std::num::NonZeroU128","std::cell::RefCell","std::num::NonZeroI64","std::string::String","std::net::Ipv6Addr","std::num::NonZeroIsize","std::marker::PhantomData","std::ffi::CString","std::net::SocketAddrV6","std::sync::Arc","std::path::PathBuf","std::num::NonZeroU8","std::time::SystemTime","std::num::NonZeroI8","std::num::NonZeroI16","std::net::Ipv4Addr","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroI128","std::rc::Rc","std::cell::Cell"]},"std::collections::Bound":{"T":["std::option::Option","std::num::NonZeroU8","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::ffi::CString","std::vec::Vec","std::num::NonZeroI128","std::collections::VecDeque","std::net::IpAddr","std::time::SystemTime","std::time::Duration","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::cell::Cell","std::ops::Range","std::sync::Mutex","std::boxed::Box","std::sync::RwLock","std::result::Result","std::net::Ipv6Addr","std::net::SocketAddr","std::collections::Bound","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::collections::BTreeSet","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::cell::RefCell","std::num::NonZeroI32","std::num::NonZeroI64","std::string::String","std::rc::Rc","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::num::NonZeroUsize","std::num::NonZeroU128","std::marker::PhantomData","std::num::NonZeroU32","std::collections::HashSet","std::sync::Arc","std::sync::atomic::AtomicI16","std::borrow::Cow","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroIsize","std::collections::HashMap","std::sync::atomic::AtomicBool"]},"std::collections::HashMap":{"K":["std::rc::Rc","std::marker::PhantomData","std::sync::Arc","std::num::NonZeroU16","std::path::PathBuf","std::num::NonZeroI64","std::num::NonZeroUsize","std::net::Ipv6Addr","std::time::Duration","std::time::SystemTime","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroU64","std::ffi::CString"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::collections::BTreeMap","std::net::SocketAddr","std::net::SocketAddrV6","std::collections::HashSet","std::collections::BTreeSet","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroU16","std::borrow::Cow","std::string::String","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::collections::BinaryHeap","std::num::NonZeroIsize","std::collections::HashMap","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::sync::RwLock","std::sync::Arc","std::boxed::Box","std::cell::RefCell","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::num::NonZeroI128","std::ffi::CString","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::marker::PhantomData","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::sync::Mutex","std::rc::Rc","std::path::PathBuf","std::collections::Bound","std::cell::Cell","std::ops::Range","std::sync::atomic::AtomicIsize","std::vec::Vec","std::num::NonZeroUsize","std::net::IpAddr","std::net::Ipv4Addr","std::num::NonZeroU128","std::option::Option","std::sync::atomic::AtomicUsize","std::time::Duration","std::result::Result"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::collections::Bound","std::num::NonZeroI128","std::net::SocketAddrV6","std::rc::Rc","std::sync::Arc","std::num::NonZeroI16","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroI8","std::num::NonZeroU64","std::string::String","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroU32","std::ffi::CString","std::net::Ipv6Addr","std::num::NonZeroI64","std::net::SocketAddr","std::option::Option","std::num::NonZeroIsize"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::collections::HashSet","std::ops::RangeInclusive","std::boxed::Box","std::num::NonZeroI8","std::net::SocketAddrV4","std::path::PathBuf","std::sync::atomic::AtomicBool","std::string::String","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::borrow::Cow","std::num::NonZeroU8","std::cell::RefCell","std::time::Duration","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::net::SocketAddrV6","std::result::Result","std::num::NonZeroI64","std::net::Ipv6Addr","std::marker::PhantomData","std::net::IpAddr","std::collections::HashMap","std::sync::RwLock","std::time::SystemTime","std::collections::BTreeSet","std::collections::Bound","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::sync::atomic::AtomicU32","std::rc::Rc","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::ffi::CString","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::num::NonZeroU64","std::option::Option","std::collections::VecDeque","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::ops::Range","std::num::NonZeroI32","std::vec::Vec","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::Arc","std::num::NonZeroI16"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroUsize","std::cell::RefCell","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::result::Result","std::net::SocketAddr","std::option::Option","std::sync::RwLock","std::num::NonZeroI16","std::marker::PhantomData","std::cell::Cell","std::collections::BinaryHeap","std::collections::VecDeque","std::ops::Range","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::ffi::CString","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::ops::RangeInclusive","std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroI32","std::num::NonZeroI128","std::num::NonZeroU128","std::net::SocketAddrV6","std::collections::BTreeMap","std::num::NonZeroI64","std::num::NonZeroIsize","std::rc::Rc","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::net::Ipv4Addr","std::sync::Arc","std::boxed::Box","std::time::Duration","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::net::IpAddr","std::path::PathBuf","std::collections::HashSet","std::net::SocketAddrV4","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::borrow::Cow","std::num::NonZeroI8","std::vec::Vec","std::collections::Bound","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::string::String"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::result::Result","std::ops::Range","std::num::NonZeroI8","std::boxed::Box","std::collections::BTreeMap","std::time::Duration","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::path::PathBuf","std::sync::Mutex","std::num::NonZeroI128","std::net::Ipv6Addr","std::collections::Bound","std::sync::Arc","std::sync::atomic::AtomicIsize","std::ffi::CString","std::collections::BinaryHeap","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::rc::Rc","std::cell::RefCell","std::collections::VecDeque","std::sync::RwLock","std::num::NonZeroU64","std::net::SocketAddrV6","std::string::String","std::cell::Cell","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::time::SystemTime","std::collections::HashSet","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroU16","std::num::NonZeroU32","std::collections::HashMap","std::vec::Vec","std::num::NonZeroU8","std::ops::RangeInclusive","std::marker::PhantomData","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::borrow::Cow"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::net::IpAddr","std::collections::BTreeSet","std::boxed::Box","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::collections::HashMap","std::net::Ipv6Addr","std::time::Duration","std::cell::Cell","std::string::String","std::num::NonZeroU64","std::marker::PhantomData","std::collections::HashSet","std::path::PathBuf","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::vec::Vec","std::ops::RangeInclusive","std::time::SystemTime","std::num::NonZeroI16","std::rc::Rc","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::sync::atomic::AtomicI64","std::borrow::Cow","std::net::SocketAddrV6","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::ffi::CString","std::ops::Range","std::option::Option","std::net::SocketAddrV4","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::result::Result","std::net::SocketAddr","std::num::NonZeroU32","std::num::NonZeroI64","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::sync::RwLock","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::sync::Arc","std::sync::Mutex","std::num::NonZeroI128","std::collections::Bound","std::sync::atomic::AtomicI8"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C)>::encode(p0, p1);
+<(A, B, C)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C, D)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D)>::encode":{"A":["enc::Encode","std::marker::Sized"],"B":["enc::Encode","std::marker::Sized"],"C":["std::marker::Sized","enc::Encode"],"D":["std::marker::Sized","enc::Encode"],"_E":["std::marker::Sized","enc::Encoder"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["de::Decode","std::cmp::Ord","enc::Encode","std::marker::Sized","de::BorrowDecode"],"V":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["std::marker::Sized","std::cmp::Ord","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::Decode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode"]},"std::collections::Bound":{"T":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::collections::HashMap":{"K":["std::marker::Sized","de::Decode","enc::Encode","std::cmp::Eq","std::hash::Hash","de::BorrowDecode"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["de::BorrowDecode","std::cmp::Eq","de::Decode","std::hash::Hash","enc::Encode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::LittleEndian","config::Limit","config::BigEndian","config::Varint","std::clone::impls::<impl std::clone::Clone for &T>","config::NoLimit","config::Configuration","config::Fixint"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SliceWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D)>::encode":{"A":["std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::ops::Range","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::collections::Bound","std::string::String","enc::impls::<impl enc::Encode for &'a T>","std::cell::Cell","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::sync::Arc","std::net::SocketAddr","std::vec::Vec","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::result::Result","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::sync::RwLock","std::path::PathBuf","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroI16","std::net::SocketAddrV4","std::net::Ipv6Addr","std::time::Duration","std::cell::RefCell","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::collections::HashMap","std::ops::RangeInclusive","std::num::NonZeroI64","std::borrow::Cow","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::collections::VecDeque","std::num::NonZeroU32","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::net::IpAddr","std::option::Option","std::num::NonZeroUsize","std::ffi::CString","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::time::SystemTime","std::sync::Mutex","std::num::NonZeroI8","std::boxed::Box"],"B":["std::result::Result","std::num::NonZeroU128","std::net::IpAddr","std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::ops::Range","std::sync::atomic::AtomicU16","std::string::String","std::num::NonZeroI128","std::num::NonZeroU64","std::num::NonZeroUsize","std::borrow::Cow","std::collections::HashMap","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::collections::Bound","std::num::NonZeroU16","std::vec::Vec","std::sync::RwLock","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::time::Duration","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroU8","std::num::NonZeroI32","std::option::Option","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::collections::BTreeSet","std::net::Ipv6Addr","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::collections::VecDeque","std::net::SocketAddr","std::cell::RefCell","std::collections::HashSet","std::sync::Arc","std::num::NonZeroI8","std::cell::Cell","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::boxed::Box","std::path::PathBuf","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroI64","std::time::SystemTime","std::sync::atomic::AtomicU8","std::sync::Mutex"],"C":["std::sync::atomic::AtomicBool","std::option::Option","std::time::Duration","std::sync::atomic::AtomicI64","std::rc::Rc","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::cell::RefCell","std::net::IpAddr","std::cell::Cell","std::sync::Arc","std::time::SystemTime","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::collections::Bound","std::net::Ipv4Addr","std::boxed::Box","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::sync::Mutex","std::num::NonZeroIsize","std::collections::BTreeSet","std::num::NonZeroI8","std::borrow::Cow","std::collections::HashSet","std::result::Result","std::sync::RwLock","std::num::NonZeroUsize","std::collections::BinaryHeap","std::num::NonZeroU8","std::num::NonZeroI16","std::collections::VecDeque","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU32","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::num::NonZeroU16","std::vec::Vec","std::string::String","std::net::SocketAddr","std::ops::Range","std::ops::RangeInclusive","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::path::PathBuf","std::ffi::CString","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::marker::PhantomData"],"D":["std::vec::Vec","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::time::Duration","std::num::NonZeroU16","std::boxed::Box","std::collections::HashMap","std::num::NonZeroU32","std::net::Ipv4Addr","std::result::Result","std::num::NonZeroU64","std::num::NonZeroU8","std::cell::Cell","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::collections::BinaryHeap","std::marker::PhantomData","std::num::NonZeroIsize","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::path::PathBuf","std::collections::BTreeMap","std::string::String","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","enc::impls::<impl enc::Encode for &'a T>","std::rc::Rc","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::cell::RefCell","std::collections::Bound","std::collections::HashSet","std::option::Option","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::collections::VecDeque","std::net::SocketAddr","std::num::NonZeroI8","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::RwLock","std::sync::Arc","std::net::IpAddr","std::ffi::CString","std::net::SocketAddrV4","std::ops::Range","std::sync::atomic::AtomicU32","std::time::SystemTime"],"_E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::stdio::StdoutRaw","std::io::Cursor<[u8; N]>","std::io::BorrowedCursor<'a>","std::fs::File","&std::fs::File","std::net::TcpStream","std::io::Sink","&std::io::Stdout","std::io::BufWriter<W>","std::io::stdio::StderrRaw","&std::net::TcpStream","&'a std::os::unix::net::UnixStream","std::sys::unix::stdio::Stdout","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::StdoutLock<'_>","std::boxed::Box<W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::collections::VecDeque<u8, A>","std::io::Cursor<std::vec::Vec<u8, A>>","&std::io::Stderr","std::process::ChildStdin","std::sys::unix::stdio::Stderr","std::vec::Vec<u8, A>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Stdout","std::io::Cursor<&mut [u8]>","std::io::Stderr","std::io::LineWriter<W>","&std::process::ChildStdin","std::io::impls::<impl std::io::Write for &mut W>","&std::io::Sink","std::io::StderrLock<'_>","std::os::unix::net::UnixStream"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","<T as std::borrow::ToOwned>","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroIsize","std::cell::RefCell","std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroU8","std::string::String","std::net::Ipv6Addr","std::num::NonZeroI8","std::num::NonZeroI64","std::num::NonZeroI128","std::net::SocketAddr","std::marker::PhantomData","std::sync::Arc","std::num::NonZeroI16","std::net::SocketAddrV6","std::ffi::CString","std::option::Option","std::num::NonZeroUsize","std::cell::Cell","std::time::Duration","std::num::NonZeroU16","std::num::NonZeroI32","std::net::IpAddr","std::num::NonZeroU128"],"V":["std::cell::Cell","std::num::NonZeroI128","std::sync::RwLock","std::cell::RefCell","std::sync::Mutex","std::num::NonZeroIsize","std::path::PathBuf","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::time::Duration","std::boxed::Box","std::sync::atomic::AtomicU64","std::rc::Rc","std::net::Ipv6Addr","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::option::Option","std::sync::atomic::AtomicUsize","std::ops::Range","std::net::SocketAddrV6","std::collections::Bound","std::borrow::Cow","std::num::NonZeroU128","std::collections::BTreeSet","std::ops::RangeInclusive","std::marker::PhantomData","std::net::Ipv4Addr","std::ffi::CString","std::sync::Arc","std::sync::atomic::AtomicU8","std::vec::Vec","std::sync::atomic::AtomicIsize","std::result::Result","std::collections::HashSet","std::num::NonZeroU64","std::collections::BTreeMap","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::num::NonZeroI64","std::net::SocketAddrV4","std::num::NonZeroU16","std::string::String","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::collections::HashMap"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU64","std::num::NonZeroI32","std::ffi::CString","std::option::Option","std::net::SocketAddrV4","std::net::Ipv6Addr","std::net::SocketAddrV6","std::net::SocketAddr","std::rc::Rc","std::sync::Arc","std::num::NonZeroI64","std::time::Duration","std::string::String","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroIsize","std::num::NonZeroI128","std::num::NonZeroUsize","std::path::PathBuf","std::net::Ipv4Addr","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroU32"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroIsize","std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroU16","std::time::SystemTime","std::num::NonZeroI16","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroUsize","std::num::NonZeroU64","std::cell::RefCell","std::option::Option","std::time::Duration","std::net::Ipv4Addr","std::num::NonZeroI32","std::ffi::CString","std::num::NonZeroU128","std::net::Ipv6Addr","std::rc::Rc","std::net::SocketAddrV4"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::collections::HashSet","std::ffi::CString","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::collections::BinaryHeap","std::cell::RefCell","std::sync::atomic::AtomicU16","std::collections::Bound","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::sync::Arc","std::collections::BTreeMap","std::net::IpAddr","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroI8","std::ops::Range","std::option::Option","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::path::PathBuf","std::net::SocketAddrV6","std::time::SystemTime","std::num::NonZeroU128","std::sync::RwLock","std::string::String","std::collections::VecDeque","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::result::Result","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::borrow::Cow","std::sync::Mutex","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::boxed::Box","std::collections::HashMap","std::sync::atomic::AtomicBool","std::time::Duration","std::num::NonZeroI32","std::ops::RangeInclusive","std::cell::Cell","std::num::NonZeroU32","std::rc::Rc","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::vec::Vec","std::num::NonZeroU16","std::collections::BTreeSet"]},"std::collections::HashMap":{"K":["std::num::NonZeroU16","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroIsize","std::num::NonZeroI32","std::sync::Arc","std::rc::Rc","std::net::SocketAddrV4","std::string::String","std::net::IpAddr","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroI16","std::option::Option","std::time::Duration","std::num::NonZeroU32","std::num::NonZeroI8","std::marker::PhantomData","std::collections::Bound","std::net::SocketAddrV6","std::time::SystemTime"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::collections::HashSet","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroI32","std::vec::Vec","std::sync::RwLock","std::num::NonZeroI128","std::net::Ipv6Addr","std::sync::Mutex","std::collections::VecDeque","std::collections::BTreeSet","std::num::NonZeroU16","std::rc::Rc","std::ffi::CString","std::num::NonZeroUsize","std::result::Result","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::ops::RangeInclusive","std::string::String","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::sync::Arc","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::collections::BTreeMap","std::num::NonZeroU32","std::num::NonZeroU8","std::cell::Cell","std::sync::atomic::AtomicI64","std::option::Option","std::sync::atomic::AtomicIsize","std::boxed::Box","std::time::Duration","std::cell::RefCell","std::time::SystemTime","std::num::NonZeroU64","std::borrow::Cow","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::ops::Range","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::collections::Bound","std::collections::HashMap","std::num::NonZeroU128","std::num::NonZeroI64","std::path::PathBuf"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::rc::Rc","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroIsize","std::num::NonZeroU128","std::num::NonZeroU64","std::num::NonZeroI8","std::num::NonZeroI64","std::string::String","std::collections::Bound","std::time::Duration","std::num::NonZeroI128","std::marker::PhantomData"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::sync::atomic::AtomicI16","std::option::Option","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::ops::Range","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::collections::Bound","std::net::SocketAddr","std::num::NonZeroI32","std::time::Duration","std::result::Result","std::num::NonZeroIsize","std::num::NonZeroU16","std::num::NonZeroU128","std::time::SystemTime","std::ffi::CString","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::net::IpAddr","std::collections::BTreeMap","std::cell::RefCell","std::sync::Arc","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::num::NonZeroU64","std::net::Ipv4Addr","std::collections::HashSet","std::net::SocketAddrV6","std::collections::BinaryHeap","std::net::Ipv6Addr","std::num::NonZeroUsize","std::ops::RangeInclusive","std::collections::HashMap","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::sync::RwLock","std::num::NonZeroI16","std::sync::Mutex","std::string::String","std::collections::VecDeque","std::boxed::Box","std::rc::Rc","std::num::NonZeroU32","std::marker::PhantomData","std::vec::Vec","std::path::PathBuf","std::borrow::Cow","std::cell::Cell","std::sync::atomic::AtomicI8"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::ffi::CString","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::sync::atomic::AtomicU8","std::cell::RefCell","std::result::Result","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::sync::Mutex","std::collections::HashSet","std::collections::HashMap","std::net::SocketAddrV4","std::num::NonZeroIsize","std::sync::RwLock","std::boxed::Box","std::num::NonZeroU16","std::option::Option","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroU8","std::num::NonZeroI64","std::net::Ipv4Addr","std::num::NonZeroI128","std::collections::VecDeque","std::num::NonZeroU128","std::ops::Range","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::rc::Rc","std::marker::PhantomData","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroU64","std::num::NonZeroUsize","std::cell::Cell","std::path::PathBuf","std::net::SocketAddrV6","std::net::SocketAddr","std::vec::Vec","std::string::String","std::collections::BTreeSet","std::sync::Arc","std::time::SystemTime","std::collections::BinaryHeap","std::num::NonZeroU32","std::collections::Bound"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::time::SystemTime","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::vec::Vec","std::boxed::Box","std::ops::Range","std::sync::Arc","std::sync::RwLock","std::collections::BTreeSet","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::ffi::CString","std::result::Result","std::sync::atomic::AtomicU64","std::time::Duration","std::num::NonZeroIsize","std::marker::PhantomData","std::collections::HashMap","std::net::SocketAddrV6","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::string::String","std::num::NonZeroU64","std::borrow::Cow","std::net::SocketAddrV4","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::cell::Cell","std::num::NonZeroU32","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::path::PathBuf","std::num::NonZeroI8","std::collections::HashSet","std::num::NonZeroU8","std::collections::BTreeMap","std::cell::RefCell","std::rc::Rc","std::net::IpAddr","std::net::Ipv4Addr","std::option::Option","std::num::NonZeroU16","std::num::NonZeroI16","std::collections::VecDeque","std::sync::Mutex","std::num::NonZeroI32","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::atomic::AtomicI64"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::num::NonZeroU128","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::rc::Rc","std::sync::Arc","std::net::SocketAddrV4","std::result::Result","std::marker::PhantomData","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::vec::Vec","std::sync::atomic::AtomicIsize","std::string::String","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::time::SystemTime","std::num::NonZeroI8","std::collections::HashSet","std::num::NonZeroUsize","std::net::Ipv4Addr","std::sync::RwLock","std::sync::atomic::AtomicU16","std::collections::HashMap","std::sync::atomic::AtomicI8","std::net::IpAddr","std::num::NonZeroIsize","std::num::NonZeroU16","std::collections::BTreeMap","std::num::NonZeroU32","std::cell::RefCell","std::ops::Range","std::num::NonZeroI16","std::collections::VecDeque","std::net::SocketAddr","std::collections::Bound","std::option::Option","std::boxed::Box","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::path::PathBuf","std::ffi::CString","std::time::Duration","std::borrow::Cow","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::net::SocketAddrV6","std::cell::Cell"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C, D)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C, D)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C, D)>::encode(p0, p1);
+<(A, B, C, D)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E)>::encode":{"A":["std::marker::Sized","enc::Encode"],"B":["enc::Encode","std::marker::Sized"],"C":["enc::Encode","std::marker::Sized"],"D":["enc::Encode","std::marker::Sized"],"E":["enc::Encode","std::marker::Sized"],"_E":["std::marker::Sized","enc::Encoder"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::Decode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode","enc::Encode"],"V":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["std::cmp::Ord","enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::BorrowDecode","std::cmp::Ord","enc::Encode","de::Decode"]},"std::collections::Bound":{"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::marker::Sized","enc::Encode","std::cmp::Eq","de::Decode","std::hash::Hash","de::BorrowDecode"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","std::cmp::Eq","de::BorrowDecode","enc::Encode","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Fixint","config::LittleEndian","config::Configuration","config::BigEndian","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Limit","config::Varint"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","enc::write::SizeWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E)>::encode":{"A":["std::cell::Cell","std::num::NonZeroIsize","std::num::NonZeroUsize","std::net::Ipv4Addr","std::net::SocketAddrV6","std::path::PathBuf","std::cell::RefCell","std::num::NonZeroI8","std::time::SystemTime","std::time::Duration","std::sync::atomic::AtomicI32","std::option::Option","std::collections::VecDeque","std::num::NonZeroI32","std::num::NonZeroU64","std::sync::Arc","std::net::SocketAddrV4","std::vec::Vec","std::sync::Mutex","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::num::NonZeroU8","std::collections::BinaryHeap","std::collections::HashMap","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::ffi::CString","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::marker::PhantomData","std::borrow::Cow","std::num::NonZeroU32","std::ops::RangeInclusive","std::sync::RwLock","std::rc::Rc","std::boxed::Box","std::string::String","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::collections::Bound","std::collections::BTreeSet","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::result::Result","std::collections::BTreeMap","std::ops::Range","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::net::IpAddr","enc::impls::<impl enc::Encode for &'a T>"],"B":["std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroI16","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::cell::RefCell","std::marker::PhantomData","std::rc::Rc","std::collections::HashMap","std::borrow::Cow","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::option::Option","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::ops::RangeInclusive","std::num::NonZeroI32","std::num::NonZeroU128","std::num::NonZeroU8","std::num::NonZeroU16","std::time::SystemTime","std::num::NonZeroI128","std::collections::BinaryHeap","std::collections::BTreeMap","std::num::NonZeroI64","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::num::NonZeroIsize","std::collections::Bound","enc::impls::<impl enc::Encode for &'a T>","std::string::String","std::collections::HashSet","std::boxed::Box","std::time::Duration","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::vec::Vec","std::cell::Cell","std::result::Result","std::sync::Mutex","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::sync::RwLock","std::ffi::CString","std::ops::Range","std::sync::Arc"],"C":["std::collections::HashMap","std::net::SocketAddrV4","std::num::NonZeroU16","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroI32","std::ops::Range","std::collections::HashSet","std::string::String","std::sync::atomic::AtomicU16","std::result::Result","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::cell::RefCell","std::ffi::CString","std::num::NonZeroU8","std::collections::BTreeSet","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::cell::Cell","std::num::NonZeroUsize","std::collections::BinaryHeap","std::borrow::Cow","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::vec::Vec","std::num::NonZeroI64","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::sync::Arc","std::collections::BTreeMap","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::num::NonZeroI16","std::ops::RangeInclusive","std::net::SocketAddr","std::time::SystemTime","std::sync::atomic::AtomicBool","std::collections::Bound","std::num::NonZeroU64","std::time::Duration","std::sync::Mutex","std::sync::RwLock","std::num::NonZeroU32","std::marker::PhantomData","std::net::SocketAddrV6","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroIsize"],"D":["std::result::Result","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::time::SystemTime","std::sync::Mutex","std::cell::Cell","std::borrow::Cow","std::num::NonZeroU128","std::num::NonZeroUsize","std::option::Option","std::sync::atomic::AtomicI64","std::collections::HashMap","std::sync::RwLock","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::sync::Arc","std::collections::VecDeque","std::collections::BinaryHeap","enc::impls::<impl enc::Encode for &'a T>","std::collections::BTreeMap","std::collections::HashSet","std::collections::Bound","std::net::Ipv4Addr","std::num::NonZeroU64","std::time::Duration","std::boxed::Box","std::net::SocketAddr","std::ffi::CString","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::cell::RefCell","std::vec::Vec","std::net::Ipv6Addr","std::num::NonZeroU8","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::string::String","std::rc::Rc","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::path::PathBuf","std::ops::Range","std::sync::atomic::AtomicU8","std::net::IpAddr","std::num::NonZeroI128","std::num::NonZeroU16"],"E":["std::num::NonZeroU16","std::collections::VecDeque","std::result::Result","std::collections::BTreeSet","std::num::NonZeroI32","std::collections::BinaryHeap","std::time::Duration","std::sync::atomic::AtomicU32","std::cell::RefCell","std::vec::Vec","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::net::SocketAddrV4","std::string::String","std::option::Option","std::collections::BTreeMap","std::time::SystemTime","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::path::PathBuf","std::num::NonZeroI8","std::num::NonZeroI16","std::collections::Bound","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::rc::Rc","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::num::NonZeroI128","std::ffi::CString","std::num::NonZeroU128","std::sync::Mutex","std::collections::HashMap","std::cell::Cell","std::num::NonZeroUsize","std::borrow::Cow","std::net::Ipv4Addr","std::ops::Range","std::boxed::Box","std::collections::HashSet","std::num::NonZeroU32","std::num::NonZeroI64","std::sync::atomic::AtomicBool","enc::impls::<impl enc::Encode for &'a T>","std::net::SocketAddrV6","std::sync::RwLock","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::sync::Arc","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::net::IpAddr"],"_E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::StderrLock<'_>","std::io::Stdout","std::sys::unix::stdio::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Stderr","std::os::unix::net::UnixStream","std::io::LineWriter<W>","std::fs::File","&std::io::Stdout","std::io::Cursor<&mut [u8]>","&std::fs::File","&'a std::os::unix::net::UnixStream","std::io::stdio::StdoutRaw","&std::io::Sink","std::io::Cursor<[u8; N]>","std::net::TcpStream","&std::io::Stderr","std::io::impls::<impl std::io::Write for &mut W>","std::io::BufWriter<W>","std::process::ChildStdin","std::io::Sink","std::vec::Vec<u8, A>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::boxed::Box<W>","std::io::stdio::StderrRaw","&std::net::TcpStream","std::collections::VecDeque<u8, A>","std::io::StdoutLock<'_>","std::sys::unix::stdio::Stderr","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::BorrowedCursor<'a>","&std::process::ChildStdin"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::sync::Arc","std::ffi::CString","std::num::NonZeroI16","std::net::Ipv4Addr","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroU32","std::num::NonZeroI128","std::string::String","std::rc::Rc","std::num::NonZeroUsize","std::net::IpAddr","std::cell::RefCell","std::num::NonZeroU16","std::num::NonZeroI8","std::time::Duration","std::path::PathBuf","std::num::NonZeroU8","std::cell::Cell"],"V":["std::borrow::Cow","std::ops::RangeInclusive","std::num::NonZeroU128","std::cell::Cell","std::collections::Bound","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::num::NonZeroUsize","std::net::SocketAddrV4","std::collections::HashSet","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::num::NonZeroU16","std::net::IpAddr","std::collections::BinaryHeap","std::string::String","std::ffi::CString","std::sync::RwLock","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::sync::Arc","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::cell::RefCell","std::net::Ipv4Addr","std::sync::Mutex","std::boxed::Box","std::num::NonZeroI8","std::time::Duration","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::rc::Rc","std::net::SocketAddrV6","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::num::NonZeroU64","std::marker::PhantomData","std::path::PathBuf","std::option::Option","std::time::SystemTime","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::num::NonZeroI64","std::num::NonZeroI32","std::ops::Range","std::vec::Vec","std::result::Result"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroI64","std::marker::PhantomData","std::num::NonZeroI128","std::num::NonZeroUsize","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroU128","std::string::String","std::path::PathBuf","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroU16","std::time::SystemTime","std::option::Option","std::num::NonZeroI32","std::num::NonZeroIsize","std::net::IpAddr","std::cell::RefCell","std::cell::Cell"]},"std::collections::BinaryHeap":{"T":["std::cell::RefCell","std::net::IpAddr","std::path::PathBuf","std::num::NonZeroIsize","std::num::NonZeroI128","std::num::NonZeroU64","std::num::NonZeroI16","std::num::NonZeroU128","std::option::Option","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroI8","std::net::Ipv4Addr","std::time::Duration","std::rc::Rc","std::net::SocketAddr","std::num::NonZeroU32","std::cell::Cell","std::num::NonZeroI64","std::net::Ipv6Addr"]},"std::collections::Bound":{"T":["std::sync::RwLock","std::cell::Cell","std::num::NonZeroU32","std::net::SocketAddrV6","std::net::SocketAddr","std::collections::HashMap","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::ops::RangeInclusive","std::collections::VecDeque","std::collections::Bound","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::num::NonZeroI16","std::collections::HashSet","std::sync::Mutex","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::option::Option","std::collections::BTreeMap","std::result::Result","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::num::NonZeroUsize","std::path::PathBuf","std::net::IpAddr","std::sync::atomic::AtomicU8","std::rc::Rc","std::sync::Arc","std::num::NonZeroI8","std::ffi::CString","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::boxed::Box","std::cell::RefCell","std::string::String","std::num::NonZeroI32","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::ops::Range","std::net::Ipv4Addr","std::net::Ipv6Addr","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroI64","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::vec::Vec","std::num::NonZeroIsize","std::time::SystemTime"]},"std::collections::HashMap":{"K":["std::net::SocketAddr","std::num::NonZeroU32","std::marker::PhantomData","std::num::NonZeroI128","std::string::String","std::path::PathBuf","std::num::NonZeroU8","std::num::NonZeroU64","std::num::NonZeroUsize","std::net::SocketAddrV6","std::net::IpAddr","std::net::SocketAddrV4","std::num::NonZeroI8","std::net::Ipv4Addr","std::time::Duration"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::net::Ipv6Addr","std::num::NonZeroU8","std::collections::BTreeSet","std::collections::HashMap","std::collections::Bound","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::boxed::Box","std::net::SocketAddrV6","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::cell::Cell","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::net::Ipv4Addr","std::num::NonZeroU32","std::ops::RangeInclusive","std::sync::Arc","std::num::NonZeroIsize","std::num::NonZeroU16","std::marker::PhantomData","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::string::String","std::rc::Rc","std::num::NonZeroU64","std::ffi::CString","std::ops::Range","std::sync::Mutex","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::collections::HashSet","std::sync::RwLock","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::net::IpAddr","std::path::PathBuf","std::net::SocketAddr","std::cell::RefCell","std::result::Result","std::num::NonZeroU128","std::vec::Vec","std::borrow::Cow","std::collections::VecDeque","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::time::Duration"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::rc::Rc","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroU128","std::path::PathBuf","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroI64","std::ffi::CString","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroI8","std::string::String","std::time::Duration","std::net::SocketAddrV4"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::num::NonZeroU16","std::num::NonZeroU32","std::time::Duration","std::sync::RwLock","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::num::NonZeroI128","std::ops::Range","std::path::PathBuf","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::collections::HashMap","std::sync::atomic::AtomicI64","std::vec::Vec","std::borrow::Cow","std::sync::atomic::AtomicU32","std::net::IpAddr","std::result::Result","std::net::Ipv6Addr","std::ops::RangeInclusive","std::num::NonZeroIsize","std::net::Ipv4Addr","std::sync::Arc","std::cell::Cell","std::option::Option","std::num::NonZeroI64","std::collections::HashSet","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::cell::RefCell","std::net::SocketAddrV6","std::boxed::Box","std::num::NonZeroUsize","std::rc::Rc","std::num::NonZeroU128","std::collections::VecDeque","std::num::NonZeroU64","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::string::String","std::marker::PhantomData","std::collections::Bound","std::ffi::CString","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::num::NonZeroI16","std::time::SystemTime","std::sync::atomic::AtomicUsize"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::BTreeSet","std::rc::Rc","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::option::Option","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::collections::HashMap","std::vec::Vec","std::cell::Cell","std::string::String","std::collections::HashSet","std::collections::BTreeMap","std::num::NonZeroI64","std::net::IpAddr","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::net::SocketAddrV4","std::net::Ipv4Addr","std::time::Duration","std::cell::RefCell","std::ffi::CString","std::sync::RwLock","std::result::Result","std::collections::Bound","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroIsize","std::num::NonZeroU128","std::sync::Mutex","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::sync::Arc","std::path::PathBuf","std::num::NonZeroI32","std::num::NonZeroU64","std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroI16","std::boxed::Box","std::sync::atomic::AtomicI8","std::ops::Range","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::collections::BinaryHeap","std::borrow::Cow"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroI64","std::sync::Mutex","std::time::Duration","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::num::NonZeroI16","std::net::SocketAddr","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::collections::HashMap","std::collections::BinaryHeap","std::result::Result","std::ops::Range","std::num::NonZeroI8","std::net::Ipv6Addr","std::option::Option","std::net::SocketAddrV6","std::vec::Vec","std::marker::PhantomData","std::num::NonZeroU32","std::num::NonZeroIsize","std::borrow::Cow","std::net::IpAddr","std::rc::Rc","std::num::NonZeroU16","std::net::Ipv4Addr","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::sync::atomic::AtomicI32","std::ffi::CString","std::path::PathBuf","std::num::NonZeroU8","std::collections::Bound","std::sync::Arc","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::string::String","std::cell::Cell","std::collections::BTreeMap","std::collections::BTreeSet","std::collections::HashSet","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::time::SystemTime","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::boxed::Box","std::ops::RangeInclusive","std::num::NonZeroU64"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroIsize","std::sync::RwLock","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::time::Duration","std::num::NonZeroU8","std::collections::BinaryHeap","std::time::SystemTime","std::sync::atomic::AtomicU32","std::result::Result","std::sync::Arc","std::num::NonZeroU16","std::vec::Vec","std::string::String","std::cell::Cell","std::num::NonZeroU32","std::net::SocketAddrV4","std::collections::BTreeSet","std::num::NonZeroI8","std::num::NonZeroU128","std::net::SocketAddr","std::option::Option","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::collections::HashMap","std::sync::atomic::AtomicI64","std::collections::HashSet","std::collections::Bound","std::marker::PhantomData","std::num::NonZeroI16","std::rc::Rc","std::sync::atomic::AtomicU8","std::boxed::Box","std::sync::atomic::AtomicBool","std::net::IpAddr","std::num::NonZeroUsize","std::net::SocketAddrV6","std::cell::RefCell","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::ops::Range","std::path::PathBuf","std::ffi::CString","std::net::Ipv4Addr","std::num::NonZeroI64","std::num::NonZeroI32","std::collections::VecDeque","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::borrow::Cow"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C, D, E)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E)>::encode(p0, p1);
+<(A, B, C, D, E)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F)>::encode":{"A":["std::marker::Sized","enc::Encode"],"B":["enc::Encode","std::marker::Sized"],"C":["enc::Encode","std::marker::Sized"],"D":["enc::Encode","std::marker::Sized"],"E":["std::marker::Sized","enc::Encode"],"F":["enc::Encode","std::marker::Sized"],"_E":["enc::Encoder","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["de::BorrowDecode","enc::Encode","std::marker::Sized","std::cmp::Ord","de::Decode"],"V":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["enc::Encode","std::cmp::Ord","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode","std::hash::Hash"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::hash::Hash","enc::Encode","std::cmp::Eq","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","config::Fixint","config::LittleEndian","config::Limit","config::Varint","std::clone::impls::<impl std::clone::Clone for *const T>","config::BigEndian","config::NoLimit"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SliceWriter","enc::write::SizeWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F)>::encode":{"A":["std::sync::RwLock","std::rc::Rc","std::collections::BinaryHeap","std::borrow::Cow","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::cell::RefCell","std::option::Option","std::ops::RangeInclusive","std::num::NonZeroI32","std::num::NonZeroI64","std::sync::Mutex","std::cell::Cell","std::collections::HashMap","std::time::Duration","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::sync::Arc","std::num::NonZeroU16","std::string::String","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::num::NonZeroU64","std::num::NonZeroIsize","std::collections::VecDeque","std::collections::BTreeSet","std::num::NonZeroUsize","std::marker::PhantomData","std::collections::HashSet","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::ops::Range","std::net::Ipv6Addr","std::result::Result","std::collections::BTreeMap","std::vec::Vec","std::net::SocketAddrV4","std::ffi::CString","std::collections::Bound","std::path::PathBuf","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::net::SocketAddr","std::sync::atomic::AtomicI64","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::boxed::Box","std::sync::atomic::AtomicI8"],"B":["std::path::PathBuf","std::time::SystemTime","std::net::Ipv4Addr","std::result::Result","std::sync::Arc","std::net::Ipv6Addr","std::net::SocketAddr","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::time::Duration","std::rc::Rc","std::num::NonZeroI128","std::sync::Mutex","std::vec::Vec","std::collections::HashMap","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::collections::Bound","std::num::NonZeroUsize","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::cell::RefCell","std::ffi::CString","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::collections::VecDeque","std::num::NonZeroU8","std::borrow::Cow","std::collections::BTreeMap","std::boxed::Box","enc::impls::<impl enc::Encode for &'a T>","std::collections::HashSet","std::option::Option","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::sync::RwLock","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroU64","std::string::String","std::num::NonZeroIsize","std::net::SocketAddrV4","std::cell::Cell","std::num::NonZeroI16","std::ops::Range"],"C":["std::num::NonZeroI32","std::collections::BinaryHeap","enc::impls::<impl enc::Encode for &'a T>","std::ffi::CString","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::sync::atomic::AtomicI32","std::string::String","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::net::Ipv6Addr","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::result::Result","std::num::NonZeroI16","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::vec::Vec","std::time::SystemTime","std::collections::VecDeque","std::collections::HashMap","std::num::NonZeroI64","std::num::NonZeroIsize","std::num::NonZeroI128","std::num::NonZeroU32","std::num::NonZeroU64","std::net::IpAddr","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::boxed::Box","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::rc::Rc","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::num::NonZeroU128","std::sync::RwLock","std::borrow::Cow","std::path::PathBuf","std::marker::PhantomData","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::ops::Range","std::time::Duration","std::collections::HashSet","std::collections::Bound","std::net::SocketAddr","std::sync::Arc","std::option::Option","std::cell::RefCell","std::cell::Cell"],"D":["std::borrow::Cow","std::collections::VecDeque","std::num::NonZeroU8","std::rc::Rc","std::collections::BTreeMap","std::net::SocketAddr","std::collections::HashMap","std::num::NonZeroI8","std::num::NonZeroU16","std::num::NonZeroUsize","std::boxed::Box","std::sync::atomic::AtomicBool","std::option::Option","std::collections::BTreeSet","std::ffi::CString","std::num::NonZeroU64","std::path::PathBuf","std::ops::RangeInclusive","std::net::SocketAddrV6","std::collections::HashSet","std::sync::atomic::AtomicI32","std::net::IpAddr","std::sync::atomic::AtomicUsize","enc::impls::<impl enc::Encode for &'a T>","std::time::Duration","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::collections::Bound","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::collections::BinaryHeap","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::net::SocketAddrV4","std::num::NonZeroI64","std::sync::Arc","std::net::Ipv6Addr","std::marker::PhantomData","std::num::NonZeroI128","std::cell::Cell","std::sync::atomic::AtomicI8","std::sync::RwLock","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::vec::Vec","std::ops::Range","std::time::SystemTime","std::sync::atomic::AtomicI16","std::string::String","std::cell::RefCell","std::result::Result","std::sync::Mutex","std::net::Ipv4Addr","std::num::NonZeroU128"],"E":["std::num::NonZeroI16","enc::impls::<impl enc::Encode for &'a T>","std::collections::BTreeMap","std::collections::BinaryHeap","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::result::Result","std::string::String","std::net::Ipv6Addr","std::net::SocketAddrV4","std::boxed::Box","std::sync::atomic::AtomicI16","std::option::Option","std::net::Ipv4Addr","std::ops::RangeInclusive","std::sync::Mutex","std::collections::BTreeSet","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::rc::Rc","std::sync::atomic::AtomicI32","std::time::SystemTime","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::time::Duration","std::vec::Vec","std::sync::Arc","std::cell::Cell","std::marker::PhantomData","std::borrow::Cow","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroU128","std::ops::Range","std::ffi::CString","std::collections::HashMap","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::sync::atomic::AtomicU16","std::sync::RwLock","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::collections::HashSet","std::num::NonZeroI32","std::num::NonZeroUsize","std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::num::NonZeroIsize","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::collections::Bound"],"F":["std::num::NonZeroI8","std::option::Option","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::sync::RwLock","std::collections::Bound","std::result::Result","std::cell::RefCell","std::net::SocketAddr","std::num::NonZeroI128","std::cell::Cell","std::num::NonZeroUsize","std::net::Ipv6Addr","std::ops::RangeInclusive","std::collections::HashSet","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::num::NonZeroU8","std::num::NonZeroI64","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","enc::impls::<impl enc::Encode for &'a T>","std::vec::Vec","std::num::NonZeroU128","std::path::PathBuf","std::sync::Mutex","std::borrow::Cow","std::ffi::CString","std::num::NonZeroIsize","std::sync::Arc","std::time::SystemTime","std::sync::atomic::AtomicU16","std::time::Duration","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::rc::Rc","std::collections::BTreeSet","std::collections::HashMap","std::ops::Range","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::marker::PhantomData","std::num::NonZeroU64","std::string::String","std::collections::BinaryHeap","std::boxed::Box","std::num::NonZeroU16","std::net::IpAddr","std::net::Ipv4Addr"],"_E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<[u8; N]>","std::io::LineWriter<W>","std::io::impls::<impl std::io::Write for &mut W>","std::io::BufWriter<W>","&std::io::Sink","std::boxed::Box<W>","std::io::Cursor<std::boxed::Box<[u8], A>>","&'a std::os::unix::net::UnixStream","std::process::ChildStdin","std::sys::unix::stdio::Stdout","std::io::stdio::StderrRaw","std::collections::VecDeque<u8, A>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::stdio::StdoutRaw","std::os::unix::net::UnixStream","&std::io::Stderr","std::io::StderrLock<'_>","std::net::TcpStream","std::io::StdoutLock<'_>","std::vec::Vec<u8, A>","std::fs::File","std::io::BorrowedCursor<'a>","std::io::Stderr","&std::fs::File","std::io::Stdout","&std::io::Stdout","&std::process::ChildStdin","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stderr","&std::net::TcpStream","std::io::Sink"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::path::Path","std::ffi::CStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroI8","std::string::String","std::num::NonZeroU32","std::num::NonZeroI64","std::net::SocketAddrV6","std::num::NonZeroU16","std::marker::PhantomData","std::time::Duration","std::net::Ipv6Addr","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroI128","std::sync::Arc","std::time::SystemTime","std::num::NonZeroI16","std::num::NonZeroUsize","std::path::PathBuf","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroU64","std::num::NonZeroI32","std::option::Option","std::cell::RefCell"],"V":["std::sync::Mutex","std::net::IpAddr","std::collections::BTreeMap","std::string::String","std::collections::HashSet","std::sync::atomic::AtomicBool","std::ops::Range","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroU128","std::time::Duration","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::rc::Rc","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::borrow::Cow","std::cell::Cell","std::collections::Bound","std::collections::HashMap","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::ffi::CString","std::sync::atomic::AtomicU32","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::collections::VecDeque","std::num::NonZeroI8","std::num::NonZeroI128","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::num::NonZeroI16","std::collections::BTreeSet","std::sync::Arc","std::collections::BinaryHeap","std::net::SocketAddr","std::option::Option","std::cell::RefCell","std::num::NonZeroU16","std::net::Ipv6Addr","std::sync::RwLock","std::num::NonZeroU64","std::boxed::Box","std::num::NonZeroU8","std::vec::Vec","std::result::Result"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI64","std::num::NonZeroI32","std::net::Ipv4Addr","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroI128","std::sync::Arc","std::num::NonZeroU64","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroU128","std::marker::PhantomData","std::num::NonZeroI16","std::num::NonZeroU32"]},"std::collections::BinaryHeap":{"T":["std::time::Duration","std::option::Option","std::net::Ipv6Addr","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroU64","std::cell::RefCell","std::net::IpAddr","std::rc::Rc","std::num::NonZeroU16","std::net::SocketAddrV4","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroU32","std::time::SystemTime","std::path::PathBuf","std::marker::PhantomData","std::num::NonZeroIsize","std::cell::Cell"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::net::Ipv4Addr","std::num::NonZeroU128","std::cell::RefCell","std::collections::Bound","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::result::Result","std::num::NonZeroU64","std::net::IpAddr","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroU32","std::net::SocketAddrV6","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::option::Option","std::vec::Vec","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::borrow::Cow","std::num::NonZeroI128","std::sync::Arc","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::sync::RwLock","std::collections::HashSet","std::boxed::Box","std::ops::Range","std::cell::Cell","std::collections::BinaryHeap","std::collections::BTreeMap","std::num::NonZeroI64","std::time::Duration","std::sync::Mutex","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::string::String","std::collections::VecDeque","std::time::SystemTime","std::num::NonZeroI8","std::net::SocketAddrV4","std::rc::Rc","std::path::PathBuf","std::net::Ipv6Addr","std::collections::HashMap","std::num::NonZeroI16"]},"std::collections::HashMap":{"K":["std::net::Ipv4Addr","std::net::SocketAddr","std::rc::Rc","std::num::NonZeroU128","std::marker::PhantomData","std::num::NonZeroI16","std::time::SystemTime","std::num::NonZeroI128","std::sync::Arc","std::net::IpAddr","std::num::NonZeroUsize","std::collections::Bound","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroU32","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroI64","std::num::NonZeroIsize","std::num::NonZeroU16"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::cell::Cell","std::rc::Rc","std::collections::VecDeque","std::num::NonZeroU8","std::collections::BTreeSet","std::num::NonZeroI16","std::sync::RwLock","std::borrow::Cow","std::sync::atomic::AtomicU64","std::time::SystemTime","std::num::NonZeroI8","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::cell::RefCell","std::num::NonZeroU32","std::num::NonZeroU128","std::collections::Bound","std::net::Ipv4Addr","std::path::PathBuf","std::boxed::Box","std::ops::RangeInclusive","std::num::NonZeroIsize","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroU16","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::net::IpAddr","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::vec::Vec","std::sync::atomic::AtomicBool","std::option::Option","std::net::Ipv6Addr","std::ops::Range","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::time::Duration","std::sync::Arc","std::collections::BTreeMap","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroI128","std::num::NonZeroI64","std::collections::HashSet","std::result::Result","std::string::String"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU8","std::num::NonZeroI8","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroU32","std::time::Duration","std::marker::PhantomData","std::net::SocketAddrV6","std::net::Ipv6Addr","std::num::NonZeroI16","std::rc::Rc","std::net::SocketAddr","std::option::Option","std::num::NonZeroUsize","std::num::NonZeroU16"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU16","std::collections::HashMap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::ffi::CString","std::result::Result","std::collections::BTreeSet","std::num::NonZeroU8","std::collections::BinaryHeap","std::time::SystemTime","std::sync::atomic::AtomicU64","std::rc::Rc","std::sync::Mutex","std::collections::VecDeque","std::sync::Arc","std::num::NonZeroI128","std::collections::BTreeMap","std::ops::Range","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::sync::RwLock","std::num::NonZeroI8","std::num::NonZeroU64","std::collections::Bound","std::net::SocketAddr","std::net::Ipv4Addr","std::net::IpAddr","std::sync::atomic::AtomicI16","std::borrow::Cow","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::cell::Cell","std::time::Duration","std::boxed::Box","std::string::String","std::option::Option","std::collections::HashSet","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::cell::RefCell","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::net::SocketAddrV4","std::vec::Vec","std::num::NonZeroI64"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::IpAddr","std::num::NonZeroI128","std::num::NonZeroI16","std::sync::RwLock","std::option::Option","std::borrow::Cow","std::net::SocketAddrV4","std::collections::BTreeMap","std::net::SocketAddrV6","std::num::NonZeroU32","std::cell::Cell","std::sync::atomic::AtomicU32","std::ffi::CString","std::ops::Range","std::marker::PhantomData","std::path::PathBuf","std::time::Duration","std::sync::atomic::AtomicI32","std::boxed::Box","std::vec::Vec","std::string::String","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroU64","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::collections::HashSet","std::ops::RangeInclusive","std::result::Result","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::sync::Mutex","std::num::NonZeroU128","std::cell::RefCell","std::num::NonZeroU8","std::num::NonZeroUsize","std::rc::Rc","std::collections::Bound","std::num::NonZeroI64","std::num::NonZeroU16","std::num::NonZeroIsize","std::collections::BinaryHeap","std::sync::Arc","std::time::SystemTime","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroUsize","std::net::SocketAddrV6","std::net::Ipv4Addr","std::num::NonZeroI32","std::collections::Bound","std::num::NonZeroU32","std::cell::Cell","std::collections::BinaryHeap","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::collections::HashMap","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::option::Option","std::num::NonZeroU8","std::sync::Arc","std::collections::HashSet","std::num::NonZeroU16","std::sync::RwLock","std::net::SocketAddrV4","std::string::String","std::collections::VecDeque","std::result::Result","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::borrow::Cow","std::num::NonZeroI16","std::collections::BTreeSet","std::boxed::Box","std::time::Duration","std::cell::RefCell","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::vec::Vec","std::ops::RangeInclusive","std::net::IpAddr","std::sync::atomic::AtomicI64","std::path::PathBuf","std::time::SystemTime","std::net::Ipv6Addr","std::ops::Range","std::rc::Rc","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::ffi::CString","std::sync::atomic::AtomicU32","std::sync::Mutex","std::sync::atomic::AtomicI32","std::net::SocketAddr"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::time::SystemTime","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::rc::Rc","std::ffi::CString","std::net::IpAddr","std::time::Duration","std::collections::VecDeque","std::collections::BinaryHeap","std::result::Result","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::option::Option","std::num::NonZeroI16","std::net::Ipv4Addr","std::collections::BTreeSet","std::net::SocketAddrV4","std::ops::Range","std::sync::Mutex","std::sync::Arc","std::boxed::Box","std::borrow::Cow","std::num::NonZeroU64","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::collections::Bound","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::cell::Cell","std::net::SocketAddr","std::string::String","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::num::NonZeroI8","std::collections::HashMap","std::cell::RefCell","std::net::SocketAddrV6","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::vec::Vec","std::path::PathBuf","std::num::NonZeroU16","std::num::NonZeroUsize","std::sync::RwLock"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C, D, E, F)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F)>::encode(p0, p1);
+<(A, B, C, D, E, F)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"],"I":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G)>::encode":{"A":["enc::Encode","std::marker::Sized"],"B":["std::marker::Sized","enc::Encode"],"C":["enc::Encode","std::marker::Sized"],"D":["std::marker::Sized","enc::Encode"],"E":["enc::Encode","std::marker::Sized"],"F":["enc::Encode","std::marker::Sized"],"G":["std::marker::Sized","enc::Encode"],"_E":["std::marker::Sized","enc::Encoder"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"],"V":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","de::Decode","std::marker::Sized","std::cmp::Eq","std::hash::Hash","enc::Encode"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::hash::Hash","enc::Encode","de::BorrowDecode","std::cmp::Eq","de::Decode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for &mut T>","config::NoLimit","config::Configuration","config::Limit","config::LittleEndian","config::BigEndian","config::Varint","config::Fixint"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SizeWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G)>::encode":{"A":["std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::net::IpAddr","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::ops::Range","std::collections::HashSet","std::num::NonZeroU64","enc::impls::<impl enc::Encode for &'a T>","std::net::SocketAddr","std::borrow::Cow","std::collections::HashMap","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::vec::Vec","std::sync::atomic::AtomicI64","std::sync::RwLock","std::cell::RefCell","std::collections::Bound","std::time::SystemTime","std::num::NonZeroI128","std::net::Ipv6Addr","std::string::String","std::sync::atomic::AtomicU16","std::option::Option","std::rc::Rc","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::net::SocketAddrV6","std::net::Ipv4Addr","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::path::PathBuf","std::result::Result","std::num::NonZeroI32","std::collections::BTreeMap","std::num::NonZeroU128","std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroI16","std::time::Duration","std::sync::atomic::AtomicU8","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::boxed::Box","std::num::NonZeroI64","std::ffi::CString","std::collections::BinaryHeap"],"B":["std::vec::Vec","std::num::NonZeroU128","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::collections::HashSet","std::marker::PhantomData","std::sync::Arc","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::collections::Bound","enc::impls::<impl enc::Encode for &'a T>","std::cell::Cell","std::sync::RwLock","std::num::NonZeroIsize","std::sync::Mutex","std::option::Option","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::path::PathBuf","std::net::Ipv6Addr","std::ops::Range","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::rc::Rc","std::num::NonZeroI64","std::cell::RefCell","std::collections::BinaryHeap","std::num::NonZeroU8","std::collections::HashMap","std::num::NonZeroI8","std::ffi::CString","std::time::SystemTime","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::boxed::Box","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::time::Duration","std::borrow::Cow","std::num::NonZeroU16","std::net::IpAddr","std::result::Result","std::num::NonZeroUsize","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::num::NonZeroU32","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::string::String"],"C":["std::sync::Mutex","std::option::Option","std::num::NonZeroI128","std::borrow::Cow","std::net::SocketAddrV4","std::num::NonZeroU64","std::net::SocketAddr","std::ffi::CString","std::num::NonZeroI32","std::num::NonZeroU8","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::collections::VecDeque","std::collections::HashMap","std::num::NonZeroIsize","std::collections::BTreeMap","std::result::Result","std::collections::BTreeSet","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::rc::Rc","std::boxed::Box","std::num::NonZeroI64","std::num::NonZeroU16","std::path::PathBuf","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::ops::Range","enc::impls::<impl enc::Encode for &'a T>","std::net::IpAddr","std::cell::Cell","std::time::SystemTime","std::sync::RwLock","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::collections::Bound","std::sync::atomic::AtomicI64","std::sync::Arc","std::string::String","std::sync::atomic::AtomicU16","std::collections::HashSet","std::net::Ipv6Addr","std::marker::PhantomData","std::num::NonZeroI8","std::num::NonZeroUsize","std::vec::Vec","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroU128","std::time::Duration"],"D":["std::num::NonZeroI8","std::collections::HashMap","std::boxed::Box","std::option::Option","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroI128","std::num::NonZeroUsize","std::rc::Rc","std::sync::Mutex","std::collections::Bound","std::net::IpAddr","std::borrow::Cow","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::cell::Cell","std::num::NonZeroU128","std::marker::PhantomData","std::num::NonZeroI16","std::num::NonZeroIsize","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::string::String","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::collections::BTreeMap","std::ops::Range","std::net::SocketAddrV4","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::ffi::CString","std::vec::Vec","std::time::SystemTime","std::cell::RefCell","std::result::Result","std::sync::RwLock","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::num::NonZeroI64","std::time::Duration","std::sync::atomic::AtomicU64","std::path::PathBuf","enc::impls::<impl enc::Encode for &'a T>","std::net::SocketAddrV6","std::num::NonZeroU64"],"E":["std::num::NonZeroI8","std::sync::RwLock","std::boxed::Box","std::net::Ipv6Addr","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::ops::Range","std::collections::HashMap","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::borrow::Cow","std::collections::BinaryHeap","std::net::SocketAddr","std::time::Duration","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::num::NonZeroUsize","std::cell::Cell","std::net::SocketAddrV6","std::collections::Bound","std::sync::atomic::AtomicU16","std::cell::RefCell","std::num::NonZeroI128","std::collections::BTreeMap","std::net::SocketAddrV4","std::collections::VecDeque","std::rc::Rc","std::sync::Arc","std::num::NonZeroU16","std::path::PathBuf","std::result::Result","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::num::NonZeroU32","std::num::NonZeroI32","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::sync::Mutex","std::string::String","std::ops::RangeInclusive","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::ffi::CString","std::num::NonZeroU64","std::option::Option","std::num::NonZeroU128","std::collections::HashSet","std::vec::Vec","std::sync::atomic::AtomicU64","std::num::NonZeroI16"],"F":["std::collections::BinaryHeap","std::collections::HashSet","std::collections::BTreeMap","std::ops::Range","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::collections::Bound","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::result::Result","std::sync::Arc","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::time::Duration","std::num::NonZeroU32","std::net::IpAddr","std::sync::RwLock","std::rc::Rc","std::cell::Cell","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::num::NonZeroUsize","std::vec::Vec","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::boxed::Box","std::net::SocketAddr","std::num::NonZeroU64","std::sync::Mutex","enc::impls::<impl enc::Encode for &'a T>","std::net::Ipv4Addr","std::string::String","std::ffi::CString","std::collections::VecDeque","std::cell::RefCell","std::borrow::Cow","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::option::Option","std::collections::HashMap","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::path::PathBuf","std::num::NonZeroU16","std::ops::RangeInclusive"],"G":["std::net::SocketAddr","std::num::NonZeroUsize","std::marker::PhantomData","std::collections::BinaryHeap","std::borrow::Cow","std::num::NonZeroI32","std::option::Option","std::rc::Rc","std::net::IpAddr","std::result::Result","std::sync::atomic::AtomicI16","std::vec::Vec","std::collections::BTreeMap","std::net::Ipv4Addr","std::num::NonZeroU64","std::net::SocketAddrV6","std::collections::Bound","std::collections::BTreeSet","std::num::NonZeroU32","std::ops::Range","std::collections::HashMap","std::collections::VecDeque","std::boxed::Box","std::sync::atomic::AtomicI8","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::time::Duration","std::sync::Arc","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::sync::RwLock","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::string::String","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::num::NonZeroIsize","std::time::SystemTime","std::num::NonZeroI128","std::cell::RefCell","enc::impls::<impl enc::Encode for &'a T>","std::ops::RangeInclusive","std::collections::HashSet","std::ffi::CString","std::cell::Cell","std::sync::Mutex","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::num::NonZeroI16"],"_E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Cursor<[u8; N]>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::StderrLock<'_>","std::io::Cursor<&mut [u8]>","std::boxed::Box<W>","std::io::Stdout","std::vec::Vec<u8, A>","std::io::LineWriter<W>","std::io::stdio::StdoutRaw","std::io::BorrowedCursor<'a>","std::io::StdoutLock<'_>","&std::io::Stderr","&std::fs::File","std::io::stdio::StderrRaw","std::sys::unix::stdio::Stderr","std::process::ChildStdin","&std::process::ChildStdin","std::io::impls::<impl std::io::Write for &mut W>","std::net::TcpStream","std::collections::VecDeque<u8, A>","std::io::BufWriter<W>","std::io::Sink","std::sys::unix::stdio::Stdout","&std::io::Stdout","std::os::unix::net::UnixStream","&std::io::Sink","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Stderr","&std::net::TcpStream","&'a std::os::unix::net::UnixStream","std::io::Cursor<std::boxed::Box<[u8], A>>","std::fs::File"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI128","std::num::NonZeroIsize","std::sync::Arc","std::num::NonZeroU16","std::cell::RefCell","std::option::Option","std::num::NonZeroU32","std::num::NonZeroI16","std::time::SystemTime","std::num::NonZeroI8","std::path::PathBuf","std::num::NonZeroUsize","std::net::SocketAddrV4","std::ffi::CString","std::net::SocketAddr","std::net::IpAddr","std::num::NonZeroI64","std::net::SocketAddrV6","std::marker::PhantomData","std::rc::Rc","std::string::String"],"V":["std::collections::HashMap","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::net::Ipv6Addr","std::collections::BTreeSet","std::ffi::CString","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::string::String","std::time::SystemTime","std::sync::Arc","std::collections::VecDeque","std::result::Result","std::net::SocketAddrV4","std::net::Ipv4Addr","std::sync::Mutex","std::num::NonZeroU8","std::collections::BinaryHeap","std::ops::Range","std::boxed::Box","std::num::NonZeroUsize","std::vec::Vec","std::time::Duration","std::collections::HashSet","std::option::Option","std::sync::atomic::AtomicBool","std::cell::Cell","std::marker::PhantomData","std::net::SocketAddrV6","std::ops::RangeInclusive","std::rc::Rc","std::net::IpAddr","std::num::NonZeroIsize","std::cell::RefCell","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::borrow::Cow","std::collections::Bound","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::RwLock","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::num::NonZeroU128"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::string::String","std::num::NonZeroI128","std::num::NonZeroI64","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroI32","std::sync::Arc","std::net::SocketAddr","std::ffi::CString","std::num::NonZeroIsize","std::path::PathBuf","std::num::NonZeroU32","std::num::NonZeroU16","std::num::NonZeroU128","std::option::Option","std::time::Duration","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroI16","std::net::SocketAddrV6"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI32","std::ffi::CString","std::sync::Arc","std::num::NonZeroI64","std::option::Option","std::rc::Rc","std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroU64","std::cell::RefCell","std::num::NonZeroI8","std::net::SocketAddrV6","std::num::NonZeroU8","std::net::SocketAddr","std::time::SystemTime","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroU128","std::time::Duration","std::num::NonZeroIsize","std::string::String","std::cell::Cell","std::path::PathBuf"]},"std::collections::Bound":{"T":["std::net::SocketAddr","std::num::NonZeroU64","std::sync::Mutex","std::sync::RwLock","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::path::PathBuf","std::net::IpAddr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::result::Result","std::string::String","std::collections::VecDeque","std::ops::Range","std::num::NonZeroUsize","std::num::NonZeroI128","std::rc::Rc","std::num::NonZeroI16","std::num::NonZeroIsize","std::cell::Cell","std::marker::PhantomData","std::time::SystemTime","std::num::NonZeroI8","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::time::Duration","std::collections::HashSet","std::cell::RefCell","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::ops::RangeInclusive","std::ffi::CString","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::boxed::Box","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::collections::BTreeSet","std::net::SocketAddrV6","std::vec::Vec","std::num::NonZeroU16","std::num::NonZeroI32","std::collections::Bound","std::collections::HashMap","std::borrow::Cow","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::num::NonZeroU128","std::option::Option","std::sync::atomic::AtomicI32","std::sync::Arc"]},"std::collections::HashMap":{"K":["std::net::SocketAddr","std::num::NonZeroIsize","std::ffi::CString","std::time::Duration","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroI64","std::option::Option","std::net::IpAddr","std::num::NonZeroI128","std::num::NonZeroU32","std::sync::Arc","std::num::NonZeroU8","std::path::PathBuf","std::net::Ipv4Addr","std::num::NonZeroU16","std::num::NonZeroI32"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::sync::atomic::AtomicIsize","std::vec::Vec","std::collections::BTreeSet","std::num::NonZeroI32","std::net::IpAddr","std::option::Option","std::sync::RwLock","std::num::NonZeroU64","std::collections::Bound","std::net::Ipv4Addr","std::collections::HashMap","std::time::SystemTime","std::ops::RangeInclusive","std::collections::HashSet","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::borrow::Cow","std::collections::BinaryHeap","std::net::SocketAddrV4","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::collections::VecDeque","std::result::Result","std::sync::atomic::AtomicUsize","std::boxed::Box","std::net::SocketAddr","std::sync::Mutex","std::path::PathBuf","std::collections::BTreeMap","std::ffi::CString","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::time::Duration","std::net::Ipv6Addr","std::rc::Rc","std::ops::Range","std::cell::Cell","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::sync::Arc","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::cell::RefCell","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroIsize","std::string::String","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::num::NonZeroUsize"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::net::SocketAddrV6","std::num::NonZeroU16","std::num::NonZeroU32","std::num::NonZeroI128","std::num::NonZeroI8","std::string::String","std::num::NonZeroU64","std::num::NonZeroI32","std::option::Option","std::ffi::CString","std::time::SystemTime","std::rc::Rc","std::net::IpAddr","std::num::NonZeroI64","std::net::SocketAddr","std::path::PathBuf","std::net::Ipv4Addr","std::marker::PhantomData","std::net::Ipv6Addr","std::num::NonZeroIsize"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::string::String","std::net::Ipv6Addr","std::net::Ipv4Addr","std::num::NonZeroI128","std::num::NonZeroU128","std::time::Duration","std::num::NonZeroU16","std::sync::RwLock","std::net::SocketAddrV6","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::borrow::Cow","std::collections::VecDeque","std::cell::RefCell","std::marker::PhantomData","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::ffi::CString","std::collections::Bound","std::sync::Mutex","std::ops::RangeInclusive","std::net::IpAddr","std::sync::atomic::AtomicU32","std::collections::HashSet","std::time::SystemTime","std::boxed::Box","std::ops::Range","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::sync::Arc","std::collections::HashMap","std::cell::Cell","std::result::Result","std::num::NonZeroU64","std::rc::Rc","std::vec::Vec","std::net::SocketAddr","std::option::Option","std::num::NonZeroI16","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroU8"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::collections::Bound","std::num::NonZeroI128","std::time::Duration","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroI8","std::num::NonZeroIsize","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::collections::HashMap","std::string::String","std::option::Option","std::net::Ipv4Addr","std::marker::PhantomData","std::result::Result","std::path::PathBuf","std::rc::Rc","std::collections::BinaryHeap","std::net::IpAddr","std::num::NonZeroUsize","std::num::NonZeroU16","std::boxed::Box","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::collections::HashSet","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::ffi::CString","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::ops::Range","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::borrow::Cow","std::cell::Cell","std::collections::BTreeSet","std::sync::Mutex","std::num::NonZeroI64","std::time::SystemTime","std::sync::RwLock","std::num::NonZeroI32","std::cell::RefCell","std::vec::Vec","std::num::NonZeroU128"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::Mutex","std::collections::BTreeMap","std::num::NonZeroI128","std::path::PathBuf","std::sync::atomic::AtomicU16","std::collections::HashSet","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::result::Result","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::boxed::Box","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::time::Duration","std::borrow::Cow","std::num::NonZeroI64","std::ops::Range","std::num::NonZeroU16","std::cell::RefCell","std::sync::RwLock","std::option::Option","std::string::String","std::net::SocketAddr","std::net::IpAddr","std::time::SystemTime","std::cell::Cell","std::num::NonZeroU128","std::collections::HashMap","std::ffi::CString","std::vec::Vec","std::sync::atomic::AtomicU64","std::rc::Rc","std::net::SocketAddrV4","std::collections::Bound","std::sync::Arc","std::sync::atomic::AtomicI16"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::time::Duration","std::net::IpAddr","std::num::NonZeroU64","std::time::SystemTime","std::rc::Rc","std::ops::RangeInclusive","std::num::NonZeroUsize","std::collections::Bound","std::boxed::Box","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::collections::HashMap","std::sync::Arc","std::marker::PhantomData","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::sync::Mutex","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::result::Result","std::num::NonZeroIsize","std::num::NonZeroI16","std::net::Ipv4Addr","std::option::Option","std::borrow::Cow","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::cell::Cell","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::collections::BinaryHeap","std::num::NonZeroI8","std::net::SocketAddr","std::collections::HashSet","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::string::String","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::vec::Vec","std::ffi::CString","std::path::PathBuf","std::sync::RwLock","std::cell::RefCell","std::num::NonZeroI64","std::num::NonZeroI32","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::ops::Range"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C, D, E, F, G)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G)>::encode(p0, p1);
+<(A, B, C, D, E, F, G)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H)>::encode":{"A":["enc::Encode","std::marker::Sized"],"B":["std::marker::Sized","enc::Encode"],"C":["enc::Encode","std::marker::Sized"],"D":["enc::Encode","std::marker::Sized"],"E":["enc::Encode","std::marker::Sized"],"F":["std::marker::Sized","enc::Encode"],"G":["std::marker::Sized","enc::Encode"],"H":["std::marker::Sized","enc::Encode"],"_E":["std::marker::Sized","enc::Encoder"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["de::BorrowDecode","de::Decode","enc::Encode","std::cmp::Ord","std::marker::Sized"],"V":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","std::cmp::Ord","de::Decode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::BorrowDecode","std::cmp::Ord","enc::Encode","de::Decode"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::HashMap":{"K":["std::hash::Hash","de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Eq"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["enc::Encode","std::hash::Hash","de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","config::BigEndian","config::Limit","std::clone::impls::<impl std::clone::Clone for &T>","config::Varint","config::Fixint","config::LittleEndian","config::NoLimit"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","enc::write::SizeWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H)>::encode":{"A":["std::marker::PhantomData","std::num::NonZeroI8","std::ops::RangeInclusive","std::vec::Vec","std::time::SystemTime","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroU8","enc::impls::<impl enc::Encode for &'a T>","std::net::SocketAddrV6","std::rc::Rc","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::collections::HashMap","std::ffi::CString","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::sync::RwLock","std::num::NonZeroU16","std::result::Result","std::sync::atomic::AtomicU16","std::net::IpAddr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::num::NonZeroU128","std::collections::HashSet","std::string::String","std::num::NonZeroI128","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::borrow::Cow","std::boxed::Box","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::option::Option","std::sync::Mutex","std::net::Ipv4Addr","std::num::NonZeroU64","std::time::Duration","std::num::NonZeroU32","std::cell::Cell","std::sync::atomic::AtomicU32","std::ops::Range","std::path::PathBuf","std::num::NonZeroI16","std::collections::Bound","std::num::NonZeroIsize","std::cell::RefCell"],"B":["std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::ops::Range","std::option::Option","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::num::NonZeroU32","std::ffi::CString","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::num::NonZeroUsize","std::cell::Cell","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::result::Result","std::collections::VecDeque","std::collections::HashMap","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::rc::Rc","std::borrow::Cow","std::num::NonZeroI128","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","enc::impls::<impl enc::Encode for &'a T>","std::net::Ipv6Addr","std::sync::Arc","std::ops::RangeInclusive","std::sync::Mutex","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::boxed::Box","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::collections::HashSet","std::sync::RwLock","std::collections::Bound","std::time::SystemTime","std::net::SocketAddr","std::path::PathBuf","std::cell::RefCell","std::net::SocketAddrV6","std::net::IpAddr","std::vec::Vec","std::string::String","std::time::Duration"],"C":["std::sync::atomic::AtomicU8","std::collections::Bound","std::num::NonZeroI32","std::net::Ipv4Addr","std::net::SocketAddrV4","enc::impls::<impl enc::Encode for &'a T>","std::collections::VecDeque","std::num::NonZeroU32","std::net::SocketAddrV6","std::rc::Rc","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::option::Option","std::num::NonZeroU8","std::collections::BinaryHeap","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::net::IpAddr","std::collections::BTreeMap","std::sync::Mutex","std::num::NonZeroI64","std::collections::HashSet","std::cell::Cell","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::sync::RwLock","std::ops::RangeInclusive","std::ffi::CString","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::ops::Range","std::collections::HashMap","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::time::SystemTime","std::net::SocketAddr","std::collections::BTreeSet","std::cell::RefCell","std::sync::Arc","std::vec::Vec","std::result::Result","std::num::NonZeroI16","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::num::NonZeroU128","std::boxed::Box","std::num::NonZeroI8","std::path::PathBuf","std::string::String"],"D":["std::sync::atomic::AtomicI8","std::rc::Rc","std::path::PathBuf","std::num::NonZeroUsize","std::collections::BTreeSet","std::string::String","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::num::NonZeroI64","std::sync::Mutex","std::sync::atomic::AtomicU64","std::collections::HashSet","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::time::SystemTime","std::marker::PhantomData","std::sync::Arc","std::net::Ipv4Addr","std::result::Result","std::time::Duration","std::net::SocketAddrV6","std::num::NonZeroU32","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::num::NonZeroU128","std::sync::RwLock","std::num::NonZeroI8","std::collections::Bound","std::num::NonZeroU8","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::cell::Cell","std::ffi::CString","std::collections::HashMap","std::option::Option","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::cell::RefCell","std::borrow::Cow","std::num::NonZeroU16","std::net::IpAddr","std::sync::atomic::AtomicBool","std::vec::Vec","enc::impls::<impl enc::Encode for &'a T>","std::collections::BTreeMap","std::boxed::Box","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::ops::Range","std::collections::BinaryHeap"],"E":["std::sync::Mutex","std::cell::Cell","std::sync::RwLock","std::net::IpAddr","enc::impls::<impl enc::Encode for &'a T>","std::time::SystemTime","std::net::Ipv6Addr","std::vec::Vec","std::collections::VecDeque","std::time::Duration","std::option::Option","std::collections::HashMap","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::boxed::Box","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::collections::BTreeMap","std::ops::Range","std::num::NonZeroI64","std::net::Ipv4Addr","std::num::NonZeroIsize","std::net::SocketAddrV6","std::result::Result","std::sync::Arc","std::ffi::CString","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::string::String","std::collections::BinaryHeap","std::net::SocketAddr","std::num::NonZeroU16","std::path::PathBuf","std::collections::BTreeSet","std::num::NonZeroI32","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::collections::Bound","std::rc::Rc","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::num::NonZeroU64","std::net::SocketAddrV4","std::num::NonZeroI8","std::borrow::Cow","std::num::NonZeroU8","std::cell::RefCell","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::collections::HashSet","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::sync::atomic::AtomicI64"],"F":["std::net::Ipv6Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::path::PathBuf","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroIsize","std::time::SystemTime","std::sync::atomic::AtomicU64","std::sync::Mutex","std::num::NonZeroI16","std::collections::BTreeSet","std::string::String","std::sync::Arc","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::option::Option","std::collections::Bound","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::cell::RefCell","std::vec::Vec","std::num::NonZeroUsize","std::num::NonZeroI64","std::borrow::Cow","std::cell::Cell","std::rc::Rc","std::result::Result","std::num::NonZeroU8","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroU16","std::num::NonZeroU128","std::sync::RwLock","std::collections::HashMap","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::ops::Range","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroI8","std::time::Duration","std::ffi::CString","std::collections::BinaryHeap","std::net::SocketAddr","std::collections::HashSet","std::boxed::Box","std::net::IpAddr"],"G":["std::cell::Cell","enc::impls::<impl enc::Encode for &'a T>","std::rc::Rc","std::collections::VecDeque","std::num::NonZeroU128","std::num::NonZeroU64","std::collections::BTreeMap","std::num::NonZeroI32","std::result::Result","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::string::String","std::sync::atomic::AtomicU32","std::sync::Arc","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::net::SocketAddr","std::sync::Mutex","std::sync::atomic::AtomicI16","std::collections::HashMap","std::net::Ipv6Addr","std::sync::RwLock","std::net::Ipv4Addr","std::collections::BinaryHeap","std::ops::RangeInclusive","std::num::NonZeroI16","std::net::SocketAddrV6","std::cell::RefCell","std::collections::Bound","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroI128","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroU16","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::time::SystemTime","std::boxed::Box","std::net::IpAddr","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroU8","std::vec::Vec","std::ops::Range","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::option::Option","std::collections::HashSet","std::borrow::Cow"],"H":["std::path::PathBuf","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::net::SocketAddrV4","std::net::Ipv6Addr","std::rc::Rc","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::borrow::Cow","std::net::IpAddr","std::num::NonZeroU16","std::boxed::Box","std::sync::atomic::AtomicU16","std::time::Duration","std::sync::Mutex","std::sync::atomic::AtomicU8","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::collections::BTreeSet","std::num::NonZeroI8","std::time::SystemTime","std::ffi::CString","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::num::NonZeroI64","std::net::Ipv4Addr","std::sync::RwLock","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::option::Option","std::sync::Arc","std::cell::RefCell","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::collections::HashSet","std::vec::Vec","std::num::NonZeroU32","std::collections::HashMap","std::num::NonZeroI128","std::cell::Cell","std::collections::Bound","std::result::Result","std::ops::RangeInclusive","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::string::String","std::ops::Range","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroI16"],"_E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["&std::io::Stderr","std::boxed::Box<W>","std::collections::VecDeque<u8, A>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Stderr","std::io::Sink","std::io::StdoutLock<'_>","&std::net::TcpStream","std::io::impls::<impl std::io::Write for &mut W>","&std::process::ChildStdin","std::io::Cursor<&mut [u8]>","std::io::Stdout","&std::fs::File","std::io::stdio::StderrRaw","std::process::ChildStdin","&std::io::Sink","&std::io::Stdout","std::io::stdio::StdoutRaw","std::io::Cursor<[u8; N]>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::fs::File","std::sys::unix::stdio::Stdout","std::net::TcpStream","std::io::BufWriter<W>","std::os::unix::net::UnixStream","std::vec::Vec<u8, A>","std::io::BorrowedCursor<'a>","std::io::StderrLock<'_>","&'a std::os::unix::net::UnixStream","std::io::LineWriter<W>","std::sys::unix::stdio::Stderr"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::ffi::CStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI64","std::cell::Cell","std::num::NonZeroU32","std::net::SocketAddrV4","std::net::IpAddr","std::cell::RefCell","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroU16","std::num::NonZeroI32","std::num::NonZeroU8","std::time::Duration","std::net::SocketAddr","std::sync::Arc","std::num::NonZeroIsize","std::path::PathBuf","std::net::Ipv4Addr","std::option::Option","std::marker::PhantomData","std::time::SystemTime","std::string::String"],"V":["std::time::Duration","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::borrow::Cow","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::collections::BinaryHeap","std::cell::Cell","std::boxed::Box","std::ops::Range","std::net::IpAddr","std::sync::RwLock","std::num::NonZeroI32","std::num::NonZeroU32","std::time::SystemTime","std::collections::HashMap","std::num::NonZeroI8","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::sync::Arc","std::net::SocketAddrV4","std::collections::Bound","std::result::Result","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::option::Option","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::net::Ipv4Addr","std::num::NonZeroU64","std::rc::Rc","std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroIsize","std::net::SocketAddrV6","std::net::Ipv6Addr","std::ops::RangeInclusive","std::path::PathBuf","std::net::SocketAddr","std::collections::BTreeSet","std::cell::RefCell","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::collections::HashSet","std::string::String","std::num::NonZeroI64","std::num::NonZeroI16","std::ffi::CString","std::vec::Vec"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI128","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroU64","std::net::Ipv6Addr","std::option::Option","std::rc::Rc","std::sync::Arc","std::num::NonZeroI16","std::net::Ipv4Addr","std::num::NonZeroIsize","std::num::NonZeroUsize","std::num::NonZeroI32","std::string::String","std::path::PathBuf","std::num::NonZeroU32","std::net::SocketAddr","std::num::NonZeroU8","std::cell::RefCell","std::num::NonZeroI64","std::net::SocketAddrV6","std::num::NonZeroU16","std::time::Duration"]},"std::collections::BinaryHeap":{"T":["std::ffi::CString","std::num::NonZeroI128","std::marker::PhantomData","std::num::NonZeroUsize","std::net::IpAddr","std::num::NonZeroU128","std::num::NonZeroU8","std::num::NonZeroI8","std::net::SocketAddrV6","std::rc::Rc","std::time::Duration","std::num::NonZeroU64","std::net::SocketAddr","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroI64","std::cell::RefCell","std::sync::Arc","std::string::String","std::path::PathBuf","std::net::SocketAddrV4"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::time::Duration","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::rc::Rc","std::net::IpAddr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::string::String","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::result::Result","std::borrow::Cow","std::sync::Mutex","std::num::NonZeroUsize","std::cell::RefCell","std::sync::Arc","std::num::NonZeroI64","std::num::NonZeroU32","std::net::SocketAddrV4","std::collections::Bound","std::num::NonZeroU128","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::cell::Cell","std::num::NonZeroI128","std::num::NonZeroU8","std::ops::Range","std::net::Ipv4Addr","std::net::Ipv6Addr","std::collections::BTreeSet","std::net::SocketAddrV6","std::ops::RangeInclusive","std::marker::PhantomData","std::ffi::CString","std::vec::Vec","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::num::NonZeroI8","std::time::SystemTime","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::path::PathBuf","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::boxed::Box","std::net::SocketAddr","std::option::Option","std::collections::HashSet","std::sync::RwLock"]},"std::collections::HashMap":{"K":["std::num::NonZeroI16","std::num::NonZeroU64","std::num::NonZeroIsize","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroI64","std::num::NonZeroU16","std::path::PathBuf","std::num::NonZeroI128","std::net::Ipv4Addr","std::marker::PhantomData","std::time::Duration","std::ffi::CString","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroI32","std::num::NonZeroUsize","std::num::NonZeroU128","std::collections::Bound"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::collections::HashMap","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::sync::Mutex","std::ffi::CString","std::sync::atomic::AtomicBool","std::ops::Range","std::net::IpAddr","std::borrow::Cow","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::result::Result","std::collections::Bound","std::num::NonZeroU128","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::string::String","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::rc::Rc","std::num::NonZeroI8","std::time::SystemTime","std::num::NonZeroIsize","std::marker::PhantomData","std::cell::RefCell","std::num::NonZeroU32","std::vec::Vec","std::collections::VecDeque","std::option::Option","std::cell::Cell","std::sync::RwLock","std::net::SocketAddrV6","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::net::SocketAddrV4","std::collections::HashSet","std::collections::BTreeSet","std::net::Ipv4Addr","std::num::NonZeroI16","std::boxed::Box","std::sync::Arc","std::num::NonZeroI32","std::time::Duration"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroU32","std::num::NonZeroU128","std::num::NonZeroU16","std::num::NonZeroI32","std::net::SocketAddrV4","std::num::NonZeroI64","std::time::SystemTime","std::path::PathBuf","std::num::NonZeroU8","std::sync::Arc","std::net::Ipv6Addr","std::ffi::CString"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::num::NonZeroI128","std::ffi::CString","std::net::Ipv6Addr","std::string::String","std::borrow::Cow","std::result::Result","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::collections::Bound","std::num::NonZeroU128","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::time::SystemTime","std::cell::RefCell","std::option::Option","std::collections::HashSet","std::num::NonZeroI8","std::boxed::Box","std::num::NonZeroU32","std::collections::BTreeSet","std::net::SocketAddrV4","std::marker::PhantomData","std::collections::HashMap","std::net::SocketAddrV6","std::sync::RwLock","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::sync::Mutex","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::num::NonZeroI16","std::time::Duration","std::path::PathBuf","std::vec::Vec","std::collections::BinaryHeap","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroI64","std::ops::Range","std::rc::Rc","std::num::NonZeroI32","std::ops::RangeInclusive","std::net::IpAddr"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::BTreeSet","std::num::NonZeroU64","std::net::SocketAddrV6","std::cell::RefCell","std::rc::Rc","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::collections::HashMap","std::net::Ipv6Addr","std::net::Ipv4Addr","std::borrow::Cow","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::string::String","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroI64","std::ffi::CString","std::sync::atomic::AtomicIsize","std::sync::Arc","std::collections::BTreeMap","std::collections::HashSet","std::num::NonZeroI16","std::option::Option","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroUsize","std::ops::Range","std::sync::atomic::AtomicUsize","std::time::Duration","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::collections::Bound","std::boxed::Box","std::collections::BinaryHeap","std::marker::PhantomData","std::vec::Vec","std::path::PathBuf","std::result::Result","std::sync::RwLock","std::sync::atomic::AtomicI32","std::time::SystemTime","std::net::IpAddr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::cell::Cell","std::num::NonZeroU32","std::ops::RangeInclusive","std::num::NonZeroU16","std::sync::Mutex","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::net::SocketAddrV4","std::num::NonZeroI128"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::string::String","std::boxed::Box","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::time::Duration","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::num::NonZeroUsize","std::net::IpAddr","std::net::SocketAddrV4","std::cell::RefCell","std::num::NonZeroU32","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::collections::HashSet","std::sync::atomic::AtomicI8","std::ops::Range","std::sync::RwLock","std::collections::BTreeMap","std::collections::HashMap","std::num::NonZeroI8","std::sync::Arc","std::num::NonZeroU8","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::path::PathBuf","std::num::NonZeroI16","std::result::Result","std::collections::Bound","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::vec::Vec","std::num::NonZeroIsize","std::cell::Cell","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::option::Option","std::rc::Rc","std::num::NonZeroU64","std::borrow::Cow","std::ffi::CString","std::num::NonZeroU128","std::net::Ipv6Addr","std::sync::Mutex","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::ops::RangeInclusive"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::num::NonZeroU64","std::time::Duration","std::collections::HashMap","std::num::NonZeroUsize","std::time::SystemTime","std::result::Result","std::collections::VecDeque","std::num::NonZeroI16","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::rc::Rc","std::collections::BTreeMap","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::num::NonZeroI64","std::net::SocketAddrV6","std::path::PathBuf","std::cell::Cell","std::collections::HashSet","std::num::NonZeroI32","std::ops::Range","std::string::String","std::ops::RangeInclusive","std::vec::Vec","std::sync::RwLock","std::borrow::Cow","std::net::Ipv6Addr","std::ffi::CString","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::cell::RefCell","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::net::IpAddr","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::boxed::Box","std::collections::Bound","std::net::Ipv4Addr","std::num::NonZeroI128","std::sync::Mutex","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::sync::Arc","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::sync::atomic::AtomicBool"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C, D, E, F, G, H)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H)>::encode(p0, p1);
+<(A, B, C, D, E, F, G, H)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I)>::encode":{"A":["enc::Encode","std::marker::Sized"],"B":["enc::Encode","std::marker::Sized"],"C":["enc::Encode","std::marker::Sized"],"D":["enc::Encode","std::marker::Sized"],"E":["enc::Encode","std::marker::Sized"],"F":["enc::Encode","std::marker::Sized"],"G":["std::marker::Sized","enc::Encode"],"H":["enc::Encode","std::marker::Sized"],"I":["enc::Encode","std::marker::Sized"],"_E":["enc::Encoder","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Ord","std::marker::Sized"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["std::cmp::Ord","de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized","std::cmp::Ord"]},"std::collections::Bound":{"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["enc::Encode","de::Decode","std::marker::Sized","std::cmp::Eq","std::hash::Hash","de::BorrowDecode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::hash::Hash","enc::Encode","std::marker::Sized","std::cmp::Eq","de::BorrowDecode","de::Decode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::Fixint","config::Varint","config::Configuration","config::LittleEndian","config::NoLimit","config::BigEndian","std::clone::impls::<impl std::clone::Clone for *const T>"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SliceWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I)>::encode":{"A":["std::collections::BTreeMap","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::rc::Rc","std::collections::HashSet","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::sync::RwLock","enc::impls::<impl enc::Encode for &'a T>","std::ffi::CString","std::num::NonZeroU64","std::string::String","std::option::Option","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::net::IpAddr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::borrow::Cow","std::num::NonZeroIsize","std::result::Result","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::num::NonZeroU32","std::cell::Cell","std::collections::Bound","std::sync::Arc","std::vec::Vec","std::boxed::Box","std::net::Ipv6Addr","std::num::NonZeroI16","std::collections::BTreeSet","std::net::Ipv4Addr","std::collections::HashMap","std::collections::VecDeque","std::cell::RefCell","std::num::NonZeroI64","std::ops::Range","std::sync::atomic::AtomicI8","std::sync::Mutex","std::net::SocketAddr","std::num::NonZeroU8","std::path::PathBuf","std::collections::BinaryHeap"],"B":["std::sync::atomic::AtomicU32","std::ffi::CString","std::collections::Bound","std::ops::Range","std::collections::BinaryHeap","std::num::NonZeroU32","std::sync::RwLock","std::num::NonZeroU8","std::net::SocketAddrV6","std::marker::PhantomData","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::num::NonZeroI64","std::collections::BTreeSet","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroI128","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::num::NonZeroU64","std::num::NonZeroIsize","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::boxed::Box","std::collections::BTreeMap","enc::impls::<impl enc::Encode for &'a T>","std::collections::HashSet","std::sync::atomic::AtomicI8","std::cell::RefCell","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::net::IpAddr","std::path::PathBuf","std::time::SystemTime","std::sync::atomic::AtomicI64","std::vec::Vec","std::borrow::Cow","std::sync::Mutex","std::option::Option","std::sync::atomic::AtomicIsize","std::result::Result","std::rc::Rc","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::net::SocketAddrV4","std::time::Duration","std::cell::Cell","std::num::NonZeroUsize","std::string::String","std::net::Ipv4Addr"],"C":["std::num::NonZeroI8","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::result::Result","std::sync::RwLock","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::time::Duration","std::cell::Cell","std::num::NonZeroI16","std::cell::RefCell","std::net::IpAddr","std::sync::Mutex","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::net::SocketAddrV6","std::collections::BTreeSet","enc::impls::<impl enc::Encode for &'a T>","std::path::PathBuf","std::net::Ipv6Addr","std::ops::Range","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::rc::Rc","std::collections::HashMap","std::collections::Bound","std::net::SocketAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::borrow::Cow","std::num::NonZeroI32","std::num::NonZeroI128","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::collections::HashSet","std::sync::atomic::AtomicI8","std::vec::Vec","std::num::NonZeroU128","std::time::SystemTime","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::option::Option","std::num::NonZeroIsize","std::sync::Arc","std::string::String","std::net::Ipv4Addr","std::ffi::CString","std::boxed::Box","std::collections::BinaryHeap"],"D":["std::string::String","std::num::NonZeroU32","std::net::SocketAddr","std::net::Ipv4Addr","std::net::SocketAddrV6","std::sync::Arc","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::ffi::CString","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::collections::VecDeque","std::path::PathBuf","std::boxed::Box","std::num::NonZeroU64","std::net::Ipv6Addr","std::num::NonZeroU16","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::num::NonZeroU128","std::cell::Cell","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::collections::BinaryHeap","std::time::Duration","std::sync::atomic::AtomicI32","std::option::Option","enc::impls::<impl enc::Encode for &'a T>","std::result::Result","std::ops::RangeInclusive","std::collections::HashSet","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::cell::RefCell","std::borrow::Cow","std::num::NonZeroI8","std::num::NonZeroI16","std::net::IpAddr","std::net::SocketAddrV4","std::collections::BTreeMap","std::vec::Vec","std::collections::HashMap","std::ops::Range","std::num::NonZeroI128","std::collections::Bound","std::sync::RwLock","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::rc::Rc","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool"],"E":["std::path::PathBuf","std::net::SocketAddr","std::num::NonZeroIsize","std::sync::Mutex","std::collections::HashMap","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::boxed::Box","std::collections::BTreeSet","std::sync::RwLock","std::net::SocketAddrV6","std::collections::HashSet","std::sync::atomic::AtomicU32","std::borrow::Cow","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::num::NonZeroU8","std::num::NonZeroU16","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::net::Ipv6Addr","std::time::SystemTime","std::vec::Vec","std::num::NonZeroI64","std::sync::Arc","std::result::Result","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroUsize","std::ffi::CString","std::string::String","std::num::NonZeroU32","std::net::SocketAddrV4","std::collections::VecDeque","std::collections::BTreeMap","std::ops::Range","std::num::NonZeroI16","enc::impls::<impl enc::Encode for &'a T>","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::collections::Bound","std::num::NonZeroI128","std::option::Option","std::cell::Cell","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::time::Duration","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::rc::Rc"],"F":["std::net::Ipv4Addr","std::collections::BinaryHeap","std::collections::HashMap","std::boxed::Box","std::sync::Mutex","std::cell::Cell","std::ops::Range","std::sync::RwLock","std::collections::BTreeMap","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroU8","std::collections::HashSet","std::time::Duration","std::sync::atomic::AtomicI16","std::result::Result","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::cell::RefCell","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::vec::Vec","std::num::NonZeroI16","std::collections::BTreeSet","std::sync::Arc","std::ffi::CString","std::num::NonZeroU64","std::net::IpAddr","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::option::Option","std::borrow::Cow","std::time::SystemTime","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::rc::Rc","std::collections::VecDeque","std::collections::Bound","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroI32","std::num::NonZeroI8","std::string::String","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::net::Ipv6Addr"],"G":["std::num::NonZeroU32","std::net::Ipv4Addr","std::num::NonZeroI32","std::result::Result","std::sync::atomic::AtomicUsize","std::boxed::Box","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::collections::HashSet","std::collections::VecDeque","std::net::SocketAddr","std::option::Option","std::borrow::Cow","std::num::NonZeroI16","std::rc::Rc","std::sync::Mutex","std::cell::RefCell","std::collections::HashMap","std::time::Duration","std::net::SocketAddrV6","std::path::PathBuf","std::cell::Cell","std::net::IpAddr","std::sync::atomic::AtomicU64","std::sync::Arc","std::ops::Range","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","enc::impls::<impl enc::Encode for &'a T>","std::net::SocketAddrV4","std::num::NonZeroIsize","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::collections::Bound","std::net::Ipv6Addr","std::ffi::CString","std::string::String","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::marker::PhantomData","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::time::SystemTime","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::vec::Vec","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroU8","std::num::NonZeroU64","std::sync::atomic::AtomicBool"],"H":["std::ops::RangeInclusive","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::sync::Arc","std::marker::PhantomData","std::cell::Cell","std::result::Result","std::cell::RefCell","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::num::NonZeroU64","std::rc::Rc","std::ops::Range","std::net::SocketAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::collections::HashSet","std::time::SystemTime","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroI64","std::collections::BinaryHeap","std::num::NonZeroU16","std::collections::Bound","std::net::IpAddr","std::collections::BTreeMap","std::sync::Mutex","std::net::Ipv6Addr","std::collections::VecDeque","std::sync::RwLock","std::sync::atomic::AtomicI32","std::vec::Vec","std::num::NonZeroU8","std::time::Duration","std::num::NonZeroI32","std::collections::HashMap","std::path::PathBuf","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::num::NonZeroU32","std::string::String","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::num::NonZeroI8","enc::impls::<impl enc::Encode for &'a T>","std::ffi::CString","std::boxed::Box","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::option::Option"],"I":["std::sync::atomic::AtomicI32","std::sync::Mutex","std::time::SystemTime","std::sync::atomic::AtomicI16","std::collections::BinaryHeap","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::net::IpAddr","std::collections::HashSet","std::num::NonZeroI8","std::path::PathBuf","std::ffi::CString","std::borrow::Cow","std::ops::Range","std::net::SocketAddrV6","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::cell::Cell","std::ops::RangeInclusive","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::boxed::Box","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::num::NonZeroI32","std::num::NonZeroUsize","std::num::NonZeroU64","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::result::Result","std::net::Ipv6Addr","std::collections::BTreeSet","std::time::Duration","enc::impls::<impl enc::Encode for &'a T>","std::string::String","std::rc::Rc","std::marker::PhantomData","std::collections::Bound","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::cell::RefCell","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::option::Option","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::num::NonZeroI64","std::sync::Arc","std::num::NonZeroIsize","std::net::Ipv4Addr","std::sync::RwLock","std::num::NonZeroU128","std::vec::Vec"],"_E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["&std::io::Stderr","std::io::Cursor<[u8; N]>","std::process::ChildStdin","std::net::TcpStream","std::io::Sink","std::boxed::Box<W>","std::io::StdoutLock<'_>","std::io::BufWriter<W>","&std::net::TcpStream","std::io::Stderr","&std::process::ChildStdin","std::io::Cursor<&mut [u8]>","&std::fs::File","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::stdio::StdoutRaw","std::io::LineWriter<W>","std::io::BorrowedCursor<'a>","std::os::unix::net::UnixStream","&std::io::Stdout","std::sys::unix::stdio::Stdout","std::collections::VecDeque<u8, A>","std::sys::unix::stdio::Stderr","std::vec::Vec<u8, A>","std::io::stdio::StderrRaw","&std::io::Sink","std::fs::File","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Stdout","&'a std::os::unix::net::UnixStream","std::io::StderrLock<'_>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<std::vec::Vec<u8, A>>"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::rc::Rc","std::path::PathBuf","std::num::NonZeroI128","std::cell::RefCell","std::net::SocketAddrV6","std::cell::Cell","std::num::NonZeroU128","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroU16","std::option::Option","std::num::NonZeroU32","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroU64","std::num::NonZeroUsize","std::net::SocketAddrV4","std::string::String","std::num::NonZeroU8","std::num::NonZeroI16","std::num::NonZeroI8","std::num::NonZeroI32","std::ffi::CString","std::net::IpAddr","std::num::NonZeroI64","std::net::Ipv4Addr"],"V":["std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::time::Duration","std::net::Ipv4Addr","std::net::SocketAddr","std::collections::VecDeque","std::borrow::Cow","std::time::SystemTime","std::collections::BTreeMap","std::sync::RwLock","std::num::NonZeroI8","std::ops::Range","std::result::Result","std::collections::BinaryHeap","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroU8","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroI32","std::num::NonZeroU64","std::net::Ipv6Addr","std::vec::Vec","std::sync::Mutex","std::collections::Bound","std::collections::BTreeSet","std::num::NonZeroI128","std::path::PathBuf","std::sync::atomic::AtomicU8","std::option::Option","std::collections::HashSet","std::collections::HashMap","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::cell::RefCell","std::net::SocketAddrV4","std::net::SocketAddrV6","std::string::String","std::boxed::Box","std::num::NonZeroU16","std::sync::Arc","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::rc::Rc","std::net::IpAddr","std::num::NonZeroI16","std::num::NonZeroUsize","std::marker::PhantomData","std::sync::atomic::AtomicU16"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroUsize","std::ffi::CString","std::net::Ipv6Addr","std::string::String","std::num::NonZeroU8","std::option::Option","std::net::SocketAddrV4","std::cell::RefCell","std::net::SocketAddr","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroI128","std::path::PathBuf","std::num::NonZeroI32","std::num::NonZeroU128","std::time::Duration"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroIsize","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroU64","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroU16","std::net::SocketAddr","std::string::String","std::rc::Rc","std::net::Ipv4Addr","std::marker::PhantomData","std::num::NonZeroI32","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroI64","std::net::SocketAddrV4","std::option::Option"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicI16","std::collections::HashMap","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::net::IpAddr","std::collections::BinaryHeap","std::net::SocketAddrV6","std::num::NonZeroU128","std::rc::Rc","std::num::NonZeroI128","std::num::NonZeroU16","std::collections::VecDeque","std::boxed::Box","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::string::String","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::collections::BTreeSet","std::time::Duration","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroUsize","std::sync::Mutex","std::cell::Cell","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::ffi::CString","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::num::NonZeroU32","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::net::SocketAddr","std::result::Result","std::sync::atomic::AtomicBool","std::collections::Bound","std::borrow::Cow","std::ops::Range","std::time::SystemTime","std::path::PathBuf","std::marker::PhantomData","std::sync::Arc","std::option::Option","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::vec::Vec","std::ops::RangeInclusive","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::atomic::AtomicI32"]},"std::collections::HashMap":{"K":["std::net::IpAddr","std::collections::Bound","std::option::Option","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroU32","std::marker::PhantomData","std::num::NonZeroU64","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroI16","std::num::NonZeroU8","std::num::NonZeroI8","std::num::NonZeroI128","std::string::String","std::num::NonZeroU128","std::time::Duration","std::time::SystemTime"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::Arc","std::collections::BTreeMap","std::vec::Vec","std::cell::Cell","std::num::NonZeroIsize","std::net::SocketAddrV6","std::time::Duration","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::num::NonZeroU32","std::num::NonZeroI32","std::sync::RwLock","std::cell::RefCell","std::ffi::CString","std::time::SystemTime","std::ops::Range","std::collections::Bound","std::net::Ipv4Addr","std::collections::BinaryHeap","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::sync::atomic::AtomicI64","std::string::String","std::num::NonZeroI16","std::num::NonZeroI64","std::collections::HashSet","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::result::Result","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::num::NonZeroU16","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::option::Option","std::marker::PhantomData","std::num::NonZeroU8","std::ops::RangeInclusive","std::rc::Rc","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::num::NonZeroU128","std::net::SocketAddr","std::borrow::Cow","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::path::PathBuf","std::boxed::Box"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroU128","std::net::IpAddr","std::num::NonZeroI64","std::num::NonZeroI128","std::rc::Rc","std::net::SocketAddrV4","std::num::NonZeroI8","std::num::NonZeroU16","std::num::NonZeroU8","std::num::NonZeroU32","std::net::Ipv4Addr","std::option::Option","std::num::NonZeroUsize","std::time::SystemTime","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroU64"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::ops::RangeInclusive","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::cell::Cell","std::collections::BTreeSet","std::net::Ipv6Addr","std::collections::Bound","std::collections::HashMap","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::collections::BinaryHeap","std::net::SocketAddrV4","std::num::NonZeroU8","std::vec::Vec","std::num::NonZeroU64","std::sync::Mutex","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::path::PathBuf","std::sync::Arc","std::boxed::Box","std::net::Ipv4Addr","std::num::NonZeroU32","std::net::SocketAddrV6","std::num::NonZeroI8","std::time::Duration","std::sync::RwLock","std::string::String","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::ffi::CString","std::num::NonZeroIsize","std::net::IpAddr","std::collections::HashSet","std::collections::BTreeMap","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::ops::Range","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::result::Result","std::option::Option","std::num::NonZeroU16","std::marker::PhantomData","std::time::SystemTime","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::rc::Rc","std::num::NonZeroI16","std::collections::VecDeque","std::num::NonZeroI128","std::sync::atomic::AtomicI16"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::cell::Cell","std::net::Ipv6Addr","std::num::NonZeroI16","std::collections::BinaryHeap","std::ops::Range","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::collections::Bound","std::sync::atomic::AtomicUsize","std::vec::Vec","std::net::SocketAddr","std::collections::BTreeMap","std::num::NonZeroI128","std::collections::HashSet","std::num::NonZeroU128","std::sync::Mutex","std::net::Ipv4Addr","std::num::NonZeroIsize","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::ffi::CString","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::sync::RwLock","std::string::String","std::option::Option","std::time::Duration","std::time::SystemTime","std::rc::Rc","std::collections::HashMap","std::net::SocketAddrV6","std::marker::PhantomData","std::sync::Arc","std::num::NonZeroI32","std::num::NonZeroU8","std::ops::RangeInclusive","std::result::Result","std::collections::VecDeque","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::boxed::Box","std::num::NonZeroI64","std::borrow::Cow","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::path::PathBuf","std::net::IpAddr","std::num::NonZeroI8"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::Arc","std::marker::PhantomData","std::num::NonZeroI16","std::sync::Mutex","std::result::Result","std::collections::VecDeque","std::collections::BTreeSet","std::borrow::Cow","std::vec::Vec","std::boxed::Box","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::net::Ipv4Addr","std::num::NonZeroUsize","std::collections::BinaryHeap","std::ops::Range","std::time::SystemTime","std::num::NonZeroI32","std::net::SocketAddrV4","std::sync::RwLock","std::num::NonZeroU128","std::collections::Bound","std::num::NonZeroU64","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::rc::Rc","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::cell::RefCell","std::ops::RangeInclusive","std::path::PathBuf","std::cell::Cell","std::collections::BTreeMap","std::string::String","std::collections::HashMap","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::ffi::CString","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::option::Option","std::num::NonZeroU8","std::time::Duration","std::num::NonZeroU32","std::collections::HashSet","std::net::Ipv6Addr"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::borrow::Cow","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroU32","std::num::NonZeroU16","std::collections::HashMap","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::sync::Arc","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::rc::Rc","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::ffi::CString","std::num::NonZeroI128","std::time::SystemTime","std::time::Duration","std::net::IpAddr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::vec::Vec","std::option::Option","std::num::NonZeroU64","std::net::SocketAddrV4","std::num::NonZeroIsize","std::sync::Mutex","std::net::Ipv4Addr","std::num::NonZeroI8","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::sync::RwLock","std::ops::Range","std::collections::VecDeque","std::path::PathBuf","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::collections::Bound","std::boxed::Box","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::string::String","std::collections::BinaryHeap","std::result::Result","std::net::SocketAddrV6","std::cell::Cell","std::net::Ipv6Addr","std::num::NonZeroI64","std::collections::HashSet","std::num::NonZeroUsize"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C, D, E, F, G, H, I)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I)>::encode(p0, p1);
+<(A, B, C, D, E, F, G, H, I)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J)>::encode":{"A":["std::marker::Sized","enc::Encode"],"B":["std::marker::Sized","enc::Encode"],"C":["std::marker::Sized","enc::Encode"],"D":["enc::Encode","std::marker::Sized"],"E":["std::marker::Sized","enc::Encode"],"F":["std::marker::Sized","enc::Encode"],"G":["std::marker::Sized","enc::Encode"],"H":["enc::Encode","std::marker::Sized"],"I":["std::marker::Sized","enc::Encode"],"J":["enc::Encode","std::marker::Sized"],"_E":["enc::Encoder","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::cmp::Ord","de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"],"V":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","std::cmp::Ord","de::Decode"]},"std::collections::Bound":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashMap":{"K":["enc::Encode","std::cmp::Eq","std::marker::Sized","de::Decode","std::hash::Hash","de::BorrowDecode"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["de::Decode","std::hash::Hash","std::marker::Sized","enc::Encode","de::BorrowDecode","std::cmp::Eq"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for &mut T>","config::Varint","config::Limit","config::LittleEndian","config::Fixint","config::NoLimit","config::Configuration","config::BigEndian"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SliceWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J)>::encode":{"A":["std::cell::RefCell","std::net::Ipv4Addr","std::boxed::Box","std::net::Ipv6Addr","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroU8","std::num::NonZeroU64","std::num::NonZeroI64","std::borrow::Cow","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::sync::Mutex","std::collections::HashMap","std::sync::atomic::AtomicI8","std::ops::Range","std::result::Result","std::cell::Cell","std::net::SocketAddrV4","std::num::NonZeroU16","std::sync::RwLock","std::collections::BTreeSet","std::marker::PhantomData","std::num::NonZeroI32","std::collections::BTreeMap","std::num::NonZeroI16","std::num::NonZeroU32","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::vec::Vec","std::sync::atomic::AtomicU32","std::collections::HashSet","std::net::SocketAddr","std::path::PathBuf","std::rc::Rc","std::time::Duration","enc::impls::<impl enc::Encode for &'a T>","std::collections::BinaryHeap","std::num::NonZeroI128","std::collections::VecDeque","std::net::IpAddr","std::sync::atomic::AtomicI16","std::string::String","std::collections::Bound","std::ffi::CString","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicU8"],"B":["std::collections::BinaryHeap","std::net::SocketAddrV4","std::net::IpAddr","std::cell::RefCell","std::sync::Arc","std::num::NonZeroI32","std::ops::Range","std::num::NonZeroI128","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::net::SocketAddr","std::collections::BTreeMap","std::num::NonZeroI16","std::marker::PhantomData","std::borrow::Cow","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::result::Result","std::sync::RwLock","std::collections::Bound","std::sync::atomic::AtomicU64","std::option::Option","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::boxed::Box","std::sync::atomic::AtomicI16","std::collections::HashMap","enc::impls::<impl enc::Encode for &'a T>","std::collections::BTreeSet","std::ffi::CString","std::sync::atomic::AtomicU32","std::collections::HashSet","std::num::NonZeroU8","std::net::SocketAddrV6","std::cell::Cell","std::ops::RangeInclusive","std::num::NonZeroU128","std::net::Ipv4Addr","std::num::NonZeroU64","std::time::Duration","std::sync::Mutex","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::time::SystemTime","std::vec::Vec","std::collections::VecDeque","std::num::NonZeroUsize","std::string::String","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::rc::Rc","std::path::PathBuf"],"C":["std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::vec::Vec","std::time::Duration","std::num::NonZeroI64","std::sync::Arc","std::string::String","std::result::Result","std::sync::atomic::AtomicU32","std::cell::RefCell","std::num::NonZeroU16","std::net::SocketAddrV4","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::boxed::Box","enc::impls::<impl enc::Encode for &'a T>","std::collections::BinaryHeap","std::num::NonZeroI8","std::num::NonZeroU128","std::sync::Mutex","std::collections::BTreeMap","std::num::NonZeroU8","std::ops::RangeInclusive","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::ffi::CString","std::num::NonZeroI128","std::num::NonZeroI16","std::net::Ipv6Addr","std::net::SocketAddrV6","std::option::Option","std::num::NonZeroU32","std::ops::Range","std::cell::Cell","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::collections::HashMap","std::sync::atomic::AtomicBool","std::borrow::Cow","std::collections::HashSet","std::num::NonZeroIsize","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::sync::RwLock","std::path::PathBuf","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::net::SocketAddr","std::rc::Rc","std::sync::atomic::AtomicU8","std::collections::Bound","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroUsize"],"D":["std::sync::Mutex","std::boxed::Box","std::sync::RwLock","std::num::NonZeroI64","std::result::Result","std::cell::Cell","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroU32","std::borrow::Cow","std::cell::RefCell","std::num::NonZeroU8","std::marker::PhantomData","std::ops::RangeInclusive","std::vec::Vec","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::ops::Range","std::num::NonZeroU64","std::rc::Rc","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::net::SocketAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::collections::HashSet","std::sync::atomic::AtomicI64","std::string::String","std::sync::Arc","std::num::NonZeroI16","std::collections::Bound","std::time::SystemTime","std::num::NonZeroIsize","enc::impls::<impl enc::Encode for &'a T>","std::ffi::CString","std::collections::VecDeque","std::num::NonZeroU128","std::time::Duration","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::net::Ipv4Addr","std::option::Option","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::path::PathBuf","std::collections::HashMap"],"E":["std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::num::NonZeroU64","std::time::Duration","std::string::String","std::ops::Range","std::ops::RangeInclusive","std::time::SystemTime","std::boxed::Box","std::num::NonZeroUsize","std::option::Option","std::num::NonZeroI32","enc::impls::<impl enc::Encode for &'a T>","std::net::IpAddr","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::num::NonZeroIsize","std::borrow::Cow","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::ffi::CString","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::sync::RwLock","std::sync::atomic::AtomicBool","std::cell::Cell","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::cell::RefCell","std::num::NonZeroI8","std::num::NonZeroU32","std::collections::BTreeMap","std::rc::Rc","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::vec::Vec","std::sync::atomic::AtomicI8","std::path::PathBuf","std::net::SocketAddr","std::collections::Bound","std::collections::VecDeque","std::num::NonZeroI16","std::marker::PhantomData","std::sync::Mutex","std::net::SocketAddrV4","std::collections::BinaryHeap","std::num::NonZeroU16","std::sync::Arc","std::collections::HashMap","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::result::Result","std::num::NonZeroU8"],"F":["std::sync::atomic::AtomicU8","std::cell::RefCell","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::borrow::Cow","std::collections::Bound","std::num::NonZeroIsize","std::num::NonZeroUsize","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::sync::Arc","std::sync::Mutex","std::option::Option","std::collections::BTreeSet","std::ffi::CString","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::num::NonZeroU64","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroU16","std::net::Ipv6Addr","std::ops::Range","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::net::IpAddr","std::collections::BinaryHeap","enc::impls::<impl enc::Encode for &'a T>","std::boxed::Box","std::sync::RwLock","std::num::NonZeroU128","std::num::NonZeroU32","std::net::SocketAddrV6","std::result::Result","std::marker::PhantomData","std::collections::HashSet","std::num::NonZeroI128","std::num::NonZeroU8","std::collections::HashMap","std::vec::Vec","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::time::Duration","std::cell::Cell","std::collections::BTreeMap","std::time::SystemTime","std::ops::RangeInclusive","std::rc::Rc","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::string::String"],"G":["std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::num::NonZeroUsize","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::num::NonZeroU64","std::collections::VecDeque","std::cell::RefCell","std::boxed::Box","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::sync::Arc","std::collections::Bound","std::num::NonZeroI32","std::collections::BTreeSet","std::ops::Range","std::time::SystemTime","std::net::Ipv4Addr","std::collections::HashMap","std::path::PathBuf","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::collections::HashSet","std::result::Result","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::time::Duration","std::num::NonZeroI128","std::net::SocketAddrV4","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU16","std::num::NonZeroI16","std::vec::Vec","std::net::Ipv6Addr","std::option::Option","std::borrow::Cow","std::rc::Rc","std::sync::RwLock","std::num::NonZeroI8","std::cell::Cell","std::net::SocketAddrV6","std::string::String","std::num::NonZeroU32","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::ffi::CString","std::net::IpAddr","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::sync::Mutex"],"H":["std::time::SystemTime","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::num::NonZeroI64","std::ops::RangeInclusive","std::string::String","std::cell::RefCell","std::time::Duration","std::sync::atomic::AtomicUsize","std::cell::Cell","std::num::NonZeroI16","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::net::SocketAddrV4","std::boxed::Box","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroU32","std::net::IpAddr","std::option::Option","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::path::PathBuf","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::result::Result","std::collections::VecDeque","std::collections::HashMap","std::borrow::Cow","std::collections::Bound","std::net::SocketAddr","std::net::SocketAddrV6","std::sync::Mutex","std::net::Ipv6Addr","std::num::NonZeroI32","std::collections::HashSet","std::vec::Vec","std::rc::Rc","std::ops::Range","enc::impls::<impl enc::Encode for &'a T>","std::collections::BinaryHeap","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::RwLock"],"I":["std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::time::SystemTime","std::num::NonZeroI32","std::borrow::Cow","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::collections::Bound","std::num::NonZeroI64","std::sync::Mutex","std::sync::atomic::AtomicI16","std::vec::Vec","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::collections::VecDeque","std::ffi::CString","std::string::String","std::num::NonZeroU16","std::collections::BinaryHeap","std::net::SocketAddr","std::num::NonZeroI128","std::num::NonZeroU128","std::net::IpAddr","std::time::Duration","std::sync::Arc","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::path::PathBuf","std::num::NonZeroUsize","std::cell::Cell","std::num::NonZeroU64","std::ops::Range","std::sync::atomic::AtomicI32","std::boxed::Box","enc::impls::<impl enc::Encode for &'a T>","std::net::SocketAddrV4","std::cell::RefCell","std::marker::PhantomData","std::num::NonZeroI8","std::ops::RangeInclusive","std::sync::RwLock","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::rc::Rc","std::net::Ipv4Addr","std::collections::HashSet","std::option::Option","std::num::NonZeroU8","std::result::Result","std::collections::HashMap"],"J":["std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::collections::HashMap","std::boxed::Box","std::marker::PhantomData","std::ops::RangeInclusive","std::vec::Vec","std::sync::atomic::AtomicI32","std::string::String","std::sync::Arc","std::sync::atomic::AtomicU16","std::result::Result","std::num::NonZeroI8","std::num::NonZeroU32","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::time::SystemTime","std::collections::Bound","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::collections::BinaryHeap","enc::impls::<impl enc::Encode for &'a T>","std::ops::Range","std::net::SocketAddrV6","std::num::NonZeroI128","std::net::Ipv6Addr","std::num::NonZeroU16","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::net::IpAddr","std::num::NonZeroU64","std::num::NonZeroI64","std::rc::Rc","std::net::Ipv4Addr","std::cell::RefCell","std::option::Option","std::cell::Cell","std::collections::HashSet","std::num::NonZeroI16","std::sync::RwLock","std::time::Duration","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::ffi::CString","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::borrow::Cow","std::net::SocketAddrV4"],"_E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::os::unix::net::UnixStream","std::net::TcpStream","std::io::StdoutLock<'_>","std::io::Cursor<&mut [u8]>","std::io::stdio::StderrRaw","std::io::LineWriter<W>","&'a std::os::unix::net::UnixStream","&std::io::Stderr","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Stdout","&std::process::ChildStdin","&std::net::TcpStream","&std::io::Stdout","&std::io::Sink","std::process::ChildStdin","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Stderr","std::sys::unix::stdio::Stderr","std::io::BufWriter<W>","std::io::stdio::StdoutRaw","std::io::impls::<impl std::io::Write for &mut W>","std::collections::VecDeque<u8, A>","std::boxed::Box<W>","std::io::Cursor<[u8; N]>","std::io::Sink","std::io::BorrowedCursor<'a>","std::sys::unix::stdio::Stdout","std::fs::File","std::vec::Vec<u8, A>","std::io::StderrLock<'_>","&std::fs::File","std::io::Cursor<std::boxed::Box<[u8], A>>"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroI8","std::rc::Rc","std::num::NonZeroU16","std::net::SocketAddrV4","std::path::PathBuf","std::net::SocketAddr","std::ffi::CString","std::net::Ipv4Addr","std::net::SocketAddrV6","std::cell::Cell","std::num::NonZeroIsize","std::cell::RefCell","std::time::Duration","std::marker::PhantomData","std::sync::Arc","std::num::NonZeroU32","std::net::Ipv6Addr","std::time::SystemTime","std::string::String","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroU64"],"V":["std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::cell::Cell","std::sync::atomic::AtomicI8","std::string::String","std::collections::HashMap","std::num::NonZeroUsize","std::num::NonZeroU8","std::path::PathBuf","std::num::NonZeroU16","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::time::SystemTime","std::net::SocketAddrV4","std::collections::Bound","std::sync::Mutex","std::sync::RwLock","std::collections::VecDeque","std::collections::BTreeSet","std::ops::Range","std::net::IpAddr","std::vec::Vec","std::sync::atomic::AtomicU32","std::boxed::Box","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::net::Ipv6Addr","std::collections::HashSet","std::option::Option","std::collections::BTreeMap","std::num::NonZeroI128","std::cell::RefCell","std::ffi::CString","std::collections::BinaryHeap","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::borrow::Cow","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::num::NonZeroU32","std::rc::Rc","std::num::NonZeroU64","std::time::Duration","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroU128","std::result::Result"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::Ipv6Addr","std::num::NonZeroU16","std::num::NonZeroIsize","std::time::SystemTime","std::net::SocketAddr","std::num::NonZeroUsize","std::net::IpAddr","std::num::NonZeroU64","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroI8","std::time::Duration","std::num::NonZeroI128","std::net::Ipv4Addr","std::cell::Cell","std::option::Option","std::num::NonZeroU8","std::cell::RefCell","std::num::NonZeroU32","std::ffi::CString","std::sync::Arc"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroI16","std::string::String","std::path::PathBuf","std::num::NonZeroU8","std::num::NonZeroU16","std::option::Option","std::time::SystemTime","std::num::NonZeroI8","std::net::SocketAddrV6","std::num::NonZeroI128","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroU64","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroI32","std::num::NonZeroIsize"]},"std::collections::Bound":{"T":["std::option::Option","std::sync::Arc","std::collections::BTreeSet","std::num::NonZeroUsize","std::vec::Vec","std::string::String","std::collections::VecDeque","std::cell::RefCell","std::num::NonZeroU16","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::num::NonZeroI128","std::boxed::Box","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::borrow::Cow","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::num::NonZeroI32","std::collections::HashMap","std::result::Result","std::collections::HashSet","std::net::SocketAddr","std::rc::Rc","std::ffi::CString","std::sync::Mutex","std::collections::Bound","std::net::SocketAddrV6","std::marker::PhantomData","std::time::Duration","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::cell::Cell","std::net::SocketAddrV4","std::net::IpAddr","std::ops::Range","std::num::NonZeroU64","std::path::PathBuf","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::num::NonZeroI16","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::RwLock"]},"std::collections::HashMap":{"K":["std::num::NonZeroU8","std::path::PathBuf","std::num::NonZeroIsize","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroI128","std::num::NonZeroU32","std::net::Ipv6Addr","std::collections::Bound","std::net::SocketAddrV6","std::num::NonZeroU128","std::string::String"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::path::PathBuf","std::sync::atomic::AtomicBool","std::cell::RefCell","std::num::NonZeroU16","std::ffi::CString","std::net::Ipv4Addr","std::sync::Arc","std::option::Option","std::num::NonZeroI32","std::collections::HashMap","std::sync::atomic::AtomicU32","std::net::IpAddr","std::string::String","std::num::NonZeroU32","std::num::NonZeroU8","std::rc::Rc","std::sync::RwLock","std::collections::HashSet","std::num::NonZeroI16","std::num::NonZeroU128","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroI64","std::ops::Range","std::collections::Bound","std::net::SocketAddrV6","std::time::Duration","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::vec::Vec","std::cell::Cell","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::collections::VecDeque","std::net::Ipv6Addr","std::result::Result","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::marker::PhantomData","std::time::SystemTime","std::collections::BTreeSet","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::num::NonZeroU64","std::borrow::Cow","std::boxed::Box","std::net::SocketAddr","std::sync::atomic::AtomicU8"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU16","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroI64","std::num::NonZeroU32","std::sync::Arc","std::net::SocketAddr","std::net::Ipv4Addr","std::option::Option","std::time::Duration","std::net::IpAddr","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroI8","std::marker::PhantomData"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::Mutex","std::num::NonZeroI8","std::vec::Vec","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::rc::Rc","std::net::SocketAddrV4","std::collections::VecDeque","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::ffi::CString","std::time::Duration","std::path::PathBuf","std::marker::PhantomData","std::boxed::Box","std::option::Option","std::num::NonZeroU8","std::sync::RwLock","std::sync::Arc","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::collections::BinaryHeap","std::collections::HashSet","std::collections::HashMap","std::num::NonZeroU16","std::num::NonZeroI32","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::time::SystemTime","std::result::Result","std::cell::Cell","std::num::NonZeroI64","std::string::String","std::num::NonZeroU128","std::net::SocketAddrV6","std::ops::Range","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::collections::BTreeMap","std::collections::Bound","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::net::Ipv6Addr","std::sync::atomic::AtomicI16"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::SocketAddrV4","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::collections::HashMap","std::result::Result","std::num::NonZeroI64","std::sync::Mutex","std::collections::HashSet","std::num::NonZeroU32","std::net::IpAddr","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::cell::Cell","std::sync::atomic::AtomicBool","std::sync::Arc","std::ops::Range","std::num::NonZeroI32","std::boxed::Box","std::sync::RwLock","std::cell::RefCell","std::net::Ipv4Addr","std::borrow::Cow","std::num::NonZeroU8","std::ffi::CString","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::option::Option","std::collections::Bound","std::net::SocketAddrV6","std::path::PathBuf","std::marker::PhantomData","std::time::Duration","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::vec::Vec","std::string::String","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::num::NonZeroI8","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::rc::Rc","std::collections::VecDeque","std::ops::RangeInclusive"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicU32","std::cell::Cell","std::sync::atomic::AtomicI64","std::sync::Mutex","std::num::NonZeroU16","std::time::Duration","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::result::Result","std::num::NonZeroI32","std::num::NonZeroIsize","std::collections::HashMap","std::collections::HashSet","std::time::SystemTime","std::string::String","std::vec::Vec","std::collections::BinaryHeap","std::num::NonZeroI64","std::collections::BTreeMap","std::ffi::CString","std::num::NonZeroI128","std::net::Ipv4Addr","std::num::NonZeroU128","std::ops::RangeInclusive","std::ops::Range","std::marker::PhantomData","std::net::SocketAddrV6","std::net::IpAddr","std::net::SocketAddrV4","std::boxed::Box","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::borrow::Cow","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::net::SocketAddr","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroU8","std::path::PathBuf","std::option::Option","std::collections::Bound","std::sync::atomic::AtomicBool","std::rc::Rc","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::sync::RwLock","std::net::Ipv6Addr","std::collections::VecDeque","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::num::NonZeroI16"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::collections::HashSet","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicUsize","std::result::Result","std::option::Option","std::net::IpAddr","std::collections::BTreeSet","std::time::Duration","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::sync::Arc","std::net::Ipv6Addr","std::rc::Rc","std::num::NonZeroIsize","std::ops::RangeInclusive","std::collections::BinaryHeap","std::num::NonZeroI32","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::ops::Range","std::boxed::Box","std::borrow::Cow","std::path::PathBuf","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::cell::Cell","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::time::SystemTime","std::collections::Bound","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::string::String","std::vec::Vec","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::net::SocketAddr","std::num::NonZeroI16","std::collections::VecDeque","std::ffi::CString","std::sync::Mutex","std::collections::HashMap","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroI64","std::cell::RefCell","std::num::NonZeroU32","std::sync::RwLock","std::sync::atomic::AtomicU32"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C, D, E, F, G, H, I, J)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J)>::encode(p0, p1);
+<(A, B, C, D, E, F, G, H, I, J)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K)>::encode":{"A":["std::marker::Sized","enc::Encode"],"B":["std::marker::Sized","enc::Encode"],"C":["enc::Encode","std::marker::Sized"],"D":["std::marker::Sized","enc::Encode"],"E":["enc::Encode","std::marker::Sized"],"F":["enc::Encode","std::marker::Sized"],"G":["std::marker::Sized","enc::Encode"],"H":["std::marker::Sized","enc::Encode"],"I":["enc::Encode","std::marker::Sized"],"J":["enc::Encode","std::marker::Sized"],"K":["std::marker::Sized","enc::Encode"],"_E":["std::marker::Sized","enc::Encoder"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"K":["std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"],"V":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized","std::cmp::Ord"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::collections::HashMap":{"K":["enc::Encode","std::hash::Hash","de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Eq"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"T":["de::BorrowDecode","std::hash::Hash","enc::Encode","std::marker::Sized","std::cmp::Eq","de::Decode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Varint","config::Configuration","std::clone::impls::<impl std::clone::Clone for &T>","config::Limit","config::BigEndian","config::Fixint","config::LittleEndian"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","features::impl_alloc::VecWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K)>::encode":{"A":["std::num::NonZeroI16","std::ops::Range","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::option::Option","std::sync::atomic::AtomicI64","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroU128","std::collections::BTreeSet","std::collections::HashSet","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::cell::Cell","std::collections::BTreeMap","enc::impls::<impl enc::Encode for &'a T>","std::sync::Mutex","std::num::NonZeroI128","std::num::NonZeroU64","std::string::String","std::num::NonZeroIsize","std::num::NonZeroI8","std::cell::RefCell","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::borrow::Cow","std::time::Duration","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::time::SystemTime","std::vec::Vec","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::net::IpAddr","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::result::Result","std::sync::atomic::AtomicI32","std::collections::HashMap","std::num::NonZeroU16","std::net::Ipv6Addr","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::rc::Rc","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroU8","std::ffi::CString","std::path::PathBuf","std::boxed::Box","std::collections::Bound","std::sync::RwLock","std::sync::atomic::AtomicU64"],"B":["std::marker::PhantomData","std::collections::BTreeMap","enc::impls::<impl enc::Encode for &'a T>","std::vec::Vec","std::rc::Rc","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::boxed::Box","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::string::String","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::ops::RangeInclusive","std::num::NonZeroU32","std::num::NonZeroI64","std::time::SystemTime","std::collections::BTreeSet","std::result::Result","std::net::Ipv4Addr","std::ffi::CString","std::collections::HashSet","std::num::NonZeroI32","std::cell::RefCell","std::sync::RwLock","std::sync::atomic::AtomicI64","std::cell::Cell","std::num::NonZeroIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::collections::Bound","std::option::Option","std::borrow::Cow","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::collections::HashMap","std::net::SocketAddrV6","std::num::NonZeroU64","std::sync::Mutex","std::num::NonZeroU128","std::ops::Range","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroI16","std::time::Duration","std::num::NonZeroI8","std::net::SocketAddrV4","std::path::PathBuf","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::net::IpAddr"],"C":["std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::rc::Rc","std::net::SocketAddrV6","std::marker::PhantomData","std::time::Duration","std::sync::atomic::AtomicU16","std::string::String","std::cell::RefCell","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::borrow::Cow","std::option::Option","std::collections::HashMap","std::num::NonZeroU8","std::num::NonZeroU64","std::result::Result","std::collections::HashSet","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::sync::Mutex","std::cell::Cell","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::num::NonZeroI16","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::time::SystemTime","std::num::NonZeroU32","std::collections::BTreeMap","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::ops::Range","std::boxed::Box","std::sync::Arc","std::net::IpAddr","std::num::NonZeroI32","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::collections::Bound","std::sync::atomic::AtomicI32","std::sync::RwLock","std::num::NonZeroIsize","std::path::PathBuf","std::vec::Vec","std::collections::BTreeSet","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroU128"],"D":["std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::num::NonZeroI32","std::rc::Rc","std::option::Option","std::ops::RangeInclusive","std::num::NonZeroI128","std::sync::RwLock","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::time::Duration","std::cell::RefCell","std::boxed::Box","std::num::NonZeroU128","std::sync::Mutex","std::time::SystemTime","std::borrow::Cow","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::collections::HashSet","enc::impls::<impl enc::Encode for &'a T>","std::collections::BTreeMap","std::ffi::CString","std::cell::Cell","std::collections::Bound","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::net::IpAddr","std::sync::atomic::AtomicI8","std::ops::Range","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::path::PathBuf","std::result::Result","std::string::String","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::marker::PhantomData","std::num::NonZeroU8","std::net::SocketAddrV4","std::sync::Arc","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::vec::Vec","std::num::NonZeroU32","std::net::SocketAddr"],"E":["std::num::NonZeroU64","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::vec::Vec","std::time::Duration","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::collections::Bound","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::borrow::Cow","std::collections::BTreeMap","std::num::NonZeroU32","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::net::SocketAddrV4","std::collections::HashMap","std::net::IpAddr","std::ops::Range","std::num::NonZeroIsize","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::path::PathBuf","std::time::SystemTime","std::boxed::Box","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::result::Result","std::sync::Mutex","std::marker::PhantomData","std::collections::HashSet","std::sync::Arc","std::num::NonZeroI128","std::num::NonZeroI8","std::cell::Cell","std::string::String","std::net::SocketAddrV6","std::sync::RwLock","std::cell::RefCell","std::rc::Rc","enc::impls::<impl enc::Encode for &'a T>","std::collections::BinaryHeap","std::collections::VecDeque","std::option::Option","std::num::NonZeroI16"],"F":["std::num::NonZeroU128","std::collections::BTreeSet","std::net::SocketAddr","std::net::Ipv6Addr","std::time::Duration","std::sync::Mutex","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::path::PathBuf","std::sync::RwLock","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::collections::Bound","std::ops::RangeInclusive","std::collections::HashSet","std::ops::Range","std::collections::BinaryHeap","std::collections::VecDeque","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::num::NonZeroI8","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::ffi::CString","std::cell::RefCell","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::collections::HashMap","std::net::Ipv4Addr","std::cell::Cell","std::sync::atomic::AtomicI64","std::rc::Rc","std::time::SystemTime","std::net::IpAddr","std::sync::Arc","std::num::NonZeroU32","std::option::Option","std::result::Result","enc::impls::<impl enc::Encode for &'a T>","std::string::String","std::borrow::Cow","std::boxed::Box","std::num::NonZeroU64","std::num::NonZeroU8","std::num::NonZeroI16","std::vec::Vec","std::sync::atomic::AtomicI16"],"G":["std::ops::Range","std::time::Duration","std::vec::Vec","std::path::PathBuf","std::num::NonZeroU16","std::net::Ipv4Addr","std::net::IpAddr","std::sync::atomic::AtomicU8","std::collections::Bound","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::sync::Arc","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::sync::Mutex","std::collections::HashMap","std::boxed::Box","std::collections::BinaryHeap","std::collections::VecDeque","std::net::SocketAddrV4","std::collections::BTreeSet","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::num::NonZeroI16","std::marker::PhantomData","std::string::String","std::rc::Rc","std::ops::RangeInclusive","std::num::NonZeroU8","std::result::Result","std::collections::HashSet","std::sync::atomic::AtomicU32","std::option::Option","std::sync::RwLock","std::cell::Cell","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::num::NonZeroU128","std::time::SystemTime","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::ffi::CString","std::num::NonZeroU64","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::borrow::Cow","std::net::Ipv6Addr","enc::impls::<impl enc::Encode for &'a T>"],"H":["std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::string::String","std::collections::VecDeque","std::sync::Arc","std::num::NonZeroU32","std::cell::RefCell","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::borrow::Cow","std::num::NonZeroI128","std::ops::RangeInclusive","std::num::NonZeroUsize","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::time::SystemTime","std::sync::atomic::AtomicBool","std::ffi::CString","std::result::Result","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroI16","std::num::NonZeroIsize","std::num::NonZeroI32","std::collections::HashSet","std::net::SocketAddrV4","std::num::NonZeroI8","std::option::Option","std::vec::Vec","std::path::PathBuf","std::num::NonZeroU8","std::collections::HashMap","std::sync::atomic::AtomicU32","std::collections::Bound","std::sync::atomic::AtomicU16","std::rc::Rc","std::time::Duration","enc::impls::<impl enc::Encode for &'a T>","std::sync::RwLock","std::net::IpAddr","std::net::SocketAddrV6","std::collections::BTreeSet","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::boxed::Box","std::num::NonZeroU16","std::collections::BinaryHeap","std::net::SocketAddr","std::sync::Mutex","std::ops::Range","std::num::NonZeroU64","std::marker::PhantomData","std::sync::atomic::AtomicUsize"],"I":["std::num::NonZeroU128","std::path::PathBuf","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::collections::HashSet","std::sync::Arc","std::num::NonZeroI8","std::collections::BinaryHeap","std::num::NonZeroIsize","std::collections::HashMap","std::net::IpAddr","std::marker::PhantomData","std::num::NonZeroU64","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU32","std::collections::BTreeMap","std::collections::BTreeSet","std::sync::RwLock","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroUsize","std::option::Option","std::time::SystemTime","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::net::Ipv4Addr","std::borrow::Cow","std::time::Duration","std::sync::Mutex","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::vec::Vec","std::sync::atomic::AtomicI32","std::rc::Rc","std::net::Ipv6Addr","std::ffi::CString","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::collections::Bound","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::result::Result","std::cell::RefCell","std::cell::Cell","std::boxed::Box","std::ops::Range","std::sync::atomic::AtomicI16","std::string::String","std::sync::atomic::AtomicU64"],"J":["std::collections::VecDeque","std::sync::atomic::AtomicU64","std::collections::HashSet","std::sync::atomic::AtomicI8","std::rc::Rc","std::sync::RwLock","std::sync::atomic::AtomicI32","std::cell::Cell","std::num::NonZeroU32","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::borrow::Cow","std::num::NonZeroU16","std::vec::Vec","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::num::NonZeroU64","std::net::Ipv4Addr","std::net::SocketAddrV6","std::path::PathBuf","std::num::NonZeroI128","std::num::NonZeroI8","std::net::Ipv6Addr","std::net::IpAddr","std::boxed::Box","std::option::Option","std::cell::RefCell","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::collections::BTreeSet","std::collections::BinaryHeap","std::collections::Bound","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::sync::Arc","std::sync::Mutex","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::time::Duration","std::string::String","std::collections::HashMap","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","enc::impls::<impl enc::Encode for &'a T>","std::net::SocketAddrV4","std::ops::Range","std::ffi::CString","std::result::Result","std::num::NonZeroU8","std::num::NonZeroIsize"],"K":["std::rc::Rc","std::collections::BinaryHeap","std::num::NonZeroU128","std::net::SocketAddr","std::collections::VecDeque","std::time::Duration","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::num::NonZeroU8","std::vec::Vec","std::cell::Cell","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroI16","std::num::NonZeroU32","std::string::String","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroI8","std::option::Option","std::sync::RwLock","std::sync::atomic::AtomicBool","std::collections::HashMap","std::ffi::CString","std::collections::BTreeSet","std::num::NonZeroI64","std::num::NonZeroU16","std::net::SocketAddrV6","std::ops::RangeInclusive","std::net::Ipv4Addr","std::borrow::Cow","enc::impls::<impl enc::Encode for &'a T>","std::sync::Arc","std::net::IpAddr","std::sync::Mutex","std::sync::atomic::AtomicU16","std::cell::RefCell","std::collections::HashSet","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::boxed::Box","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::collections::Bound","std::ops::Range","std::num::NonZeroIsize","std::result::Result","std::sync::atomic::AtomicU64"],"_E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::stdio::StdoutRaw","std::io::Cursor<&mut [u8]>","std::io::StdoutLock<'_>","std::process::ChildStdin","&std::fs::File","std::boxed::Box<W>","std::fs::File","&std::io::Stdout","std::io::stdio::StderrRaw","std::io::Cursor<[u8; N]>","std::io::LineWriter<W>","std::net::TcpStream","&std::net::TcpStream","&'a std::os::unix::net::UnixStream","&std::io::Stderr","std::sys::unix::stdio::Stderr","std::io::impls::<impl std::io::Write for &mut W>","std::io::Sink","std::sys::unix::stdio::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Stdout","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Stderr","std::vec::Vec<u8, A>","std::io::BufWriter<W>","std::io::StderrLock<'_>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<std::vec::Vec<u8, A>>","std::collections::VecDeque<u8, A>","std::io::BorrowedCursor<'a>","&std::process::ChildStdin","&std::io::Sink","std::os::unix::net::UnixStream"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::CStr","<T as std::borrow::ToOwned>","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroI32","std::net::IpAddr","std::num::NonZeroU64","std::num::NonZeroUsize","std::num::NonZeroU128","std::num::NonZeroU16","std::num::NonZeroI16","std::net::Ipv4Addr","std::option::Option","std::cell::RefCell","std::net::SocketAddr","std::num::NonZeroU8","std::cell::Cell","std::ffi::CString","std::sync::Arc","std::string::String","std::path::PathBuf"],"V":["std::net::Ipv4Addr","std::option::Option","std::time::Duration","std::num::NonZeroIsize","std::sync::Arc","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::collections::Bound","std::cell::RefCell","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::rc::Rc","std::boxed::Box","std::marker::PhantomData","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroU16","std::num::NonZeroU8","std::net::IpAddr","std::sync::atomic::AtomicI16","std::ffi::CString","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::result::Result","std::string::String","std::num::NonZeroI128","std::num::NonZeroI32","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::collections::HashSet","std::num::NonZeroI16","std::num::NonZeroU128","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::borrow::Cow","std::sync::RwLock","std::ops::Range","std::net::SocketAddrV6","std::num::NonZeroI64","std::sync::Mutex","std::collections::BTreeSet","std::path::PathBuf","std::num::NonZeroUsize","std::time::SystemTime","std::vec::Vec","std::net::SocketAddrV4","std::cell::Cell","std::ops::RangeInclusive"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::path::PathBuf","std::num::NonZeroI64","std::time::Duration","std::sync::Arc","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroI128","std::ffi::CString","std::net::SocketAddrV6","std::option::Option","std::net::SocketAddrV4","std::num::NonZeroI16","std::num::NonZeroU32","std::net::Ipv4Addr","std::time::SystemTime","std::num::NonZeroU128","std::net::SocketAddr","std::marker::PhantomData","std::cell::Cell","std::net::IpAddr","std::num::NonZeroI8"]},"std::collections::BinaryHeap":{"T":["std::cell::RefCell","std::net::SocketAddrV6","std::net::Ipv4Addr","std::num::NonZeroU16","std::num::NonZeroUsize","std::num::NonZeroU32","std::net::IpAddr","std::sync::Arc","std::cell::Cell","std::string::String","std::num::NonZeroI16","std::num::NonZeroIsize","std::num::NonZeroU8","std::num::NonZeroI8","std::net::Ipv6Addr","std::num::NonZeroI64","std::time::SystemTime","std::time::Duration","std::option::Option","std::ffi::CString","std::num::NonZeroI32","std::num::NonZeroU128"]},"std::collections::Bound":{"T":["std::net::Ipv6Addr","std::num::NonZeroI8","std::time::SystemTime","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroU64","std::collections::BTreeSet","std::cell::RefCell","std::vec::Vec","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::num::NonZeroI64","std::collections::BTreeMap","std::net::SocketAddrV6","std::sync::RwLock","std::cell::Cell","std::string::String","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::collections::HashMap","std::option::Option","std::num::NonZeroU16","std::net::IpAddr","std::collections::HashSet","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::path::PathBuf","std::ops::Range","std::sync::atomic::AtomicU8","std::boxed::Box","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::collections::BinaryHeap","std::num::NonZeroU8","std::result::Result","std::num::NonZeroIsize","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::rc::Rc","std::sync::atomic::AtomicU16","std::collections::Bound","std::marker::PhantomData","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::borrow::Cow","std::num::NonZeroI128","std::sync::Mutex","std::sync::Arc","std::time::Duration"]},"std::collections::HashMap":{"K":["std::num::NonZeroI8","std::net::IpAddr","std::rc::Rc","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroI64","std::net::Ipv6Addr","std::net::SocketAddrV4","std::string::String","std::num::NonZeroU16","std::path::PathBuf","std::num::NonZeroU128","std::num::NonZeroI16","std::net::Ipv4Addr","std::num::NonZeroU64","std::time::SystemTime","std::num::NonZeroU32","std::time::Duration"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::ops::Range","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::sync::RwLock","std::net::SocketAddrV6","std::net::SocketAddr","std::option::Option","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::ffi::CString","std::sync::Arc","std::sync::Mutex","std::time::SystemTime","std::sync::atomic::AtomicI16","std::rc::Rc","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::result::Result","std::num::NonZeroU8","std::num::NonZeroU32","std::borrow::Cow","std::cell::RefCell","std::num::NonZeroI8","std::collections::VecDeque","std::ops::RangeInclusive","std::path::PathBuf","std::collections::Bound","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::vec::Vec","std::num::NonZeroUsize","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::num::NonZeroI32","std::net::IpAddr","std::num::NonZeroU128","std::num::NonZeroU64","std::net::SocketAddrV4","std::string::String","std::sync::atomic::AtomicI64","std::collections::HashMap","std::cell::Cell","std::collections::HashSet","std::time::Duration","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::boxed::Box","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::num::NonZeroU16"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::path::PathBuf","std::time::SystemTime","std::num::NonZeroU32","std::net::Ipv6Addr","std::net::IpAddr","std::num::NonZeroU128","std::num::NonZeroU8","std::string::String","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroI16","std::num::NonZeroI8","std::net::Ipv4Addr","std::collections::Bound","std::num::NonZeroUsize"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::cell::RefCell","std::vec::Vec","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::borrow::Cow","std::ops::Range","std::collections::HashMap","std::collections::BTreeMap","std::time::SystemTime","std::collections::Bound","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::sync::Mutex","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::cell::Cell","std::result::Result","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::option::Option","std::num::NonZeroUsize","std::sync::RwLock","std::string::String","std::sync::Arc","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::collections::VecDeque","std::collections::BinaryHeap","std::boxed::Box","std::path::PathBuf","std::rc::Rc","std::ops::RangeInclusive","std::num::NonZeroI16","std::collections::HashSet","std::collections::BTreeSet","std::marker::PhantomData","std::num::NonZeroI128","std::ffi::CString","std::net::Ipv4Addr","std::net::IpAddr","std::num::NonZeroIsize","std::net::Ipv6Addr"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::num::NonZeroU32","std::ops::Range","std::boxed::Box","std::cell::Cell","std::option::Option","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::ops::RangeInclusive","std::marker::PhantomData","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::sync::RwLock","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroU128","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::net::Ipv4Addr","std::collections::BTreeSet","std::sync::Mutex","std::path::PathBuf","std::collections::BTreeMap","std::num::NonZeroIsize","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::collections::HashMap","std::ffi::CString","std::num::NonZeroU16","std::time::SystemTime","std::collections::HashSet","std::num::NonZeroI128","std::string::String","std::sync::Arc","std::collections::BinaryHeap","std::rc::Rc","std::sync::atomic::AtomicU16","std::result::Result","std::num::NonZeroU64","std::borrow::Cow","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::collections::Bound","std::vec::Vec","std::time::Duration","std::num::NonZeroI16","std::net::Ipv6Addr"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::VecDeque","std::result::Result","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::collections::HashSet","std::sync::atomic::AtomicU64","std::borrow::Cow","std::num::NonZeroI32","std::boxed::Box","std::ops::Range","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::collections::Bound","std::ops::RangeInclusive","std::time::SystemTime","std::rc::Rc","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::num::NonZeroIsize","std::marker::PhantomData","std::sync::Arc","std::option::Option","std::time::Duration","std::vec::Vec","std::net::SocketAddrV6","std::string::String","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::ffi::CString","std::path::PathBuf","std::collections::BTreeSet","std::num::NonZeroUsize","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::collections::HashMap","std::sync::atomic::AtomicI64","std::num::NonZeroU16","std::cell::RefCell","std::collections::BinaryHeap","std::sync::RwLock","std::num::NonZeroU128","std::sync::Mutex","std::net::IpAddr","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::cell::Cell","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroI64"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::net::SocketAddrV6","std::boxed::Box","std::cell::RefCell","std::option::Option","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::collections::BTreeSet","std::net::IpAddr","std::sync::RwLock","std::num::NonZeroUsize","std::num::NonZeroI32","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::num::NonZeroI16","std::sync::Mutex","std::collections::HashMap","std::time::SystemTime","std::path::PathBuf","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::collections::VecDeque","std::result::Result","std::sync::Arc","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::ops::Range","std::time::Duration","std::sync::atomic::AtomicI32","std::vec::Vec","std::num::NonZeroU128","std::collections::BinaryHeap","std::ffi::CString","std::collections::HashSet","std::net::Ipv6Addr","std::cell::Cell","std::num::NonZeroU64","std::num::NonZeroI64","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::net::Ipv4Addr","std::collections::Bound","std::num::NonZeroU8","std::collections::BTreeMap","std::num::NonZeroU32","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::string::String","std::borrow::Cow","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::rc::Rc"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C, D, E, F, G, H, I, J, K)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K)>::encode(p0, p1);
+<(A, B, C, D, E, F, G, H, I, J, K)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L)>::encode":{"A":["enc::Encode","std::marker::Sized"],"B":["enc::Encode","std::marker::Sized"],"C":["std::marker::Sized","enc::Encode"],"D":["enc::Encode","std::marker::Sized"],"E":["std::marker::Sized","enc::Encode"],"F":["std::marker::Sized","enc::Encode"],"G":["std::marker::Sized","enc::Encode"],"H":["std::marker::Sized","enc::Encode"],"I":["enc::Encode","std::marker::Sized"],"J":["enc::Encode","std::marker::Sized"],"K":["enc::Encode","std::marker::Sized"],"L":["std::marker::Sized","enc::Encode"],"_E":["std::marker::Sized","enc::Encoder"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::BorrowDecode","enc::Encode","de::Decode","std::cmp::Ord","std::marker::Sized"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["enc::Encode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Ord"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","std::marker::Sized","enc::Encode","de::BorrowDecode","std::hash::Hash","de::Decode"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["std::cmp::Eq","std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::BigEndian","config::Configuration","config::NoLimit","config::Fixint","std::clone::impls::<impl std::clone::Clone for *mut T>","config::LittleEndian","config::Varint"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_alloc::VecWriter","features::impl_std::IoWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L)>::encode":{"A":["std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::boxed::Box","std::num::NonZeroI32","std::ops::Range","std::sync::atomic::AtomicIsize","std::time::Duration","std::net::Ipv4Addr","std::collections::BinaryHeap","std::option::Option","std::path::PathBuf","std::net::IpAddr","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::num::NonZeroI128","std::collections::HashSet","std::num::NonZeroU32","std::borrow::Cow","std::rc::Rc","std::num::NonZeroI64","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::cell::Cell","std::result::Result","std::collections::HashMap","std::num::NonZeroU64","std::collections::Bound","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::sync::Mutex","std::ffi::CString","std::sync::RwLock","std::vec::Vec","std::ops::RangeInclusive","std::num::NonZeroU8","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::collections::BTreeSet","std::num::NonZeroI16","enc::impls::<impl enc::Encode for &'a T>","std::string::String","std::collections::BTreeMap","std::num::NonZeroI8","std::cell::RefCell","std::sync::atomic::AtomicI32","std::sync::Arc"],"B":["std::num::NonZeroI128","std::ffi::CString","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::ops::Range","std::num::NonZeroU32","std::collections::Bound","std::num::NonZeroUsize","std::collections::BTreeSet","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::boxed::Box","std::num::NonZeroI16","std::result::Result","std::sync::atomic::AtomicU64","std::borrow::Cow","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::net::IpAddr","std::cell::Cell","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::sync::Mutex","std::ops::RangeInclusive","std::time::Duration","std::collections::VecDeque","std::sync::Arc","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::sync::RwLock","std::collections::HashMap","std::collections::HashSet","std::num::NonZeroU16","std::marker::PhantomData","std::collections::BinaryHeap","std::num::NonZeroU128","std::time::SystemTime","std::vec::Vec","std::path::PathBuf","std::num::NonZeroU8","std::net::Ipv6Addr","std::rc::Rc","std::num::NonZeroIsize","std::collections::BTreeMap","std::option::Option","std::sync::atomic::AtomicI8","std::string::String","std::num::NonZeroI8","std::net::SocketAddrV6","std::net::SocketAddrV4","std::num::NonZeroU64","std::sync::atomic::AtomicI32"],"C":["std::net::SocketAddrV4","std::option::Option","std::collections::VecDeque","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::sync::Mutex","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::collections::BinaryHeap","std::time::Duration","std::time::SystemTime","std::ops::Range","std::num::NonZeroI128","std::sync::atomic::AtomicI8","std::sync::Arc","std::ops::RangeInclusive","std::net::Ipv6Addr","std::string::String","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::cell::Cell","std::boxed::Box","std::collections::BTreeMap","std::result::Result","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::path::PathBuf","std::collections::HashSet","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::num::NonZeroIsize","std::borrow::Cow","std::collections::BTreeSet","std::num::NonZeroI16","std::rc::Rc","std::sync::atomic::AtomicU32","std::vec::Vec","std::net::SocketAddrV6","std::ffi::CString","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::sync::RwLock","std::num::NonZeroU128","std::collections::Bound","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroU64","std::collections::HashMap","std::cell::RefCell"],"D":["std::net::IpAddr","std::collections::BTreeMap","std::vec::Vec","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::collections::BTreeSet","std::num::NonZeroU128","std::collections::VecDeque","std::option::Option","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::sync::Mutex","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::ffi::CString","std::num::NonZeroI64","std::cell::RefCell","std::result::Result","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::num::NonZeroU32","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroU16","std::string::String","std::path::PathBuf","std::sync::atomic::AtomicI16","std::time::SystemTime","std::collections::Bound","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::rc::Rc","std::sync::atomic::AtomicBool","std::collections::HashSet","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroI128","std::time::Duration","std::sync::RwLock","std::ops::Range","std::sync::Arc","std::cell::Cell","std::boxed::Box","std::borrow::Cow","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::num::NonZeroIsize","std::marker::PhantomData"],"E":["std::collections::HashSet","std::ops::Range","std::cell::RefCell","std::collections::BTreeSet","std::collections::BinaryHeap","std::num::NonZeroI32","std::net::SocketAddrV4","std::collections::BTreeMap","std::collections::VecDeque","std::vec::Vec","std::num::NonZeroU32","std::result::Result","std::net::Ipv6Addr","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::sync::Arc","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::net::SocketAddrV6","std::num::NonZeroU16","std::cell::Cell","std::string::String","std::time::Duration","std::time::SystemTime","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::collections::Bound","std::num::NonZeroI64","std::num::NonZeroI128","std::borrow::Cow","std::num::NonZeroU64","std::sync::Mutex","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU8","std::option::Option","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::ffi::CString","std::num::NonZeroU128","std::rc::Rc","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::sync::RwLock","std::net::Ipv4Addr","std::collections::HashMap","std::path::PathBuf","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::boxed::Box","std::marker::PhantomData"],"F":["std::net::SocketAddr","std::num::NonZeroIsize","std::boxed::Box","std::num::NonZeroU64","std::time::Duration","std::collections::Bound","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::rc::Rc","std::cell::RefCell","std::num::NonZeroI128","std::ops::RangeInclusive","std::borrow::Cow","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::ops::Range","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::path::PathBuf","std::collections::BTreeSet","std::net::SocketAddrV4","std::num::NonZeroI8","std::cell::Cell","std::sync::Mutex","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::vec::Vec","std::sync::atomic::AtomicI16","enc::impls::<impl enc::Encode for &'a T>","std::net::IpAddr","std::collections::HashMap","std::sync::Arc","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::option::Option","std::ffi::CString","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::net::SocketAddrV6","std::net::Ipv6Addr","std::string::String","std::num::NonZeroU128","std::collections::VecDeque","std::num::NonZeroU32","std::num::NonZeroU8","std::result::Result","std::sync::RwLock","std::collections::BinaryHeap","std::num::NonZeroI32","std::net::Ipv4Addr","std::time::SystemTime"],"G":["std::sync::atomic::AtomicU16","std::cell::RefCell","std::ops::Range","std::collections::BTreeMap","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::cell::Cell","std::num::NonZeroU128","std::net::SocketAddrV4","std::rc::Rc","std::collections::BinaryHeap","std::num::NonZeroI8","enc::impls::<impl enc::Encode for &'a T>","std::path::PathBuf","std::num::NonZeroUsize","std::sync::Arc","std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::string::String","std::sync::atomic::AtomicU64","std::collections::Bound","std::boxed::Box","std::num::NonZeroU16","std::collections::BTreeSet","std::num::NonZeroI128","std::borrow::Cow","std::result::Result","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::sync::RwLock","std::sync::atomic::AtomicU32","std::time::Duration","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::Mutex","std::net::Ipv6Addr","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::vec::Vec","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::num::NonZeroI64","std::net::IpAddr","std::collections::HashSet","std::collections::HashMap","std::option::Option","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::ffi::CString"],"H":["std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::option::Option","std::net::SocketAddr","std::time::SystemTime","std::collections::Bound","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::sync::RwLock","std::boxed::Box","std::num::NonZeroI64","std::net::IpAddr","std::collections::BTreeSet","std::rc::Rc","std::time::Duration","std::net::SocketAddrV6","std::ops::RangeInclusive","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::collections::HashMap","std::num::NonZeroI8","std::path::PathBuf","std::num::NonZeroU32","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::cell::Cell","std::net::Ipv6Addr","std::marker::PhantomData","std::num::NonZeroU16","std::collections::HashSet","std::num::NonZeroI128","std::collections::BTreeMap","std::num::NonZeroIsize","std::ops::Range","std::num::NonZeroU128","std::sync::atomic::AtomicI8","std::sync::Arc","std::sync::atomic::AtomicI16","std::sync::Mutex","std::result::Result","enc::impls::<impl enc::Encode for &'a T>","std::borrow::Cow","std::cell::RefCell","std::ffi::CString","std::net::SocketAddrV4","std::num::NonZeroI16","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::string::String","std::vec::Vec","std::sync::atomic::AtomicBool"],"I":["std::net::SocketAddrV4","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::num::NonZeroI8","std::net::SocketAddr","std::num::NonZeroU8","std::boxed::Box","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::borrow::Cow","std::cell::Cell","std::result::Result","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::collections::HashSet","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::num::NonZeroIsize","std::collections::HashMap","std::net::IpAddr","std::rc::Rc","std::num::NonZeroU128","std::option::Option","std::collections::Bound","std::cell::RefCell","std::net::Ipv6Addr","std::net::SocketAddrV6","std::num::NonZeroU64","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::sync::RwLock","std::collections::BTreeSet","std::num::NonZeroI128","std::sync::atomic::AtomicU32","std::time::Duration","std::string::String","std::sync::atomic::AtomicU16","std::sync::Mutex","std::vec::Vec","std::ops::RangeInclusive","std::path::PathBuf","std::ops::Range","std::collections::VecDeque","std::num::NonZeroUsize","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::collections::BinaryHeap","std::sync::Arc","std::num::NonZeroU16","std::ffi::CString","std::num::NonZeroI32","std::sync::atomic::AtomicU8","std::net::Ipv4Addr"],"J":["std::collections::BinaryHeap","std::sync::atomic::AtomicU16","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::option::Option","std::net::Ipv6Addr","std::ops::Range","std::sync::Arc","std::num::NonZeroIsize","std::rc::Rc","std::collections::BTreeMap","std::borrow::Cow","std::num::NonZeroI16","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::sync::Mutex","std::string::String","std::path::PathBuf","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::collections::HashMap","std::num::NonZeroU128","std::cell::RefCell","std::marker::PhantomData","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::collections::HashSet","std::net::Ipv4Addr","std::net::SocketAddrV6","std::time::Duration","std::net::SocketAddrV4","std::vec::Vec","std::collections::VecDeque","std::net::IpAddr","std::boxed::Box","std::collections::BTreeSet","std::ffi::CString","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::time::SystemTime","std::cell::Cell","std::result::Result","std::collections::Bound","std::num::NonZeroI32"],"K":["std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::num::NonZeroI16","std::num::NonZeroI8","std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroUsize","std::ops::Range","std::string::String","std::sync::RwLock","std::num::NonZeroI128","std::collections::BTreeSet","std::collections::BTreeMap","std::ffi::CString","std::sync::atomic::AtomicI16","std::cell::RefCell","std::num::NonZeroU64","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::option::Option","std::collections::HashSet","std::collections::BinaryHeap","std::vec::Vec","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroU128","std::sync::Mutex","enc::impls::<impl enc::Encode for &'a T>","std::ops::RangeInclusive","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::sync::Arc","std::cell::Cell","std::result::Result","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::path::PathBuf","std::num::NonZeroIsize","std::net::SocketAddrV6","std::time::Duration","std::num::NonZeroI64","std::collections::HashMap","std::collections::Bound","std::collections::VecDeque","std::boxed::Box","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::borrow::Cow","std::marker::PhantomData","std::num::NonZeroU16","std::rc::Rc"],"L":["std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::ops::Range","std::sync::atomic::AtomicIsize","std::string::String","std::net::Ipv6Addr","std::num::NonZeroUsize","std::num::NonZeroI8","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroU64","std::vec::Vec","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::boxed::Box","std::num::NonZeroIsize","std::collections::BTreeSet","std::cell::Cell","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::path::PathBuf","std::result::Result","std::net::SocketAddrV6","std::collections::HashMap","std::sync::atomic::AtomicU8","std::collections::HashSet","std::ops::RangeInclusive","std::option::Option","std::net::Ipv4Addr","std::collections::BTreeMap","std::sync::Arc","std::sync::atomic::AtomicI32","std::sync::Mutex","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::net::IpAddr","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::time::SystemTime","std::time::Duration","std::net::SocketAddr","std::num::NonZeroI16","std::borrow::Cow","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::collections::Bound","std::ffi::CString","std::sync::RwLock","enc::impls::<impl enc::Encode for &'a T>","std::rc::Rc"],"_E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::vec::Vec<u8, A>","std::io::Sink","std::sys::unix::stdio::Stderr","std::io::StderrLock<'_>","std::io::LineWriter<W>","std::os::unix::net::UnixStream","std::io::BorrowedCursor<'a>","&std::io::Sink","std::io::Stdout","&'a std::os::unix::net::UnixStream","std::io::StdoutLock<'_>","std::collections::VecDeque<u8, A>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::BufWriter<W>","std::io::Cursor<[u8; N]>","std::sys::unix::stdio::Stdout","&std::process::ChildStdin","std::io::Cursor<std::vec::Vec<u8, A>>","&std::io::Stderr","std::fs::File","std::io::stdio::StdoutRaw","std::io::Stderr","std::boxed::Box<W>","std::io::stdio::StderrRaw","std::io::Cursor<&mut [u8]>","std::net::TcpStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::net::TcpStream","std::process::ChildStdin","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::io::Stdout","&std::fs::File","std::io::impls::<impl std::io::Write for &mut W>"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","<T as std::borrow::ToOwned>","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::option::Option","std::num::NonZeroU8","std::marker::PhantomData","std::rc::Rc","std::time::SystemTime","std::ffi::CString","std::num::NonZeroU16","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroU128","std::net::IpAddr","std::num::NonZeroI32","std::path::PathBuf","std::num::NonZeroIsize","std::net::Ipv6Addr","std::cell::RefCell","std::num::NonZeroI16","std::cell::Cell","std::sync::Arc","std::net::SocketAddrV6"],"V":["std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::collections::HashSet","std::borrow::Cow","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::option::Option","std::num::NonZeroI32","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::sync::RwLock","std::collections::HashMap","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroI64","std::num::NonZeroI8","std::string::String","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::time::Duration","std::net::SocketAddrV4","std::boxed::Box","std::ops::RangeInclusive","std::collections::BinaryHeap","std::num::NonZeroUsize","std::net::SocketAddr","std::collections::Bound","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::net::IpAddr","std::sync::atomic::AtomicI32","std::rc::Rc","std::net::Ipv4Addr","std::ops::Range","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::sync::Arc","std::num::NonZeroI16","std::ffi::CString","std::net::Ipv6Addr","std::path::PathBuf","std::vec::Vec","std::collections::BTreeMap","std::time::SystemTime","std::num::NonZeroI128","std::cell::Cell","std::result::Result","std::sync::atomic::AtomicI16","std::sync::Mutex","std::sync::atomic::AtomicU32"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::path::PathBuf","std::num::NonZeroI32","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroU128","std::string::String","std::option::Option","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroI16","std::sync::Arc","std::num::NonZeroU16","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroI8","std::num::NonZeroI128","std::ffi::CString","std::cell::RefCell","std::cell::Cell"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddrV4","std::net::Ipv6Addr","std::ffi::CString","std::num::NonZeroI8","std::net::SocketAddr","std::path::PathBuf","std::num::NonZeroU64","std::string::String","std::option::Option","std::num::NonZeroU32","std::time::SystemTime","std::sync::Arc","std::num::NonZeroUsize","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroU16","std::cell::RefCell","std::net::Ipv4Addr","std::net::IpAddr","std::rc::Rc","std::marker::PhantomData"]},"std::collections::Bound":{"T":["std::collections::BinaryHeap","std::collections::HashSet","std::collections::HashMap","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::time::Duration","std::path::PathBuf","std::ops::RangeInclusive","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::num::NonZeroU8","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroIsize","std::collections::Bound","std::borrow::Cow","std::net::IpAddr","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::vec::Vec","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::num::NonZeroI8","std::result::Result","std::num::NonZeroU16","std::net::SocketAddrV4","std::boxed::Box","std::collections::BTreeSet","std::string::String","std::sync::Arc","std::sync::atomic::AtomicU64","std::rc::Rc","std::num::NonZeroI32","std::collections::BTreeMap","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::sync::Mutex","std::ops::Range","std::ffi::CString","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::num::NonZeroI16","std::collections::VecDeque","std::option::Option","std::time::SystemTime","std::sync::atomic::AtomicI64","std::sync::RwLock","std::sync::atomic::AtomicI16"]},"std::collections::HashMap":{"K":["std::net::IpAddr","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroU8","std::net::SocketAddr","std::ffi::CString","std::net::Ipv4Addr","std::path::PathBuf","std::num::NonZeroUsize","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroU16","std::marker::PhantomData","std::num::NonZeroU64"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::ops::RangeInclusive","std::string::String","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::option::Option","std::cell::Cell","std::collections::BinaryHeap","std::path::PathBuf","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::time::SystemTime","std::boxed::Box","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::sync::RwLock","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::num::NonZeroU128","std::ops::Range","std::time::Duration","std::sync::atomic::AtomicU32","std::result::Result","std::net::SocketAddrV4","std::ffi::CString","std::sync::atomic::AtomicIsize","std::collections::Bound","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::sync::Mutex","std::net::SocketAddrV6","std::num::NonZeroI8","std::collections::VecDeque","std::vec::Vec","std::num::NonZeroU64","std::collections::BTreeSet","std::num::NonZeroI16","std::rc::Rc","std::num::NonZeroI32","std::num::NonZeroI64","std::net::IpAddr","std::num::NonZeroI128","std::sync::Arc","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::num::NonZeroU8","std::num::NonZeroU16","std::collections::HashMap","std::cell::RefCell","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::num::NonZeroIsize","std::borrow::Cow","std::collections::HashSet"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroU64","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroIsize","std::net::Ipv6Addr","std::net::IpAddr","std::num::NonZeroU8","std::time::SystemTime","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroU16","std::string::String","std::marker::PhantomData","std::option::Option","std::sync::Arc","std::net::SocketAddrV4","std::num::NonZeroI8"]},"std::collections::VecDeque":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroI32","std::boxed::Box","std::ops::Range","std::time::Duration","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::option::Option","std::sync::atomic::AtomicU16","std::cell::RefCell","std::collections::BTreeMap","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::result::Result","std::net::Ipv4Addr","std::num::NonZeroI128","std::string::String","std::net::SocketAddr","std::ffi::CString","std::sync::Arc","std::collections::BTreeSet","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::time::SystemTime","std::num::NonZeroI16","std::num::NonZeroI64","std::collections::Bound","std::net::SocketAddrV4","std::num::NonZeroU32","std::sync::RwLock","std::collections::VecDeque","std::num::NonZeroUsize","std::cell::Cell","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::net::IpAddr","std::collections::HashMap","std::num::NonZeroI8","std::vec::Vec","std::sync::Mutex","std::path::PathBuf","std::rc::Rc","std::collections::HashSet","std::borrow::Cow","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::marker::PhantomData","std::sync::atomic::AtomicUsize"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::time::SystemTime","std::string::String","std::sync::Mutex","std::collections::BTreeSet","std::num::NonZeroU32","std::collections::BinaryHeap","std::num::NonZeroU16","std::time::Duration","std::collections::Bound","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::net::IpAddr","std::path::PathBuf","std::net::SocketAddr","std::cell::Cell","std::marker::PhantomData","std::ops::Range","std::sync::atomic::AtomicUsize","std::boxed::Box","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroI128","std::ops::RangeInclusive","std::result::Result","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::sync::RwLock","std::num::NonZeroI8","std::option::Option","std::num::NonZeroU64","std::net::Ipv4Addr","std::vec::Vec","std::ffi::CString","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::collections::HashMap","std::net::Ipv6Addr","std::net::SocketAddrV4","std::borrow::Cow","std::sync::atomic::AtomicU32","std::cell::RefCell","std::collections::HashSet","std::num::NonZeroU128","std::rc::Rc","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::num::NonZeroI16"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroI32","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::collections::HashMap","std::vec::Vec","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroU128","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::sync::Arc","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::ffi::CString","std::cell::RefCell","std::option::Option","std::sync::RwLock","std::rc::Rc","std::borrow::Cow","std::time::SystemTime","std::collections::VecDeque","std::net::IpAddr","std::num::NonZeroI16","std::cell::Cell","std::ops::Range","std::num::NonZeroU64","std::boxed::Box","std::ops::RangeInclusive","std::result::Result","std::num::NonZeroU32","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroIsize","std::string::String","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::collections::HashSet","std::num::NonZeroI8","std::num::NonZeroUsize","std::sync::Mutex","std::num::NonZeroI128","std::collections::Bound","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::path::PathBuf","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::time::Duration"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::num::NonZeroI8","std::cell::RefCell","std::time::Duration","std::boxed::Box","std::net::SocketAddrV6","std::ops::RangeInclusive","std::num::NonZeroI128","std::net::SocketAddr","std::path::PathBuf","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::vec::Vec","std::option::Option","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::num::NonZeroUsize","std::cell::Cell","std::sync::Arc","std::collections::VecDeque","std::sync::RwLock","std::time::SystemTime","std::sync::atomic::AtomicI64","std::result::Result","std::sync::Mutex","std::collections::Bound","std::sync::atomic::AtomicI8","std::ops::Range","std::marker::PhantomData","std::collections::HashMap","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::string::String","std::collections::BinaryHeap","std::num::NonZeroU16","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::collections::HashSet","std::borrow::Cow","std::num::NonZeroI64","std::collections::BTreeSet","std::rc::Rc","std::sync::atomic::AtomicU32","std::ffi::CString","std::num::NonZeroI32","std::num::NonZeroU8","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroIsize","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C, D, E, F, G, H, I, J, K, L)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L)>::encode(p0, p1);
+<(A, B, C, D, E, F, G, H, I, J, K, L)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::encode":{"A":["std::marker::Sized","enc::Encode"],"B":["std::marker::Sized","enc::Encode"],"C":["std::marker::Sized","enc::Encode"],"D":["std::marker::Sized","enc::Encode"],"E":["std::marker::Sized","enc::Encode"],"F":["std::marker::Sized","enc::Encode"],"G":["std::marker::Sized","enc::Encode"],"H":["std::marker::Sized","enc::Encode"],"I":["enc::Encode","std::marker::Sized"],"J":["std::marker::Sized","enc::Encode"],"K":["std::marker::Sized","enc::Encode"],"L":["std::marker::Sized","enc::Encode"],"M":["enc::Encode","std::marker::Sized"],"_E":["enc::Encoder","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized","std::cmp::Ord"],"V":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","std::cmp::Ord","de::Decode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode","std::cmp::Ord"]},"std::collections::Bound":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::HashMap":{"K":["std::marker::Sized","de::Decode","std::cmp::Eq","de::BorrowDecode","std::hash::Hash","enc::Encode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::HashSet":{"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"T":["de::Decode","std::hash::Hash","std::cmp::Eq","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::Configuration","config::NoLimit","config::Varint","config::BigEndian","std::clone::impls::<impl std::clone::Clone for &mut T>","config::LittleEndian","config::Fixint"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","enc::write::SizeWriter","features::impl_alloc::VecWriter","features::impl_std::IoWriter","enc::write::SliceWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::encode":{"A":["std::borrow::Cow","std::cell::RefCell","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroU64","std::collections::BinaryHeap","std::boxed::Box","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::path::PathBuf","std::collections::VecDeque","std::collections::HashMap","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::collections::Bound","std::net::SocketAddr","std::num::NonZeroU8","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::option::Option","std::time::Duration","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::collections::HashSet","std::result::Result","std::sync::Arc","std::time::SystemTime","std::string::String","std::num::NonZeroI16","std::collections::BTreeSet","std::collections::BTreeMap","std::num::NonZeroI128","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::ffi::CString","std::net::IpAddr","std::net::SocketAddrV6","enc::impls::<impl enc::Encode for &'a T>","std::ops::Range","std::cell::Cell","std::vec::Vec","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::sync::Mutex"],"B":["std::ops::Range","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::sync::Mutex","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::sync::RwLock","std::ops::RangeInclusive","std::marker::PhantomData","std::borrow::Cow","std::option::Option","std::num::NonZeroIsize","enc::impls::<impl enc::Encode for &'a T>","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::string::String","std::num::NonZeroI128","std::collections::Bound","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::time::SystemTime","std::collections::HashSet","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::path::PathBuf","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::cell::RefCell","std::net::SocketAddr","std::ffi::CString","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::num::NonZeroU16","std::vec::Vec","std::collections::BTreeMap","std::cell::Cell","std::boxed::Box","std::net::SocketAddrV6","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroI8","std::num::NonZeroI16","std::num::NonZeroU8","std::collections::HashMap","std::num::NonZeroI32","std::result::Result","std::rc::Rc"],"C":["std::string::String","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::cell::Cell","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::time::Duration","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::collections::BTreeSet","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::collections::HashMap","std::result::Result","std::collections::BinaryHeap","std::path::PathBuf","std::sync::atomic::AtomicI8","std::boxed::Box","std::sync::Arc","std::collections::Bound","std::num::NonZeroU64","std::net::IpAddr","std::num::NonZeroU8","std::num::NonZeroI64","std::ffi::CString","std::cell::RefCell","std::net::SocketAddrV4","std::num::NonZeroU128","std::borrow::Cow","std::time::SystemTime","std::sync::RwLock","std::num::NonZeroI8","std::collections::BTreeMap","std::num::NonZeroI128","std::num::NonZeroU16","std::ops::Range","std::sync::atomic::AtomicU32","std::sync::Mutex","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::vec::Vec","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::option::Option","std::net::Ipv6Addr","std::rc::Rc","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::collections::VecDeque"],"D":["std::net::SocketAddr","std::num::NonZeroU16","std::num::NonZeroI16","enc::impls::<impl enc::Encode for &'a T>","std::cell::RefCell","std::net::SocketAddrV4","std::collections::BTreeMap","std::option::Option","std::vec::Vec","std::cell::Cell","std::sync::atomic::AtomicIsize","std::result::Result","std::sync::atomic::AtomicI16","std::time::Duration","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::collections::HashMap","std::net::Ipv6Addr","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::string::String","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroIsize","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::collections::BTreeSet","std::boxed::Box","std::num::NonZeroI64","std::net::Ipv4Addr","std::borrow::Cow","std::collections::BinaryHeap","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroU128","std::ffi::CString","std::path::PathBuf","std::sync::Arc","std::sync::atomic::AtomicI64","std::collections::Bound","std::num::NonZeroI8","std::sync::Mutex","std::collections::HashSet","std::num::NonZeroI128","std::num::NonZeroU64","std::net::IpAddr","std::rc::Rc","std::num::NonZeroUsize","std::ops::Range","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::sync::RwLock","std::num::NonZeroU32"],"E":["std::collections::Bound","std::sync::atomic::AtomicI64","std::collections::HashMap","std::result::Result","std::net::SocketAddr","std::collections::BTreeSet","std::num::NonZeroI16","std::collections::BinaryHeap","std::num::NonZeroI32","std::num::NonZeroIsize","std::marker::PhantomData","std::num::NonZeroI64","enc::impls::<impl enc::Encode for &'a T>","std::ops::Range","std::sync::atomic::AtomicUsize","std::ffi::CString","std::num::NonZeroU8","std::collections::HashSet","std::sync::atomic::AtomicI32","std::time::SystemTime","std::net::Ipv6Addr","std::borrow::Cow","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::sync::Mutex","std::sync::RwLock","std::sync::Arc","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::option::Option","std::net::IpAddr","std::net::Ipv4Addr","std::boxed::Box","std::collections::BTreeMap","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::rc::Rc","std::string::String","std::path::PathBuf","std::num::NonZeroU16","std::time::Duration","std::cell::Cell","std::sync::atomic::AtomicU32","std::cell::RefCell","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroI8","std::vec::Vec","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16"],"F":["std::collections::HashMap","std::collections::VecDeque","std::collections::Bound","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::boxed::Box","std::net::SocketAddr","std::option::Option","std::net::SocketAddrV6","std::num::NonZeroI8","std::cell::Cell","std::num::NonZeroI128","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::vec::Vec","std::result::Result","std::string::String","std::num::NonZeroU16","std::sync::Arc","std::num::NonZeroU32","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::sync::RwLock","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::path::PathBuf","std::cell::RefCell","std::net::IpAddr","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::ffi::CString","std::rc::Rc","std::borrow::Cow","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::time::Duration","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::collections::BTreeMap","std::collections::HashSet","std::ops::Range","std::num::NonZeroIsize","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::sync::Mutex","std::time::SystemTime","std::ops::RangeInclusive","std::num::NonZeroU128","std::num::NonZeroU64"],"G":["std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::ops::RangeInclusive","std::collections::HashMap","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::option::Option","std::sync::Arc","std::time::SystemTime","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::net::Ipv4Addr","std::cell::RefCell","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::boxed::Box","std::net::IpAddr","std::num::NonZeroU64","std::collections::BTreeSet","std::result::Result","std::cell::Cell","std::net::Ipv6Addr","std::num::NonZeroIsize","std::collections::BTreeMap","std::net::SocketAddrV6","std::ops::Range","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::vec::Vec","std::num::NonZeroI8","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::collections::VecDeque","std::ffi::CString","std::num::NonZeroI64","std::sync::RwLock","std::path::PathBuf","std::borrow::Cow","std::num::NonZeroU128","std::marker::PhantomData","std::num::NonZeroU32","std::time::Duration","std::collections::HashSet","std::sync::atomic::AtomicI16","std::collections::Bound","std::num::NonZeroI128","std::string::String","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicI8","std::rc::Rc","std::num::NonZeroI16","std::sync::atomic::AtomicIsize"],"H":["enc::impls::<impl enc::Encode for &'a T>","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::net::SocketAddrV4","std::collections::BTreeSet","std::net::IpAddr","std::sync::Arc","std::num::NonZeroIsize","std::borrow::Cow","std::sync::atomic::AtomicI32","std::boxed::Box","std::string::String","std::result::Result","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::sync::RwLock","std::path::PathBuf","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::num::NonZeroU128","std::marker::PhantomData","std::option::Option","std::num::NonZeroI128","std::num::NonZeroI16","std::collections::HashSet","std::ops::RangeInclusive","std::collections::Bound","std::ops::Range","std::net::Ipv4Addr","std::collections::BTreeMap","std::cell::Cell","std::num::NonZeroUsize","std::num::NonZeroI8","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::num::NonZeroU64","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::time::Duration","std::ffi::CString","std::collections::VecDeque","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::rc::Rc","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::cell::RefCell","std::sync::Mutex","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::time::SystemTime","std::vec::Vec","std::collections::HashMap"],"I":["std::collections::BTreeMap","std::rc::Rc","std::sync::atomic::AtomicI64","std::sync::Mutex","std::ffi::CString","std::cell::Cell","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::boxed::Box","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::net::IpAddr","std::string::String","std::ops::RangeInclusive","std::time::Duration","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::option::Option","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::borrow::Cow","std::sync::atomic::AtomicU16","enc::impls::<impl enc::Encode for &'a T>","std::ops::Range","std::sync::RwLock","std::num::NonZeroU16","std::marker::PhantomData","std::num::NonZeroI32","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::num::NonZeroI8","std::net::SocketAddrV4","std::collections::BinaryHeap","std::collections::Bound","std::collections::HashSet","std::sync::Arc","std::num::NonZeroU32","std::result::Result","std::time::SystemTime","std::num::NonZeroI16","std::vec::Vec","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroU64","std::net::SocketAddrV6","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::collections::HashMap","std::net::Ipv6Addr"],"J":["std::rc::Rc","std::sync::Mutex","std::vec::Vec","std::net::SocketAddr","std::collections::BTreeMap","std::string::String","std::net::SocketAddrV4","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::borrow::Cow","std::cell::RefCell","std::net::IpAddr","std::ops::Range","std::result::Result","std::collections::BTreeSet","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::net::Ipv4Addr","std::path::PathBuf","std::boxed::Box","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::cell::Cell","std::collections::VecDeque","std::num::NonZeroUsize","std::sync::Arc","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::sync::RwLock","std::num::NonZeroI16","std::option::Option","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::collections::HashMap","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU64","std::time::Duration","std::num::NonZeroI64","std::ffi::CString","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::collections::Bound","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::collections::HashSet"],"K":["std::net::Ipv4Addr","std::collections::HashMap","std::num::NonZeroU8","std::num::NonZeroIsize","std::sync::atomic::AtomicI8","std::path::PathBuf","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::num::NonZeroU128","std::collections::BTreeSet","std::sync::Mutex","std::num::NonZeroI64","std::collections::BinaryHeap","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::borrow::Cow","std::sync::atomic::AtomicU64","std::vec::Vec","std::sync::RwLock","std::num::NonZeroI16","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::sync::Arc","std::ffi::CString","std::sync::atomic::AtomicBool","std::cell::RefCell","std::net::SocketAddrV4","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroI32","std::net::SocketAddrV6","std::collections::BTreeMap","std::result::Result","std::sync::atomic::AtomicU8","std::time::Duration","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::ops::Range","std::num::NonZeroI8","std::net::IpAddr","std::sync::atomic::AtomicIsize","enc::impls::<impl enc::Encode for &'a T>","std::option::Option","std::collections::Bound","std::marker::PhantomData","std::time::SystemTime","std::sync::atomic::AtomicI64","std::collections::HashSet","std::net::Ipv6Addr","std::rc::Rc","std::num::NonZeroU32","std::string::String","std::boxed::Box","std::sync::atomic::AtomicI32","std::ops::RangeInclusive"],"L":["std::path::PathBuf","std::num::NonZeroI64","std::num::NonZeroU32","std::num::NonZeroU128","std::net::Ipv6Addr","std::net::SocketAddrV6","std::num::NonZeroI16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::collections::VecDeque","std::num::NonZeroU16","std::sync::RwLock","std::string::String","std::vec::Vec","std::boxed::Box","std::sync::Mutex","std::collections::BTreeMap","std::collections::Bound","std::sync::atomic::AtomicI8","std::net::IpAddr","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::collections::HashMap","std::num::NonZeroI128","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroUsize","std::option::Option","std::collections::HashSet","std::collections::BTreeSet","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::ffi::CString","std::borrow::Cow","std::ops::Range","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::num::NonZeroIsize","std::net::Ipv4Addr","std::num::NonZeroI8","std::sync::Arc","std::result::Result","std::num::NonZeroU8","std::net::SocketAddr","std::cell::Cell","std::time::SystemTime","std::time::Duration","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::collections::BinaryHeap","std::sync::atomic::AtomicI16"],"M":["std::ops::RangeInclusive","std::net::Ipv6Addr","std::num::NonZeroU128","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::collections::HashMap","std::collections::HashSet","std::num::NonZeroI8","std::collections::Bound","std::num::NonZeroU64","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::ops::Range","std::net::Ipv4Addr","std::string::String","std::num::NonZeroU8","std::collections::VecDeque","std::vec::Vec","std::cell::RefCell","std::result::Result","std::num::NonZeroI64","std::cell::Cell","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::rc::Rc","std::num::NonZeroI128","std::num::NonZeroU16","std::time::SystemTime","std::num::NonZeroI32","std::num::NonZeroIsize","enc::impls::<impl enc::Encode for &'a T>","std::sync::RwLock","std::collections::BTreeSet","std::sync::Mutex","std::time::Duration","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::net::IpAddr","std::boxed::Box","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::marker::PhantomData","std::sync::Arc","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::ffi::CString","std::borrow::Cow"],"_E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Cursor<[u8; N]>","&std::io::Stdout","std::collections::VecDeque<u8, A>","std::boxed::Box<W>","&std::process::ChildStdin","&'a std::os::unix::net::UnixStream","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::io::Sink","std::io::stdio::StderrRaw","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::LineWriter<W>","std::process::ChildStdin","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::BufWriter<W>","std::vec::Vec<u8, A>","&std::net::TcpStream","std::io::impls::<impl std::io::Write for &mut W>","std::io::BorrowedCursor<'a>","std::io::stdio::StdoutRaw","std::sys::unix::stdio::Stderr","std::sys::unix::stdio::Stdout","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Sink","std::io::Cursor<&mut [u8]>","std::fs::File","std::os::unix::net::UnixStream","&std::fs::File","std::io::Stderr","std::io::Stdout","std::io::StdoutLock<'_>","std::io::StderrLock<'_>","&std::io::Stderr","std::net::TcpStream"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::path::Path","<T as std::borrow::ToOwned>","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroIsize","std::num::NonZeroI16","std::rc::Rc","std::marker::PhantomData","std::time::SystemTime","std::option::Option","std::num::NonZeroU8","std::net::SocketAddrV6","std::cell::RefCell","std::time::Duration","std::path::PathBuf","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroU16","std::num::NonZeroUsize","std::net::SocketAddr","std::ffi::CString","std::string::String","std::net::IpAddr","std::num::NonZeroI64","std::cell::Cell"],"V":["std::num::NonZeroUsize","std::sync::atomic::AtomicI16","std::num::NonZeroU64","std::net::Ipv4Addr","std::net::SocketAddrV4","std::rc::Rc","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::net::IpAddr","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::time::Duration","std::sync::atomic::AtomicU16","std::sync::Arc","std::net::SocketAddr","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::result::Result","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::ops::Range","std::time::SystemTime","std::marker::PhantomData","std::collections::BinaryHeap","std::num::NonZeroU16","std::boxed::Box","std::collections::Bound","std::ffi::CString","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::option::Option","std::borrow::Cow","std::net::Ipv6Addr","std::collections::HashMap","std::sync::RwLock","std::collections::VecDeque","std::num::NonZeroU32","std::cell::RefCell","std::collections::HashSet","std::collections::BTreeMap","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::string::String","std::num::NonZeroU128","std::num::NonZeroIsize","std::num::NonZeroI32","std::path::PathBuf","std::ops::RangeInclusive","std::cell::Cell","std::vec::Vec"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::Ipv4Addr","std::ffi::CString","std::sync::Arc","std::rc::Rc","std::option::Option","std::net::Ipv6Addr","std::path::PathBuf","std::cell::Cell","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroU16","std::num::NonZeroIsize","std::net::SocketAddrV6","std::num::NonZeroU32","std::num::NonZeroI128","std::net::SocketAddr"]},"std::collections::BinaryHeap":{"T":["std::net::Ipv4Addr","std::num::NonZeroI128","std::cell::Cell","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroI16","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroI64","std::num::NonZeroU8","std::net::Ipv6Addr","std::rc::Rc","std::num::NonZeroU16","std::net::IpAddr","std::num::NonZeroU32","std::cell::RefCell","std::net::SocketAddr","std::string::String","std::time::Duration","std::time::SystemTime","std::sync::Arc","std::num::NonZeroIsize","std::path::PathBuf","std::num::NonZeroI32"]},"std::collections::Bound":{"T":["std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::vec::Vec","std::sync::Mutex","std::net::Ipv6Addr","std::collections::HashSet","std::string::String","std::net::Ipv4Addr","std::sync::atomic::AtomicIsize","std::ffi::CString","std::num::NonZeroU128","std::num::NonZeroI8","std::ops::RangeInclusive","std::ops::Range","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroI16","std::time::Duration","std::collections::HashMap","std::sync::atomic::AtomicU8","std::net::IpAddr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::collections::Bound","std::num::NonZeroU16","std::rc::Rc","std::collections::VecDeque","std::cell::RefCell","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::num::NonZeroI64","std::sync::Arc","std::sync::RwLock","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::num::NonZeroI32","std::option::Option","std::cell::Cell","std::result::Result","std::net::SocketAddr","std::borrow::Cow","std::net::SocketAddrV4","std::path::PathBuf","std::boxed::Box","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::collections::BinaryHeap"]},"std::collections::HashMap":{"K":["std::marker::PhantomData","std::time::Duration","std::net::SocketAddrV4","std::net::SocketAddr","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroI8","std::string::String","std::num::NonZeroU16","std::rc::Rc","std::num::NonZeroUsize","std::num::NonZeroU128"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::option::Option","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::net::SocketAddrV6","std::cell::RefCell","std::path::PathBuf","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::collections::Bound","std::sync::Mutex","std::sync::RwLock","std::string::String","std::borrow::Cow","std::collections::HashMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::num::NonZeroI16","std::net::Ipv4Addr","std::time::Duration","std::num::NonZeroI8","std::boxed::Box","std::time::SystemTime","std::num::NonZeroI32","std::num::NonZeroIsize","std::ops::Range","std::rc::Rc","std::net::IpAddr","std::num::NonZeroU32","std::sync::Arc","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::collections::HashSet","std::num::NonZeroU64","std::num::NonZeroU8","std::num::NonZeroI64","std::ffi::CString","std::vec::Vec","std::sync::atomic::AtomicI16","std::result::Result","std::num::NonZeroU128","std::collections::BTreeSet","std::net::SocketAddrV4","std::collections::BTreeMap","std::collections::BinaryHeap","std::cell::Cell","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::collections::VecDeque","std::sync::atomic::AtomicUsize"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroU8","std::num::NonZeroIsize","std::rc::Rc","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroI128","std::net::SocketAddrV4","std::net::SocketAddrV6","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroU32","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroUsize","std::ffi::CString","std::time::SystemTime","std::string::String"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::borrow::Cow","std::string::String","std::sync::Arc","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::net::Ipv4Addr","std::cell::Cell","std::collections::BinaryHeap","std::num::NonZeroIsize","std::ops::RangeInclusive","std::marker::PhantomData","std::collections::Bound","std::num::NonZeroI64","std::collections::VecDeque","std::collections::BTreeMap","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::net::IpAddr","std::collections::BTreeSet","std::sync::Mutex","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::ops::Range","std::boxed::Box","std::net::SocketAddr","std::collections::HashMap","std::num::NonZeroU32","std::net::SocketAddrV4","std::num::NonZeroI8","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::sync::RwLock","std::net::SocketAddrV6","std::rc::Rc","std::num::NonZeroUsize","std::num::NonZeroU16","std::ffi::CString","std::sync::atomic::AtomicU64","std::cell::RefCell","std::sync::atomic::AtomicI8","std::collections::HashSet","std::result::Result","std::time::SystemTime","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::option::Option","std::sync::atomic::AtomicU16","std::time::Duration","std::vec::Vec","std::sync::atomic::AtomicIsize"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::RwLock","std::collections::VecDeque","std::option::Option","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::ops::Range","std::num::NonZeroU16","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::sync::Arc","std::sync::atomic::AtomicU8","std::result::Result","std::ffi::CString","std::collections::BTreeMap","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroIsize","std::time::SystemTime","std::num::NonZeroU64","std::collections::BinaryHeap","std::num::NonZeroI32","std::num::NonZeroI64","std::num::NonZeroU8","std::sync::Mutex","std::path::PathBuf","std::cell::RefCell","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::time::Duration","std::ops::RangeInclusive","std::vec::Vec","std::net::SocketAddr","std::cell::Cell","std::net::IpAddr","std::rc::Rc","std::sync::atomic::AtomicI64","std::collections::HashMap","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::string::String","std::boxed::Box","std::num::NonZeroUsize","std::net::Ipv4Addr","std::num::NonZeroU32","std::num::NonZeroI8","std::collections::HashSet","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::collections::Bound","std::num::NonZeroI128","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::borrow::Cow","std::sync::atomic::AtomicBool"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::num::NonZeroUsize","std::time::SystemTime","std::cell::Cell","std::borrow::Cow","std::net::SocketAddrV6","std::boxed::Box","std::string::String","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::sync::RwLock","std::net::SocketAddr","std::cell::RefCell","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::sync::Mutex","std::sync::atomic::AtomicI8","std::option::Option","std::collections::Bound","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::collections::HashMap","std::time::Duration","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroI32","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroU16","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::net::IpAddr","std::num::NonZeroI64","std::net::Ipv6Addr","std::collections::VecDeque","std::collections::BTreeSet","std::ops::Range","std::path::PathBuf","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::ffi::CString","std::rc::Rc","std::collections::BinaryHeap","std::num::NonZeroU128","std::sync::Arc","std::result::Result","std::vec::Vec","std::collections::HashSet"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::sync::atomic::AtomicU32","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::cell::Cell","std::vec::Vec","std::sync::atomic::AtomicI16","std::rc::Rc","std::sync::Mutex","std::string::String","std::ops::RangeInclusive","std::ffi::CString","std::boxed::Box","std::collections::BTreeSet","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::num::NonZeroU32","std::sync::RwLock","std::num::NonZeroI64","std::sync::Arc","std::sync::atomic::AtomicBool","std::num::NonZeroUsize","std::path::PathBuf","std::option::Option","std::collections::Bound","std::net::SocketAddr","std::num::NonZeroU16","std::time::SystemTime","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::result::Result","std::time::Duration","std::num::NonZeroU64","std::ops::Range","std::collections::HashMap","std::collections::HashSet","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::net::SocketAddrV4","std::sync::atomic::AtomicI64","std::num::NonZeroI16","std::cell::RefCell","std::num::NonZeroI32","std::collections::BTreeMap","std::num::NonZeroU8","std::num::NonZeroI8","std::net::IpAddr","std::net::Ipv4Addr","std::borrow::Cow","std::net::Ipv6Addr"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C, D, E, F, G, H, I, J, K, L, M)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::encode(p0, p1);
+<(A, B, C, D, E, F, G, H, I, J, K, L, M)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::encode":{"A":["enc::Encode","std::marker::Sized"],"B":["std::marker::Sized","enc::Encode"],"C":["std::marker::Sized","enc::Encode"],"D":["enc::Encode","std::marker::Sized"],"E":["std::marker::Sized","enc::Encode"],"F":["enc::Encode","std::marker::Sized"],"G":["std::marker::Sized","enc::Encode"],"H":["std::marker::Sized","enc::Encode"],"I":["std::marker::Sized","enc::Encode"],"J":["enc::Encode","std::marker::Sized"],"K":["enc::Encode","std::marker::Sized"],"L":["enc::Encode","std::marker::Sized"],"M":["std::marker::Sized","enc::Encode"],"N":["enc::Encode","std::marker::Sized"],"_E":["std::marker::Sized","enc::Encoder"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","std::cmp::Ord","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::Bound":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode","std::cmp::Eq","std::hash::Hash"],"S":["std::default::Default","std::hash::BuildHasher","std::marker::Sized"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::marker::Sized","enc::Encode","de::Decode","std::hash::Hash","std::cmp::Eq","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::Varint","config::BigEndian","std::clone::impls::<impl std::clone::Clone for &mut T>","config::LittleEndian","config::Limit","config::Configuration","config::Fixint"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter","features::impl_std::IoWriter","enc::write::SliceWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::encode":{"A":["std::net::Ipv4Addr","std::num::NonZeroU128","std::sync::Mutex","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI32","std::string::String","std::net::SocketAddrV6","std::option::Option","std::borrow::Cow","std::path::PathBuf","std::sync::atomic::AtomicU16","std::collections::BinaryHeap","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::result::Result","std::sync::atomic::AtomicU64","std::net::IpAddr","std::time::SystemTime","std::net::SocketAddr","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::time::Duration","std::ffi::CString","std::collections::HashMap","std::marker::PhantomData","std::sync::RwLock","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::ops::Range","std::collections::VecDeque","std::collections::Bound","std::num::NonZeroU16","std::vec::Vec","std::num::NonZeroI8","std::boxed::Box","std::num::NonZeroI128","std::num::NonZeroU8","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroI16","std::num::NonZeroUsize","std::collections::BTreeSet","std::cell::RefCell","std::rc::Rc","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::num::NonZeroI64","std::ops::RangeInclusive","std::net::Ipv6Addr","std::sync::Arc","std::sync::atomic::AtomicI16","std::cell::Cell","std::num::NonZeroI32"],"B":["std::num::NonZeroUsize","std::collections::HashMap","std::num::NonZeroU128","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::boxed::Box","std::sync::atomic::AtomicU64","std::string::String","std::time::Duration","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::vec::Vec","std::sync::Arc","std::ffi::CString","std::ops::Range","std::collections::BTreeMap","std::num::NonZeroI8","std::net::SocketAddrV4","std::ops::RangeInclusive","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::num::NonZeroU8","std::num::NonZeroI32","std::collections::BinaryHeap","std::num::NonZeroU16","std::num::NonZeroIsize","std::num::NonZeroU32","std::sync::RwLock","std::rc::Rc","std::sync::atomic::AtomicBool","std::net::IpAddr","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::option::Option","std::net::Ipv6Addr","std::net::SocketAddr","std::cell::Cell","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::collections::HashSet","std::path::PathBuf","std::result::Result","std::borrow::Cow","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::net::Ipv4Addr","std::time::SystemTime","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::collections::Bound"],"C":["std::collections::BTreeSet","std::ops::Range","std::num::NonZeroI128","std::num::NonZeroU16","std::vec::Vec","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::borrow::Cow","std::net::SocketAddrV6","std::string::String","std::path::PathBuf","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::num::NonZeroIsize","std::num::NonZeroI8","std::net::Ipv6Addr","std::time::SystemTime","std::option::Option","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::cell::Cell","std::result::Result","enc::impls::<impl enc::Encode for &'a T>","std::cell::RefCell","std::rc::Rc","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::sync::RwLock","std::collections::BinaryHeap","std::collections::HashSet","std::time::Duration","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::num::NonZeroUsize","std::boxed::Box","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::num::NonZeroU64","std::sync::Arc","std::ffi::CString","std::num::NonZeroI16","std::collections::HashMap","std::collections::Bound","std::sync::Mutex","std::net::IpAddr","std::marker::PhantomData","std::net::SocketAddrV4"],"D":["std::borrow::Cow","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::collections::Bound","std::rc::Rc","std::collections::BTreeSet","std::time::SystemTime","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::sync::Arc","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::time::Duration","std::collections::HashMap","std::net::SocketAddr","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::cell::Cell","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::sync::Mutex","std::num::NonZeroI8","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroUsize","std::collections::VecDeque","std::num::NonZeroIsize","std::string::String","std::ffi::CString","std::path::PathBuf","std::net::SocketAddrV6","std::ops::Range","std::result::Result","std::num::NonZeroU128","std::sync::atomic::AtomicU64","std::vec::Vec","std::collections::BTreeMap","std::num::NonZeroI64","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::RwLock","std::cell::RefCell","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::boxed::Box","std::collections::HashSet","std::num::NonZeroI16","std::num::NonZeroI128"],"E":["std::collections::BTreeSet","std::time::Duration","std::net::SocketAddr","std::collections::HashMap","std::sync::atomic::AtomicU8","std::cell::RefCell","std::collections::Bound","std::vec::Vec","std::result::Result","std::ffi::CString","std::num::NonZeroIsize","std::cell::Cell","std::marker::PhantomData","std::net::Ipv6Addr","std::string::String","std::net::SocketAddrV6","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::sync::atomic::AtomicI16","enc::impls::<impl enc::Encode for &'a T>","std::boxed::Box","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::sync::Arc","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroI32","std::borrow::Cow","std::sync::atomic::AtomicU64","std::path::PathBuf","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::collections::BinaryHeap","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::num::NonZeroI128","std::num::NonZeroI64","std::num::NonZeroI8","std::ops::Range","std::time::SystemTime","std::sync::Mutex","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::sync::RwLock","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::net::IpAddr","std::num::NonZeroU8","std::option::Option","std::collections::VecDeque","std::num::NonZeroUsize","std::num::NonZeroU16","std::num::NonZeroU64","std::sync::atomic::AtomicBool"],"F":["std::collections::HashSet","std::net::Ipv4Addr","std::num::NonZeroI16","std::sync::Arc","std::sync::RwLock","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI32","std::net::IpAddr","std::vec::Vec","std::rc::Rc","std::result::Result","std::cell::RefCell","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::time::Duration","std::time::SystemTime","std::num::NonZeroU32","std::collections::VecDeque","std::collections::Bound","std::net::SocketAddrV6","std::num::NonZeroI8","std::option::Option","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroU16","std::ops::RangeInclusive","std::boxed::Box","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU64","std::net::Ipv6Addr","std::borrow::Cow","std::marker::PhantomData","std::collections::BTreeMap","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::collections::HashMap","std::sync::atomic::AtomicU16","std::path::PathBuf","std::ops::Range","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::num::NonZeroU8","std::num::NonZeroUsize","std::collections::BTreeSet","std::string::String","std::num::NonZeroI64","std::collections::BinaryHeap"],"G":["std::sync::atomic::AtomicU64","std::string::String","std::time::Duration","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::num::NonZeroUsize","std::vec::Vec","std::net::Ipv4Addr","std::num::NonZeroI32","std::net::SocketAddrV4","std::time::SystemTime","std::sync::atomic::AtomicUsize","std::collections::Bound","std::cell::RefCell","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::borrow::Cow","std::boxed::Box","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::path::PathBuf","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::num::NonZeroI128","std::sync::Arc","std::sync::atomic::AtomicI64","std::rc::Rc","std::num::NonZeroI64","std::net::SocketAddr","std::collections::BTreeMap","std::ops::Range","std::collections::VecDeque","std::option::Option","enc::impls::<impl enc::Encode for &'a T>","std::cell::Cell","std::result::Result","std::num::NonZeroIsize","std::net::Ipv6Addr","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::ffi::CString","std::num::NonZeroU8","std::collections::BTreeSet","std::collections::HashSet","std::collections::HashMap","std::net::IpAddr","std::num::NonZeroU16","std::marker::PhantomData","std::num::NonZeroI16","std::sync::RwLock"],"H":["std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::collections::BTreeSet","std::sync::RwLock","std::cell::RefCell","std::num::NonZeroUsize","std::ffi::CString","std::collections::Bound","std::num::NonZeroI8","std::num::NonZeroU128","std::time::Duration","std::borrow::Cow","std::net::SocketAddrV6","std::collections::HashMap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::path::PathBuf","std::time::SystemTime","std::ops::RangeInclusive","std::num::NonZeroU32","std::sync::Mutex","std::vec::Vec","enc::impls::<impl enc::Encode for &'a T>","std::collections::BinaryHeap","std::net::IpAddr","std::collections::BTreeMap","std::marker::PhantomData","std::result::Result","std::num::NonZeroU16","std::string::String","std::rc::Rc","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::net::SocketAddr","std::collections::VecDeque","std::ops::Range","std::boxed::Box","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::sync::Arc","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::cell::Cell","std::net::Ipv4Addr","std::option::Option","std::num::NonZeroI16","std::collections::HashSet","std::sync::atomic::AtomicI64"],"I":["std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::cell::RefCell","std::collections::HashMap","std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroU8","std::rc::Rc","std::option::Option","std::result::Result","std::collections::VecDeque","std::net::SocketAddrV4","std::num::NonZeroU16","std::collections::Bound","std::net::SocketAddr","std::borrow::Cow","std::sync::Mutex","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::sync::atomic::AtomicUsize","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::sync::atomic::AtomicU8","std::path::PathBuf","std::num::NonZeroU32","std::net::IpAddr","std::sync::atomic::AtomicI64","std::collections::BinaryHeap","std::marker::PhantomData","std::ffi::CString","std::sync::RwLock","std::string::String","std::collections::BTreeMap","std::boxed::Box","std::num::NonZeroI128","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::vec::Vec","std::sync::Arc","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::cell::Cell","std::ops::Range","std::num::NonZeroU128","std::time::Duration","std::num::NonZeroI64","std::num::NonZeroU64","std::num::NonZeroI8"],"J":["std::time::SystemTime","std::time::Duration","std::sync::atomic::AtomicBool","std::borrow::Cow","std::num::NonZeroU8","std::num::NonZeroUsize","std::net::IpAddr","std::net::SocketAddrV6","std::num::NonZeroI8","std::cell::Cell","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::cell::RefCell","std::num::NonZeroU32","std::collections::BinaryHeap","std::ffi::CString","std::vec::Vec","std::collections::Bound","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::ops::Range","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::collections::VecDeque","std::collections::BTreeMap","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::collections::HashSet","std::sync::atomic::AtomicI32","std::option::Option","std::num::NonZeroU128","std::sync::Arc","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::boxed::Box","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::rc::Rc","enc::impls::<impl enc::Encode for &'a T>","std::collections::HashMap","std::string::String","std::ops::RangeInclusive","std::sync::RwLock","std::num::NonZeroU16","std::marker::PhantomData","std::result::Result","std::net::SocketAddrV4","std::path::PathBuf","std::sync::Mutex","std::net::SocketAddr","std::num::NonZeroI128","std::num::NonZeroU64","std::num::NonZeroI16","std::collections::BTreeSet","std::sync::atomic::AtomicU32"],"K":["std::collections::HashSet","std::num::NonZeroU64","enc::impls::<impl enc::Encode for &'a T>","std::ffi::CString","std::option::Option","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::marker::PhantomData","std::num::NonZeroI16","std::ops::RangeInclusive","std::time::Duration","std::sync::atomic::AtomicUsize","std::cell::Cell","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::net::SocketAddrV6","std::string::String","std::rc::Rc","std::sync::Mutex","std::time::SystemTime","std::collections::Bound","std::net::IpAddr","std::ops::Range","std::num::NonZeroU16","std::borrow::Cow","std::collections::HashMap","std::net::Ipv6Addr","std::vec::Vec","std::num::NonZeroIsize","std::num::NonZeroI128","std::net::SocketAddrV4","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::boxed::Box","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::num::NonZeroI8","std::result::Result","std::path::PathBuf","std::sync::RwLock","std::num::NonZeroI64","std::sync::Arc","std::collections::BTreeSet","std::num::NonZeroUsize"],"L":["std::net::SocketAddrV6","std::rc::Rc","std::sync::atomic::AtomicI8","std::option::Option","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::time::SystemTime","std::marker::PhantomData","std::net::SocketAddrV4","enc::impls::<impl enc::Encode for &'a T>","std::collections::BTreeSet","std::num::NonZeroIsize","std::num::NonZeroU8","std::collections::Bound","std::ops::Range","std::num::NonZeroUsize","std::path::PathBuf","std::collections::HashMap","std::collections::HashSet","std::num::NonZeroI8","std::boxed::Box","std::collections::BTreeMap","std::net::SocketAddr","std::vec::Vec","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8","std::sync::RwLock","std::num::NonZeroU64","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::net::IpAddr","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::time::Duration","std::ffi::CString","std::sync::atomic::AtomicIsize","std::cell::Cell","std::borrow::Cow","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::string::String","std::cell::RefCell","std::num::NonZeroI32","std::sync::Mutex","std::sync::Arc","std::result::Result","std::num::NonZeroU128"],"M":["std::num::NonZeroU64","std::net::IpAddr","std::num::NonZeroUsize","std::num::NonZeroI32","std::boxed::Box","std::sync::Arc","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI32","std::rc::Rc","std::sync::atomic::AtomicI8","std::num::NonZeroU16","enc::impls::<impl enc::Encode for &'a T>","std::borrow::Cow","std::net::Ipv4Addr","std::collections::Bound","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::num::NonZeroIsize","std::time::Duration","std::option::Option","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::net::Ipv6Addr","std::sync::Mutex","std::time::SystemTime","std::ffi::CString","std::net::SocketAddrV4","std::collections::BTreeSet","std::collections::HashMap","std::ops::Range","std::num::NonZeroU32","std::path::PathBuf","std::ops::RangeInclusive","std::collections::BinaryHeap","std::sync::atomic::AtomicU64","std::collections::HashSet","std::marker::PhantomData","std::num::NonZeroI128","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::vec::Vec","std::num::NonZeroI8","std::collections::BTreeMap","std::num::NonZeroI16","std::string::String","std::sync::RwLock","std::result::Result","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::cell::RefCell","std::num::NonZeroU8","std::cell::Cell","std::sync::atomic::AtomicU8","std::num::NonZeroI64"],"N":["std::collections::HashSet","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::num::NonZeroI32","std::sync::Arc","std::net::SocketAddrV4","enc::impls::<impl enc::Encode for &'a T>","std::collections::HashMap","std::ffi::CString","std::string::String","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::option::Option","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::collections::Bound","std::ops::Range","std::num::NonZeroU8","std::num::NonZeroI128","std::path::PathBuf","std::net::Ipv4Addr","std::sync::Mutex","std::cell::Cell","std::collections::BTreeMap","std::marker::PhantomData","std::time::Duration","std::num::NonZeroUsize","std::sync::RwLock","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::rc::Rc","std::collections::VecDeque","std::time::SystemTime","std::net::SocketAddr","std::vec::Vec","std::result::Result","std::borrow::Cow","std::num::NonZeroU64","std::net::IpAddr","std::collections::BinaryHeap","std::num::NonZeroU16","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroIsize","std::cell::RefCell","std::boxed::Box","std::collections::BTreeSet","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8"],"_E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Stderr","std::net::TcpStream","&std::fs::File","std::io::StdoutLock<'_>","&std::io::Sink","&std::io::Stdout","std::sys::unix::stdio::Stdout","std::fs::File","std::io::stdio::StdoutRaw","std::io::Stdout","std::io::Cursor<[u8; N]>","std::io::StderrLock<'_>","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::process::ChildStdin","std::io::Sink","std::io::impls::<impl std::io::Write for &mut W>","&std::net::TcpStream","std::io::stdio::StderrRaw","std::io::LineWriter<W>","std::io::BorrowedCursor<'a>","std::collections::VecDeque<u8, A>","std::boxed::Box<W>","std::process::ChildStdin","std::vec::Vec<u8, A>","std::io::Cursor<std::vec::Vec<u8, A>>","std::os::unix::net::UnixStream","std::io::BufWriter<W>","&'a std::os::unix::net::UnixStream","std::sys::unix::stdio::Stderr","&std::io::Stderr","std::io::Cursor<&mut [u8]>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::cell::RefCell","std::time::Duration","std::net::Ipv4Addr","std::net::IpAddr","std::path::PathBuf","std::string::String","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroIsize","std::time::SystemTime","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroU64","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroU128","std::num::NonZeroI64","std::option::Option","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroU32","std::num::NonZeroU16","std::rc::Rc","std::ffi::CString"],"V":["std::ffi::CString","std::num::NonZeroI64","std::result::Result","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::cell::RefCell","std::cell::Cell","std::sync::Mutex","std::time::SystemTime","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::num::NonZeroU64","std::vec::Vec","std::net::IpAddr","std::collections::BTreeMap","std::ops::RangeInclusive","std::net::SocketAddrV6","std::num::NonZeroUsize","std::net::Ipv4Addr","std::collections::Bound","std::num::NonZeroU8","std::collections::HashSet","std::collections::HashMap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::ops::Range","std::num::NonZeroU32","std::option::Option","std::sync::atomic::AtomicIsize","std::string::String","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI16","std::borrow::Cow","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::time::Duration","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::sync::atomic::AtomicI16","std::rc::Rc","std::num::NonZeroI32","std::collections::VecDeque","std::collections::BTreeSet","std::sync::RwLock","std::collections::BinaryHeap","std::boxed::Box","std::sync::atomic::AtomicU8","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroU128"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroU64","std::num::NonZeroIsize","std::time::SystemTime","std::net::Ipv4Addr","std::net::SocketAddr","std::marker::PhantomData","std::cell::Cell","std::net::SocketAddrV6","std::string::String","std::net::Ipv6Addr","std::num::NonZeroI16","std::option::Option","std::path::PathBuf","std::num::NonZeroU32","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroU8","std::net::IpAddr","std::num::NonZeroI8","std::num::NonZeroI64","std::cell::RefCell"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroUsize","std::path::PathBuf","std::net::SocketAddrV6","std::num::NonZeroU128","std::net::SocketAddrV4","std::net::Ipv6Addr","std::rc::Rc","std::time::Duration","std::sync::Arc","std::num::NonZeroI16","std::num::NonZeroU64","std::net::Ipv4Addr","std::num::NonZeroU16","std::ffi::CString","std::num::NonZeroU8","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroIsize","std::time::SystemTime","std::cell::Cell","std::marker::PhantomData"]},"std::collections::Bound":{"T":["std::num::NonZeroU16","std::ops::RangeInclusive","std::sync::atomic::AtomicI16","std::ops::Range","std::num::NonZeroI16","std::net::SocketAddrV4","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::collections::HashSet","std::sync::Arc","std::num::NonZeroI128","std::sync::Mutex","std::net::Ipv4Addr","std::collections::BTreeMap","std::result::Result","std::num::NonZeroU64","std::time::SystemTime","std::num::NonZeroUsize","std::path::PathBuf","std::sync::atomic::AtomicU64","std::cell::Cell","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::boxed::Box","std::collections::BinaryHeap","std::marker::PhantomData","std::borrow::Cow","std::net::SocketAddrV6","std::option::Option","std::ffi::CString","std::string::String","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::vec::Vec","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::sync::RwLock","std::collections::Bound","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroIsize","std::collections::HashMap","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::rc::Rc","std::num::NonZeroI32","std::time::Duration","std::cell::RefCell","std::sync::atomic::AtomicU16"]},"std::collections::HashMap":{"K":["std::collections::Bound","std::net::IpAddr","std::num::NonZeroU128","std::net::Ipv6Addr","std::num::NonZeroI32","std::sync::Arc","std::ffi::CString","std::net::Ipv4Addr","std::num::NonZeroUsize","std::option::Option","std::net::SocketAddrV4","std::path::PathBuf","std::string::String","std::num::NonZeroI8","std::num::NonZeroU8","std::marker::PhantomData","std::rc::Rc"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::marker::PhantomData","std::time::Duration","std::num::NonZeroU128","std::boxed::Box","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::net::Ipv6Addr","std::cell::RefCell","std::borrow::Cow","std::sync::atomic::AtomicI16","std::sync::RwLock","std::option::Option","std::rc::Rc","std::result::Result","std::net::SocketAddrV6","std::collections::Bound","std::collections::BTreeSet","std::num::NonZeroI16","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::net::IpAddr","std::net::SocketAddr","std::sync::Mutex","std::collections::HashSet","std::ops::Range","std::ffi::CString","std::num::NonZeroU8","std::collections::HashMap","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::sync::Arc","std::string::String","std::collections::VecDeque","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroI32","std::path::PathBuf","std::cell::Cell","std::collections::BinaryHeap","std::num::NonZeroU32","std::vec::Vec","std::ops::RangeInclusive","std::net::Ipv4Addr","std::num::NonZeroUsize","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::num::NonZeroIsize","std::time::SystemTime","std::num::NonZeroI128"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::net::SocketAddrV6","std::net::IpAddr","std::marker::PhantomData","std::num::NonZeroU16","std::num::NonZeroU128","std::collections::Bound","std::net::Ipv6Addr","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroIsize","std::time::SystemTime","std::option::Option","std::num::NonZeroI32","std::path::PathBuf","std::num::NonZeroUsize","std::num::NonZeroI8"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::collections::HashMap","std::net::Ipv4Addr","std::borrow::Cow","std::net::IpAddr","std::sync::atomic::AtomicU8","std::vec::Vec","std::num::NonZeroU16","std::result::Result","std::option::Option","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroU128","std::boxed::Box","std::string::String","std::sync::Mutex","std::net::SocketAddr","std::net::SocketAddrV6","std::cell::Cell","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::path::PathBuf","std::ops::Range","std::ffi::CString","std::collections::HashSet","std::collections::BTreeSet","std::sync::Arc","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::marker::PhantomData","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::collections::Bound","std::num::NonZeroU64","std::num::NonZeroI8","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::collections::VecDeque","std::num::NonZeroUsize","std::rc::Rc","std::time::Duration","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::collections::BTreeMap","std::num::NonZeroI64","std::num::NonZeroU8","std::cell::RefCell","std::collections::BinaryHeap"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::net::IpAddr","std::borrow::Cow","std::rc::Rc","std::collections::Bound","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::time::SystemTime","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::collections::HashMap","std::net::SocketAddrV6","std::num::NonZeroI128","std::time::Duration","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::option::Option","std::sync::atomic::AtomicU16","std::vec::Vec","std::marker::PhantomData","std::num::NonZeroU16","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::cell::RefCell","std::cell::Cell","std::boxed::Box","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::net::SocketAddrV4","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::collections::HashSet","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::collections::BTreeSet","std::net::SocketAddr","std::num::NonZeroI16","std::ops::Range","std::ffi::CString","std::num::NonZeroUsize","std::num::NonZeroI8","std::net::Ipv6Addr","std::result::Result","std::num::NonZeroU8","std::path::PathBuf","std::sync::Arc","std::sync::Mutex","std::num::NonZeroI64","std::ops::RangeInclusive","std::collections::VecDeque","std::string::String","std::num::NonZeroU64"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicI16","std::collections::VecDeque","std::ffi::CString","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::cell::Cell","std::vec::Vec","std::string::String","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::borrow::Cow","std::net::Ipv6Addr","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::num::NonZeroI16","std::net::SocketAddr","std::collections::Bound","std::num::NonZeroI64","std::time::SystemTime","std::net::SocketAddrV6","std::num::NonZeroU8","std::result::Result","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::net::IpAddr","std::sync::atomic::AtomicU8","std::time::Duration","std::num::NonZeroI32","std::sync::atomic::AtomicU32","std::cell::RefCell","std::sync::RwLock","std::boxed::Box","std::ops::Range","std::rc::Rc","std::ops::RangeInclusive","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::num::NonZeroIsize","std::net::Ipv4Addr","std::num::NonZeroI128","std::collections::BinaryHeap","std::path::PathBuf","std::sync::Arc","std::num::NonZeroI8","std::collections::HashMap","std::collections::HashSet","std::sync::Mutex","std::marker::PhantomData","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::option::Option","std::num::NonZeroU64"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::net::Ipv6Addr","std::time::SystemTime","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::num::NonZeroIsize","std::collections::HashMap","std::sync::atomic::AtomicU64","std::collections::Bound","std::time::Duration","std::sync::RwLock","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::sync::atomic::AtomicI16","std::rc::Rc","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::collections::HashSet","std::num::NonZeroI32","std::collections::BTreeSet","std::option::Option","std::net::SocketAddrV4","std::num::NonZeroI16","std::collections::VecDeque","std::cell::Cell","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::sync::Mutex","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroUsize","std::collections::BTreeMap","std::borrow::Cow","std::num::NonZeroI8","std::ffi::CString","std::string::String","std::num::NonZeroI64","std::num::NonZeroU8","std::marker::PhantomData","std::cell::RefCell","std::net::Ipv4Addr","std::num::NonZeroU64","std::boxed::Box","std::result::Result","std::sync::Arc","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::ops::Range","std::vec::Vec","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI32","std::path::PathBuf"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C, D, E, F, G, H, I, J, K, L, M, N)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::encode(p0, p1);
+<(A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::encode":{"A":["std::marker::Sized","enc::Encode"],"B":["std::marker::Sized","enc::Encode"],"C":["enc::Encode","std::marker::Sized"],"D":["enc::Encode","std::marker::Sized"],"E":["enc::Encode","std::marker::Sized"],"F":["enc::Encode","std::marker::Sized"],"G":["std::marker::Sized","enc::Encode"],"H":["enc::Encode","std::marker::Sized"],"I":["std::marker::Sized","enc::Encode"],"J":["std::marker::Sized","enc::Encode"],"K":["std::marker::Sized","enc::Encode"],"L":["enc::Encode","std::marker::Sized"],"M":["enc::Encode","std::marker::Sized"],"N":["enc::Encode","std::marker::Sized"],"O":["std::marker::Sized","enc::Encode"],"_E":["std::marker::Sized","enc::Encoder"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode","std::cmp::Ord"],"V":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["std::cmp::Ord","std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::Bound":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","de::BorrowDecode","de::Decode","std::hash::Hash","enc::Encode","std::marker::Sized"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::marker::Sized","std::cmp::Eq","std::hash::Hash","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::BigEndian","config::LittleEndian","std::clone::impls::<impl std::clone::Clone for &T>","config::NoLimit","config::Configuration","config::Fixint","config::Limit","config::Varint"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SliceWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::encode":{"A":["std::vec::Vec","std::collections::VecDeque","std::net::Ipv4Addr","std::num::NonZeroI8","std::path::PathBuf","std::num::NonZeroI32","std::net::SocketAddrV4","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::result::Result","std::collections::Bound","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::sync::Mutex","std::rc::Rc","std::marker::PhantomData","std::borrow::Cow","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::ops::Range","std::net::SocketAddrV6","std::num::NonZeroI16","std::num::NonZeroI64","std::time::Duration","std::cell::RefCell","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::num::NonZeroUsize","std::num::NonZeroU32","std::sync::Arc","std::boxed::Box","std::string::String","std::collections::BTreeSet","std::num::NonZeroI128","std::ffi::CString","std::sync::atomic::AtomicU64","std::net::IpAddr","std::collections::HashSet","std::sync::atomic::AtomicI64","std::collections::HashMap","std::sync::RwLock","std::num::NonZeroU128","std::cell::Cell","std::num::NonZeroU8","std::sync::atomic::AtomicI16","enc::impls::<impl enc::Encode for &'a T>","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::num::NonZeroU16"],"B":["std::net::IpAddr","std::path::PathBuf","std::marker::PhantomData","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::collections::HashSet","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::net::Ipv6Addr","std::num::NonZeroU8","std::string::String","std::collections::VecDeque","std::rc::Rc","std::num::NonZeroIsize","std::ffi::CString","std::num::NonZeroU16","std::option::Option","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::collections::BTreeSet","std::net::SocketAddr","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","enc::impls::<impl enc::Encode for &'a T>","std::collections::BinaryHeap","std::collections::Bound","std::cell::Cell","std::num::NonZeroUsize","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::num::NonZeroI64","std::num::NonZeroU64","std::vec::Vec","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::boxed::Box","std::borrow::Cow","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::time::SystemTime","std::cell::RefCell","std::sync::Arc","std::ops::Range","std::time::Duration","std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroI128","std::sync::RwLock","std::result::Result","std::collections::HashMap"],"C":["std::ops::Range","std::string::String","std::collections::BinaryHeap","std::vec::Vec","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::result::Result","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::collections::HashMap","std::collections::Bound","std::collections::BTreeSet","std::num::NonZeroI64","std::path::PathBuf","std::option::Option","std::num::NonZeroI8","std::num::NonZeroIsize","std::collections::HashSet","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroU32","std::collections::VecDeque","std::num::NonZeroI32","std::num::NonZeroUsize","std::marker::PhantomData","std::net::SocketAddr","std::sync::Arc","std::cell::RefCell","std::sync::RwLock","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::cell::Cell","std::num::NonZeroU16","std::num::NonZeroI128","std::sync::Mutex","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::net::IpAddr","std::time::Duration","std::sync::atomic::AtomicU64","std::boxed::Box","std::ops::RangeInclusive","std::ffi::CString","std::borrow::Cow","std::num::NonZeroU64","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::sync::atomic::AtomicI16","std::rc::Rc","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicIsize"],"D":["std::net::Ipv4Addr","std::time::Duration","std::collections::Bound","std::sync::Arc","std::ops::RangeInclusive","std::num::NonZeroI64","std::collections::HashSet","std::sync::RwLock","std::collections::HashMap","std::cell::RefCell","std::net::SocketAddr","std::num::NonZeroI128","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::net::SocketAddrV6","std::time::SystemTime","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::borrow::Cow","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::rc::Rc","std::sync::atomic::AtomicI32","std::net::IpAddr","std::ffi::CString","std::collections::VecDeque","std::num::NonZeroI32","std::cell::Cell","std::sync::Mutex","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::path::PathBuf","std::num::NonZeroU8","std::string::String","std::num::NonZeroU16","std::vec::Vec","std::num::NonZeroU32","std::num::NonZeroU128","std::num::NonZeroIsize","std::boxed::Box","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::num::NonZeroU64","std::ops::Range","std::sync::atomic::AtomicU64","std::option::Option","std::result::Result","std::collections::BTreeMap"],"E":["std::num::NonZeroU64","std::collections::Bound","std::collections::BTreeSet","std::string::String","std::rc::Rc","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::time::Duration","std::ops::RangeInclusive","std::cell::Cell","std::num::NonZeroI8","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::collections::HashSet","std::net::SocketAddrV4","std::sync::Arc","std::sync::atomic::AtomicI8","std::net::IpAddr","std::sync::Mutex","std::borrow::Cow","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroI32","std::num::NonZeroU8","std::option::Option","std::sync::atomic::AtomicI64","std::net::Ipv4Addr","std::cell::RefCell","std::net::Ipv6Addr","std::boxed::Box","std::time::SystemTime","std::path::PathBuf","std::result::Result","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::ops::Range","std::sync::RwLock","std::collections::BTreeMap","std::collections::BinaryHeap","std::vec::Vec","std::sync::atomic::AtomicI32","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::ffi::CString","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::num::NonZeroU128","std::marker::PhantomData","std::collections::VecDeque","std::num::NonZeroUsize","std::net::SocketAddr","std::collections::HashMap"],"F":["std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::ops::Range","std::result::Result","std::collections::BTreeMap","std::marker::PhantomData","std::net::SocketAddr","std::num::NonZeroU128","std::net::IpAddr","std::collections::BTreeSet","std::boxed::Box","std::sync::Mutex","std::option::Option","std::ffi::CString","std::num::NonZeroIsize","std::rc::Rc","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::collections::BinaryHeap","std::collections::HashSet","std::vec::Vec","std::time::Duration","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::sync::RwLock","std::num::NonZeroI128","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","enc::impls::<impl enc::Encode for &'a T>","std::collections::HashMap","std::net::SocketAddrV6","std::path::PathBuf","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::cell::RefCell","std::string::String","std::borrow::Cow","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::num::NonZeroU8","std::collections::Bound","std::num::NonZeroI8","std::net::Ipv6Addr","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::sync::Arc","std::num::NonZeroU16","std::time::SystemTime","std::cell::Cell","std::collections::VecDeque","std::num::NonZeroU32","std::ops::RangeInclusive"],"G":["std::borrow::Cow","std::num::NonZeroU64","std::sync::Arc","std::ops::Range","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::collections::HashMap","std::num::NonZeroU8","std::num::NonZeroIsize","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::sync::RwLock","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::sync::Mutex","std::net::SocketAddrV6","std::ffi::CString","std::time::SystemTime","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::net::IpAddr","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::time::Duration","std::collections::Bound","std::collections::HashSet","std::collections::BTreeMap","std::cell::RefCell","std::net::Ipv6Addr","std::option::Option","std::result::Result","std::vec::Vec","std::num::NonZeroI128","std::cell::Cell","std::num::NonZeroU16","std::ops::RangeInclusive","std::num::NonZeroU128","std::path::PathBuf","std::num::NonZeroI32","std::num::NonZeroUsize","std::marker::PhantomData","std::collections::VecDeque","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::num::NonZeroU32","std::boxed::Box","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::string::String","std::net::SocketAddrV4","std::rc::Rc"],"H":["std::result::Result","std::collections::BTreeMap","std::num::NonZeroI64","std::collections::HashMap","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::rc::Rc","std::collections::BTreeSet","std::borrow::Cow","std::collections::VecDeque","std::net::SocketAddrV4","std::collections::BinaryHeap","std::net::Ipv6Addr","std::ffi::CString","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::collections::Bound","std::time::SystemTime","std::string::String","std::net::Ipv4Addr","std::num::NonZeroU8","std::num::NonZeroI16","std::net::IpAddr","std::sync::atomic::AtomicU16","std::sync::Mutex","std::option::Option","std::num::NonZeroU32","std::net::SocketAddr","std::num::NonZeroI128","std::collections::HashSet","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::num::NonZeroIsize","std::num::NonZeroI8","std::num::NonZeroU128","std::cell::RefCell","std::num::NonZeroU64","std::boxed::Box","std::sync::Arc","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::ops::Range","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU64","enc::impls::<impl enc::Encode for &'a T>","std::ops::RangeInclusive","std::path::PathBuf","std::sync::atomic::AtomicI32","std::time::Duration","std::cell::Cell","std::vec::Vec","std::sync::RwLock"],"I":["std::net::SocketAddrV6","std::net::SocketAddr","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU16","std::net::IpAddr","std::collections::Bound","std::num::NonZeroU8","std::net::Ipv6Addr","std::marker::PhantomData","std::collections::BinaryHeap","std::time::SystemTime","std::path::PathBuf","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::result::Result","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::string::String","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::cell::Cell","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::time::Duration","std::sync::Mutex","std::option::Option","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::ops::Range","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::sync::RwLock","std::num::NonZeroI32","std::num::NonZeroI8","std::cell::RefCell","std::num::NonZeroI128","std::sync::Arc","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::vec::Vec","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI8","std::rc::Rc","std::ffi::CString","std::num::NonZeroU128","std::collections::BTreeMap","std::collections::HashSet","std::boxed::Box","std::collections::BTreeSet","std::ops::RangeInclusive","std::num::NonZeroU64","std::borrow::Cow"],"J":["std::sync::atomic::AtomicI8","std::cell::RefCell","std::num::NonZeroU64","std::string::String","std::collections::BTreeSet","std::net::IpAddr","std::collections::HashSet","std::num::NonZeroU8","std::net::Ipv6Addr","std::path::PathBuf","std::collections::VecDeque","std::num::NonZeroI16","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::sync::RwLock","std::sync::atomic::AtomicIsize","enc::impls::<impl enc::Encode for &'a T>","std::collections::HashMap","std::time::SystemTime","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::sync::Arc","std::cell::Cell","std::ffi::CString","std::num::NonZeroIsize","std::num::NonZeroI8","std::net::SocketAddr","std::marker::PhantomData","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::borrow::Cow","std::net::Ipv4Addr","std::time::Duration","std::ops::Range","std::option::Option","std::sync::atomic::AtomicBool","std::rc::Rc","std::num::NonZeroU32","std::sync::Mutex","std::ops::RangeInclusive","std::num::NonZeroI32","std::boxed::Box","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicUsize","std::num::NonZeroU128","std::vec::Vec","std::num::NonZeroUsize","std::collections::BTreeMap","std::result::Result","std::num::NonZeroU16","std::num::NonZeroI64","std::collections::Bound","std::collections::BinaryHeap"],"K":["std::sync::atomic::AtomicI8","std::time::Duration","std::collections::Bound","std::num::NonZeroIsize","std::boxed::Box","std::sync::Mutex","std::collections::HashMap","std::collections::VecDeque","std::net::SocketAddrV4","std::num::NonZeroI64","std::vec::Vec","std::marker::PhantomData","std::path::PathBuf","std::sync::atomic::AtomicI16","std::result::Result","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::num::NonZeroU64","std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroI16","std::borrow::Cow","std::collections::BTreeSet","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::num::NonZeroU128","std::num::NonZeroU8","std::num::NonZeroI128","std::collections::HashSet","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::time::SystemTime","std::net::SocketAddr","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU16","std::num::NonZeroI32","std::num::NonZeroU32","std::num::NonZeroI8","std::net::IpAddr","std::string::String","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::sync::Arc","std::cell::Cell","std::option::Option","std::sync::RwLock","std::ffi::CString","std::ops::RangeInclusive","std::cell::RefCell","std::num::NonZeroUsize","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::ops::Range","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64"],"L":["std::num::NonZeroU32","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroI64","std::sync::atomic::AtomicU32","std::sync::Mutex","std::num::NonZeroI8","std::result::Result","std::collections::HashMap","std::sync::atomic::AtomicU8","std::cell::Cell","std::collections::HashSet","std::net::SocketAddrV6","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::option::Option","std::sync::atomic::AtomicUsize","std::ffi::CString","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::num::NonZeroU16","std::string::String","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::ops::Range","std::net::IpAddr","std::num::NonZeroI128","std::sync::Arc","std::vec::Vec","std::net::Ipv4Addr","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::time::SystemTime","std::collections::BTreeSet","std::marker::PhantomData","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroU64","std::num::NonZeroI16","std::net::SocketAddrV4","std::boxed::Box","std::num::NonZeroU8","std::borrow::Cow","std::rc::Rc","std::num::NonZeroI32","std::path::PathBuf","std::collections::Bound","std::time::Duration","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::net::SocketAddr"],"M":["std::boxed::Box","std::num::NonZeroI8","std::num::NonZeroU128","std::net::Ipv6Addr","std::net::SocketAddr","std::sync::atomic::AtomicI16","std::path::PathBuf","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::net::SocketAddrV6","std::borrow::Cow","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::collections::BTreeSet","std::num::NonZeroU16","std::ops::Range","std::collections::HashMap","std::ffi::CString","std::sync::atomic::AtomicI8","std::collections::Bound","std::num::NonZeroUsize","std::rc::Rc","std::cell::RefCell","std::sync::Mutex","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::vec::Vec","std::num::NonZeroU64","std::num::NonZeroI32","std::ops::RangeInclusive","std::num::NonZeroU8","std::time::SystemTime","std::sync::atomic::AtomicI64","std::time::Duration","std::result::Result","std::collections::BinaryHeap","std::cell::Cell","std::collections::VecDeque","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicI32","std::sync::Arc","std::net::Ipv4Addr","std::num::NonZeroU32","std::sync::RwLock","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::collections::HashSet","std::marker::PhantomData","std::option::Option","std::string::String","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::net::IpAddr"],"N":["std::borrow::Cow","std::cell::Cell","std::num::NonZeroI64","std::num::NonZeroU128","std::net::SocketAddr","std::collections::BinaryHeap","std::collections::BTreeSet","std::boxed::Box","std::cell::RefCell","std::ops::RangeInclusive","std::path::PathBuf","std::collections::HashMap","std::collections::Bound","std::ffi::CString","std::option::Option","std::sync::Arc","std::net::SocketAddrV4","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::result::Result","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::rc::Rc","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::collections::HashSet","std::num::NonZeroU32","std::num::NonZeroU16","std::num::NonZeroI16","std::time::SystemTime","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU8","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::sync::RwLock","std::ops::Range","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::net::IpAddr","std::num::NonZeroI128","std::net::SocketAddrV6","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::time::Duration","std::sync::Mutex","std::string::String","std::collections::BTreeMap","std::num::NonZeroUsize","std::vec::Vec"],"O":["std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::option::Option","std::sync::Arc","std::num::NonZeroI128","std::sync::RwLock","std::vec::Vec","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::time::SystemTime","std::net::SocketAddrV4","std::num::NonZeroUsize","std::num::NonZeroI8","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::time::Duration","std::collections::Bound","std::borrow::Cow","std::ops::Range","std::sync::atomic::AtomicIsize","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::path::PathBuf","std::num::NonZeroI16","std::cell::Cell","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::result::Result","std::rc::Rc","std::net::Ipv4Addr","std::sync::atomic::AtomicI64","std::cell::RefCell","std::collections::HashMap","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::marker::PhantomData","std::net::IpAddr","std::string::String","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::collections::VecDeque","std::sync::Mutex","std::boxed::Box","std::ffi::CString","std::num::NonZeroU32","std::collections::HashSet","std::collections::BinaryHeap","std::net::Ipv6Addr","std::num::NonZeroI32","std::collections::BTreeMap","std::num::NonZeroU128"],"_E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Cursor<std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::process::ChildStdin","std::fs::File","std::io::stdio::StderrRaw","&std::net::TcpStream","std::io::BorrowedCursor<'a>","std::io::BufWriter<W>","&std::io::Stderr","std::sys::unix::stdio::Stderr","&std::fs::File","std::process::ChildStdin","std::io::stdio::StdoutRaw","std::net::TcpStream","std::io::Cursor<&mut [u8]>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Stderr","std::vec::Vec<u8, A>","std::io::Cursor<[u8; N]>","std::io::LineWriter<W>","std::io::StdoutLock<'_>","&'a std::os::unix::net::UnixStream","std::boxed::Box<W>","std::io::impls::<impl std::io::Write for &mut W>","&std::io::Stdout","std::io::Stdout","std::io::StderrLock<'_>","std::os::unix::net::UnixStream","std::collections::VecDeque<u8, A>","&std::io::Sink","std::io::Sink","std::io::Cursor<std::boxed::Box<[u8], A>>"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroU64","std::sync::Arc","std::num::NonZeroIsize","std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroUsize","std::time::Duration","std::cell::Cell","std::net::SocketAddr","std::string::String","std::ffi::CString","std::net::SocketAddrV6","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroI16","std::net::Ipv6Addr","std::num::NonZeroI8","std::num::NonZeroU16","std::cell::RefCell","std::marker::PhantomData","std::num::NonZeroU8"],"V":["std::collections::BTreeMap","std::net::SocketAddrV6","std::num::NonZeroU128","std::ffi::CString","std::sync::Mutex","std::ops::RangeInclusive","std::time::Duration","std::collections::HashMap","std::num::NonZeroIsize","std::collections::BinaryHeap","std::collections::Bound","std::net::SocketAddrV4","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::net::IpAddr","std::sync::atomic::AtomicU16","std::num::NonZeroI32","std::num::NonZeroI64","std::boxed::Box","std::cell::Cell","std::rc::Rc","std::option::Option","std::num::NonZeroI128","std::net::Ipv4Addr","std::num::NonZeroUsize","std::string::String","std::borrow::Cow","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::vec::Vec","std::time::SystemTime","std::sync::atomic::AtomicU32","std::collections::HashSet","std::collections::VecDeque","std::result::Result","std::num::NonZeroU16","std::sync::Arc","std::sync::RwLock","std::num::NonZeroI8","std::ops::Range","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::net::SocketAddr","std::marker::PhantomData","std::num::NonZeroU32","std::path::PathBuf","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::cell::RefCell","std::num::NonZeroI16"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::sync::Arc","std::string::String","std::option::Option","std::num::NonZeroU16","std::net::Ipv6Addr","std::num::NonZeroI8","std::num::NonZeroUsize","std::net::Ipv4Addr","std::num::NonZeroI32","std::net::SocketAddrV6","std::cell::Cell","std::rc::Rc","std::ffi::CString","std::num::NonZeroU64","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroI128","std::path::PathBuf","std::net::IpAddr"]},"std::collections::BinaryHeap":{"T":["std::option::Option","std::net::IpAddr","std::net::SocketAddrV4","std::ffi::CString","std::num::NonZeroU64","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroI32","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroI8","std::marker::PhantomData","std::time::SystemTime","std::sync::Arc","std::num::NonZeroI128","std::rc::Rc","std::cell::RefCell","std::num::NonZeroU128","std::net::SocketAddrV6"]},"std::collections::Bound":{"T":["std::collections::Bound","std::net::IpAddr","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::time::SystemTime","std::sync::atomic::AtomicI32","std::ops::Range","std::num::NonZeroU8","std::result::Result","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::net::SocketAddr","std::num::NonZeroI64","std::collections::BTreeSet","std::num::NonZeroUsize","std::sync::RwLock","std::ffi::CString","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::num::NonZeroU128","std::path::PathBuf","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::option::Option","std::collections::VecDeque","std::cell::Cell","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroI32","std::sync::Mutex","std::vec::Vec","std::net::Ipv6Addr","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroU32","std::string::String","std::boxed::Box","std::rc::Rc","std::collections::HashMap","std::time::Duration","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::sync::Arc","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::collections::HashSet","std::borrow::Cow"]},"std::collections::HashMap":{"K":["std::num::NonZeroU8","std::num::NonZeroU64","std::num::NonZeroU128","std::num::NonZeroI128","std::net::IpAddr","std::ffi::CString","std::string::String","std::num::NonZeroU32","std::net::Ipv4Addr","std::num::NonZeroU16","std::path::PathBuf","std::sync::Arc","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroI32","std::time::Duration"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::time::SystemTime","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::result::Result","std::cell::RefCell","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::borrow::Cow","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroI64","std::net::Ipv6Addr","std::rc::Rc","std::cell::Cell","std::string::String","std::time::Duration","std::num::NonZeroU32","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::ffi::CString","std::num::NonZeroI8","std::num::NonZeroU8","std::collections::Bound","std::sync::Mutex","std::collections::BTreeSet","std::boxed::Box","std::option::Option","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::num::NonZeroU128","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroI32","std::collections::HashMap","std::collections::HashSet","std::net::IpAddr","std::sync::atomic::AtomicBool","std::vec::Vec","std::collections::BinaryHeap","std::net::SocketAddrV6","std::collections::VecDeque","std::sync::Arc","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::collections::BTreeMap","std::ops::Range"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::time::SystemTime","std::ffi::CString","std::net::Ipv6Addr","std::net::SocketAddr","std::path::PathBuf","std::net::SocketAddrV6","std::num::NonZeroU32","std::option::Option","std::net::Ipv4Addr","std::rc::Rc","std::collections::Bound","std::num::NonZeroU128","std::num::NonZeroI32","std::net::IpAddr","std::marker::PhantomData","std::num::NonZeroU64","std::net::SocketAddrV4"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::sync::Arc","std::collections::Bound","std::collections::VecDeque","std::num::NonZeroU64","std::num::NonZeroU16","std::option::Option","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::num::NonZeroU128","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::num::NonZeroI8","std::cell::Cell","std::time::SystemTime","std::net::IpAddr","std::ffi::CString","std::cell::RefCell","std::sync::atomic::AtomicI64","std::result::Result","std::time::Duration","std::sync::Mutex","std::sync::atomic::AtomicI32","std::string::String","std::path::PathBuf","std::collections::BTreeSet","std::ops::RangeInclusive","std::num::NonZeroU8","std::collections::HashMap","std::rc::Rc","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::ops::Range","std::num::NonZeroI128","std::collections::HashSet","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::net::SocketAddrV4","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::vec::Vec","std::boxed::Box","std::sync::RwLock","std::num::NonZeroUsize","std::borrow::Cow","std::num::NonZeroIsize","std::net::Ipv4Addr","std::num::NonZeroU32","std::net::SocketAddrV6"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::num::NonZeroU128","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::boxed::Box","std::ffi::CString","std::collections::HashSet","std::ops::RangeInclusive","std::vec::Vec","std::collections::BTreeSet","std::time::Duration","std::string::String","std::net::SocketAddr","std::net::SocketAddrV4","std::collections::HashMap","std::result::Result","std::sync::atomic::AtomicI16","std::sync::RwLock","std::sync::atomic::AtomicI8","std::time::SystemTime","std::collections::BTreeMap","std::net::IpAddr","std::num::NonZeroU64","std::ops::Range","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::option::Option","std::collections::Bound","std::num::NonZeroI64","std::num::NonZeroI128","std::marker::PhantomData","std::cell::Cell","std::rc::Rc","std::borrow::Cow","std::sync::Mutex","std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroIsize","std::cell::RefCell","std::num::NonZeroI8","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::collections::BinaryHeap","std::sync::Arc","std::num::NonZeroUsize","std::num::NonZeroI32","std::num::NonZeroU32","std::net::SocketAddrV6","std::collections::VecDeque","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU8"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::num::NonZeroI16","std::boxed::Box","std::collections::Bound","std::collections::VecDeque","std::collections::BTreeMap","std::time::SystemTime","std::sync::atomic::AtomicU64","std::ffi::CString","std::result::Result","std::sync::atomic::AtomicI32","std::string::String","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::marker::PhantomData","std::net::Ipv6Addr","std::cell::RefCell","std::cell::Cell","std::num::NonZeroU16","std::net::IpAddr","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::num::NonZeroI128","std::net::SocketAddr","std::net::SocketAddrV6","std::borrow::Cow","std::num::NonZeroUsize","std::collections::BinaryHeap","std::path::PathBuf","std::time::Duration","std::num::NonZeroU64","std::ops::Range","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::net::Ipv4Addr","std::num::NonZeroU128","std::sync::RwLock","std::option::Option","std::vec::Vec","std::rc::Rc","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::sync::Arc","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::collections::HashMap","std::collections::HashSet","std::num::NonZeroI8","std::net::SocketAddrV4","std::sync::Mutex","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::num::NonZeroU8"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::net::SocketAddr","std::num::NonZeroI32","std::num::NonZeroU128","std::sync::RwLock","std::cell::RefCell","std::borrow::Cow","std::sync::atomic::AtomicI8","std::option::Option","std::num::NonZeroU16","std::collections::HashSet","std::time::SystemTime","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::time::Duration","std::sync::Mutex","std::net::SocketAddrV6","std::net::SocketAddrV4","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::sync::Arc","std::collections::BTreeMap","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::num::NonZeroI16","std::sync::atomic::AtomicU32","std::collections::Bound","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::net::IpAddr","std::num::NonZeroU32","std::string::String","std::sync::atomic::AtomicU8","std::ffi::CString","std::ops::RangeInclusive","std::rc::Rc","std::vec::Vec","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::net::Ipv4Addr","std::boxed::Box","std::ops::Range","std::collections::BTreeSet","std::num::NonZeroU8","std::num::NonZeroI128","std::collections::HashMap","std::result::Result","std::num::NonZeroI8","std::path::PathBuf","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroU64"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::encode(p0, p1);
+<(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::encode(p0, p1);
-----------------
src/enc/impl_tuples.rs enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::encode":{"A":["std::marker::Sized","enc::Encode"],"B":["std::marker::Sized","enc::Encode"],"C":["enc::Encode","std::marker::Sized"],"D":["enc::Encode","std::marker::Sized"],"E":["std::marker::Sized","enc::Encode"],"F":["enc::Encode","std::marker::Sized"],"G":["std::marker::Sized","enc::Encode"],"H":["enc::Encode","std::marker::Sized"],"I":["std::marker::Sized","enc::Encode"],"J":["enc::Encode","std::marker::Sized"],"K":["std::marker::Sized","enc::Encode"],"L":["std::marker::Sized","enc::Encode"],"M":["enc::Encode","std::marker::Sized"],"N":["std::marker::Sized","enc::Encode"],"O":["std::marker::Sized","enc::Encode"],"P":["std::marker::Sized","enc::Encode"],"_E":["std::marker::Sized","enc::Encoder"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["de::Decode","std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized"],"V":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::cmp::Ord","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode","std::cmp::Ord"]},"std::collections::Bound":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::HashMap":{"K":["std::marker::Sized","enc::Encode","std::cmp::Eq","de::BorrowDecode","std::hash::Hash","de::Decode"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["std::cmp::Eq","std::marker::Sized","std::hash::Hash","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for &mut T>","config::NoLimit","config::BigEndian","config::Limit","config::LittleEndian","config::Configuration","config::Varint","config::Fixint"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter","features::impl_alloc::VecWriter","enc::write::SliceWriter"]},"enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::encode":{"A":["std::boxed::Box","std::num::NonZeroI32","std::collections::BTreeMap","std::num::NonZeroI128","std::marker::PhantomData","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroU16","std::net::IpAddr","std::ops::Range","std::sync::RwLock","std::cell::RefCell","std::net::SocketAddrV6","std::ops::RangeInclusive","std::time::SystemTime","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::ffi::CString","std::collections::HashSet","std::collections::BTreeSet","std::num::NonZeroU128","std::collections::HashMap","std::sync::atomic::AtomicBool","std::borrow::Cow","enc::impls::<impl enc::Encode for &'a T>","std::net::Ipv6Addr","std::net::SocketAddr","std::sync::Arc","std::time::Duration","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::vec::Vec","std::string::String","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::net::SocketAddrV4","std::collections::Bound","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::num::NonZeroI8","std::result::Result","std::sync::atomic::AtomicIsize","std::rc::Rc","std::sync::Mutex","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroU32","std::cell::Cell","std::num::NonZeroIsize","std::option::Option"],"B":["std::num::NonZeroI8","std::sync::RwLock","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::cell::RefCell","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::num::NonZeroI64","std::collections::VecDeque","std::net::Ipv4Addr","enc::impls::<impl enc::Encode for &'a T>","std::collections::HashMap","std::borrow::Cow","std::sync::atomic::AtomicU64","std::string::String","std::sync::atomic::AtomicI16","std::ffi::CString","std::ops::Range","std::num::NonZeroU64","std::collections::Bound","std::num::NonZeroI128","std::path::PathBuf","std::net::SocketAddrV6","std::rc::Rc","std::vec::Vec","std::time::Duration","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::cell::Cell","std::net::IpAddr","std::boxed::Box","std::num::NonZeroIsize","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::result::Result","std::num::NonZeroU128","std::num::NonZeroU32","std::net::Ipv6Addr","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::sync::Arc","std::num::NonZeroU8","std::num::NonZeroUsize","std::net::SocketAddrV4","std::option::Option","std::collections::BTreeSet","std::num::NonZeroI16","std::marker::PhantomData","std::sync::Mutex","std::num::NonZeroU16"],"C":["std::boxed::Box","std::collections::HashSet","std::num::NonZeroU16","std::net::IpAddr","std::time::SystemTime","std::sync::RwLock","std::option::Option","std::num::NonZeroU8","std::vec::Vec","std::path::PathBuf","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::ops::RangeInclusive","std::num::NonZeroIsize","std::sync::atomic::AtomicI16","std::string::String","std::sync::atomic::AtomicIsize","std::ffi::CString","std::num::NonZeroU32","std::num::NonZeroU64","std::ops::Range","std::cell::RefCell","std::collections::Bound","std::result::Result","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::sync::Arc","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::marker::PhantomData","std::net::Ipv6Addr","std::collections::HashMap","std::num::NonZeroI32","std::rc::Rc","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::net::SocketAddr","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::sync::Mutex","std::borrow::Cow","std::time::Duration","std::sync::atomic::AtomicI64","std::cell::Cell","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::collections::BinaryHeap","std::num::NonZeroI64","std::collections::BTreeSet","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::num::NonZeroI16"],"D":["enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicI64","std::net::SocketAddr","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::collections::HashSet","std::collections::BTreeMap","std::ops::RangeInclusive","std::num::NonZeroU64","std::sync::Arc","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::time::SystemTime","std::num::NonZeroI32","std::string::String","std::ffi::CString","std::time::Duration","std::num::NonZeroI64","std::cell::RefCell","std::result::Result","std::boxed::Box","std::num::NonZeroI16","std::ops::Range","std::sync::atomic::AtomicI32","std::collections::Bound","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::rc::Rc","std::sync::atomic::AtomicUsize","std::num::NonZeroU16","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::option::Option","std::num::NonZeroU128","std::num::NonZeroI128","std::num::NonZeroUsize","std::path::PathBuf","std::sync::Mutex","std::collections::VecDeque","std::net::IpAddr","std::collections::HashMap","std::cell::Cell","std::sync::RwLock","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::collections::BTreeSet","std::vec::Vec","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicBool"],"E":["std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::ffi::CString","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::time::SystemTime","std::sync::atomic::AtomicU32","enc::impls::<impl enc::Encode for &'a T>","std::ops::RangeInclusive","std::collections::BinaryHeap","std::time::Duration","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::collections::Bound","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::rc::Rc","std::collections::HashSet","std::vec::Vec","std::sync::atomic::AtomicUsize","std::cell::RefCell","std::net::SocketAddr","std::sync::Arc","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::path::PathBuf","std::sync::Mutex","std::num::NonZeroUsize","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::ops::Range","std::boxed::Box","std::num::NonZeroU32","std::net::Ipv6Addr","std::borrow::Cow","std::collections::BTreeSet","std::collections::HashMap","std::net::Ipv4Addr","std::num::NonZeroI128","std::cell::Cell","std::sync::atomic::AtomicI32","std::result::Result","std::string::String","std::sync::RwLock","std::net::IpAddr","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::net::SocketAddrV4","std::collections::VecDeque","std::num::NonZeroI16","std::option::Option"],"F":["std::marker::PhantomData","std::collections::Bound","std::vec::Vec","std::num::NonZeroI16","std::num::NonZeroU16","std::num::NonZeroU128","std::net::SocketAddr","std::num::NonZeroU8","std::ffi::CString","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::cell::Cell","std::num::NonZeroU64","std::rc::Rc","std::sync::atomic::AtomicBool","std::sync::RwLock","std::boxed::Box","std::ops::RangeInclusive","std::cell::RefCell","std::sync::atomic::AtomicI16","std::result::Result","std::path::PathBuf","std::collections::BTreeMap","std::ops::Range","std::num::NonZeroI128","std::net::Ipv4Addr","std::sync::Arc","std::num::NonZeroUsize","std::net::Ipv6Addr","std::collections::BTreeSet","std::num::NonZeroI64","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::collections::HashMap","std::sync::Mutex","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::collections::HashSet","std::collections::BinaryHeap","std::option::Option","std::borrow::Cow","std::num::NonZeroU32","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicI32","std::time::Duration","std::sync::atomic::AtomicIsize","std::string::String","std::net::SocketAddrV6","std::time::SystemTime","std::collections::VecDeque","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::net::IpAddr"],"G":["std::collections::HashMap","std::collections::Bound","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroU8","std::collections::BinaryHeap","std::sync::RwLock","std::ffi::CString","std::ops::Range","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI64","std::time::Duration","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::cell::RefCell","std::sync::atomic::AtomicU16","std::borrow::Cow","std::collections::VecDeque","std::sync::Mutex","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","enc::impls::<impl enc::Encode for &'a T>","std::boxed::Box","std::marker::PhantomData","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::num::NonZeroI8","std::collections::HashSet","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::num::NonZeroU128","std::num::NonZeroU64","std::collections::BTreeMap","std::net::Ipv6Addr","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::string::String","std::cell::Cell","std::net::Ipv4Addr","std::result::Result","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::option::Option","std::sync::atomic::AtomicIsize","std::sync::Arc","std::vec::Vec","std::collections::BTreeSet","std::rc::Rc"],"H":["std::ops::RangeInclusive","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::cell::RefCell","std::collections::HashSet","std::boxed::Box","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::num::NonZeroU64","std::time::SystemTime","std::ops::Range","std::sync::atomic::AtomicU64","std::num::NonZeroI64","std::num::NonZeroI8","std::borrow::Cow","std::collections::BTreeMap","std::collections::VecDeque","std::vec::Vec","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::sync::Arc","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroI128","std::collections::HashMap","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::ffi::CString","std::num::NonZeroU128","std::sync::Mutex","std::sync::atomic::AtomicU8","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroIsize","std::string::String","std::collections::Bound","std::sync::atomic::AtomicU16","std::sync::RwLock","std::num::NonZeroU16","std::result::Result","std::net::SocketAddrV4","std::cell::Cell","std::rc::Rc","std::num::NonZeroI32","std::path::PathBuf","std::option::Option","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::collections::BinaryHeap","std::net::Ipv4Addr","std::time::Duration","std::num::NonZeroUsize"],"I":["std::sync::atomic::AtomicU64","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::num::NonZeroU32","std::collections::BTreeSet","std::cell::Cell","std::net::SocketAddr","std::num::NonZeroUsize","std::option::Option","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::marker::PhantomData","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::collections::BTreeMap","std::time::Duration","std::num::NonZeroI8","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroU16","enc::impls::<impl enc::Encode for &'a T>","std::string::String","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::vec::Vec","std::sync::atomic::AtomicI8","std::num::NonZeroU8","std::num::NonZeroU64","std::sync::Arc","std::num::NonZeroI32","std::collections::Bound","std::collections::HashMap","std::net::SocketAddrV4","std::num::NonZeroI64","std::boxed::Box","std::ops::Range","std::net::Ipv6Addr","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::path::PathBuf","std::borrow::Cow","std::sync::Mutex","std::sync::atomic::AtomicU32","std::collections::HashSet","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::sync::RwLock","std::num::NonZeroIsize","std::time::SystemTime","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::result::Result","std::rc::Rc"],"J":["std::ffi::CString","std::net::SocketAddrV6","std::collections::BinaryHeap","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::sync::atomic::AtomicI32","std::result::Result","std::num::NonZeroI64","std::borrow::Cow","std::marker::PhantomData","std::net::Ipv4Addr","std::net::Ipv6Addr","std::collections::BTreeMap","std::num::NonZeroIsize","std::time::SystemTime","std::sync::RwLock","std::sync::atomic::AtomicI8","std::rc::Rc","std::sync::atomic::AtomicBool","std::boxed::Box","std::num::NonZeroU128","std::string::String","std::path::PathBuf","std::collections::Bound","std::net::IpAddr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::collections::HashSet","std::num::NonZeroU8","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::sync::Arc","std::collections::VecDeque","std::net::SocketAddrV4","std::vec::Vec","std::collections::HashMap","std::num::NonZeroI128","std::cell::Cell","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::num::NonZeroU16","std::cell::RefCell","std::num::NonZeroUsize","std::net::SocketAddr","std::num::NonZeroU64","std::num::NonZeroI32","std::option::Option","std::ops::Range","std::sync::atomic::AtomicU32","std::ops::RangeInclusive","std::sync::Mutex","std::time::Duration","std::sync::atomic::AtomicI64"],"K":["std::time::Duration","std::num::NonZeroI128","std::collections::HashSet","std::collections::Bound","std::marker::PhantomData","std::cell::RefCell","std::net::Ipv4Addr","std::num::NonZeroU128","std::num::NonZeroI8","std::num::NonZeroUsize","std::option::Option","std::result::Result","std::collections::VecDeque","std::sync::Arc","std::collections::HashMap","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::num::NonZeroIsize","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::collections::BinaryHeap","std::sync::RwLock","std::num::NonZeroU8","std::time::SystemTime","std::sync::atomic::AtomicI64","std::vec::Vec","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::sync::Mutex","std::net::SocketAddrV4","std::string::String","std::collections::BTreeMap","std::collections::BTreeSet","std::ffi::CString","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::ops::Range","std::cell::Cell","std::path::PathBuf","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::rc::Rc","std::net::Ipv6Addr","std::num::NonZeroU64","std::num::NonZeroI16","std::boxed::Box","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::borrow::Cow","std::net::SocketAddrV6","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU32","std::num::NonZeroI64"],"L":["std::time::SystemTime","std::sync::RwLock","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::sync::atomic::AtomicI64","std::ffi::CString","enc::impls::<impl enc::Encode for &'a T>","std::cell::Cell","std::sync::atomic::AtomicU8","std::path::PathBuf","std::time::Duration","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::num::NonZeroI32","std::net::SocketAddrV4","std::cell::RefCell","std::borrow::Cow","std::collections::BTreeSet","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::result::Result","std::sync::Arc","std::boxed::Box","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::vec::Vec","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::num::NonZeroU16","std::string::String","std::num::NonZeroU128","std::sync::Mutex","std::collections::BinaryHeap","std::num::NonZeroIsize","std::ops::Range","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::net::SocketAddrV6","std::num::NonZeroI64","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::option::Option","std::collections::Bound","std::num::NonZeroI128","std::num::NonZeroUsize","std::net::IpAddr","std::ops::RangeInclusive","std::num::NonZeroU32","std::rc::Rc"],"M":["std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::num::NonZeroI16","std::collections::HashSet","std::num::NonZeroI8","std::ffi::CString","std::num::NonZeroI32","std::net::SocketAddrV4","std::sync::Arc","std::sync::atomic::AtomicI8","std::sync::RwLock","std::string::String","std::rc::Rc","enc::impls::<impl enc::Encode for &'a T>","std::net::Ipv4Addr","std::num::NonZeroIsize","std::ops::Range","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::option::Option","std::borrow::Cow","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::net::SocketAddr","std::ops::RangeInclusive","std::collections::BTreeMap","std::num::NonZeroU32","std::cell::Cell","std::sync::atomic::AtomicBool","std::vec::Vec","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::boxed::Box","std::marker::PhantomData","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::num::NonZeroUsize","std::path::PathBuf","std::net::IpAddr","std::time::Duration","std::sync::Mutex","std::sync::atomic::AtomicU32","std::collections::Bound","std::collections::HashMap","std::num::NonZeroI128","std::result::Result","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::time::SystemTime","std::num::NonZeroU16","std::cell::RefCell"],"N":["std::collections::BTreeMap","std::collections::VecDeque","std::net::SocketAddrV4","std::borrow::Cow","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::sync::RwLock","std::num::NonZeroU64","std::net::IpAddr","std::sync::atomic::AtomicU16","std::time::Duration","std::cell::Cell","std::num::NonZeroU32","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::cell::RefCell","std::collections::BinaryHeap","std::num::NonZeroI8","std::rc::Rc","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroUsize","std::num::NonZeroI128","std::collections::HashSet","std::sync::atomic::AtomicI16","std::result::Result","std::path::PathBuf","std::collections::HashMap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::ffi::CString","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::net::SocketAddr","std::time::SystemTime","std::string::String","std::num::NonZeroI32","std::boxed::Box","std::collections::Bound","std::num::NonZeroI64","std::num::NonZeroU16","enc::impls::<impl enc::Encode for &'a T>","std::net::Ipv6Addr","std::marker::PhantomData","std::option::Option","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::ops::Range","std::ops::RangeInclusive","std::sync::Mutex","std::sync::Arc","std::vec::Vec","std::sync::atomic::AtomicU64"],"O":["std::num::NonZeroU64","std::num::NonZeroU32","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::ops::Range","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::path::PathBuf","std::sync::RwLock","std::num::NonZeroU128","std::time::SystemTime","std::sync::Arc","std::time::Duration","std::vec::Vec","std::cell::RefCell","std::borrow::Cow","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::result::Result","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::num::NonZeroUsize","std::string::String","std::boxed::Box","enc::impls::<impl enc::Encode for &'a T>","std::collections::Bound","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroI8","std::collections::BTreeSet","std::net::SocketAddrV4","std::net::SocketAddr","std::cell::Cell","std::rc::Rc","std::collections::BinaryHeap","std::num::NonZeroIsize","std::net::Ipv6Addr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::ffi::CString","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::num::NonZeroI128","std::net::Ipv4Addr","std::net::IpAddr","std::sync::Mutex","std::sync::atomic::AtomicU32","std::collections::HashSet"],"P":["enc::impls::<impl enc::Encode for &'a T>","std::marker::PhantomData","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::sync::Arc","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::path::PathBuf","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::result::Result","std::net::Ipv4Addr","std::num::NonZeroI32","std::time::Duration","std::collections::BTreeMap","std::num::NonZeroI8","std::cell::Cell","std::time::SystemTime","std::num::NonZeroUsize","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::sync::Mutex","std::boxed::Box","std::vec::Vec","std::num::NonZeroU64","std::collections::BinaryHeap","std::collections::Bound","std::collections::BTreeSet","std::cell::RefCell","std::collections::HashMap","std::sync::atomic::AtomicU64","std::collections::HashSet","std::string::String","std::ops::Range","std::num::NonZeroI128","std::collections::VecDeque","std::num::NonZeroU128","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::option::Option","std::sync::atomic::AtomicI8","std::borrow::Cow","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::rc::Rc","std::net::SocketAddr","std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroI64","std::sync::RwLock","std::net::SocketAddrV4","std::ffi::CString"],"_E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"enc::impls::<impl enc::Encode for &'a T>":{},"features::impl_std::IoWriter":{"W":["&std::fs::File","std::io::Cursor<[u8; N]>","std::vec::Vec<u8, A>","std::sys::unix::stdio::Stderr","std::sys::unix::stdio::Stdout","std::io::LineWriter<W>","&std::io::Stderr","std::io::stdio::StdoutRaw","&std::io::Sink","std::boxed::Box<W>","&'a std::os::unix::net::UnixStream","std::net::TcpStream","&std::process::ChildStdin","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::StdoutLock<'_>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::os::unix::net::UnixStream","std::io::BufWriter<W>","&std::net::TcpStream","std::io::Stderr","&std::io::Stdout","std::io::StderrLock<'_>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::process::ChildStdin","std::collections::VecDeque<u8, A>","std::io::BorrowedCursor<'a>","std::io::Sink","std::io::impls::<impl std::io::Write for &mut W>","std::io::Stdout","std::io::Cursor<&mut [u8]>","std::io::stdio::StderrRaw","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::fs::File"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","std::ffi::CStr","<T as std::borrow::ToOwned>","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroU8","std::sync::Arc","std::cell::RefCell","std::num::NonZeroI8","std::num::NonZeroIsize","std::option::Option","std::net::Ipv6Addr","std::num::NonZeroI16","std::cell::Cell","std::net::Ipv4Addr","std::time::Duration","std::path::PathBuf","std::num::NonZeroU128","std::num::NonZeroU64","std::time::SystemTime","std::string::String","std::rc::Rc","std::net::SocketAddrV6","std::num::NonZeroUsize","std::net::IpAddr","std::net::SocketAddr","std::num::NonZeroU32","std::num::NonZeroI64","std::num::NonZeroI32","std::marker::PhantomData"],"V":["std::sync::RwLock","std::sync::atomic::AtomicU64","std::ffi::CString","std::num::NonZeroUsize","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::vec::Vec","std::cell::Cell","std::sync::Arc","std::option::Option","std::sync::atomic::AtomicIsize","std::time::SystemTime","std::num::NonZeroU32","std::marker::PhantomData","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::collections::Bound","std::sync::Mutex","std::num::NonZeroI64","std::ops::Range","std::collections::VecDeque","std::cell::RefCell","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::num::NonZeroU8","std::rc::Rc","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::num::NonZeroU16","std::ops::RangeInclusive","std::net::Ipv4Addr","std::boxed::Box","std::num::NonZeroI128","std::collections::BinaryHeap","std::time::Duration","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::collections::HashMap","std::num::NonZeroU128","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::path::PathBuf","std::result::Result","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::collections::HashSet","std::sync::atomic::AtomicI8","std::string::String","std::collections::BTreeSet","std::net::IpAddr","std::net::SocketAddr","std::net::SocketAddrV6","std::borrow::Cow"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::Ipv4Addr","std::rc::Rc","std::cell::RefCell","std::cell::Cell","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroI16","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroU32","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroI32","std::net::IpAddr","std::net::SocketAddrV4","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroU16"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI8","std::net::SocketAddr","std::option::Option","std::path::PathBuf","std::time::Duration","std::cell::Cell","std::num::NonZeroI16","std::string::String","std::net::IpAddr","std::cell::RefCell","std::net::Ipv4Addr","std::num::NonZeroU16","std::num::NonZeroI32","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroIsize","std::net::Ipv6Addr","std::time::SystemTime","std::num::NonZeroU128","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroI64"]},"std::collections::Bound":{"T":["std::num::NonZeroU128","std::net::SocketAddrV6","std::num::NonZeroI16","std::collections::VecDeque","std::cell::RefCell","std::ops::RangeInclusive","std::vec::Vec","std::net::IpAddr","std::num::NonZeroUsize","std::rc::Rc","std::num::NonZeroU32","std::sync::RwLock","std::collections::BinaryHeap","std::path::PathBuf","std::time::Duration","std::num::NonZeroIsize","std::num::NonZeroI8","std::marker::PhantomData","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::cell::Cell","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::ffi::CString","std::num::NonZeroI32","std::time::SystemTime","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::borrow::Cow","std::collections::HashSet","std::collections::HashMap","std::net::SocketAddr","std::collections::Bound","std::num::NonZeroU64","std::sync::atomic::AtomicI8","std::string::String","std::sync::Arc","std::sync::Mutex","std::result::Result","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::boxed::Box","std::num::NonZeroI64","std::collections::BTreeSet","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::num::NonZeroU8","std::ops::Range","std::option::Option","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU16"]},"std::collections::HashMap":{"K":["std::sync::Arc","std::option::Option","std::num::NonZeroU64","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroI8","std::collections::Bound","std::ffi::CString","std::num::NonZeroU128","std::net::SocketAddr","std::num::NonZeroI128","std::time::Duration","std::num::NonZeroU8","std::num::NonZeroI16","std::path::PathBuf","std::net::Ipv6Addr"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroI8","std::collections::VecDeque","std::cell::Cell","std::net::IpAddr","std::num::NonZeroU128","std::collections::BTreeSet","std::sync::atomic::AtomicI32","std::option::Option","std::num::NonZeroU16","std::collections::BTreeMap","std::ops::Range","std::path::PathBuf","std::num::NonZeroU32","std::collections::HashSet","std::string::String","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::num::NonZeroI32","std::collections::BinaryHeap","std::net::Ipv4Addr","std::time::SystemTime","std::marker::PhantomData","std::num::NonZeroUsize","std::ops::RangeInclusive","std::collections::Bound","std::rc::Rc","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::boxed::Box","std::num::NonZeroU64","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroIsize","std::cell::RefCell","std::net::SocketAddrV6","std::result::Result","std::collections::HashMap","std::time::Duration","std::num::NonZeroI16","std::sync::Arc","std::ffi::CString","std::sync::Mutex","std::sync::RwLock","std::sync::atomic::AtomicI64","std::vec::Vec","std::borrow::Cow"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroU16","std::marker::PhantomData","std::net::IpAddr","std::net::Ipv4Addr","std::time::SystemTime","std::ffi::CString","std::num::NonZeroI16","std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroU128","std::num::NonZeroI8","std::num::NonZeroI128","std::num::NonZeroUsize","std::net::SocketAddr","std::time::Duration","std::sync::Arc"]},"std::collections::VecDeque":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::num::NonZeroU16","std::result::Result","std::net::SocketAddr","std::num::NonZeroU64","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroI64","std::ops::Range","std::num::NonZeroI16","std::collections::HashSet","std::time::Duration","std::string::String","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8","std::time::SystemTime","std::vec::Vec","std::sync::Arc","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::collections::BTreeSet","std::sync::RwLock","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::net::SocketAddrV4","std::borrow::Cow","std::collections::HashMap","std::marker::PhantomData","std::collections::BTreeMap","std::ffi::CString","std::sync::atomic::AtomicUsize","std::boxed::Box","std::sync::Mutex","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::rc::Rc","std::num::NonZeroIsize","std::option::Option","std::cell::Cell","std::collections::BinaryHeap","std::ops::RangeInclusive","std::cell::RefCell","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::collections::Bound","std::sync::atomic::AtomicI32","std::path::PathBuf","std::net::IpAddr"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::string::String","std::collections::HashMap","std::sync::atomic::AtomicI16","std::num::NonZeroI16","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroU8","std::borrow::Cow","std::ops::Range","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::sync::RwLock","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::num::NonZeroIsize","std::cell::Cell","std::num::NonZeroU32","std::net::SocketAddr","std::result::Result","std::collections::HashSet","std::option::Option","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::boxed::Box","std::collections::BTreeSet","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::vec::Vec","std::sync::Arc","std::ffi::CString","std::time::SystemTime","std::net::SocketAddrV6","std::path::PathBuf","std::num::NonZeroI128","std::num::NonZeroI64","std::ops::RangeInclusive","std::num::NonZeroU128","std::sync::Mutex","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::net::Ipv6Addr","std::collections::Bound","std::cell::RefCell","std::time::Duration","std::num::NonZeroI8","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::net::IpAddr","std::marker::PhantomData"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::time::Duration","std::collections::HashMap","std::sync::Arc","std::time::SystemTime","std::ops::RangeInclusive","std::boxed::Box","std::num::NonZeroI32","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::num::NonZeroI8","std::num::NonZeroUsize","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::ops::Range","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::vec::Vec","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::path::PathBuf","std::result::Result","std::sync::atomic::AtomicUsize","std::option::Option","std::num::NonZeroU16","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::num::NonZeroIsize","std::collections::HashSet","std::collections::Bound","std::sync::Mutex","std::string::String","std::cell::RefCell","std::cell::Cell","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::borrow::Cow","std::collections::BTreeSet","std::num::NonZeroU128","std::collections::VecDeque","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::rc::Rc","std::sync::RwLock","std::net::IpAddr","std::collections::BinaryHeap","std::num::NonZeroI64","std::ffi::CString","std::net::SocketAddr","std::net::SocketAddrV4"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroI8","std::num::NonZeroUsize","std::num::NonZeroI16","std::sync::Arc","std::ffi::CString","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::net::IpAddr","std::sync::Mutex","std::string::String","std::num::NonZeroIsize","std::time::SystemTime","std::collections::Bound","std::path::PathBuf","std::result::Result","std::vec::Vec","std::ops::RangeInclusive","std::sync::atomic::AtomicI8","std::ops::Range","std::net::Ipv4Addr","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::num::NonZeroI32","std::borrow::Cow","std::net::Ipv6Addr","std::collections::HashMap","std::num::NonZeroI64","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::num::NonZeroU8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::option::Option","std::collections::HashSet","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::boxed::Box","std::collections::BinaryHeap","std::collections::BTreeSet","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::sync::RwLock","std::time::Duration","std::cell::RefCell","std::num::NonZeroU64","std::num::NonZeroU32","std::marker::PhantomData","std::cell::Cell","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::rc::Rc"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // _E
+p0.encode(p1);
+enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::encode(p0, p1);
+crate::enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::encode(p0, p1);
+<(A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for ()>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for ()>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SliceWriter"]},"enc::impls::<impl enc::Encode for ()>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::process::ChildStdin","std::io::BorrowedCursor<'a>","std::os::unix::net::UnixStream","std::vec::Vec<u8, A>","&std::fs::File","&std::io::Sink","std::io::Stderr","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<&mut [u8]>","&std::io::Stderr","std::io::Sink","std::io::impls::<impl std::io::Write for &mut W>","std::sys::unix::stdio::Stderr","std::io::BufWriter<W>","std::io::stdio::StdoutRaw","std::fs::File","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Cursor<[u8; N]>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&'a std::os::unix::net::UnixStream","std::sys::unix::stdio::Stdout","&std::process::ChildStdin","&std::net::TcpStream","std::io::Cursor<std::boxed::Box<[u8], A>>","std::net::TcpStream","std::io::StderrLock<'_>","std::boxed::Box<W>","std::io::LineWriter<W>","&std::io::Stdout","std::io::StdoutLock<'_>","std::collections::VecDeque<u8, A>","std::io::stdio::StderrRaw","std::io::Stdout"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & (); // None+()
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for ()>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for ()>::encode(p0, p1);
+<()>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::marker::PhantomData<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for std::marker::PhantomData<T>>::encode":{"E":["enc::Encoder","std::marker::Sized"],"T":["std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_std::IoWriter","enc::write::SizeWriter","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for std::marker::PhantomData<T>>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"],"T":["RUG_ANY"]},"features::impl_std::IoWriter":{"W":["std::net::TcpStream","&std::fs::File","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::process::ChildStdin","std::io::BorrowedCursor<'a>","&std::io::Stderr","std::io::StderrLock<'_>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::StdoutLock<'_>","std::boxed::Box<W>","std::io::stdio::StdoutRaw","std::io::LineWriter<W>","&std::io::Stdout","std::sys::unix::stdio::Stdout","std::collections::VecDeque<u8, A>","std::io::BufWriter<W>","&std::io::Sink","std::io::Cursor<[u8; N]>","std::io::impls::<impl std::io::Write for &mut W>","std::process::ChildStdin","std::sys::unix::stdio::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::net::TcpStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Stderr","&'a std::os::unix::net::UnixStream","std::vec::Vec<u8, A>","std::io::Stdout","std::io::stdio::StderrRaw","std::fs::File","std::os::unix::net::UnixStream","std::io::Cursor<&mut [u8]>","std::io::Sink"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::marker::PhantomData<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::marker::PhantomData<T>>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::marker::PhantomData<T>>::encode(p0, p1);
+<std::marker::PhantomData<T>>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for bool>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for bool>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","enc::write::SizeWriter","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for bool>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<[u8; N]>","&std::process::ChildStdin","std::io::StdoutLock<'_>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::collections::VecDeque<u8, A>","&std::io::Stderr","std::io::BufWriter<W>","std::fs::File","std::vec::Vec<u8, A>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Sink","std::io::impls::<impl std::io::Write for &mut W>","std::process::ChildStdin","std::sys::unix::stdio::Stdout","std::io::Stderr","std::sys::unix::stdio::Stderr","std::net::TcpStream","std::io::Cursor<std::boxed::Box<[u8], A>>","std::os::unix::net::UnixStream","std::io::StderrLock<'_>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&'a std::os::unix::net::UnixStream","&std::io::Sink","&std::io::Stdout","std::io::Stdout","&std::fs::File","std::io::stdio::StdoutRaw","std::io::Cursor<&mut [u8]>","std::io::LineWriter<W>","std::boxed::Box<W>","std::io::stdio::StderrRaw","&std::net::TcpStream","std::io::BorrowedCursor<'a>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & true; // None+bool
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for bool>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for bool>::encode(p0, p1);
+<bool>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for u8>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for u8>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter"]},"enc::impls::<impl enc::Encode for u8>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::io::StdoutLock<'_>","&'a std::os::unix::net::UnixStream","std::net::TcpStream","std::io::impls::<impl std::io::Write for &mut W>","std::process::ChildStdin","std::io::Cursor<[u8; N]>","std::sys::unix::stdio::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Sink","std::os::unix::net::UnixStream","std::vec::Vec<u8, A>","std::sys::unix::stdio::Stdout","&std::io::Sink","&std::net::TcpStream","std::collections::VecDeque<u8, A>","std::io::stdio::StdoutRaw","&std::io::Stderr","std::io::Stderr","&std::fs::File","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Stdout","std::io::LineWriter<W>","std::io::Cursor<&mut [u8]>","std::io::StderrLock<'_>","std::io::Cursor<std::vec::Vec<u8, A>>","&std::io::Stdout","&std::process::ChildStdin","std::fs::File","std::io::BorrowedCursor<'a>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::stdio::StderrRaw","std::boxed::Box<W>","std::io::BufWriter<W>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0u8; // None+u8
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for u8>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for u8>::encode(p0, p1);
+<u8>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::num::NonZeroU8>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","std::clone::Clone"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for std::num::NonZeroU8>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SizeWriter"]},"enc::impls::<impl enc::Encode for std::num::NonZeroU8>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::net::TcpStream","std::boxed::Box<W>","&std::net::TcpStream","&std::io::Stderr","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Cursor<[u8; N]>","&std::io::Sink","std::io::stdio::StderrRaw","std::io::BufWriter<W>","&std::io::Stdout","std::os::unix::net::UnixStream","std::io::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Stdout","std::sys::unix::stdio::Stdout","std::io::BorrowedCursor<'a>","std::collections::VecDeque<u8, A>","std::io::LineWriter<W>","std::fs::File","std::io::StderrLock<'_>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::sys::unix::stdio::Stderr","std::io::Cursor<&mut [u8]>","&std::fs::File","&'a std::os::unix::net::UnixStream","std::process::ChildStdin","std::io::impls::<impl std::io::Write for &mut W>","std::io::stdio::StdoutRaw","&std::process::ChildStdin","std::io::Sink","std::vec::Vec<u8, A>","std::io::StdoutLock<'_>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::num::NonZeroU8
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::num::NonZeroU8>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::num::NonZeroU8>::encode(p0, p1);
+<std::num::NonZeroU8>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for u16>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for u16>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SizeWriter","enc::write::SliceWriter"]},"enc::impls::<impl enc::Encode for u16>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::io::impls::<impl std::io::Write for &mut W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::StderrLock<'_>","std::io::stdio::StdoutRaw","&std::process::ChildStdin","std::io::Cursor<&mut [u8]>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::stdio::StderrRaw","std::io::Cursor<[u8; N]>","&'a std::os::unix::net::UnixStream","std::io::Cursor<std::boxed::Box<[u8], A>>","std::process::ChildStdin","std::io::Sink","&std::fs::File","std::net::TcpStream","std::vec::Vec<u8, A>","&std::io::Sink","std::io::Stdout","std::io::Stderr","&std::io::Stderr","std::sys::unix::stdio::Stdout","std::io::BufWriter<W>","std::io::LineWriter<W>","&std::net::TcpStream","std::collections::VecDeque<u8, A>","std::boxed::Box<W>","std::io::BorrowedCursor<'a>","&std::io::Stdout","std::fs::File","std::sys::unix::stdio::Stderr","std::io::StdoutLock<'_>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::os::unix::net::UnixStream"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0u16; // None+u16
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for u16>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for u16>::encode(p0, p1);
+<u16>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::num::NonZeroU16>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized"],"I":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for std::num::NonZeroU16>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","features::impl_std::IoWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for std::num::NonZeroU16>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["&std::io::Stdout","std::process::ChildStdin","std::fs::File","&std::io::Sink","std::io::StderrLock<'_>","std::io::impls::<impl std::io::Write for &mut W>","std::io::LineWriter<W>","&std::net::TcpStream","std::io::Sink","std::io::Cursor<[u8; N]>","&'a std::os::unix::net::UnixStream","std::io::Cursor<&mut [u8]>","std::vec::Vec<u8, A>","std::io::stdio::StderrRaw","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::BufWriter<W>","std::io::Stdout","std::io::StdoutLock<'_>","std::sys::unix::stdio::Stderr","std::sys::unix::stdio::Stdout","std::io::BorrowedCursor<'a>","std::os::unix::net::UnixStream","&std::process::ChildStdin","&std::io::Stderr","std::io::stdio::StdoutRaw","std::net::TcpStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::fs::File","std::io::Cursor<std::boxed::Box<[u8], A>>","std::collections::VecDeque<u8, A>","std::boxed::Box<W>","std::io::Stderr"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::num::NonZeroU16
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::num::NonZeroU16>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::num::NonZeroU16>::encode(p0, p1);
+<std::num::NonZeroU16>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for u32>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for u32>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for u32>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<std::boxed::Box<[u8], A>>","std::process::ChildStdin","std::io::StderrLock<'_>","std::io::Sink","&'a std::os::unix::net::UnixStream","&std::io::Sink","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::sys::unix::stdio::Stderr","std::fs::File","std::collections::VecDeque<u8, A>","std::io::BorrowedCursor<'a>","std::io::LineWriter<W>","&std::io::Stderr","std::io::stdio::StderrRaw","std::io::StdoutLock<'_>","std::io::Stdout","&std::fs::File","std::net::TcpStream","&std::net::TcpStream","std::io::stdio::StdoutRaw","std::io::Cursor<&mut [u8]>","std::os::unix::net::UnixStream","std::io::Stderr","std::vec::Vec<u8, A>","std::sys::unix::stdio::Stdout","std::boxed::Box<W>","std::io::Cursor<[u8; N]>","&std::io::Stdout","std::io::BufWriter<W>","std::io::impls::<impl std::io::Write for &mut W>","&std::process::ChildStdin","std::io::Cursor<std::vec::Vec<u8, A>>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0u32; // None+u32
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for u32>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for u32>::encode(p0, p1);
+<u32>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::num::NonZeroU32>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for std::num::NonZeroU32>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for std::num::NonZeroU32>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["&'a std::os::unix::net::UnixStream","std::io::Cursor<[u8; N]>","std::net::TcpStream","std::io::BorrowedCursor<'a>","std::io::LineWriter<W>","std::boxed::Box<W>","std::io::Sink","std::io::stdio::StderrRaw","std::fs::File","std::process::ChildStdin","std::io::StdoutLock<'_>","&std::io::Sink","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::sys::unix::stdio::Stderr","std::io::StderrLock<'_>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::BufWriter<W>","std::io::Stdout","&std::io::Stdout","&std::process::ChildStdin","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<&mut [u8]>","&std::net::TcpStream","&std::fs::File","std::collections::VecDeque<u8, A>","std::sys::unix::stdio::Stdout","std::io::Stderr","std::os::unix::net::UnixStream","&std::io::Stderr","std::io::stdio::StdoutRaw","std::vec::Vec<u8, A>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Cursor<std::boxed::Box<[u8], A>>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::num::NonZeroU32
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::num::NonZeroU32>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::num::NonZeroU32>::encode(p0, p1);
+<std::num::NonZeroU32>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for u64>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for u64>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","enc::write::SizeWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for u64>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::io::impls::<impl std::io::Write for &mut W>","std::io::Sink","&std::io::Stderr","std::sys::unix::stdio::Stderr","std::io::stdio::StderrRaw","&std::fs::File","std::io::Cursor<&mut [u8]>","std::net::TcpStream","std::io::Stderr","std::os::unix::net::UnixStream","std::io::Cursor<[u8; N]>","&std::io::Sink","std::io::StderrLock<'_>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::sys::unix::stdio::Stdout","std::io::LineWriter<W>","std::io::BufWriter<W>","std::io::BorrowedCursor<'a>","&std::process::ChildStdin","std::vec::Vec<u8, A>","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::io::Stdout","&std::net::TcpStream","std::io::StdoutLock<'_>","std::fs::File","std::io::stdio::StdoutRaw","std::collections::VecDeque<u8, A>","std::io::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::boxed::Box<W>","std::io::Cursor<std::vec::Vec<u8, A>>","&'a std::os::unix::net::UnixStream","std::process::ChildStdin"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0u64; // None+u64
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for u64>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for u64>::encode(p0, p1);
+<u64>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::num::NonZeroU64>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"L":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for std::num::NonZeroU64>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter","features::impl_std::IoWriter"]},"enc::impls::<impl enc::Encode for std::num::NonZeroU64>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<std::vec::Vec<u8, A>>","std::fs::File","std::boxed::Box<W>","std::io::LineWriter<W>","std::io::Sink","&std::net::TcpStream","std::collections::VecDeque<u8, A>","std::io::Stderr","std::io::BorrowedCursor<'a>","std::io::Cursor<&mut [u8]>","std::io::Stdout","std::io::impls::<impl std::io::Write for &mut W>","&std::io::Sink","std::io::stdio::StdoutRaw","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::net::TcpStream","&std::fs::File","std::sys::unix::stdio::Stderr","std::io::Cursor<[u8; N]>","std::io::StdoutLock<'_>","std::process::ChildStdin","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::io::Stderr","std::io::BufWriter<W>","std::io::StderrLock<'_>","std::vec::Vec<u8, A>","&'a std::os::unix::net::UnixStream","&std::process::ChildStdin","std::sys::unix::stdio::Stdout","std::io::stdio::StderrRaw","&std::io::Stdout","std::os::unix::net::UnixStream"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::num::NonZeroU64
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::num::NonZeroU64>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::num::NonZeroU64>::encode(p0, p1);
+<std::num::NonZeroU64>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for u128>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for u128>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","features::impl_alloc::VecWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter"]},"enc::impls::<impl enc::Encode for u128>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::io::Stderr","std::io::Cursor<&mut [u8]>","&'a std::os::unix::net::UnixStream","std::os::unix::net::UnixStream","std::io::StdoutLock<'_>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::net::TcpStream","std::net::TcpStream","std::io::stdio::StderrRaw","std::io::LineWriter<W>","std::io::Sink","std::sys::unix::stdio::Stderr","std::io::stdio::StdoutRaw","std::io::impls::<impl std::io::Write for &mut W>","&std::process::ChildStdin","std::io::Cursor<std::vec::Vec<u8, A>>","&std::io::Sink","&std::io::Stdout","std::sys::unix::stdio::Stdout","std::io::Stdout","std::io::BufWriter<W>","std::io::BorrowedCursor<'a>","std::vec::Vec<u8, A>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::fs::File","&std::io::Stderr","std::boxed::Box<W>","std::fs::File","std::io::Cursor<[u8; N]>","std::process::ChildStdin","std::collections::VecDeque<u8, A>","std::io::StderrLock<'_>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0u128; // None+u128
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for u128>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for u128>::encode(p0, p1);
+<u128>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::num::NonZeroU128>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for std::num::NonZeroU128>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","enc::write::SizeWriter","enc::write::SliceWriter","features::impl_alloc::VecWriter","features::impl_std::IoWriter"]},"enc::impls::<impl enc::Encode for std::num::NonZeroU128>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::io::Stderr","&'a std::os::unix::net::UnixStream","std::process::ChildStdin","&std::io::Stdout","std::os::unix::net::UnixStream","&std::process::ChildStdin","std::io::Cursor<[u8; N]>","std::io::Cursor<&mut [u8]>","std::io::StdoutLock<'_>","std::sys::unix::stdio::Stderr","std::boxed::Box<W>","std::io::stdio::StdoutRaw","std::io::LineWriter<W>","std::io::BorrowedCursor<'a>","&std::fs::File","std::io::BufWriter<W>","std::net::TcpStream","std::io::Sink","std::io::impls::<impl std::io::Write for &mut W>","std::io::stdio::StderrRaw","std::io::Cursor<std::boxed::Box<[u8], A>>","std::collections::VecDeque<u8, A>","std::sys::unix::stdio::Stdout","std::io::StderrLock<'_>","&std::io::Sink","std::vec::Vec<u8, A>","&std::net::TcpStream","std::io::Stderr","std::io::Cursor<std::vec::Vec<u8, A>>","std::fs::File"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::num::NonZeroU128
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::num::NonZeroU128>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::num::NonZeroU128>::encode(p0, p1);
+<std::num::NonZeroU128>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for usize>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::clone::Clone"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for usize>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","features::impl_std::IoWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for usize>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<std::vec::Vec<u8, A>>","&std::net::TcpStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stdout","std::io::BorrowedCursor<'a>","std::io::Stdout","&std::io::Stdout","std::io::Cursor<[u8; N]>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::stdio::StdoutRaw","std::io::BufWriter<W>","std::io::stdio::StderrRaw","std::os::unix::net::UnixStream","std::process::ChildStdin","&std::process::ChildStdin","std::io::impls::<impl std::io::Write for &mut W>","std::collections::VecDeque<u8, A>","std::boxed::Box<W>","std::io::LineWriter<W>","std::io::StderrLock<'_>","&std::fs::File","std::io::StdoutLock<'_>","std::io::Stderr","&std::io::Stderr","&std::io::Sink","&'a std::os::unix::net::UnixStream","std::net::TcpStream","std::vec::Vec<u8, A>","std::io::Sink","std::fs::File","std::sys::unix::stdio::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0usize; // None+usize
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for usize>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for usize>::encode(p0, p1);
+<usize>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::num::NonZeroUsize>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for std::num::NonZeroUsize>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter","features::impl_std::IoWriter","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for std::num::NonZeroUsize>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::fs::File","std::io::BorrowedCursor<'a>","std::io::StderrLock<'_>","std::io::LineWriter<W>","std::io::Sink","std::process::ChildStdin","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<[u8; N]>","std::net::TcpStream","&std::io::Stderr","std::io::BufWriter<W>","std::io::Cursor<std::vec::Vec<u8, A>>","&std::io::Stdout","std::vec::Vec<u8, A>","std::io::Stderr","std::sys::unix::stdio::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::StdoutLock<'_>","std::sys::unix::stdio::Stdout","&'a std::os::unix::net::UnixStream","std::os::unix::net::UnixStream","std::collections::VecDeque<u8, A>","std::io::stdio::StdoutRaw","std::io::stdio::StderrRaw","std::io::Cursor<&mut [u8]>","std::io::Stdout","std::boxed::Box<W>","&std::fs::File","&std::process::ChildStdin","std::io::impls::<impl std::io::Write for &mut W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::net::TcpStream","&std::io::Sink"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::num::NonZeroUsize
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::num::NonZeroUsize>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::num::NonZeroUsize>::encode(p0, p1);
+<std::num::NonZeroUsize>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for i8>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for i8>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SliceWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>"]},"enc::impls::<impl enc::Encode for i8>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::io::BufWriter<W>","std::io::StdoutLock<'_>","std::io::Cursor<std::vec::Vec<u8, A>>","std::vec::Vec<u8, A>","&std::io::Stdout","&std::net::TcpStream","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::fs::File","std::io::Sink","&std::process::ChildStdin","std::boxed::Box<W>","std::collections::VecDeque<u8, A>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::BorrowedCursor<'a>","std::io::Stdout","&std::io::Sink","std::io::Cursor<[u8; N]>","std::net::TcpStream","std::fs::File","std::io::impls::<impl std::io::Write for &mut W>","std::io::StderrLock<'_>","&'a std::os::unix::net::UnixStream","std::io::LineWriter<W>","std::os::unix::net::UnixStream","std::io::Stderr","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stdout","&std::io::Stderr","std::io::stdio::StderrRaw","std::process::ChildStdin","std::sys::unix::stdio::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::stdio::StdoutRaw"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0i8; // None+i8
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for i8>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for i8>::encode(p0, p1);
+<i8>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::num::NonZeroI8>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for std::num::NonZeroI8>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","enc::write::SliceWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for std::num::NonZeroI8>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["&std::fs::File","std::io::Sink","std::io::Cursor<[u8; N]>","std::boxed::Box<W>","std::vec::Vec<u8, A>","std::net::TcpStream","std::io::Stdout","&'a std::os::unix::net::UnixStream","std::io::BufWriter<W>","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::io::Stdout","&std::io::Sink","std::io::stdio::StderrRaw","std::os::unix::net::UnixStream","&std::process::ChildStdin","&std::io::Stderr","std::io::StderrLock<'_>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Stderr","std::sys::unix::stdio::Stdout","std::collections::VecDeque<u8, A>","std::sys::unix::stdio::Stderr","std::io::StdoutLock<'_>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::impls::<impl std::io::Write for &mut W>","std::process::ChildStdin","&std::net::TcpStream","std::io::Cursor<&mut [u8]>","std::io::BorrowedCursor<'a>","std::fs::File","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::stdio::StdoutRaw","std::io::LineWriter<W>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::num::NonZeroI8
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::num::NonZeroI8>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::num::NonZeroI8>::encode(p0, p1);
+<std::num::NonZeroI8>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for i16>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for i16>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SizeWriter","features::impl_alloc::VecWriter","enc::write::SliceWriter"]},"enc::impls::<impl enc::Encode for i16>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::fs::File","&std::io::Stdout","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::stdio::StdoutRaw","std::io::Sink","std::sys::unix::stdio::Stdout","std::io::impls::<impl std::io::Write for &mut W>","std::net::TcpStream","&std::fs::File","std::io::StdoutLock<'_>","&std::net::TcpStream","std::io::BufWriter<W>","&'a std::os::unix::net::UnixStream","std::vec::Vec<u8, A>","std::io::Cursor<std::vec::Vec<u8, A>>","std::collections::VecDeque<u8, A>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::sys::unix::stdio::Stderr","std::io::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::stdio::StderrRaw","&std::io::Sink","&std::io::Stderr","std::io::Cursor<&mut [u8]>","std::io::BorrowedCursor<'a>","std::boxed::Box<W>","std::io::StderrLock<'_>","std::process::ChildStdin","std::os::unix::net::UnixStream","std::io::Stdout","&std::process::ChildStdin","std::io::LineWriter<W>","std::io::Cursor<[u8; N]>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0i16; // None+i16
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for i16>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for i16>::encode(p0, p1);
+<i16>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::num::NonZeroI16>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"L":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for std::num::NonZeroI16>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","enc::write::SizeWriter","features::impl_std::IoWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for std::num::NonZeroI16>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<[u8; N]>","std::io::StderrLock<'_>","std::io::stdio::StderrRaw","std::io::stdio::StdoutRaw","std::io::StdoutLock<'_>","std::io::Stderr","std::net::TcpStream","std::sys::unix::stdio::Stderr","std::process::ChildStdin","std::os::unix::net::UnixStream","&std::io::Sink","&std::fs::File","std::io::BorrowedCursor<'a>","&std::io::Stderr","&'a std::os::unix::net::UnixStream","std::io::Cursor<std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stdout","std::boxed::Box<W>","&std::process::ChildStdin","&std::net::TcpStream","std::collections::VecDeque<u8, A>","std::vec::Vec<u8, A>","std::io::Sink","std::io::LineWriter<W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<&mut [u8]>","std::io::impls::<impl std::io::Write for &mut W>","std::io::Stdout","std::fs::File","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::BufWriter<W>","&std::io::Stdout"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::num::NonZeroI16
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::num::NonZeroI16>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::num::NonZeroI16>::encode(p0, p1);
+<std::num::NonZeroI16>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for i32>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for i32>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","enc::write::SliceWriter","features::impl_std::IoWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>"]},"enc::impls::<impl enc::Encode for i32>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::boxed::Box<W>","std::io::Cursor<&mut [u8]>","&std::io::Stderr","&std::process::ChildStdin","&'a std::os::unix::net::UnixStream","std::fs::File","std::collections::VecDeque<u8, A>","std::sys::unix::stdio::Stdout","std::io::StdoutLock<'_>","std::io::StderrLock<'_>","std::io::Cursor<[u8; N]>","std::io::stdio::StdoutRaw","std::vec::Vec<u8, A>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Stderr","std::sys::unix::stdio::Stderr","std::io::LineWriter<W>","std::io::BorrowedCursor<'a>","&std::fs::File","&std::io::Sink","std::io::Sink","std::io::stdio::StderrRaw","&std::io::Stdout","std::io::impls::<impl std::io::Write for &mut W>","std::net::TcpStream","std::process::ChildStdin","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::os::unix::net::UnixStream","&std::net::TcpStream","std::io::BufWriter<W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0i32; // None+i32
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for i32>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for i32>::encode(p0, p1);
+<i32>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::num::NonZeroI32>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for std::num::NonZeroI32>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_std::IoWriter"]},"enc::impls::<impl enc::Encode for std::num::NonZeroI32>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::boxed::Box<W>","std::io::impls::<impl std::io::Write for &mut W>","&std::io::Sink","&std::fs::File","std::io::Sink","std::io::StderrLock<'_>","std::io::Stderr","std::io::stdio::StdoutRaw","std::io::BufWriter<W>","std::vec::Vec<u8, A>","&std::process::ChildStdin","std::io::Cursor<[u8; N]>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::BorrowedCursor<'a>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&'a std::os::unix::net::UnixStream","&std::net::TcpStream","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::io::Stdout","std::process::ChildStdin","std::os::unix::net::UnixStream","std::io::LineWriter<W>","&std::io::Stderr","std::sys::unix::stdio::Stdout","std::fs::File","std::io::Cursor<&mut [u8]>","std::io::Stdout","std::sys::unix::stdio::Stderr","std::io::StdoutLock<'_>","std::collections::VecDeque<u8, A>","std::net::TcpStream","std::io::stdio::StderrRaw","std::io::Cursor<&mut std::vec::Vec<u8, A>>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::num::NonZeroI32
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::num::NonZeroI32>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::num::NonZeroI32>::encode(p0, p1);
+<std::num::NonZeroI32>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for i64>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for i64>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","enc::write::SliceWriter","features::impl_std::IoWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>"]},"enc::impls::<impl enc::Encode for i64>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::io::BufWriter<W>","std::io::stdio::StdoutRaw","&'a std::os::unix::net::UnixStream","std::boxed::Box<W>","std::io::StderrLock<'_>","std::sys::unix::stdio::Stderr","std::io::Cursor<&mut [u8]>","std::process::ChildStdin","&std::io::Stdout","std::io::StdoutLock<'_>","std::io::LineWriter<W>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::BorrowedCursor<'a>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<[u8; N]>","std::io::impls::<impl std::io::Write for &mut W>","&std::fs::File","&std::process::ChildStdin","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::net::TcpStream","std::collections::VecDeque<u8, A>","std::io::Sink","std::net::TcpStream","&std::io::Sink","std::io::Stdout","std::fs::File","&std::io::Stderr","std::io::stdio::StderrRaw","std::io::Stderr","std::vec::Vec<u8, A>","std::os::unix::net::UnixStream"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0i64; // None+i64
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for i64>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for i64>::encode(p0, p1);
+<i64>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::num::NonZeroI64>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone","std::marker::Sized"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for std::num::NonZeroI64>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::LittleEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","enc::write::SizeWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter"]},"enc::impls::<impl enc::Encode for std::num::NonZeroI64>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::BufWriter<W>","std::process::ChildStdin","&std::net::TcpStream","&std::io::Stderr","std::io::Cursor<[u8; N]>","&std::io::Stdout","&std::fs::File","std::io::StdoutLock<'_>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::StderrLock<'_>","&std::process::ChildStdin","std::sys::unix::stdio::Stderr","std::io::LineWriter<W>","std::os::unix::net::UnixStream","&'a std::os::unix::net::UnixStream","std::io::Cursor<&mut [u8]>","std::io::Stdout","std::io::impls::<impl std::io::Write for &mut W>","std::collections::VecDeque<u8, A>","std::net::TcpStream","std::vec::Vec<u8, A>","std::io::Cursor<std::vec::Vec<u8, A>>","std::fs::File","std::boxed::Box<W>","std::io::Sink","std::io::Stderr","std::sys::unix::stdio::Stdout","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::io::Sink","std::io::stdio::StderrRaw","std::io::BorrowedCursor<'a>","std::io::stdio::StdoutRaw"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::num::NonZeroI64
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::num::NonZeroI64>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::num::NonZeroI64>::encode(p0, p1);
+<std::num::NonZeroI64>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for i128>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::clone::Clone"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for i128>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","enc::write::SliceWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter"]},"enc::impls::<impl enc::Encode for i128>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::io::BorrowedCursor<'a>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::fs::File","&std::io::Sink","std::net::TcpStream","std::sys::unix::stdio::Stderr","&std::io::Stdout","std::io::stdio::StdoutRaw","std::io::Cursor<std::boxed::Box<[u8], A>>","std::collections::VecDeque<u8, A>","std::io::BufWriter<W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::LineWriter<W>","std::io::Sink","&std::net::TcpStream","std::process::ChildStdin","&std::process::ChildStdin","&'a std::os::unix::net::UnixStream","std::fs::File","std::os::unix::net::UnixStream","std::sys::unix::stdio::Stdout","std::io::Stdout","std::io::Cursor<[u8; N]>","std::boxed::Box<W>","std::io::Cursor<&mut [u8]>","std::io::StdoutLock<'_>","std::vec::Vec<u8, A>","&std::io::Stderr","std::io::Stderr","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::stdio::StderrRaw","std::io::StderrLock<'_>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0i128; // None+i128
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for i128>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for i128>::encode(p0, p1);
+<i128>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::num::NonZeroI128>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for std::num::NonZeroI128>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SliceWriter","enc::write::SizeWriter"]},"enc::impls::<impl enc::Encode for std::num::NonZeroI128>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::io::StdoutLock<'_>","std::io::Stdout","std::sys::unix::stdio::Stdout","std::io::stdio::StdoutRaw","&'a std::os::unix::net::UnixStream","std::io::BufWriter<W>","std::sys::unix::stdio::Stderr","std::boxed::Box<W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::net::TcpStream","std::collections::VecDeque<u8, A>","std::io::LineWriter<W>","std::vec::Vec<u8, A>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::BorrowedCursor<'a>","std::io::StderrLock<'_>","std::io::impls::<impl std::io::Write for &mut W>","&std::process::ChildStdin","&std::io::Stderr","std::io::Cursor<[u8; N]>","std::io::Cursor<std::vec::Vec<u8, A>>","std::process::ChildStdin","&std::fs::File","std::os::unix::net::UnixStream","std::fs::File","std::io::stdio::StderrRaw","std::io::Sink","std::io::Cursor<&mut [u8]>","std::io::Stderr","&std::io::Sink","&std::io::Stdout","std::net::TcpStream"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::num::NonZeroI128
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::num::NonZeroI128>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::num::NonZeroI128>::encode(p0, p1);
+<std::num::NonZeroI128>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for isize>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","std::marker::Copy"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for isize>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","enc::write::SliceWriter","enc::write::SizeWriter","features::impl_alloc::VecWriter","features::impl_std::IoWriter"]},"enc::impls::<impl enc::Encode for isize>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::os::unix::net::UnixStream","std::io::BufWriter<W>","&std::io::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::impls::<impl std::io::Write for &mut W>","std::io::Stdout","std::io::stdio::StderrRaw","std::io::Sink","std::io::LineWriter<W>","&std::io::Stdout","std::boxed::Box<W>","&'a std::os::unix::net::UnixStream","std::io::Cursor<std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stderr","std::net::TcpStream","std::io::StdoutLock<'_>","std::io::Cursor<&mut [u8]>","std::io::stdio::StdoutRaw","std::process::ChildStdin","std::io::BorrowedCursor<'a>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::vec::Vec<u8, A>","std::collections::VecDeque<u8, A>","std::io::Cursor<[u8; N]>","std::sys::unix::stdio::Stdout","&std::net::TcpStream","std::fs::File","&std::process::ChildStdin","&std::io::Sink","std::io::Stderr","&std::fs::File","std::io::StderrLock<'_>","std::io::buffered::linewritershim::LineWriterShim<'a, W>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0isize; // None+isize
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for isize>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for isize>::encode(p0, p1);
+<isize>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::num::NonZeroIsize>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for std::num::NonZeroIsize>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","features::impl_std::IoWriter","enc::write::SliceWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>"]},"enc::impls::<impl enc::Encode for std::num::NonZeroIsize>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::boxed::Box<W>","&std::io::Stderr","std::io::Stdout","&std::net::TcpStream","std::io::BufWriter<W>","std::io::BorrowedCursor<'a>","std::vec::Vec<u8, A>","std::net::TcpStream","&std::io::Sink","std::collections::VecDeque<u8, A>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::impls::<impl std::io::Write for &mut W>","std::io::stdio::StdoutRaw","std::sys::unix::stdio::Stderr","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&'a std::os::unix::net::UnixStream","std::process::ChildStdin","&std::io::Stdout","std::sys::unix::stdio::Stdout","&std::process::ChildStdin","&std::fs::File","std::fs::File","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::StderrLock<'_>","std::os::unix::net::UnixStream","std::io::LineWriter<W>","std::io::Stderr","std::io::stdio::StderrRaw","std::io::Cursor<[u8; N]>","std::io::Cursor<&mut [u8]>","std::io::Sink","std::io::StdoutLock<'_>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::num::NonZeroIsize
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::num::NonZeroIsize>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::num::NonZeroIsize>::encode(p0, p1);
+<std::num::NonZeroIsize>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for f32>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"],"I":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for f32>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter"]},"enc::impls::<impl enc::Encode for f32>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["&std::fs::File","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::vec::Vec<u8, A>","&std::process::ChildStdin","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::io::Sink","std::sys::unix::stdio::Stderr","std::io::BufWriter<W>","std::collections::VecDeque<u8, A>","std::io::Cursor<[u8; N]>","std::process::ChildStdin","std::fs::File","std::io::stdio::StderrRaw","std::io::stdio::StdoutRaw","std::os::unix::net::UnixStream","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stdout","std::boxed::Box<W>","&std::io::Stdout","std::io::Sink","std::net::TcpStream","std::io::BorrowedCursor<'a>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Stderr","std::io::Stdout","&std::net::TcpStream","&'a std::os::unix::net::UnixStream","std::io::LineWriter<W>","std::io::StderrLock<'_>","std::io::StdoutLock<'_>","std::io::impls::<impl std::io::Write for &mut W>","&std::io::Stderr"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0f32; // None+f32
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for f32>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for f32>::encode(p0, p1);
+<f32>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for f64>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","config::internal::InternalIntEncodingConfig"]},"config::Configuration":{"E":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for f64>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SliceWriter","features::impl_std::IoWriter"]},"enc::impls::<impl enc::Encode for f64>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["std::collections::VecDeque<u8, A>","std::os::unix::net::UnixStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::io::Stdout","std::io::LineWriter<W>","&std::io::Stderr","std::io::Sink","std::vec::Vec<u8, A>","std::fs::File","&std::net::TcpStream","std::io::Stderr","std::sys::unix::stdio::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::stdio::StdoutRaw","std::io::Cursor<std::vec::Vec<u8, A>>","&std::fs::File","std::net::TcpStream","std::io::Cursor<&mut [u8]>","std::io::BufWriter<W>","&std::io::Sink","std::sys::unix::stdio::Stdout","std::process::ChildStdin","&'a std::os::unix::net::UnixStream","&std::process::ChildStdin","std::io::stdio::StderrRaw","std::io::StdoutLock<'_>","std::io::Stdout","std::io::StderrLock<'_>","std::io::impls::<impl std::io::Write for &mut W>","std::boxed::Box<W>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::BorrowedCursor<'a>","std::io::Cursor<[u8; N]>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 0f64; // None+f64
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for f64>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for f64>::encode(p0, p1);
+<f64>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for char>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for char>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_alloc::VecWriter","enc::write::SizeWriter"]},"enc::impls::<impl enc::Encode for char>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["&std::process::ChildStdin","&'a std::os::unix::net::UnixStream","std::io::StderrLock<'_>","std::os::unix::net::UnixStream","std::boxed::Box<W>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Stderr","std::collections::VecDeque<u8, A>","&std::net::TcpStream","std::vec::Vec<u8, A>","std::fs::File","std::io::LineWriter<W>","&std::io::Sink","std::io::Sink","std::io::Stdout","std::process::ChildStdin","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<&mut [u8]>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::BufWriter<W>","&std::fs::File","std::io::Cursor<std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stdout","std::io::stdio::StdoutRaw","std::io::BorrowedCursor<'a>","std::io::StdoutLock<'_>","std::net::TcpStream","std::io::Cursor<[u8; N]>","std::io::stdio::StderrRaw","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stderr","&std::io::Stdout","&std::io::Stderr"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & 'a'; // None+char
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for char>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for char>::encode(p0, p1);
+<char>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for [T]>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalLimitConfig","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for [T]>::encode":{"E":["enc::Encoder","std::marker::Sized"],"T":["std::marker::Sized","enc::Encode"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::clone::Clone","std::alloc::Allocator"],"K":["enc::Encode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode","de::Decode"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"T":["enc::Encode","de::Decode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","enc::Encode","std::cmp::Ord","de::BorrowDecode","de::Decode"]},"std::collections::Bound":{"T":["de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"]},"std::collections::HashMap":{"K":["enc::Encode","std::cmp::Eq","de::Decode","std::hash::Hash","de::BorrowDecode","std::marker::Sized"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["de::Decode","enc::Encode","std::cmp::Eq","std::marker::Sized","std::hash::Hash","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","enc::Encode","de::BorrowDecode","std::marker::Sized"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::NoLimit","config::LittleEndian","config::Limit","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Varint","config::BigEndian","config::Configuration","config::Fixint"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::NoLimit","config::Limit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SliceWriter","enc::write::SizeWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for [T]>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"T":["std::collections::BTreeSet","std::num::NonZeroU128","std::num::NonZeroI32","std::cell::RefCell","std::collections::VecDeque","std::collections::BinaryHeap","std::option::Option","std::collections::Bound","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroU8","std::net::Ipv6Addr","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::sync::RwLock","std::time::Duration","std::boxed::Box","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::string::String","std::num::NonZeroU32","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::collections::HashMap","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::sync::Mutex","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::rc::Rc","std::vec::Vec","std::num::NonZeroU16","std::net::Ipv4Addr","std::result::Result","std::num::NonZeroI16","std::path::PathBuf","std::sync::atomic::AtomicU8","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::net::IpAddr","std::time::SystemTime","std::sync::Arc","std::cell::Cell","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::sync::atomic::AtomicI16","std::net::SocketAddr","enc::impls::<impl enc::Encode for &'a T>","std::num::NonZeroU64","std::num::NonZeroI128","std::num::NonZeroIsize","std::ops::Range","std::borrow::Cow"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<std::vec::Vec<u8, A>>","&std::io::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::net::TcpStream","std::process::ChildStdin","std::io::BorrowedCursor<'a>","std::io::Sink","std::net::TcpStream","std::io::BufWriter<W>","std::io::Stderr","std::io::impls::<impl std::io::Write for &mut W>","&std::io::Sink","std::os::unix::net::UnixStream","std::sys::unix::stdio::Stdout","std::sys::unix::stdio::Stderr","&'a std::os::unix::net::UnixStream","std::boxed::Box<W>","std::collections::VecDeque<u8, A>","std::io::StderrLock<'_>","&std::fs::File","std::io::Stdout","std::io::LineWriter<W>","&std::process::ChildStdin","&std::io::Stdout","std::io::Cursor<[u8; N]>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<&mut [u8]>","std::io::stdio::StderrRaw","std::vec::Vec<u8, A>","std::io::stdio::StdoutRaw","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::fs::File","std::io::StdoutLock<'_>"]},"std::borrow::Cow":{"B":["std::ffi::OsStr","<T as std::borrow::ToOwned>","std::ffi::CStr","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroI8","std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroI16","std::option::Option","std::string::String","std::net::SocketAddrV6","std::net::SocketAddrV4","std::num::NonZeroU32","std::num::NonZeroI64","std::num::NonZeroI32","std::rc::Rc","std::time::Duration","std::net::IpAddr","std::cell::Cell","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroU64","std::cell::RefCell","std::num::NonZeroI128","std::num::NonZeroU8"],"V":["std::option::Option","std::num::NonZeroU16","std::collections::VecDeque","std::num::NonZeroIsize","std::time::Duration","std::num::NonZeroI16","std::collections::BinaryHeap","std::ffi::CString","std::sync::RwLock","std::num::NonZeroI128","std::net::Ipv4Addr","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroU64","std::ops::Range","std::cell::Cell","std::result::Result","std::collections::HashSet","std::sync::atomic::AtomicU8","std::net::IpAddr","std::sync::atomic::AtomicU64","std::time::SystemTime","std::boxed::Box","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::collections::Bound","std::collections::HashMap","std::num::NonZeroU128","std::sync::atomic::AtomicI16","std::vec::Vec","std::net::SocketAddrV4","std::sync::atomic::AtomicUsize","std::collections::BTreeSet","std::borrow::Cow","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::path::PathBuf","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::num::NonZeroU8","std::num::NonZeroUsize","std::marker::PhantomData","std::sync::Mutex","std::ops::RangeInclusive","std::string::String","std::sync::atomic::AtomicI8","std::cell::RefCell","std::net::Ipv6Addr","std::rc::Rc","std::collections::BTreeMap"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::option::Option","std::num::NonZeroU8","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroU16","std::net::SocketAddrV4","std::net::Ipv6Addr","std::num::NonZeroI64","std::sync::Arc","std::num::NonZeroIsize","std::num::NonZeroI16","std::cell::RefCell","std::time::SystemTime","std::ffi::CString","std::rc::Rc","std::net::SocketAddrV6","std::num::NonZeroU128"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddrV6","std::num::NonZeroUsize","std::marker::PhantomData","std::ffi::CString","std::time::SystemTime","std::num::NonZeroI8","std::cell::RefCell","std::rc::Rc","std::string::String","std::path::PathBuf","std::time::Duration","std::num::NonZeroI128","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroIsize","std::net::Ipv6Addr","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroU8"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicU8","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::collections::Bound","std::sync::Arc","std::num::NonZeroU128","std::time::SystemTime","std::ops::Range","std::time::Duration","std::net::Ipv6Addr","std::num::NonZeroI16","std::collections::HashSet","std::num::NonZeroU32","std::num::NonZeroI8","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::num::NonZeroU64","std::cell::Cell","std::collections::BinaryHeap","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::option::Option","std::num::NonZeroU8","std::net::IpAddr","std::collections::VecDeque","std::borrow::Cow","std::num::NonZeroI64","std::marker::PhantomData","std::boxed::Box","std::vec::Vec","std::sync::atomic::AtomicI16","std::string::String","std::sync::atomic::AtomicI64","std::ffi::CString","std::cell::RefCell","std::result::Result","std::collections::HashMap","std::collections::BTreeSet","std::num::NonZeroIsize","std::num::NonZeroI128","std::num::NonZeroUsize","std::ops::RangeInclusive","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::net::SocketAddrV6","std::net::Ipv4Addr","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::rc::Rc","std::sync::Mutex"]},"std::collections::HashMap":{"K":["std::marker::PhantomData","std::time::Duration","std::num::NonZeroI128","std::option::Option","std::num::NonZeroI16","std::sync::Arc","std::num::NonZeroU64","std::rc::Rc","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroU32","std::string::String","std::num::NonZeroIsize","std::net::Ipv6Addr","std::net::SocketAddr","std::collections::Bound","std::net::SocketAddrV6","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroU8","std::num::NonZeroU128"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicU8","std::collections::HashMap","std::option::Option","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::num::NonZeroUsize","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::num::NonZeroI8","std::sync::RwLock","std::time::Duration","std::net::SocketAddrV6","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::collections::Bound","std::net::SocketAddr","std::num::NonZeroI16","std::num::NonZeroU16","std::borrow::Cow","std::ffi::CString","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::cell::Cell","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::string::String","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::vec::Vec","std::boxed::Box","std::ops::RangeInclusive","std::num::NonZeroU64","std::rc::Rc","std::sync::atomic::AtomicUsize","std::net::IpAddr","std::num::NonZeroU8","std::ops::Range","std::path::PathBuf","std::net::SocketAddrV4","std::sync::Mutex","std::time::SystemTime","std::marker::PhantomData","std::sync::Arc","std::collections::BTreeMap","std::num::NonZeroI32","std::result::Result","std::num::NonZeroI64","std::num::NonZeroI128","std::collections::HashSet"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::sync::Arc","std::rc::Rc","std::num::NonZeroU64","std::string::String","std::time::SystemTime","std::num::NonZeroU128","std::time::Duration","std::num::NonZeroU16","std::collections::Bound","std::num::NonZeroI64","std::num::NonZeroU32","std::num::NonZeroI128","std::net::Ipv4Addr","std::num::NonZeroI16","std::num::NonZeroI8","std::net::Ipv6Addr","std::marker::PhantomData"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroU8","std::net::SocketAddr","std::string::String","std::cell::RefCell","std::rc::Rc","std::collections::HashMap","std::sync::Arc","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::option::Option","std::num::NonZeroU64","std::num::NonZeroUsize","std::collections::BTreeSet","std::net::Ipv4Addr","std::sync::atomic::AtomicU32","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroI16","std::net::Ipv6Addr","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::ops::Range","std::result::Result","std::sync::Mutex","std::collections::BinaryHeap","std::ffi::CString","std::sync::atomic::AtomicI16","std::path::PathBuf","std::sync::atomic::AtomicI64","std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroU16","std::num::NonZeroI64","std::num::NonZeroIsize","std::borrow::Cow","std::collections::Bound","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::vec::Vec","std::sync::atomic::AtomicI8","std::boxed::Box","std::sync::atomic::AtomicUsize","std::time::Duration","std::sync::RwLock","std::sync::atomic::AtomicIsize","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::collections::HashSet","std::num::NonZeroU32","std::num::NonZeroI8","std::cell::Cell"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::ops::RangeInclusive","std::option::Option","std::sync::atomic::AtomicU32","std::net::SocketAddr","std::net::IpAddr","std::vec::Vec","std::borrow::Cow","std::sync::Mutex","std::num::NonZeroU16","std::sync::RwLock","std::num::NonZeroU128","std::net::Ipv6Addr","std::collections::HashMap","std::boxed::Box","std::num::NonZeroU8","std::sync::atomic::AtomicU8","std::string::String","std::num::NonZeroUsize","std::rc::Rc","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::ops::Range","std::num::NonZeroI128","std::num::NonZeroU64","std::collections::BTreeSet","std::collections::VecDeque","std::marker::PhantomData","std::num::NonZeroI32","std::collections::BinaryHeap","std::path::PathBuf","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::collections::HashSet","std::cell::RefCell","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::num::NonZeroI8","std::time::SystemTime","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::cell::Cell","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::ffi::CString","std::num::NonZeroIsize","std::sync::Arc","std::net::SocketAddrV6","std::sync::atomic::AtomicBool","std::result::Result","std::collections::BTreeMap","std::time::Duration","std::collections::Bound","std::sync::atomic::AtomicUsize"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::SocketAddrV6","std::num::NonZeroIsize","std::num::NonZeroI16","std::time::SystemTime","std::collections::Bound","std::collections::HashMap","std::vec::Vec","std::time::Duration","std::num::NonZeroU128","std::option::Option","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroI8","std::rc::Rc","std::ops::RangeInclusive","std::net::IpAddr","std::marker::PhantomData","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::collections::BTreeSet","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::collections::BinaryHeap","std::num::NonZeroU64","std::collections::HashSet","std::cell::RefCell","std::net::SocketAddr","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::borrow::Cow","std::sync::atomic::AtomicI32","std::sync::Mutex","std::num::NonZeroU32","std::sync::atomic::AtomicI16","std::collections::VecDeque","std::ffi::CString","std::string::String","std::sync::atomic::AtomicU8","std::result::Result","std::num::NonZeroU8","std::path::PathBuf","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::cell::Cell","std::sync::Arc","std::boxed::Box","std::num::NonZeroUsize","std::ops::Range"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::rc::Rc","std::collections::VecDeque","std::num::NonZeroU8","std::ffi::CString","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::num::NonZeroI32","std::collections::Bound","std::result::Result","std::sync::Arc","std::net::Ipv4Addr","std::num::NonZeroI16","std::collections::BTreeSet","std::sync::RwLock","std::collections::HashSet","std::ops::RangeInclusive","std::string::String","std::num::NonZeroIsize","std::ops::Range","std::collections::BTreeMap","std::sync::atomic::AtomicU64","std::path::PathBuf","std::net::SocketAddr","std::sync::Mutex","std::sync::atomic::AtomicI32","std::boxed::Box","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::num::NonZeroU16","std::net::Ipv6Addr","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::time::Duration","std::num::NonZeroI8","std::collections::HashMap","std::num::NonZeroU32","std::num::NonZeroI128","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::cell::Cell","std::time::SystemTime","std::sync::atomic::AtomicBool","std::vec::Vec","std::num::NonZeroU128","std::cell::RefCell","std::sync::atomic::AtomicI16","std::net::IpAddr","std::option::Option","std::num::NonZeroI64","std::borrow::Cow","std::net::SocketAddrV4"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // [T]
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for [T]>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for [T]>::encode(p0, p1);
+<[T]>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for str>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalEndianConfig"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for str>::encode":{"E":["std::marker::Sized","enc::Encoder"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","features::impl_std::IoWriter","features::impl_alloc::VecWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>"]},"enc::impls::<impl enc::Encode for str>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<std::vec::Vec<u8, A>>","std::fs::File","std::io::Cursor<&mut [u8]>","&std::io::Stdout","&std::io::Sink","std::boxed::Box<W>","std::io::Stdout","std::net::TcpStream","std::vec::Vec<u8, A>","std::io::LineWriter<W>","std::io::stdio::StdoutRaw","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<[u8; N]>","std::os::unix::net::UnixStream","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::fs::File","std::io::StdoutLock<'_>","std::collections::VecDeque<u8, A>","&std::process::ChildStdin","std::io::Stderr","&'a std::os::unix::net::UnixStream","std::sys::unix::stdio::Stderr","std::io::Sink","std::io::BorrowedCursor<'a>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::sys::unix::stdio::Stdout","&std::net::TcpStream","std::io::StderrLock<'_>","std::io::impls::<impl std::io::Write for &mut W>","std::process::ChildStdin","&std::io::Stderr","std::io::stdio::StderrRaw","std::io::BufWriter<W>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = "sample"; // None+&str
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for str>::encode(&p0, p1);
+crate::enc::impls::<impl enc::Encode for str>::encode(&p0, p1);
+<str>::encode(&p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for [T; N]>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for [T; N]>::encode":{"E":["std::marker::Sized","enc::Encoder"],"T":["enc::Encode","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["std::marker::Sized","de::BorrowDecode","std::cmp::Ord","de::Decode","enc::Encode"],"V":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord"]},"std::collections::Bound":{"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["enc::Encode","std::cmp::Eq","std::marker::Sized","de::Decode","std::hash::Hash","de::BorrowDecode"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["de::BorrowDecode","de::Decode","std::hash::Hash","enc::Encode","std::cmp::Eq","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::BigEndian","config::NoLimit","config::LittleEndian","config::Configuration","config::Limit","std::clone::impls::<impl std::clone::Clone for *const T>","config::Varint","config::Fixint"]},"config::Configuration":{"E":["config::LittleEndian","config::Configuration","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::Configuration","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SizeWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for [T; N]>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"],"T":["std::ops::RangeInclusive","std::sync::RwLock","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroU16","std::ffi::CString","std::num::NonZeroI8","std::vec::Vec","std::num::NonZeroI16","std::num::NonZeroU8","std::collections::Bound","std::collections::BTreeSet","std::net::SocketAddrV6","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI32","std::result::Result","std::num::NonZeroIsize","std::net::SocketAddr","std::num::NonZeroU32","std::time::Duration","std::net::Ipv4Addr","std::collections::BinaryHeap","std::num::NonZeroU64","std::collections::HashSet","std::sync::Arc","std::boxed::Box","std::num::NonZeroI32","std::sync::atomic::AtomicU16","std::cell::Cell","std::num::NonZeroI128","std::collections::HashMap","std::string::String","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicI8","std::net::IpAddr","std::num::NonZeroUsize","std::sync::Mutex","std::option::Option","std::sync::atomic::AtomicU32","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::time::SystemTime","std::borrow::Cow","std::ops::Range","std::net::SocketAddrV4","std::collections::BTreeMap","std::rc::Rc","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::num::NonZeroU128","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::sync::atomic::AtomicU8"]},"features::impl_std::IoWriter":{"W":["&std::io::Stdout","std::io::Stdout","std::sys::unix::stdio::Stderr","std::net::TcpStream","std::io::Cursor<[u8; N]>","&std::fs::File","std::io::Stderr","std::io::StdoutLock<'_>","std::io::stdio::StderrRaw","std::boxed::Box<W>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::process::ChildStdin","&std::io::Sink","&std::io::Stderr","&'a std::os::unix::net::UnixStream","std::io::BufWriter<W>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::StderrLock<'_>","std::io::LineWriter<W>","std::fs::File","std::sys::unix::stdio::Stdout","std::io::Cursor<std::vec::Vec<u8, A>>","&std::net::TcpStream","std::collections::VecDeque<u8, A>","std::vec::Vec<u8, A>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::stdio::StdoutRaw","std::io::Cursor<&mut [u8]>","std::os::unix::net::UnixStream","std::io::BorrowedCursor<'a>","std::io::impls::<impl std::io::Write for &mut W>","std::process::ChildStdin","std::io::Sink"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::CStr","std::ffi::OsStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::time::SystemTime","std::num::NonZeroU64","std::num::NonZeroU8","std::num::NonZeroU128","std::num::NonZeroI16","std::num::NonZeroIsize","std::net::Ipv4Addr","std::net::SocketAddr","std::time::Duration","std::net::SocketAddrV4","std::option::Option","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroU32","std::cell::RefCell","std::num::NonZeroI128","std::path::PathBuf","std::string::String","std::marker::PhantomData","std::num::NonZeroU16"],"V":["std::num::NonZeroI16","std::collections::HashSet","std::option::Option","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::num::NonZeroIsize","std::net::SocketAddr","std::sync::RwLock","std::net::SocketAddrV6","std::num::NonZeroI64","std::sync::atomic::AtomicU8","std::net::SocketAddrV4","std::cell::Cell","std::ops::RangeInclusive","std::cell::RefCell","std::num::NonZeroI32","std::collections::VecDeque","std::num::NonZeroU16","std::sync::Arc","std::collections::Bound","std::sync::Mutex","std::ffi::CString","std::collections::BTreeSet","std::ops::Range","std::num::NonZeroU8","std::num::NonZeroUsize","std::marker::PhantomData","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::vec::Vec","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::num::NonZeroU32","std::num::NonZeroU128","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::rc::Rc","std::collections::BinaryHeap","std::result::Result","std::num::NonZeroU64","std::boxed::Box","std::sync::atomic::AtomicI32","std::path::PathBuf","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::time::Duration","std::sync::atomic::AtomicU64","std::string::String","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::time::SystemTime","std::sync::atomic::AtomicI16","std::borrow::Cow","std::collections::HashMap","std::net::Ipv6Addr"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::cell::Cell","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroI64","std::path::PathBuf","std::string::String","std::time::Duration","std::sync::Arc","std::num::NonZeroU128","std::num::NonZeroU32","std::num::NonZeroU16","std::net::Ipv6Addr","std::ffi::CString","std::net::IpAddr","std::num::NonZeroI8","std::net::SocketAddrV4","std::time::SystemTime","std::marker::PhantomData","std::cell::RefCell","std::net::SocketAddrV6","std::num::NonZeroU64","std::net::Ipv4Addr","std::num::NonZeroIsize"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroU64","std::net::IpAddr","std::net::SocketAddrV4","std::num::NonZeroI32","std::num::NonZeroI64","std::rc::Rc","std::num::NonZeroIsize","std::num::NonZeroUsize","std::num::NonZeroU128","std::net::SocketAddr","std::option::Option","std::time::Duration","std::cell::Cell","std::ffi::CString","std::sync::Arc","std::num::NonZeroU32","std::num::NonZeroU8","std::string::String","std::path::PathBuf","std::cell::RefCell","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroI8","std::marker::PhantomData","std::time::SystemTime"]},"std::collections::Bound":{"T":["std::num::NonZeroU32","std::collections::BTreeMap","std::net::SocketAddrV4","std::rc::Rc","std::ffi::CString","std::ops::RangeInclusive","std::num::NonZeroU64","std::marker::PhantomData","std::num::NonZeroI16","std::sync::Arc","std::path::PathBuf","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicUsize","std::string::String","std::collections::VecDeque","std::collections::HashMap","std::net::SocketAddr","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::net::Ipv6Addr","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::collections::HashSet","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::time::Duration","std::result::Result","std::num::NonZeroUsize","std::sync::RwLock","std::cell::Cell","std::time::SystemTime","std::collections::Bound","std::num::NonZeroI32","std::num::NonZeroU8","std::net::IpAddr","std::borrow::Cow","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::vec::Vec","std::sync::atomic::AtomicI8","std::ops::Range","std::option::Option","std::num::NonZeroIsize","std::num::NonZeroI128","std::cell::RefCell","std::boxed::Box","std::net::SocketAddrV6","std::sync::Mutex","std::net::Ipv4Addr","std::num::NonZeroU16"]},"std::collections::HashMap":{"K":["std::ffi::CString","std::num::NonZeroI16","std::option::Option","std::rc::Rc","std::num::NonZeroU64","std::net::SocketAddrV6","std::num::NonZeroI128","std::net::Ipv6Addr","std::num::NonZeroI64","std::time::Duration","std::num::NonZeroI32","std::collections::Bound","std::num::NonZeroIsize","std::net::IpAddr","std::string::String","std::net::SocketAddr","std::net::Ipv4Addr","std::net::SocketAddrV4","std::num::NonZeroU16","std::num::NonZeroU8"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::string::String","std::sync::Arc","std::ops::Range","std::num::NonZeroI16","std::num::NonZeroI128","std::time::Duration","std::boxed::Box","std::num::NonZeroI64","std::ffi::CString","std::vec::Vec","std::marker::PhantomData","std::net::SocketAddr","std::sync::atomic::AtomicI64","std::time::SystemTime","std::num::NonZeroU32","std::num::NonZeroU16","std::net::SocketAddrV4","std::num::NonZeroI32","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::num::NonZeroI8","std::rc::Rc","std::collections::BinaryHeap","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::path::PathBuf","std::result::Result","std::net::Ipv4Addr","std::collections::HashMap","std::collections::HashSet","std::net::IpAddr","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicIsize","std::collections::Bound","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::cell::RefCell","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::cell::Cell","std::collections::BTreeSet","std::borrow::Cow","std::num::NonZeroU128","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::ops::RangeInclusive","std::sync::Mutex","std::option::Option","std::sync::RwLock","std::sync::atomic::AtomicBool"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::string::String","std::collections::Bound","std::num::NonZeroI64","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroU64","std::num::NonZeroU16","std::path::PathBuf","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroU8","std::rc::Rc","std::net::SocketAddr","std::option::Option","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroUsize","std::num::NonZeroI128","std::net::IpAddr","std::sync::Arc","std::time::SystemTime","std::num::NonZeroI32"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::collections::VecDeque","std::sync::atomic::AtomicU8","std::time::Duration","std::borrow::Cow","std::sync::atomic::AtomicI64","std::sync::Mutex","std::num::NonZeroI16","std::result::Result","std::num::NonZeroU64","std::ffi::CString","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::collections::HashMap","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::net::SocketAddrV6","std::rc::Rc","std::num::NonZeroI32","std::sync::Arc","std::num::NonZeroUsize","std::marker::PhantomData","std::collections::Bound","std::collections::BinaryHeap","std::path::PathBuf","std::num::NonZeroI64","std::collections::BTreeMap","std::collections::HashSet","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::vec::Vec","std::time::SystemTime","std::num::NonZeroU16","std::ops::RangeInclusive","std::num::NonZeroI8","std::option::Option","std::net::IpAddr","std::cell::Cell","std::boxed::Box","std::sync::atomic::AtomicU32","std::sync::RwLock","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::num::NonZeroIsize","std::string::String","std::num::NonZeroU8","std::num::NonZeroU32","std::ops::Range","std::num::NonZeroI128","std::cell::RefCell"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::RwLock","std::time::SystemTime","std::cell::RefCell","std::collections::Bound","std::sync::atomic::AtomicBool","std::ffi::CString","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::net::Ipv6Addr","std::sync::Arc","std::sync::Mutex","std::net::SocketAddrV4","std::collections::HashMap","std::sync::atomic::AtomicI32","std::string::String","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::num::NonZeroI16","std::num::NonZeroU16","std::rc::Rc","std::time::Duration","std::net::SocketAddr","std::marker::PhantomData","std::result::Result","std::vec::Vec","std::borrow::Cow","std::ops::RangeInclusive","std::collections::HashSet","std::num::NonZeroI8","std::num::NonZeroU128","std::num::NonZeroU64","std::cell::Cell","std::ops::Range","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::num::NonZeroI64","std::num::NonZeroIsize","std::path::PathBuf","std::num::NonZeroU8","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::net::SocketAddrV6","std::num::NonZeroI128","std::option::Option","std::num::NonZeroUsize","std::sync::atomic::AtomicU64","std::boxed::Box","std::collections::BTreeSet","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU8","std::collections::BTreeMap","std::net::IpAddr"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::ops::RangeInclusive","std::num::NonZeroU64","std::collections::HashMap","std::sync::RwLock","std::sync::atomic::AtomicU16","std::sync::Mutex","std::collections::BTreeMap","std::num::NonZeroI64","std::collections::Bound","std::cell::RefCell","std::borrow::Cow","std::net::Ipv6Addr","std::sync::Arc","std::net::SocketAddr","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::num::NonZeroI128","std::option::Option","std::num::NonZeroUsize","std::string::String","std::num::NonZeroU16","std::collections::BinaryHeap","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::boxed::Box","std::num::NonZeroIsize","std::cell::Cell","std::ops::Range","std::rc::Rc","std::result::Result","std::marker::PhantomData","std::collections::HashSet","std::net::Ipv4Addr","std::collections::VecDeque","std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroI16","std::num::NonZeroU128","std::net::SocketAddrV6","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::time::Duration","std::num::NonZeroU8","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::path::PathBuf","std::ffi::CString","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::vec::Vec","std::sync::atomic::AtomicU8"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::collections::BTreeSet","std::num::NonZeroIsize","std::num::NonZeroI16","std::net::Ipv6Addr","std::result::Result","std::cell::Cell","std::collections::HashSet","std::ops::Range","std::ops::RangeInclusive","std::collections::BTreeMap","std::time::Duration","std::collections::HashMap","std::num::NonZeroU64","std::num::NonZeroI32","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::rc::Rc","std::path::PathBuf","std::net::SocketAddr","std::borrow::Cow","std::time::SystemTime","std::boxed::Box","std::num::NonZeroI8","std::sync::Mutex","std::net::SocketAddrV6","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::marker::PhantomData","std::collections::Bound","std::sync::atomic::AtomicU8","std::option::Option","std::string::String","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::num::NonZeroU32","std::collections::VecDeque","std::collections::BinaryHeap","std::sync::Arc","std::num::NonZeroI128","std::vec::Vec","std::cell::RefCell","std::sync::atomic::AtomicU16","std::ffi::CString","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::net::IpAddr","std::net::Ipv4Addr","std::sync::RwLock"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // [T; N]
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for [T; N]>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for [T; N]>::encode(p0, p1);
+<[T; N]>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::option::Option<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for std::option::Option<T>>::encode":{"E":["std::marker::Sized","enc::Encoder"],"T":["enc::Encode","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::Decode","enc::Encode","std::cmp::Ord","std::marker::Sized","de::BorrowDecode"],"V":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["std::cmp::Ord","enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::BinaryHeap":{"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord"]},"std::collections::Bound":{"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::hash::Hash","de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode","std::cmp::Eq"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["enc::Encode","std::cmp::Eq","de::BorrowDecode","de::Decode","std::marker::Sized","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Limit","config::LittleEndian","config::NoLimit","config::Fixint","config::BigEndian","config::Varint"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Fixint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","features::impl_alloc::VecWriter","features::impl_std::IoWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for std::option::Option<T>>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"T":["std::time::SystemTime","std::ffi::CString","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::cell::RefCell","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::result::Result","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::num::NonZeroU64","std::num::NonZeroU8","std::net::SocketAddrV6","std::boxed::Box","std::num::NonZeroI16","std::string::String","std::sync::atomic::AtomicI8","std::sync::RwLock","std::collections::BinaryHeap","std::cell::Cell","std::ops::Range","enc::impls::<impl enc::Encode for &'a T>","std::vec::Vec","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::net::Ipv6Addr","std::collections::BTreeSet","std::marker::PhantomData","std::collections::HashSet","std::borrow::Cow","std::sync::Mutex","std::collections::BTreeMap","std::time::Duration","std::num::NonZeroU16","std::option::Option","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::rc::Rc","std::num::NonZeroI32","std::sync::atomic::AtomicBool","std::path::PathBuf","std::sync::Arc","std::collections::Bound","std::num::NonZeroUsize","std::collections::HashMap","std::num::NonZeroI64","std::num::NonZeroI128","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::net::SocketAddr","std::ops::RangeInclusive","std::net::IpAddr","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8"]},"features::impl_std::IoWriter":{"W":["&std::io::Stdout","std::io::StdoutLock<'_>","std::io::LineWriter<W>","std::io::Cursor<&mut [u8]>","&std::net::TcpStream","std::sys::unix::stdio::Stderr","std::io::BorrowedCursor<'a>","std::sys::unix::stdio::Stdout","std::io::stdio::StdoutRaw","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&'a std::os::unix::net::UnixStream","std::io::Stdout","std::io::Sink","std::collections::VecDeque<u8, A>","std::io::Stderr","std::vec::Vec<u8, A>","std::io::stdio::StderrRaw","&std::process::ChildStdin","std::fs::File","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::process::ChildStdin","std::net::TcpStream","&std::io::Sink","std::io::BufWriter<W>","std::io::impls::<impl std::io::Write for &mut W>","&std::io::Stderr","std::io::StderrLock<'_>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::boxed::Box<W>","std::os::unix::net::UnixStream","&std::fs::File","std::io::Cursor<[u8; N]>"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::CStr","std::ffi::OsStr","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::ffi::CString","std::num::NonZeroU8","std::cell::RefCell","std::net::SocketAddrV4","std::num::NonZeroU32","std::option::Option","std::num::NonZeroI64","std::path::PathBuf","std::string::String","std::num::NonZeroI128","std::num::NonZeroIsize","std::cell::Cell","std::marker::PhantomData","std::num::NonZeroI16","std::net::Ipv4Addr","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroUsize","std::num::NonZeroU64","std::num::NonZeroU16","std::time::SystemTime","std::net::IpAddr"],"V":["std::sync::atomic::AtomicBool","std::net::SocketAddr","std::num::NonZeroU64","std::num::NonZeroI64","std::ops::RangeInclusive","std::num::NonZeroU8","std::string::String","std::borrow::Cow","std::collections::BTreeSet","std::num::NonZeroI8","std::sync::RwLock","std::time::Duration","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::sync::Mutex","std::collections::VecDeque","std::option::Option","std::cell::Cell","std::result::Result","std::net::IpAddr","std::collections::Bound","std::sync::atomic::AtomicU16","std::cell::RefCell","std::sync::Arc","std::sync::atomic::AtomicU32","std::marker::PhantomData","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::collections::BinaryHeap","std::vec::Vec","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::num::NonZeroIsize","std::num::NonZeroI32","std::net::Ipv4Addr","std::num::NonZeroU32","std::collections::HashMap","std::ffi::CString","std::sync::atomic::AtomicI16","std::rc::Rc","std::collections::HashSet","std::sync::atomic::AtomicI8","std::net::Ipv6Addr","std::num::NonZeroI128","std::num::NonZeroU16","std::num::NonZeroUsize","std::boxed::Box","std::ops::Range","std::sync::atomic::AtomicU64","std::num::NonZeroU128"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroU128","std::net::IpAddr","std::num::NonZeroIsize","std::num::NonZeroI64","std::num::NonZeroI16","std::time::SystemTime","std::time::Duration","std::net::SocketAddrV6","std::num::NonZeroU32","std::num::NonZeroU64","std::net::SocketAddr","std::path::PathBuf","std::marker::PhantomData","std::num::NonZeroI32"]},"std::collections::BinaryHeap":{"T":["std::net::IpAddr","std::rc::Rc","std::net::Ipv4Addr","std::num::NonZeroU8","std::ffi::CString","std::cell::RefCell","std::num::NonZeroI16","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroU32","std::num::NonZeroI32","std::time::SystemTime","std::num::NonZeroI8","std::time::Duration","std::num::NonZeroI128","std::path::PathBuf","std::num::NonZeroI64","std::marker::PhantomData","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroUsize","std::net::SocketAddrV4","std::net::SocketAddrV6"]},"std::collections::Bound":{"T":["std::collections::Bound","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::sync::RwLock","std::num::NonZeroUsize","std::string::String","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::collections::HashSet","std::path::PathBuf","std::collections::BTreeMap","std::collections::VecDeque","std::collections::BTreeSet","std::sync::atomic::AtomicBool","std::boxed::Box","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::Mutex","std::marker::PhantomData","std::num::NonZeroU32","std::time::SystemTime","std::collections::HashMap","std::vec::Vec","std::cell::Cell","std::num::NonZeroI16","std::net::IpAddr","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::num::NonZeroI8","std::borrow::Cow","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::rc::Rc","std::ops::Range","std::ops::RangeInclusive","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroI64","std::num::NonZeroU64","std::num::NonZeroU8","std::sync::atomic::AtomicI32","std::cell::RefCell","std::net::SocketAddrV4","std::num::NonZeroI128","std::sync::Arc","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::num::NonZeroIsize","std::net::SocketAddr","std::option::Option","std::net::Ipv6Addr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::ffi::CString","std::result::Result"]},"std::collections::HashMap":{"K":["std::num::NonZeroI64","std::num::NonZeroI16","std::num::NonZeroU128","std::net::SocketAddr","std::net::SocketAddrV4","std::rc::Rc","std::time::SystemTime","std::num::NonZeroU64","std::net::IpAddr","std::string::String","std::time::Duration","std::net::SocketAddrV6","std::net::Ipv4Addr","std::marker::PhantomData","std::ffi::CString","std::num::NonZeroI32"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::string::String","std::net::SocketAddr","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroU32","std::num::NonZeroU128","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicI32","std::vec::Vec","std::collections::VecDeque","std::collections::BTreeMap","std::result::Result","std::net::SocketAddrV6","std::time::SystemTime","std::sync::atomic::AtomicI8","std::num::NonZeroU64","std::collections::BTreeSet","std::sync::RwLock","std::collections::HashSet","std::sync::Arc","std::borrow::Cow","std::rc::Rc","std::sync::Mutex","std::net::IpAddr","std::num::NonZeroIsize","std::ffi::CString","std::sync::atomic::AtomicU64","std::option::Option","std::sync::atomic::AtomicI64","std::num::NonZeroI64","std::net::Ipv4Addr","std::marker::PhantomData","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::net::Ipv6Addr","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::num::NonZeroI32","std::num::NonZeroU8","std::cell::Cell","std::ops::Range","std::collections::Bound","std::sync::atomic::AtomicIsize","std::collections::BinaryHeap","std::path::PathBuf","std::boxed::Box","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::collections::HashMap","std::cell::RefCell","std::sync::atomic::AtomicU32","std::ops::RangeInclusive"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroI32","std::collections::Bound","std::time::Duration","std::net::Ipv6Addr","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroIsize","std::num::NonZeroU16","std::path::PathBuf","std::ffi::CString","std::net::Ipv4Addr","std::marker::PhantomData","std::num::NonZeroU8","std::string::String"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU32","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::collections::BinaryHeap","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::ops::Range","std::time::SystemTime","std::num::NonZeroU128","std::sync::atomic::AtomicU16","std::sync::RwLock","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::sync::Mutex","std::num::NonZeroI128","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::boxed::Box","std::borrow::Cow","std::ops::RangeInclusive","std::result::Result","std::cell::RefCell","std::time::Duration","std::num::NonZeroUsize","std::num::NonZeroU8","std::collections::Bound","std::collections::VecDeque","std::path::PathBuf","std::marker::PhantomData","std::sync::atomic::AtomicU8","std::net::IpAddr","std::vec::Vec","std::sync::atomic::AtomicI64","std::collections::HashMap","std::num::NonZeroI32","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::collections::BTreeMap","std::num::NonZeroU64","std::cell::Cell","std::ffi::CString","std::sync::atomic::AtomicI16","std::collections::HashSet","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::rc::Rc","std::net::SocketAddrV6","std::num::NonZeroU16","std::string::String","std::option::Option","std::sync::Arc"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::Arc","std::sync::atomic::AtomicI32","std::marker::PhantomData","std::sync::atomic::AtomicBool","std::cell::RefCell","std::num::NonZeroIsize","std::num::NonZeroU64","std::collections::Bound","std::ops::Range","std::num::NonZeroI128","std::path::PathBuf","std::net::IpAddr","std::time::Duration","std::rc::Rc","std::sync::atomic::AtomicUsize","std::num::NonZeroU8","std::num::NonZeroI32","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::ffi::CString","std::net::SocketAddrV6","std::collections::HashSet","std::num::NonZeroI8","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU16","std::time::SystemTime","std::num::NonZeroU128","std::result::Result","std::sync::atomic::AtomicI16","std::cell::Cell","std::net::SocketAddr","std::sync::atomic::AtomicI8","std::boxed::Box","std::collections::BTreeMap","std::sync::Mutex","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicIsize","std::collections::HashMap","std::num::NonZeroI64","std::num::NonZeroU32","std::num::NonZeroI16","std::net::SocketAddrV4","std::borrow::Cow","std::vec::Vec","std::net::Ipv6Addr","std::collections::BTreeSet","std::ops::RangeInclusive","std::string::String","std::collections::VecDeque","std::option::Option","std::net::Ipv4Addr","std::sync::RwLock"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::collections::Bound","std::sync::Arc","std::marker::PhantomData","std::collections::HashSet","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::string::String","std::collections::BinaryHeap","std::net::SocketAddr","std::num::NonZeroIsize","std::collections::BTreeSet","std::net::IpAddr","std::net::Ipv6Addr","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::atomic::AtomicUsize","std::rc::Rc","std::ffi::CString","std::sync::RwLock","std::vec::Vec","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::collections::HashMap","std::sync::atomic::AtomicU16","std::sync::Mutex","std::borrow::Cow","std::ops::Range","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::num::NonZeroU64","std::net::SocketAddrV6","std::time::SystemTime","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroUsize","std::cell::Cell","std::collections::BTreeMap","std::num::NonZeroU128","std::num::NonZeroU16","std::ops::RangeInclusive","std::boxed::Box","std::num::NonZeroI16","std::time::Duration","std::option::Option","std::result::Result","std::net::SocketAddrV4","std::cell::RefCell"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::result::Result","std::ffi::CString","std::num::NonZeroI16","std::rc::Rc","std::net::SocketAddr","std::collections::BTreeMap","std::cell::RefCell","std::num::NonZeroU128","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicBool","std::option::Option","std::collections::Bound","std::num::NonZeroIsize","std::sync::RwLock","std::ops::Range","std::num::NonZeroU8","std::sync::atomic::AtomicI8","std::collections::HashMap","std::boxed::Box","std::collections::HashSet","std::vec::Vec","std::borrow::Cow","std::num::NonZeroU16","std::cell::Cell","std::string::String","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::num::NonZeroI64","std::sync::Mutex","std::num::NonZeroUsize","std::collections::BTreeSet","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroU32","std::num::NonZeroI8","std::collections::BinaryHeap","std::sync::atomic::AtomicU8","std::net::Ipv4Addr","std::num::NonZeroI32","std::sync::atomic::AtomicI32","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::marker::PhantomData","std::net::IpAddr","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::time::Duration","std::time::SystemTime","std::num::NonZeroI128"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::option::Option<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::option::Option<T>>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::option::Option<T>>::encode(p0, p1);
+<std::option::Option<T>>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::result::Result<T, U>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["std::marker::Copy","std::clone::Clone","std::marker::Sized","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for std::result::Result<T, U>>::encode":{"E":["std::marker::Sized","enc::Encoder"],"T":["enc::Encode","std::marker::Sized"],"U":["enc::Encode","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::marker::Sized","std::alloc::Allocator"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"K":["de::BorrowDecode","de::Decode","std::cmp::Ord","enc::Encode","std::marker::Sized"],"V":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","std::cmp::Ord","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Ord","enc::Encode"]},"std::collections::Bound":{"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["de::BorrowDecode","std::marker::Sized","de::Decode","enc::Encode","std::hash::Hash","std::cmp::Eq"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","std::cmp::Eq","de::Decode","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for &T>","config::Limit","config::BigEndian","config::Varint","config::Configuration","config::Fixint","config::LittleEndian","config::NoLimit"]},"config::Configuration":{"E":["config::Configuration","config::BigEndian","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","enc::write::SizeWriter","features::impl_std::IoWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for std::result::Result<T, U>>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"],"T":["std::net::Ipv6Addr","std::sync::Arc","std::num::NonZeroI16","std::net::SocketAddrV6","std::time::SystemTime","std::collections::BTreeMap","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroU16","std::ops::RangeInclusive","std::marker::PhantomData","std::cell::Cell","std::collections::HashMap","std::num::NonZeroIsize","std::sync::atomic::AtomicU32","std::option::Option","std::num::NonZeroI32","std::net::Ipv4Addr","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU8","std::num::NonZeroI8","std::num::NonZeroU8","std::net::SocketAddrV4","std::net::SocketAddr","std::collections::VecDeque","std::collections::BTreeSet","std::string::String","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicI32","std::time::Duration","std::path::PathBuf","std::ops::Range","std::boxed::Box","std::collections::Bound","std::sync::atomic::AtomicU64","std::num::NonZeroU32","std::sync::atomic::AtomicUsize","std::result::Result","std::sync::Mutex","std::ffi::CString","std::num::NonZeroUsize","std::num::NonZeroI128","std::cell::RefCell","std::sync::atomic::AtomicBool","std::collections::HashSet","std::num::NonZeroI64","std::borrow::Cow","std::sync::RwLock","std::sync::atomic::AtomicI16","std::num::NonZeroU128","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicIsize","std::vec::Vec","std::collections::BinaryHeap","std::net::IpAddr","std::sync::atomic::AtomicI64"],"U":["std::collections::BTreeMap","std::result::Result","std::num::NonZeroU16","std::collections::VecDeque","std::collections::BinaryHeap","std::num::NonZeroUsize","std::collections::BTreeSet","std::collections::Bound","std::net::SocketAddr","std::option::Option","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::path::PathBuf","std::vec::Vec","std::num::NonZeroU32","std::marker::PhantomData","std::collections::HashMap","enc::impls::<impl enc::Encode for &'a T>","std::boxed::Box","std::time::SystemTime","std::sync::RwLock","std::time::Duration","std::net::Ipv6Addr","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::string::String","std::net::SocketAddrV6","std::ops::Range","std::cell::Cell","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicIsize","std::rc::Rc","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::collections::HashSet","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroI128","std::num::NonZeroI8","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::net::Ipv4Addr","std::ops::RangeInclusive","std::ffi::CString","std::borrow::Cow","std::num::NonZeroIsize","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::net::IpAddr","std::sync::atomic::AtomicI8","std::sync::Arc","std::cell::RefCell","std::sync::Mutex"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<&mut [u8]>","std::io::Cursor<[u8; N]>","std::net::TcpStream","std::process::ChildStdin","std::sys::unix::stdio::Stderr","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::stdio::StdoutRaw","std::vec::Vec<u8, A>","&std::io::Stderr","&std::process::ChildStdin","&'a std::os::unix::net::UnixStream","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::stdio::StderrRaw","std::io::BorrowedCursor<'a>","std::io::impls::<impl std::io::Write for &mut W>","std::io::StderrLock<'_>","std::io::Stderr","&std::net::TcpStream","std::io::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::io::Sink","std::io::Sink","std::boxed::Box<W>","std::fs::File","std::io::StdoutLock<'_>","std::sys::unix::stdio::Stdout","std::collections::VecDeque<u8, A>","&std::io::Stdout","std::io::LineWriter<W>","std::io::BufWriter<W>","std::os::unix::net::UnixStream","&std::fs::File","std::io::Cursor<std::vec::Vec<u8, A>>"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::ffi::OsStr","<T as std::borrow::ToOwned>","std::path::Path"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::marker::PhantomData","std::sync::Arc","std::num::NonZeroU32","std::time::SystemTime","std::num::NonZeroI16","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroI128","std::num::NonZeroU128","std::num::NonZeroU8","std::string::String","std::cell::Cell","std::net::Ipv6Addr","std::num::NonZeroIsize","std::net::SocketAddr","std::rc::Rc","std::cell::RefCell","std::net::IpAddr","std::net::Ipv4Addr"],"V":["std::sync::RwLock","std::option::Option","std::rc::Rc","std::ops::Range","std::boxed::Box","std::collections::HashSet","std::ffi::CString","std::num::NonZeroI32","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::collections::HashMap","std::num::NonZeroU64","std::sync::atomic::AtomicI16","std::borrow::Cow","std::net::Ipv4Addr","std::num::NonZeroU32","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::num::NonZeroU128","std::sync::atomic::AtomicUsize","std::collections::BinaryHeap","std::time::Duration","std::sync::atomic::AtomicU8","std::sync::Arc","std::num::NonZeroI16","std::sync::atomic::AtomicI8","std::cell::Cell","std::time::SystemTime","std::cell::RefCell","std::num::NonZeroUsize","std::collections::Bound","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroI64","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::ops::RangeInclusive","std::sync::Mutex","std::net::SocketAddr","std::net::SocketAddrV4","std::collections::BTreeSet","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::net::SocketAddrV6","std::collections::BTreeMap","std::vec::Vec","std::result::Result","std::string::String","std::num::NonZeroIsize","std::path::PathBuf"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::sync::Arc","std::rc::Rc","std::num::NonZeroI8","std::ffi::CString","std::num::NonZeroIsize","std::time::Duration","std::marker::PhantomData","std::num::NonZeroU128","std::num::NonZeroI32","std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroI64","std::net::Ipv6Addr","std::cell::Cell","std::path::PathBuf","std::num::NonZeroU8","std::time::SystemTime","std::num::NonZeroU16","std::cell::RefCell","std::net::IpAddr","std::net::SocketAddrV4","std::num::NonZeroI128"]},"std::collections::BinaryHeap":{"T":["std::ffi::CString","std::num::NonZeroU64","std::net::Ipv4Addr","std::num::NonZeroI32","std::net::IpAddr","std::num::NonZeroU16","std::net::SocketAddrV6","std::path::PathBuf","std::cell::Cell","std::net::Ipv6Addr","std::num::NonZeroUsize","std::string::String","std::net::SocketAddr","std::time::Duration","std::num::NonZeroIsize","std::sync::Arc","std::num::NonZeroI16","std::time::SystemTime","std::num::NonZeroU128","std::marker::PhantomData","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroI8"]},"std::collections::Bound":{"T":["std::sync::Mutex","std::net::Ipv4Addr","std::cell::RefCell","std::num::NonZeroIsize","std::net::SocketAddrV6","std::collections::BTreeSet","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::string::String","std::rc::Rc","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::vec::Vec","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::num::NonZeroI32","std::collections::HashSet","std::sync::atomic::AtomicI32","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::path::PathBuf","std::sync::atomic::AtomicU32","std::net::IpAddr","std::ops::Range","std::num::NonZeroI16","std::sync::atomic::AtomicU8","std::num::NonZeroU128","std::collections::HashMap","std::collections::VecDeque","std::sync::Arc","std::num::NonZeroI8","std::ffi::CString","std::borrow::Cow","std::sync::RwLock","std::num::NonZeroI128","std::net::Ipv6Addr","std::sync::atomic::AtomicI64","std::time::Duration","std::time::SystemTime","std::sync::atomic::AtomicU64","std::collections::Bound","std::num::NonZeroU8","std::cell::Cell","std::collections::BTreeMap","std::num::NonZeroI64","std::result::Result","std::option::Option","std::boxed::Box","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::net::SocketAddr"]},"std::collections::HashMap":{"K":["std::time::Duration","std::num::NonZeroI8","std::num::NonZeroI16","std::option::Option","std::num::NonZeroU32","std::num::NonZeroI32","std::net::SocketAddrV6","std::num::NonZeroUsize","std::net::IpAddr","std::string::String","std::net::Ipv4Addr","std::num::NonZeroU128","std::time::SystemTime","std::num::NonZeroU8","std::num::NonZeroU64","std::num::NonZeroI128","std::net::Ipv6Addr","std::path::PathBuf"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::collections::HashMap","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::num::NonZeroU64","std::collections::BTreeMap","std::time::Duration","std::sync::atomic::AtomicI64","std::borrow::Cow","std::collections::BinaryHeap","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::num::NonZeroI32","std::cell::Cell","std::cell::RefCell","std::sync::atomic::AtomicI32","std::result::Result","std::num::NonZeroUsize","std::num::NonZeroI8","std::sync::Mutex","std::num::NonZeroI16","std::net::IpAddr","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::sync::Arc","std::sync::RwLock","std::ops::RangeInclusive","std::collections::BTreeSet","std::net::SocketAddr","std::num::NonZeroU16","std::net::Ipv6Addr","std::collections::HashSet","std::net::SocketAddrV6","std::net::SocketAddrV4","std::collections::Bound","std::vec::Vec","std::num::NonZeroU128","std::marker::PhantomData","std::ops::Range","std::collections::VecDeque","std::path::PathBuf","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::rc::Rc","std::time::SystemTime","std::sync::atomic::AtomicBool","std::ffi::CString","std::string::String","std::net::Ipv4Addr","std::option::Option","std::boxed::Box","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::num::NonZeroI32","std::sync::Arc","std::net::SocketAddrV4","std::collections::Bound","std::num::NonZeroU64","std::net::Ipv6Addr","std::num::NonZeroI64","std::net::Ipv4Addr","std::net::SocketAddr","std::ffi::CString","std::num::NonZeroU8","std::net::IpAddr","std::marker::PhantomData"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::cell::RefCell","std::num::NonZeroUsize","std::ffi::CString","std::collections::BTreeSet","std::net::SocketAddrV4","std::sync::atomic::AtomicU8","std::cell::Cell","std::num::NonZeroIsize","std::num::NonZeroU16","std::num::NonZeroU32","std::num::NonZeroU128","std::result::Result","std::boxed::Box","std::num::NonZeroI8","std::sync::Mutex","std::net::Ipv4Addr","std::ops::Range","std::option::Option","std::time::Duration","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroI32","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::borrow::Cow","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroU8","std::net::SocketAddrV6","std::collections::Bound","std::string::String","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::path::PathBuf","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::sync::RwLock","std::marker::PhantomData","std::collections::VecDeque","std::sync::atomic::AtomicU32","std::vec::Vec","std::sync::atomic::AtomicI32","std::collections::HashMap","std::net::IpAddr","std::sync::atomic::AtomicI8","std::sync::Arc","std::sync::atomic::AtomicUsize","std::rc::Rc","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::net::SocketAddr"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::HashSet","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicU32","std::num::NonZeroU32","std::rc::Rc","std::sync::atomic::AtomicBool","std::cell::Cell","std::sync::atomic::AtomicUsize","std::num::NonZeroI8","std::time::SystemTime","std::collections::Bound","std::num::NonZeroU16","std::collections::BinaryHeap","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::num::NonZeroI128","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::marker::PhantomData","std::sync::atomic::AtomicI32","std::num::NonZeroI64","std::borrow::Cow","std::path::PathBuf","std::boxed::Box","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::ffi::CString","std::collections::BTreeSet","std::collections::HashMap","std::sync::Mutex","std::net::IpAddr","std::option::Option","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::sync::Arc","std::num::NonZeroU128","std::string::String","std::net::SocketAddrV6","std::collections::VecDeque","std::ops::Range","std::sync::RwLock","std::vec::Vec","std::cell::RefCell","std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroIsize","std::collections::BTreeMap","std::result::Result","std::num::NonZeroI16","std::net::SocketAddrV4"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::ffi::CString","std::num::NonZeroIsize","std::ops::Range","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::result::Result","std::num::NonZeroU16","std::sync::RwLock","std::num::NonZeroI8","std::rc::Rc","std::time::SystemTime","std::num::NonZeroI16","std::num::NonZeroUsize","std::sync::atomic::AtomicU8","std::num::NonZeroU8","std::collections::Bound","std::collections::BinaryHeap","std::sync::Arc","std::sync::atomic::AtomicBool","std::cell::Cell","std::collections::HashMap","std::vec::Vec","std::sync::atomic::AtomicU16","std::collections::HashSet","std::collections::BTreeSet","std::net::IpAddr","std::num::NonZeroI32","std::ops::RangeInclusive","std::string::String","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::net::Ipv4Addr","std::option::Option","std::marker::PhantomData","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI64","std::path::PathBuf","std::num::NonZeroI128","std::borrow::Cow","std::num::NonZeroU64","std::boxed::Box","std::net::SocketAddr","std::num::NonZeroI64","std::sync::Mutex","std::net::SocketAddrV6","std::net::Ipv6Addr","std::net::SocketAddrV4","std::num::NonZeroU32","std::time::Duration","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::collections::HashSet","std::net::SocketAddrV4","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::sync::atomic::AtomicU16","std::time::Duration","std::collections::BTreeMap","std::net::IpAddr","std::option::Option","std::num::NonZeroIsize","std::num::NonZeroU32","std::cell::Cell","std::vec::Vec","std::num::NonZeroI128","std::collections::Bound","std::collections::VecDeque","std::num::NonZeroI16","std::num::NonZeroU16","std::sync::atomic::AtomicI64","std::ops::Range","std::time::SystemTime","std::num::NonZeroU64","std::cell::RefCell","std::rc::Rc","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::Mutex","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::result::Result","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU64","std::net::Ipv6Addr","std::path::PathBuf","std::net::Ipv4Addr","std::sync::Arc","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::boxed::Box","std::collections::HashMap","std::string::String","std::sync::RwLock","std::num::NonZeroI64","std::ffi::CString","std::borrow::Cow","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::num::NonZeroI32","std::ops::RangeInclusive","std::collections::BTreeSet","std::marker::PhantomData","std::collections::BinaryHeap","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::result::Result<T, U>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::result::Result<T, U>>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::result::Result<T, U>>::encode(p0, p1);
+<std::result::Result<T, U>>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::cell::Cell<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalLimitConfig","config::internal::InternalEndianConfig","std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"I":["config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy","std::marker::Sized"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for std::cell::Cell<T>>::encode":{"E":["enc::Encoder","std::marker::Sized"],"T":["enc::Encode","std::marker::Copy","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"K":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode","std::cmp::Ord"],"V":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::cmp::Ord","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode","std::cmp::Ord"]},"std::collections::Bound":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::HashMap":{"K":["std::hash::Hash","de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode","std::cmp::Eq"],"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"V":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::hash::Hash","de::Decode","enc::Encode","std::cmp::Eq","de::BorrowDecode","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Configuration","config::Limit","config::NoLimit","std::clone::impls::<impl std::clone::Clone for &T>","config::LittleEndian","config::Fixint","config::Varint","config::BigEndian"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["<&mut T as enc::write::Writer>","enc::write::SizeWriter","enc::write::SliceWriter","features::impl_std::IoWriter","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for std::cell::Cell<T>>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"T":["std::num::NonZeroI16","std::net::SocketAddrV4","std::num::NonZeroI8","std::time::SystemTime","std::num::NonZeroIsize","std::num::NonZeroU64","std::marker::PhantomData","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroUsize","std::num::NonZeroU128","std::option::Option","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroU8","std::num::NonZeroU32","std::time::Duration","std::collections::Bound","std::net::Ipv4Addr","std::num::NonZeroI32","std::num::NonZeroI64","std::net::IpAddr","std::net::SocketAddrV6"]},"features::impl_std::IoWriter":{"W":["std::io::LineWriter<W>","std::collections::VecDeque<u8, A>","&std::io::Stdout","std::fs::File","std::io::BorrowedCursor<'a>","std::io::Sink","std::io::Cursor<std::boxed::Box<[u8], A>>","std::os::unix::net::UnixStream","std::process::ChildStdin","std::io::Stderr","&std::io::Stderr","&'a std::os::unix::net::UnixStream","std::sys::unix::stdio::Stderr","std::io::StdoutLock<'_>","std::vec::Vec<u8, A>","std::io::Stdout","std::io::BufWriter<W>","&std::fs::File","&std::io::Sink","std::io::stdio::StderrRaw","std::io::Cursor<std::vec::Vec<u8, A>>","&std::process::ChildStdin","&std::net::TcpStream","std::io::StderrLock<'_>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<[u8; N]>","std::io::impls::<impl std::io::Write for &mut W>","std::io::stdio::StdoutRaw","std::io::Cursor<&mut [u8]>","std::boxed::Box<W>","std::sys::unix::stdio::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::net::TcpStream"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::ffi::OsStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::cell::RefCell","std::num::NonZeroIsize","std::num::NonZeroI64","std::num::NonZeroI16","std::num::NonZeroU64","std::string::String","std::time::Duration","std::rc::Rc","std::path::PathBuf","std::marker::PhantomData","std::net::SocketAddrV6","std::net::SocketAddr","std::time::SystemTime","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroU16","std::num::NonZeroU8","std::num::NonZeroU32","std::num::NonZeroI128","std::num::NonZeroUsize","std::num::NonZeroI32"],"V":["std::collections::VecDeque","std::sync::Arc","std::ops::Range","std::num::NonZeroU8","std::num::NonZeroI8","std::string::String","std::borrow::Cow","std::collections::BinaryHeap","std::net::Ipv6Addr","std::net::SocketAddr","std::marker::PhantomData","std::cell::Cell","std::num::NonZeroI64","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicIsize","std::collections::Bound","std::ops::RangeInclusive","std::time::SystemTime","std::option::Option","std::path::PathBuf","std::num::NonZeroU16","std::sync::RwLock","std::ffi::CString","std::sync::Mutex","std::collections::HashSet","std::sync::atomic::AtomicU8","std::num::NonZeroU64","std::sync::atomic::AtomicU16","std::result::Result","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::num::NonZeroU32","std::boxed::Box","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::num::NonZeroI32","std::net::SocketAddrV6","std::time::Duration","std::net::IpAddr","std::collections::BTreeSet","std::rc::Rc","std::num::NonZeroI128","std::num::NonZeroI16","std::num::NonZeroIsize","std::collections::HashMap","std::net::Ipv4Addr","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicI8","std::vec::Vec","std::cell::RefCell","std::num::NonZeroU128","std::num::NonZeroUsize"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::net::Ipv6Addr","std::time::SystemTime","std::rc::Rc","std::marker::PhantomData","std::num::NonZeroU128","std::num::NonZeroI128","std::option::Option","std::num::NonZeroIsize","std::num::NonZeroI16","std::num::NonZeroI8","std::net::IpAddr","std::num::NonZeroU64","std::string::String","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroI32","std::net::SocketAddrV6","std::num::NonZeroU32","std::path::PathBuf","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroU8"]},"std::collections::BinaryHeap":{"T":["std::num::NonZeroI64","std::num::NonZeroU16","std::num::NonZeroIsize","std::cell::Cell","std::marker::PhantomData","std::time::Duration","std::num::NonZeroI128","std::net::SocketAddrV6","std::string::String","std::sync::Arc","std::ffi::CString","std::cell::RefCell","std::net::IpAddr","std::path::PathBuf","std::option::Option","std::num::NonZeroU32","std::num::NonZeroI16","std::net::SocketAddr","std::num::NonZeroU8","std::net::SocketAddrV4","std::net::Ipv4Addr","std::net::Ipv6Addr","std::num::NonZeroUsize"]},"std::collections::Bound":{"T":["std::num::NonZeroU64","std::num::NonZeroIsize","std::net::Ipv6Addr","std::sync::atomic::AtomicU16","std::path::PathBuf","std::num::NonZeroUsize","std::ops::RangeInclusive","std::net::Ipv4Addr","std::boxed::Box","std::vec::Vec","std::collections::HashSet","std::num::NonZeroI32","std::cell::RefCell","std::sync::Mutex","std::sync::atomic::AtomicI8","std::sync::Arc","std::time::SystemTime","std::sync::atomic::AtomicU8","std::num::NonZeroU16","std::time::Duration","std::num::NonZeroI16","std::sync::atomic::AtomicBool","std::collections::VecDeque","std::collections::Bound","std::sync::RwLock","std::result::Result","std::net::IpAddr","std::sync::atomic::AtomicI16","std::string::String","std::sync::atomic::AtomicI64","std::ffi::CString","std::num::NonZeroU32","std::marker::PhantomData","std::ops::Range","std::borrow::Cow","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::sync::atomic::AtomicIsize","std::cell::Cell","std::num::NonZeroI64","std::net::SocketAddrV6","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::net::SocketAddrV4","std::rc::Rc","std::collections::HashMap","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::option::Option","std::collections::BTreeMap","std::collections::BinaryHeap","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::collections::BTreeSet","std::net::SocketAddr"]},"std::collections::HashMap":{"K":["std::num::NonZeroI16","std::net::Ipv6Addr","std::net::SocketAddrV4","std::path::PathBuf","std::num::NonZeroU32","std::sync::Arc","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroI8","std::string::String","std::net::SocketAddr","std::num::NonZeroI64","std::ffi::CString","std::num::NonZeroIsize","std::num::NonZeroUsize","std::num::NonZeroI32"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::option::Option","std::num::NonZeroU32","std::num::NonZeroU128","std::net::IpAddr","std::net::SocketAddrV6","std::cell::RefCell","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::string::String","std::sync::Mutex","std::collections::BinaryHeap","std::rc::Rc","std::sync::atomic::AtomicI32","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroUsize","std::num::NonZeroU64","std::sync::atomic::AtomicU8","std::collections::HashMap","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::vec::Vec","std::num::NonZeroI8","std::boxed::Box","std::collections::HashSet","std::sync::atomic::AtomicBool","std::net::Ipv6Addr","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::sync::Arc","std::marker::PhantomData","std::sync::atomic::AtomicU16","std::collections::Bound","std::num::NonZeroU8","std::net::Ipv4Addr","std::net::SocketAddrV4","std::sync::RwLock","std::sync::atomic::AtomicI64","std::result::Result","std::num::NonZeroI64","std::borrow::Cow","std::path::PathBuf","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::collections::BTreeSet","std::ffi::CString","std::time::Duration","std::num::NonZeroI128","std::time::SystemTime","std::ops::RangeInclusive","std::ops::Range","std::sync::atomic::AtomicU32"]},"std::collections::HashSet":{"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"T":["std::string::String","std::collections::Bound","std::num::NonZeroIsize","std::num::NonZeroU16","std::num::NonZeroU128","std::num::NonZeroI16","std::marker::PhantomData","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroU64","std::num::NonZeroI128","std::rc::Rc","std::num::NonZeroUsize","std::net::Ipv6Addr","std::num::NonZeroU32"]},"std::collections::VecDeque":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::collections::HashMap","std::net::SocketAddr","std::collections::BTreeMap","std::ops::Range","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::marker::PhantomData","std::rc::Rc","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::boxed::Box","std::cell::RefCell","std::num::NonZeroUsize","std::ops::RangeInclusive","std::sync::Arc","std::time::SystemTime","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicBool","std::net::SocketAddrV4","std::collections::BTreeSet","std::collections::Bound","std::net::IpAddr","std::net::Ipv6Addr","std::vec::Vec","std::num::NonZeroIsize","std::sync::RwLock","std::sync::atomic::AtomicU64","std::num::NonZeroI32","std::num::NonZeroU8","std::cell::Cell","std::sync::atomic::AtomicU16","std::num::NonZeroU16","std::string::String","std::collections::VecDeque","std::borrow::Cow","std::result::Result","std::ffi::CString","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::time::Duration","std::net::SocketAddrV6","std::num::NonZeroI16","std::sync::Mutex","std::net::Ipv4Addr","std::num::NonZeroU32","std::option::Option","std::path::PathBuf","std::collections::HashSet","std::num::NonZeroI128"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::collections::BTreeSet","std::time::SystemTime","std::ops::RangeInclusive","std::ffi::CString","std::num::NonZeroUsize","std::path::PathBuf","std::sync::atomic::AtomicBool","std::vec::Vec","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::num::NonZeroIsize","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::collections::HashSet","std::collections::VecDeque","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::boxed::Box","std::net::SocketAddr","std::collections::BTreeMap","std::num::NonZeroI32","std::sync::atomic::AtomicIsize","std::cell::Cell","std::string::String","std::rc::Rc","std::num::NonZeroI64","std::num::NonZeroU128","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::cell::RefCell","std::time::Duration","std::num::NonZeroI128","std::ops::Range","std::net::SocketAddrV6","std::result::Result","std::sync::atomic::AtomicI32","std::net::IpAddr","std::borrow::Cow","std::sync::Arc","std::net::Ipv4Addr","std::collections::HashMap","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::sync::Mutex","std::net::SocketAddrV4","std::num::NonZeroI8","std::num::NonZeroI16","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::option::Option","std::sync::RwLock","std::net::Ipv6Addr","std::collections::Bound"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::collections::HashSet","std::ffi::CString","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::collections::HashMap","std::rc::Rc","std::result::Result","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::path::PathBuf","std::num::NonZeroU64","std::net::IpAddr","std::net::SocketAddrV6","std::ops::RangeInclusive","std::collections::VecDeque","std::vec::Vec","std::net::Ipv6Addr","std::num::NonZeroI128","std::collections::BinaryHeap","std::cell::RefCell","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::num::NonZeroU128","std::borrow::Cow","std::num::NonZeroU8","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroU16","std::time::SystemTime","std::marker::PhantomData","std::ops::Range","std::num::NonZeroI16","std::option::Option","std::sync::RwLock","std::collections::Bound","std::sync::atomic::AtomicI32","std::sync::Mutex","std::sync::atomic::AtomicU16","std::num::NonZeroIsize","std::collections::BTreeMap","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::num::NonZeroUsize","std::boxed::Box","std::sync::atomic::AtomicUsize","std::string::String","std::sync::atomic::AtomicU64","std::cell::Cell","std::time::Duration","std::sync::Arc","std::net::Ipv4Addr","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::num::NonZeroU32"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::vec::Vec","std::num::NonZeroI8","std::sync::atomic::AtomicU64","std::num::NonZeroIsize","std::cell::RefCell","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::sync::Mutex","std::path::PathBuf","std::num::NonZeroU128","std::rc::Rc","std::net::SocketAddrV6","std::collections::BTreeSet","std::net::SocketAddrV4","std::ops::Range","std::net::Ipv6Addr","std::ops::RangeInclusive","std::collections::BinaryHeap","std::num::NonZeroI16","std::option::Option","std::collections::BTreeMap","std::boxed::Box","std::borrow::Cow","std::collections::Bound","std::sync::atomic::AtomicI32","std::sync::RwLock","std::time::Duration","std::sync::atomic::AtomicUsize","std::ffi::CString","std::net::SocketAddr","std::collections::HashSet","std::marker::PhantomData","std::sync::atomic::AtomicI8","std::num::NonZeroI64","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::time::SystemTime","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI64","std::collections::HashMap","std::num::NonZeroU8","std::result::Result","std::sync::atomic::AtomicBool","std::num::NonZeroU64","std::string::String","std::num::NonZeroI32","std::collections::VecDeque","std::sync::Arc","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::num::NonZeroU32","std::cell::Cell","std::net::IpAddr","std::sync::atomic::AtomicI16"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::cell::Cell<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::cell::Cell<T>>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::cell::Cell<T>>::encode(p0, p1);
+<std::cell::Cell<T>>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::cell::RefCell<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Sized"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Copy"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for std::cell::RefCell<T>>::encode":{"E":["enc::Encoder","std::marker::Sized"],"T":["enc::Encode"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["enc::Encode","std::marker::Sized","de::Decode","std::cmp::Ord","de::BorrowDecode"],"V":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","std::cmp::Ord","enc::Encode"]},"std::collections::BinaryHeap":{"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode","std::cmp::Ord"]},"std::collections::Bound":{"T":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::HashMap":{"K":["enc::Encode","std::cmp::Eq","std::marker::Sized","de::Decode","std::hash::Hash","de::BorrowDecode"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","enc::Encode","std::cmp::Eq","std::hash::Hash","de::BorrowDecode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","enc::Encode","std::marker::Sized","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::impls::<impl std::clone::Clone for *const T>","config::Configuration","config::Fixint","config::Varint","config::LittleEndian","config::Limit","config::NoLimit","config::BigEndian"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SizeWriter","enc::write::SliceWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for std::cell::RefCell<T>>::encode":{"E":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"],"T":["std::sync::atomic::AtomicI16","std::borrow::Cow","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::sync::Arc","std::result::Result","std::num::NonZeroU128","std::num::NonZeroUsize","std::boxed::Box","std::num::NonZeroI16","std::cell::Cell","std::marker::PhantomData","std::ffi::CString","std::num::NonZeroU8","std::path::PathBuf","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::net::SocketAddrV6","std::net::SocketAddrV4","std::num::NonZeroI8","std::num::NonZeroIsize","std::option::Option","std::num::NonZeroU64","std::net::Ipv4Addr","std::net::Ipv6Addr","std::rc::Rc","std::collections::BinaryHeap","std::num::NonZeroU32","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::string::String","std::num::NonZeroI32","std::net::IpAddr","std::sync::atomic::AtomicU16","enc::impls::<impl enc::Encode for &'a T>","std::collections::HashMap","std::ops::RangeInclusive","std::collections::HashSet","std::sync::Mutex","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::time::SystemTime","std::sync::RwLock","std::num::NonZeroI64","std::time::Duration","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU32","std::collections::Bound","std::vec::Vec","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::collections::VecDeque","std::net::SocketAddr","std::ops::Range"]},"features::impl_std::IoWriter":{"W":["&std::process::ChildStdin","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Sink","std::io::impls::<impl std::io::Write for &mut W>","&std::io::Stdout","std::io::BorrowedCursor<'a>","std::vec::Vec<u8, A>","std::net::TcpStream","std::sys::unix::stdio::Stderr","std::io::Cursor<[u8; N]>","std::collections::VecDeque<u8, A>","&std::io::Stderr","&'a std::os::unix::net::UnixStream","std::boxed::Box<W>","std::os::unix::net::UnixStream","&std::fs::File","std::fs::File","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Stdout","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::io::Sink","std::io::Stderr","std::io::StderrLock<'_>","std::io::LineWriter<W>","std::io::stdio::StdoutRaw","std::io::StdoutLock<'_>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::stdio::StderrRaw","std::process::ChildStdin","std::io::BufWriter<W>","&std::net::TcpStream","std::sys::unix::stdio::Stdout","std::io::Cursor<&mut [u8]>"]},"std::borrow::Cow":{"B":["std::path::Path","std::ffi::CStr","std::ffi::OsStr","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::num::NonZeroUsize","std::time::Duration","std::num::NonZeroI64","std::num::NonZeroU32","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroU128","std::string::String","std::sync::Arc","std::num::NonZeroI16","std::ffi::CString","std::option::Option","std::net::IpAddr","std::net::Ipv6Addr","std::path::PathBuf","std::num::NonZeroIsize","std::num::NonZeroU64","std::net::SocketAddrV4","std::cell::Cell","std::num::NonZeroI128","std::cell::RefCell","std::num::NonZeroI8"],"V":["std::borrow::Cow","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::num::NonZeroU32","std::sync::atomic::AtomicU16","std::net::Ipv4Addr","std::sync::RwLock","std::collections::BTreeMap","std::num::NonZeroI16","std::num::NonZeroIsize","std::net::Ipv6Addr","std::ffi::CString","std::sync::atomic::AtomicI64","std::time::Duration","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::result::Result","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::vec::Vec","std::net::SocketAddrV4","std::num::NonZeroU64","std::rc::Rc","std::num::NonZeroI64","std::net::IpAddr","std::collections::HashMap","std::sync::Mutex","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroU8","std::collections::HashSet","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::string::String","std::ops::Range","std::sync::atomic::AtomicI16","std::marker::PhantomData","std::net::SocketAddr","std::sync::Arc","std::num::NonZeroI32","std::option::Option","std::cell::RefCell","std::cell::Cell","std::ops::RangeInclusive","std::time::SystemTime","std::path::PathBuf","std::collections::VecDeque","std::collections::BinaryHeap","std::net::SocketAddrV6","std::num::NonZeroU128","std::num::NonZeroUsize","std::boxed::Box","std::collections::BTreeSet","std::collections::Bound"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI32","std::time::Duration","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroI8","std::time::SystemTime","std::cell::RefCell","std::num::NonZeroU64","std::net::SocketAddr","std::num::NonZeroU8","std::marker::PhantomData","std::num::NonZeroU32","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroIsize","std::num::NonZeroI128"]},"std::collections::BinaryHeap":{"T":["std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroI32","std::marker::PhantomData","std::num::NonZeroU128","std::sync::Arc","std::time::Duration","std::num::NonZeroU8","std::rc::Rc","std::num::NonZeroI128","std::num::NonZeroIsize","std::net::Ipv4Addr","std::path::PathBuf","std::ffi::CString","std::num::NonZeroU16","std::option::Option","std::num::NonZeroI16","std::net::SocketAddr","std::num::NonZeroI64","std::net::SocketAddrV6","std::cell::Cell","std::num::NonZeroU32"]},"std::collections::Bound":{"T":["std::rc::Rc","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU64","std::collections::HashMap","std::num::NonZeroUsize","std::sync::RwLock","std::sync::atomic::AtomicBool","std::time::SystemTime","std::collections::BinaryHeap","std::net::SocketAddrV4","std::sync::Arc","std::sync::Mutex","std::num::NonZeroI16","std::cell::Cell","std::collections::BTreeSet","std::num::NonZeroI8","std::option::Option","std::num::NonZeroIsize","std::net::SocketAddrV6","std::ops::RangeInclusive","std::num::NonZeroU128","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::result::Result","std::ffi::CString","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI8","std::string::String","std::sync::atomic::AtomicIsize","std::vec::Vec","std::time::Duration","std::boxed::Box","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::num::NonZeroU8","std::collections::Bound","std::sync::atomic::AtomicI64","std::collections::BTreeMap","std::net::Ipv4Addr","std::ops::Range","std::sync::atomic::AtomicU16","std::borrow::Cow","std::cell::RefCell","std::collections::HashSet","std::sync::atomic::AtomicU32","std::path::PathBuf","std::num::NonZeroI32","std::collections::VecDeque","std::num::NonZeroU16","std::num::NonZeroI128","std::marker::PhantomData","std::num::NonZeroI64","std::net::SocketAddr","std::num::NonZeroU32","std::net::IpAddr"]},"std::collections::HashMap":{"K":["std::num::NonZeroI32","std::num::NonZeroU32","std::sync::Arc","std::num::NonZeroUsize","std::time::SystemTime","std::net::Ipv6Addr","std::net::Ipv4Addr","std::string::String","std::collections::Bound","std::option::Option","std::num::NonZeroU16","std::num::NonZeroU128","std::num::NonZeroIsize","std::num::NonZeroU8","std::num::NonZeroI8","std::num::NonZeroI128","std::num::NonZeroU64"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::collections::VecDeque","std::sync::atomic::AtomicI8","std::net::SocketAddrV4","std::sync::atomic::AtomicIsize","std::path::PathBuf","std::num::NonZeroU64","std::ffi::CString","std::cell::Cell","std::num::NonZeroI16","std::sync::Mutex","std::net::IpAddr","std::ops::Range","std::num::NonZeroI64","std::sync::RwLock","std::sync::atomic::AtomicUsize","std::option::Option","std::boxed::Box","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::num::NonZeroU16","std::sync::atomic::AtomicI16","std::num::NonZeroI32","std::sync::Arc","std::collections::HashSet","std::sync::atomic::AtomicI64","std::num::NonZeroU128","std::time::SystemTime","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::sync::atomic::AtomicU8","std::rc::Rc","std::string::String","std::num::NonZeroI8","std::marker::PhantomData","std::result::Result","std::num::NonZeroU32","std::net::SocketAddrV6","std::borrow::Cow","std::net::SocketAddr","std::num::NonZeroIsize","std::net::Ipv6Addr","std::time::Duration","std::vec::Vec","std::cell::RefCell","std::net::Ipv4Addr","std::ops::RangeInclusive","std::collections::BTreeMap","std::collections::HashMap","std::collections::BinaryHeap","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::num::NonZeroU8","std::sync::atomic::AtomicBool","std::collections::Bound"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::marker::PhantomData","std::net::SocketAddrV6","std::net::IpAddr","std::num::NonZeroU128","std::num::NonZeroIsize","std::net::Ipv6Addr","std::num::NonZeroUsize","std::collections::Bound","std::path::PathBuf","std::net::SocketAddrV4","std::num::NonZeroI16","std::num::NonZeroI128","std::num::NonZeroU8","std::time::SystemTime"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU16","std::ops::Range","std::num::NonZeroIsize","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::string::String","std::num::NonZeroI128","std::num::NonZeroI8","std::collections::Bound","std::sync::atomic::AtomicI8","std::sync::RwLock","std::cell::RefCell","std::net::IpAddr","std::marker::PhantomData","std::path::PathBuf","std::num::NonZeroU128","std::collections::HashSet","std::time::SystemTime","std::sync::atomic::AtomicI64","std::net::SocketAddrV4","std::time::Duration","std::num::NonZeroU8","std::option::Option","std::net::SocketAddr","std::num::NonZeroI32","std::collections::BTreeMap","std::sync::Mutex","std::num::NonZeroU32","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::net::Ipv6Addr","std::vec::Vec","std::num::NonZeroU64","std::rc::Rc","std::collections::BTreeSet","std::collections::VecDeque","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::cell::Cell","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::ffi::CString","std::collections::HashMap","std::result::Result","std::ops::RangeInclusive","std::sync::atomic::AtomicIsize","std::boxed::Box","std::num::NonZeroUsize","std::net::SocketAddrV6","std::borrow::Cow","std::sync::atomic::AtomicI32","std::sync::Arc"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::time::SystemTime","std::num::NonZeroI8","std::cell::Cell","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::ffi::CString","std::sync::Mutex","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::num::NonZeroI16","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::option::Option","std::result::Result","std::sync::atomic::AtomicU64","std::collections::BinaryHeap","std::sync::Arc","std::num::NonZeroU64","std::num::NonZeroU8","std::sync::RwLock","std::ops::RangeInclusive","std::borrow::Cow","std::net::IpAddr","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::ops::Range","std::sync::atomic::AtomicUsize","std::string::String","std::num::NonZeroU32","std::collections::HashSet","std::num::NonZeroU128","std::marker::PhantomData","std::net::SocketAddr","std::time::Duration","std::sync::atomic::AtomicI64","std::path::PathBuf","std::sync::atomic::AtomicI16","std::vec::Vec","std::cell::RefCell","std::sync::atomic::AtomicU32","std::num::NonZeroI128","std::num::NonZeroIsize","std::num::NonZeroUsize","std::num::NonZeroU16","std::net::Ipv6Addr","std::net::SocketAddrV4","std::sync::atomic::AtomicBool","std::num::NonZeroI64","std::rc::Rc","std::collections::HashMap","std::boxed::Box","std::collections::Bound"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicIsize","std::collections::HashMap","std::path::PathBuf","std::vec::Vec","std::sync::atomic::AtomicUsize","std::collections::BTreeMap","std::sync::atomic::AtomicI16","std::time::SystemTime","std::marker::PhantomData","std::net::Ipv4Addr","std::borrow::Cow","std::sync::atomic::AtomicU8","std::num::NonZeroI16","std::sync::atomic::AtomicU16","std::net::SocketAddrV4","std::time::Duration","std::net::IpAddr","std::num::NonZeroI32","std::ops::RangeInclusive","std::boxed::Box","std::collections::Bound","std::sync::atomic::AtomicI8","std::sync::Mutex","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroU128","std::collections::BTreeSet","std::string::String","std::sync::atomic::AtomicU32","std::collections::VecDeque","std::net::SocketAddr","std::num::NonZeroU32","std::num::NonZeroI128","std::ops::Range","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::sync::RwLock","std::sync::atomic::AtomicI64","std::cell::Cell","std::cell::RefCell","std::collections::HashSet","std::option::Option","std::sync::atomic::AtomicBool","std::sync::Arc","std::num::NonZeroU16","std::num::NonZeroU64","std::collections::BinaryHeap","std::num::NonZeroIsize","std::result::Result","std::net::SocketAddrV6","std::rc::Rc","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::num::NonZeroU8","std::ffi::CString"]},"std::vec::Vec":{"A":["std::alloc::Global","std::alloc::System","<&A as std::alloc::Allocator>"],"T":["std::collections::BTreeSet","std::num::NonZeroI8","std::num::NonZeroUsize","std::collections::HashSet","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::sync::atomic::AtomicI8","std::result::Result","std::sync::atomic::AtomicI64","std::vec::Vec","std::num::NonZeroU8","std::num::NonZeroU16","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::sync::atomic::AtomicI32","std::num::NonZeroI128","std::string::String","std::collections::VecDeque","std::marker::PhantomData","std::path::PathBuf","std::net::SocketAddrV4","std::borrow::Cow","std::cell::RefCell","std::num::NonZeroIsize","std::time::SystemTime","std::num::NonZeroU32","std::net::SocketAddr","std::sync::Mutex","std::collections::Bound","std::num::NonZeroU128","std::sync::RwLock","std::sync::atomic::AtomicU32","std::net::SocketAddrV6","std::cell::Cell","std::sync::atomic::AtomicU64","std::num::NonZeroU64","std::num::NonZeroI64","std::sync::atomic::AtomicI16","std::time::Duration","std::net::Ipv4Addr","std::collections::BTreeMap","std::ffi::CString","std::ops::RangeInclusive","std::collections::HashMap","std::rc::Rc","std::num::NonZeroI16","std::num::NonZeroI32","std::option::Option","std::sync::atomic::AtomicU16","std::ops::Range","std::sync::Arc","std::collections::BinaryHeap","std::boxed::Box"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::cell::RefCell<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::cell::RefCell<T>>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::cell::RefCell<T>>::encode(p0, p1);
+<std::cell::RefCell<T>>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::time::Duration>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Copy","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","config::internal::InternalIntEncodingConfig","std::clone::Clone","std::marker::Sized"],"L":["std::marker::Sized","std::clone::Clone","config::internal::InternalLimitConfig","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for std::time::Duration>::encode":{"E":["enc::Encoder","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Fixint","config::Configuration","config::Varint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","enc::write::SizeWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter"]},"enc::impls::<impl enc::Encode for std::time::Duration>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"features::impl_std::IoWriter":{"W":["&std::io::Sink","std::io::LineWriter<W>","std::sys::unix::stdio::Stderr","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::process::ChildStdin","&'a std::os::unix::net::UnixStream","std::collections::VecDeque<u8, A>","std::io::StderrLock<'_>","std::io::BorrowedCursor<'a>","std::net::TcpStream","std::io::stdio::StderrRaw","&std::io::Stdout","std::sys::unix::stdio::Stdout","std::boxed::Box<W>","&std::net::TcpStream","std::io::Stdout","&std::fs::File","std::io::Cursor<std::boxed::Box<[u8], A>>","std::vec::Vec<u8, A>","std::io::Cursor<[u8; N]>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::BufWriter<W>","std::fs::File","std::io::Sink","&std::io::Stderr","std::io::Cursor<&mut [u8]>","std::io::Stderr","std::process::ChildStdin","std::os::unix::net::UnixStream","std::io::StdoutLock<'_>","std::io::stdio::StdoutRaw","std::io::impls::<impl std::io::Write for &mut W>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::time::Duration
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::time::Duration>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::time::Duration>::encode(p0, p1);
+<std::time::Duration>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::ops::Range<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::marker::Copy","config::internal::InternalLimitConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::clone::Clone","std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["std::clone::Clone","std::marker::Copy","std::marker::Sized","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for std::ops::Range<T>>::encode":{"E":["std::marker::Sized","enc::Encoder"],"T":["std::marker::Sized","enc::Encode"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["de::Decode","enc::Encode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode"],"V":["de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["de::BorrowDecode","std::marker::Sized","enc::Encode","std::cmp::Ord","de::Decode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode","std::cmp::Ord"]},"std::collections::Bound":{"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::hash::Hash","de::BorrowDecode","std::marker::Sized","enc::Encode","std::cmp::Eq","de::Decode"],"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"V":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["std::marker::Sized","de::Decode","std::cmp::Eq","de::BorrowDecode","enc::Encode","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","de::BorrowDecode","de::Decode","enc::Encode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::BorrowDecode","de::Decode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Fixint","config::BigEndian","config::Limit","std::clone::impls::<impl std::clone::Clone for &mut T>","config::LittleEndian","config::Varint","config::Configuration","config::NoLimit"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Configuration","config::Varint","config::Fixint"],"L":["config::Configuration","config::NoLimit","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>","enc::write::SliceWriter","features::impl_std::IoWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for std::ops::Range<T>>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"T":["std::collections::VecDeque","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::vec::Vec","std::collections::HashMap","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::collections::Bound","std::sync::RwLock","std::num::NonZeroU16","std::string::String","std::ffi::CString","std::num::NonZeroI128","std::num::NonZeroIsize","std::net::SocketAddrV6","std::net::IpAddr","std::sync::Arc","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::ops::RangeInclusive","std::cell::Cell","std::boxed::Box","std::num::NonZeroU8","std::sync::atomic::AtomicU64","std::net::SocketAddr","std::time::SystemTime","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::sync::atomic::AtomicU32","std::option::Option","std::sync::atomic::AtomicI8","std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::num::NonZeroU64","std::borrow::Cow","std::collections::BTreeSet","std::num::NonZeroI8","std::net::Ipv4Addr","std::result::Result","std::time::Duration","std::collections::HashSet","std::sync::Mutex","std::sync::atomic::AtomicI64","std::ops::Range","std::num::NonZeroI16","std::path::PathBuf","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::marker::PhantomData","std::cell::RefCell","std::rc::Rc","std::num::NonZeroI64","std::num::NonZeroI32"]},"features::impl_std::IoWriter":{"W":["&std::fs::File","std::process::ChildStdin","&std::process::ChildStdin","std::io::Sink","&'a std::os::unix::net::UnixStream","std::vec::Vec<u8, A>","std::io::Stderr","std::io::stdio::StdoutRaw","std::sys::unix::stdio::Stdout","&std::io::Sink","std::io::Stdout","std::io::Cursor<&mut [u8]>","std::net::TcpStream","std::io::StderrLock<'_>","std::io::impls::<impl std::io::Write for &mut W>","std::io::BufWriter<W>","std::os::unix::net::UnixStream","std::io::BorrowedCursor<'a>","std::io::stdio::StderrRaw","std::io::Cursor<[u8; N]>","&std::net::TcpStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::LineWriter<W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::io::Stdout","&std::io::Stderr","std::io::StdoutLock<'_>","std::boxed::Box<W>","std::io::Cursor<std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stderr","std::collections::VecDeque<u8, A>","std::fs::File"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::ffi::OsStr","std::path::Path","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::num::NonZeroU16","std::net::IpAddr","std::time::Duration","std::option::Option","std::net::SocketAddrV4","std::time::SystemTime","std::marker::PhantomData","std::rc::Rc","std::num::NonZeroI8","std::num::NonZeroU128","std::cell::Cell","std::num::NonZeroI16","std::num::NonZeroIsize","std::net::SocketAddrV6","std::ffi::CString","std::net::SocketAddr","std::num::NonZeroUsize","std::num::NonZeroI32","std::num::NonZeroI128"],"V":["std::collections::BTreeMap","std::sync::atomic::AtomicUsize","std::time::Duration","std::collections::VecDeque","std::borrow::Cow","std::sync::atomic::AtomicU32","std::num::NonZeroU64","std::collections::HashSet","std::sync::atomic::AtomicI64","std::path::PathBuf","std::rc::Rc","std::num::NonZeroU16","std::cell::RefCell","std::sync::atomic::AtomicI32","std::vec::Vec","std::sync::atomic::AtomicIsize","std::boxed::Box","std::collections::Bound","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroI16","std::option::Option","std::marker::PhantomData","std::num::NonZeroIsize","std::ffi::CString","std::cell::Cell","std::net::IpAddr","std::net::Ipv4Addr","std::ops::Range","std::sync::atomic::AtomicU16","std::num::NonZeroU128","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::num::NonZeroU8","std::net::SocketAddrV4","std::time::SystemTime","std::sync::RwLock","std::net::SocketAddr","std::result::Result","std::sync::atomic::AtomicBool","std::sync::Mutex","std::string::String","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::net::SocketAddrV6","std::sync::Arc","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::collections::BinaryHeap","std::ops::RangeInclusive","std::num::NonZeroU32","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::collections::HashMap"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroI8","std::path::PathBuf","std::net::SocketAddr","std::net::IpAddr","std::num::NonZeroU32","std::num::NonZeroI128","std::net::Ipv4Addr","std::num::NonZeroIsize","std::num::NonZeroU128","std::num::NonZeroI16","std::num::NonZeroU64","std::num::NonZeroU8","std::sync::Arc","std::num::NonZeroU16","std::ffi::CString","std::time::SystemTime","std::string::String","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroI64","std::cell::RefCell","std::rc::Rc","std::net::SocketAddrV6","std::marker::PhantomData","std::option::Option"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddrV4","std::num::NonZeroU64","std::net::SocketAddrV6","std::time::Duration","std::num::NonZeroU16","std::num::NonZeroI16","std::num::NonZeroU128","std::rc::Rc","std::cell::Cell","std::sync::Arc","std::cell::RefCell","std::net::SocketAddr","std::time::SystemTime","std::num::NonZeroI32","std::option::Option","std::marker::PhantomData","std::num::NonZeroI128","std::ffi::CString","std::path::PathBuf","std::num::NonZeroIsize","std::net::IpAddr","std::string::String"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicU32","std::marker::PhantomData","std::sync::RwLock","std::collections::Bound","std::ffi::CString","std::string::String","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::num::NonZeroI16","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::rc::Rc","std::ops::RangeInclusive","std::num::NonZeroI8","std::collections::HashSet","std::sync::Mutex","std::sync::atomic::AtomicI64","std::net::IpAddr","std::num::NonZeroU128","std::collections::VecDeque","std::net::Ipv6Addr","std::sync::atomic::AtomicI16","std::time::SystemTime","std::num::NonZeroU32","std::ops::Range","std::vec::Vec","std::boxed::Box","std::net::SocketAddr","std::collections::BTreeSet","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicU64","std::result::Result","std::net::SocketAddrV4","std::net::Ipv4Addr","std::cell::Cell","std::collections::BTreeMap","std::cell::RefCell","std::collections::BinaryHeap","std::num::NonZeroI64","std::path::PathBuf","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::borrow::Cow","std::num::NonZeroU64","std::collections::HashMap","std::num::NonZeroI128","std::option::Option","std::sync::atomic::AtomicI8","std::num::NonZeroI32","std::num::NonZeroU8","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::time::Duration","std::sync::Arc"]},"std::collections::HashMap":{"K":["std::num::NonZeroU64","std::sync::Arc","std::time::Duration","std::num::NonZeroI16","std::num::NonZeroIsize","std::collections::Bound","std::num::NonZeroU32","std::string::String","std::net::SocketAddr","std::num::NonZeroU128","std::num::NonZeroI128","std::net::SocketAddrV6","std::num::NonZeroI64","std::rc::Rc","std::net::Ipv6Addr","std::ffi::CString","std::net::IpAddr"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::sync::atomic::AtomicBool","std::collections::HashSet","std::collections::BTreeMap","std::net::SocketAddrV4","std::num::NonZeroI32","std::time::SystemTime","std::ffi::CString","std::num::NonZeroI8","std::num::NonZeroI64","std::sync::atomic::AtomicUsize","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::sync::RwLock","std::net::SocketAddrV6","std::num::NonZeroU16","std::result::Result","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI16","std::ops::RangeInclusive","std::num::NonZeroU128","std::collections::HashMap","std::time::Duration","std::ops::Range","std::collections::BTreeSet","std::sync::Mutex","std::option::Option","std::vec::Vec","std::collections::VecDeque","std::net::IpAddr","std::num::NonZeroU8","std::num::NonZeroI16","std::marker::PhantomData","std::cell::RefCell","std::collections::Bound","std::rc::Rc","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::num::NonZeroU32","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::cell::Cell","std::net::Ipv6Addr","std::string::String","std::path::PathBuf","std::boxed::Box","std::net::SocketAddr","std::sync::Arc","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::num::NonZeroIsize","std::net::Ipv4Addr"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::marker::PhantomData","std::num::NonZeroI64","std::net::Ipv6Addr","std::option::Option","std::string::String","std::sync::Arc","std::net::SocketAddr","std::num::NonZeroI128","std::net::SocketAddrV6","std::ffi::CString","std::collections::Bound","std::rc::Rc","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroI16","std::time::SystemTime","std::num::NonZeroI32","std::num::NonZeroU32"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroI64","std::ops::Range","std::net::SocketAddr","std::num::NonZeroU8","std::sync::RwLock","std::vec::Vec","std::path::PathBuf","std::collections::BinaryHeap","std::time::Duration","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::collections::VecDeque","std::num::NonZeroUsize","std::sync::atomic::AtomicI32","std::sync::Arc","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::num::NonZeroI32","std::net::IpAddr","std::sync::atomic::AtomicU64","std::result::Result","std::string::String","std::num::NonZeroU128","std::sync::atomic::AtomicI16","std::option::Option","std::num::NonZeroI128","std::marker::PhantomData","std::net::SocketAddrV4","std::net::Ipv4Addr","std::net::Ipv6Addr","std::collections::BTreeSet","std::time::SystemTime","std::sync::Mutex","std::cell::RefCell","std::num::NonZeroU16","std::collections::HashMap","std::num::NonZeroI8","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::collections::Bound","std::rc::Rc","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::num::NonZeroU32","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicUsize","std::ffi::CString","std::borrow::Cow","std::boxed::Box","std::collections::HashSet","std::sync::atomic::AtomicU8","std::cell::Cell"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::sync::Mutex","std::net::SocketAddr","std::rc::Rc","std::vec::Vec","std::boxed::Box","std::num::NonZeroI16","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::ops::Range","std::collections::Bound","std::collections::BinaryHeap","std::net::Ipv4Addr","std::collections::BTreeMap","std::net::IpAddr","std::sync::atomic::AtomicI8","std::cell::Cell","std::num::NonZeroU64","std::num::NonZeroI64","std::option::Option","std::collections::HashMap","std::net::SocketAddrV4","std::num::NonZeroI128","std::sync::RwLock","std::string::String","std::time::Duration","std::marker::PhantomData","std::num::NonZeroU8","std::ffi::CString","std::sync::atomic::AtomicU8","std::num::NonZeroUsize","std::time::SystemTime","std::cell::RefCell","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::collections::BTreeSet","std::num::NonZeroU16","std::net::Ipv6Addr","std::num::NonZeroU128","std::borrow::Cow","std::net::SocketAddrV6","std::sync::atomic::AtomicI16","std::sync::Arc","std::num::NonZeroIsize","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::collections::HashSet","std::num::NonZeroU32","std::path::PathBuf","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::result::Result","std::collections::VecDeque","std::num::NonZeroI8","std::sync::atomic::AtomicI32"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicUsize","std::collections::HashMap","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::num::NonZeroU64","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::string::String","std::num::NonZeroU128","std::borrow::Cow","std::cell::RefCell","std::num::NonZeroI8","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::num::NonZeroI16","std::result::Result","std::path::PathBuf","std::num::NonZeroU8","std::collections::BTreeMap","std::net::SocketAddr","std::sync::RwLock","std::net::SocketAddrV6","std::ops::Range","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::rc::Rc","std::net::SocketAddrV4","std::num::NonZeroI64","std::num::NonZeroU32","std::num::NonZeroI32","std::boxed::Box","std::collections::Bound","std::sync::Arc","std::ffi::CString","std::sync::atomic::AtomicU16","std::num::NonZeroI128","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::option::Option","std::num::NonZeroUsize","std::time::SystemTime","std::collections::HashSet","std::collections::BinaryHeap","std::vec::Vec","std::sync::atomic::AtomicI32","std::num::NonZeroIsize","std::net::Ipv4Addr","std::cell::Cell","std::sync::Mutex","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::time::Duration","std::sync::atomic::AtomicU8","std::net::IpAddr"]},"std::vec::Vec":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::net::IpAddr","std::path::PathBuf","std::net::SocketAddrV4","std::result::Result","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicU64","std::collections::HashMap","std::time::Duration","std::collections::BinaryHeap","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::option::Option","std::sync::atomic::AtomicI8","std::net::SocketAddr","std::time::SystemTime","std::cell::Cell","std::ffi::CString","std::num::NonZeroU128","std::ops::Range","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::num::NonZeroI8","std::net::SocketAddrV6","std::boxed::Box","std::marker::PhantomData","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::collections::HashSet","std::rc::Rc","std::num::NonZeroU16","std::collections::BTreeSet","std::string::String","std::num::NonZeroU32","std::num::NonZeroU64","std::num::NonZeroI16","std::num::NonZeroUsize","std::net::Ipv6Addr","std::num::NonZeroU8","std::ops::RangeInclusive","std::sync::atomic::AtomicU32","std::borrow::Cow","std::sync::Arc","std::sync::atomic::AtomicBool","std::num::NonZeroI32","std::collections::VecDeque","std::sync::atomic::AtomicI16","std::num::NonZeroI64","std::num::NonZeroIsize","std::vec::Vec","std::collections::Bound","std::sync::Mutex"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::ops::Range<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::ops::Range<T>>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::ops::Range<T>>::encode(p0, p1);
+<std::ops::Range<T>>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::ops::RangeInclusive<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy","std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::marker::Sized","config::internal::InternalIntEncodingConfig","std::clone::Clone"],"L":["std::marker::Sized","std::clone::Clone","std::marker::Copy","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for std::ops::RangeInclusive<T>>::encode":{"E":["enc::Encoder","std::marker::Sized"],"T":["std::marker::Sized","enc::Encode"]},"features::impl_std::IoWriter":{"W":["std::marker::Sized","std::io::Write"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["enc::Encode","std::marker::Sized","std::cmp::Ord","de::BorrowDecode","de::Decode"],"V":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::collections::BTreeSet":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"T":["std::marker::Sized","std::cmp::Ord","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode","std::cmp::Ord"]},"std::collections::Bound":{"T":["enc::Encode","de::BorrowDecode","std::marker::Sized","de::Decode"]},"std::collections::HashMap":{"K":["enc::Encode","de::Decode","de::BorrowDecode","std::hash::Hash","std::cmp::Eq","std::marker::Sized"],"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"V":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::default::Default","std::marker::Sized"],"T":["std::cmp::Eq","enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized","std::hash::Hash"]},"std::collections::VecDeque":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","de::BorrowDecode","de::Decode","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["std::marker::Sized","enc::Encode","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","std::marker::Sized","de::BorrowDecode","enc::Encode"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Fixint","std::clone::impls::<impl std::clone::Clone for *mut T>","config::Configuration","config::Varint","config::LittleEndian","config::NoLimit","config::Limit","config::BigEndian"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Fixint","config::Varint","config::Configuration"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_std::IoWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","enc::write::SliceWriter","enc::write::SizeWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for std::ops::RangeInclusive<T>>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"T":["std::time::SystemTime","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::result::Result","std::sync::RwLock","std::net::Ipv4Addr","std::ops::Range","std::path::PathBuf","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::num::NonZeroU32","std::sync::atomic::AtomicI32","std::sync::Arc","enc::impls::<impl enc::Encode for &'a T>","std::collections::HashSet","std::net::IpAddr","std::cell::RefCell","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::boxed::Box","std::collections::HashMap","std::vec::Vec","std::num::NonZeroU8","std::num::NonZeroI64","std::sync::atomic::AtomicI8","std::net::SocketAddrV6","std::option::Option","std::sync::atomic::AtomicU16","std::string::String","std::sync::atomic::AtomicU64","std::ffi::CString","std::net::SocketAddr","std::collections::BTreeMap","std::sync::Mutex","std::num::NonZeroI16","std::num::NonZeroU64","std::sync::atomic::AtomicI64","std::ops::RangeInclusive","std::num::NonZeroI32","std::rc::Rc","std::net::Ipv6Addr","std::num::NonZeroU128","std::num::NonZeroU16","std::collections::Bound","std::cell::Cell","std::sync::atomic::AtomicI16","std::num::NonZeroUsize","std::net::SocketAddrV4","std::num::NonZeroIsize","std::time::Duration","std::sync::atomic::AtomicUsize","std::collections::VecDeque","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::borrow::Cow","std::collections::BTreeSet"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<&mut [u8]>","&'a std::os::unix::net::UnixStream","&std::fs::File","std::io::StdoutLock<'_>","std::collections::VecDeque<u8, A>","std::os::unix::net::UnixStream","&std::process::ChildStdin","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::sys::unix::stdio::Stdout","std::process::ChildStdin","std::io::LineWriter<W>","std::boxed::Box<W>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::fs::File","std::sys::unix::stdio::Stderr","std::io::stdio::StdoutRaw","std::io::Cursor<[u8; N]>","&std::io::Stdout","std::io::impls::<impl std::io::Write for &mut W>","&std::net::TcpStream","std::io::BufWriter<W>","std::io::Sink","&std::io::Stderr","std::io::Stdout","std::io::stdio::StderrRaw","std::io::BorrowedCursor<'a>","std::io::StderrLock<'_>","std::vec::Vec<u8, A>","std::net::TcpStream","std::io::Stderr","std::io::Cursor<std::vec::Vec<u8, A>>","&std::io::Sink","std::io::Cursor<std::boxed::Box<[u8], A>>"]},"std::borrow::Cow":{"B":["std::ffi::CStr","std::ffi::OsStr","std::path::Path","<T as std::borrow::ToOwned>"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::net::Ipv4Addr","std::num::NonZeroU16","std::num::NonZeroUsize","std::net::SocketAddr","std::net::SocketAddrV4","std::num::NonZeroU64","std::cell::Cell","std::num::NonZeroI16","std::net::IpAddr","std::option::Option","std::num::NonZeroU128","std::num::NonZeroIsize","std::net::Ipv6Addr","std::time::Duration","std::marker::PhantomData","std::string::String","std::path::PathBuf","std::time::SystemTime","std::num::NonZeroI8","std::net::SocketAddrV6"],"V":["std::sync::atomic::AtomicI16","std::sync::Arc","std::rc::Rc","std::option::Option","std::borrow::Cow","std::sync::atomic::AtomicI32","std::net::IpAddr","std::sync::RwLock","std::num::NonZeroU8","std::marker::PhantomData","std::ffi::CString","std::num::NonZeroU64","std::vec::Vec","std::num::NonZeroUsize","std::time::SystemTime","std::time::Duration","std::ops::RangeInclusive","std::net::Ipv6Addr","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::atomic::AtomicU64","std::net::SocketAddrV6","std::sync::atomic::AtomicU16","std::collections::HashSet","std::collections::BTreeSet","std::num::NonZeroI32","std::num::NonZeroI128","std::ops::Range","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::path::PathBuf","std::net::SocketAddr","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI8","std::num::NonZeroU16","std::cell::RefCell","std::collections::Bound","std::sync::atomic::AtomicUsize","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroIsize","std::string::String","std::sync::atomic::AtomicU32","std::result::Result","std::collections::BinaryHeap","std::collections::HashMap","std::cell::Cell","std::collections::BTreeMap","std::num::NonZeroU128","std::boxed::Box","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::net::Ipv4Addr"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI16","std::time::Duration","std::marker::PhantomData","std::num::NonZeroI64","std::num::NonZeroI128","std::cell::Cell","std::num::NonZeroIsize","std::sync::Arc","std::ffi::CString","std::net::IpAddr","std::num::NonZeroU32","std::net::Ipv6Addr","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroU8","std::num::NonZeroI32","std::cell::RefCell","std::path::PathBuf","std::num::NonZeroI8","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroU64","std::option::Option"]},"std::collections::BinaryHeap":{"T":["std::sync::Arc","std::num::NonZeroU8","std::net::SocketAddr","std::net::Ipv4Addr","std::net::Ipv6Addr","std::path::PathBuf","std::num::NonZeroI32","std::num::NonZeroI8","std::cell::RefCell","std::num::NonZeroUsize","std::ffi::CString","std::num::NonZeroIsize","std::num::NonZeroI128","std::num::NonZeroU32","std::num::NonZeroI16","std::time::SystemTime","std::net::IpAddr","std::num::NonZeroU128","std::num::NonZeroU16","std::num::NonZeroU64"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicU8","std::rc::Rc","std::sync::atomic::AtomicU16","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::marker::PhantomData","std::collections::BTreeMap","std::result::Result","std::collections::BinaryHeap","std::time::SystemTime","std::collections::BTreeSet","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU32","std::boxed::Box","std::collections::HashSet","std::num::NonZeroI16","std::time::Duration","std::net::Ipv6Addr","std::net::IpAddr","std::cell::RefCell","std::num::NonZeroIsize","std::sync::atomic::AtomicBool","std::ffi::CString","std::cell::Cell","std::ops::Range","std::collections::VecDeque","std::net::SocketAddrV4","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::ops::RangeInclusive","std::num::NonZeroI64","std::num::NonZeroI128","std::net::Ipv4Addr","std::string::String","std::vec::Vec","std::num::NonZeroU32","std::num::NonZeroI8","std::collections::Bound","std::sync::Mutex","std::path::PathBuf","std::sync::atomic::AtomicI16","std::num::NonZeroU16","std::net::SocketAddrV6","std::num::NonZeroI32","std::num::NonZeroU8","std::borrow::Cow","std::option::Option","std::sync::atomic::AtomicI64","std::sync::RwLock","std::sync::Arc","std::num::NonZeroU128","std::collections::HashMap","std::sync::atomic::AtomicU64"]},"std::collections::HashMap":{"K":["std::collections::Bound","std::sync::Arc","std::string::String","std::ffi::CString","std::net::Ipv6Addr","std::num::NonZeroIsize","std::path::PathBuf","std::num::NonZeroI128","std::net::SocketAddrV4","std::num::NonZeroU32","std::net::IpAddr","std::marker::PhantomData","std::num::NonZeroI32","std::num::NonZeroI16","std::num::NonZeroU8","std::rc::Rc"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::num::NonZeroI32","std::sync::RwLock","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::time::SystemTime","std::collections::VecDeque","std::sync::atomic::AtomicI8","std::num::NonZeroI16","std::num::NonZeroI8","std::num::NonZeroI128","std::ffi::CString","std::string::String","std::net::Ipv4Addr","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI16","std::time::Duration","std::marker::PhantomData","std::num::NonZeroU128","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicBool","std::vec::Vec","std::num::NonZeroU16","std::sync::atomic::AtomicIsize","std::collections::HashSet","std::sync::Mutex","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::cell::Cell","std::collections::BTreeSet","std::sync::atomic::AtomicU32","std::sync::Arc","std::collections::Bound","std::borrow::Cow","std::collections::HashMap","std::path::PathBuf","std::result::Result","std::ops::Range","std::num::NonZeroUsize","std::num::NonZeroU8","std::num::NonZeroU32","std::boxed::Box","std::cell::RefCell","std::rc::Rc","std::collections::BTreeMap","std::net::IpAddr","std::net::SocketAddrV6","std::net::SocketAddrV4","std::net::Ipv6Addr","std::ops::RangeInclusive","std::option::Option","std::net::SocketAddr","std::num::NonZeroI64"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::time::Duration","std::marker::PhantomData","std::net::Ipv4Addr","std::num::NonZeroIsize","std::net::SocketAddr","std::num::NonZeroU64","std::option::Option","std::net::SocketAddrV6","std::sync::Arc","std::num::NonZeroI8","std::num::NonZeroI16","std::num::NonZeroU32","std::time::SystemTime","std::net::Ipv6Addr","std::net::IpAddr","std::rc::Rc","std::num::NonZeroU128","std::path::PathBuf"]},"std::collections::VecDeque":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"],"T":["std::num::NonZeroI32","std::collections::HashMap","std::sync::Arc","std::net::Ipv6Addr","std::num::NonZeroU128","std::ops::RangeInclusive","std::path::PathBuf","std::sync::atomic::AtomicU64","std::ffi::CString","std::time::Duration","std::net::Ipv4Addr","std::num::NonZeroI16","std::net::SocketAddrV4","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicBool","std::net::IpAddr","std::time::SystemTime","std::sync::atomic::AtomicI16","std::ops::Range","std::option::Option","std::borrow::Cow","std::collections::VecDeque","std::num::NonZeroI64","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::cell::RefCell","std::sync::atomic::AtomicU32","std::result::Result","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::num::NonZeroI128","std::num::NonZeroI8","std::vec::Vec","std::sync::atomic::AtomicIsize","std::sync::Mutex","std::num::NonZeroU16","std::collections::BinaryHeap","std::marker::PhantomData","std::num::NonZeroU32","std::rc::Rc","std::num::NonZeroU8","std::num::NonZeroUsize","std::num::NonZeroIsize","std::sync::RwLock","std::collections::BTreeMap","std::string::String","std::collections::BTreeSet","std::num::NonZeroU64","std::collections::HashSet","std::cell::Cell","std::boxed::Box","std::net::SocketAddr","std::sync::atomic::AtomicU8","std::collections::Bound"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::cell::Cell","std::net::SocketAddr","std::sync::atomic::AtomicIsize","std::num::NonZeroIsize","std::collections::BinaryHeap","std::sync::Mutex","std::rc::Rc","std::path::PathBuf","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::boxed::Box","std::sync::atomic::AtomicU16","std::collections::HashMap","std::sync::atomic::AtomicI64","std::sync::Arc","std::num::NonZeroI16","std::ops::Range","std::collections::VecDeque","std::num::NonZeroI128","std::collections::Bound","std::num::NonZeroI32","std::result::Result","std::sync::atomic::AtomicU8","std::collections::BTreeSet","std::num::NonZeroU32","std::cell::RefCell","std::num::NonZeroI8","std::num::NonZeroU8","std::option::Option","std::num::NonZeroU128","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::ffi::CString","std::marker::PhantomData","std::net::SocketAddrV6","std::sync::atomic::AtomicUsize","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroU64","std::net::IpAddr","std::string::String","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI16","std::borrow::Cow","std::ops::RangeInclusive","std::sync::atomic::AtomicI32","std::vec::Vec","std::collections::BTreeMap","std::sync::RwLock","std::net::Ipv6Addr","std::net::Ipv4Addr","std::num::NonZeroI64","std::collections::HashSet","std::time::SystemTime"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicU32","std::num::NonZeroU128","std::path::PathBuf","std::collections::BinaryHeap","std::num::NonZeroU64","std::result::Result","std::sync::atomic::AtomicBool","std::num::NonZeroI16","std::vec::Vec","std::collections::Bound","std::net::Ipv6Addr","std::cell::RefCell","std::num::NonZeroIsize","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicI8","std::num::NonZeroU32","std::ops::Range","std::cell::Cell","std::marker::PhantomData","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::borrow::Cow","std::sync::Mutex","std::time::Duration","std::num::NonZeroU8","std::num::NonZeroI32","std::num::NonZeroI64","std::num::NonZeroU16","std::num::NonZeroUsize","std::boxed::Box","std::sync::Arc","std::option::Option","std::net::IpAddr","std::sync::RwLock","std::sync::atomic::AtomicI64","std::num::NonZeroI8","std::net::SocketAddrV4","std::collections::VecDeque","std::collections::HashMap","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicU8","std::time::SystemTime","std::string::String","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::net::SocketAddrV6","std::ops::RangeInclusive","std::collections::BTreeSet","std::rc::Rc","std::sync::atomic::AtomicUsize","std::net::Ipv4Addr","std::ffi::CString","std::num::NonZeroI128","std::sync::atomic::AtomicU16"]},"std::vec::Vec":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"],"T":["std::net::IpAddr","std::num::NonZeroU16","std::time::SystemTime","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::collections::BTreeSet","std::sync::atomic::AtomicU64","std::result::Result","std::string::String","std::vec::Vec","std::time::Duration","std::boxed::Box","std::cell::Cell","std::num::NonZeroUsize","std::num::NonZeroU8","std::option::Option","std::cell::RefCell","std::collections::HashSet","std::num::NonZeroI32","std::collections::Bound","std::borrow::Cow","std::sync::Mutex","std::sync::atomic::AtomicI8","std::ops::RangeInclusive","std::sync::atomic::AtomicU16","std::sync::Arc","std::net::Ipv6Addr","std::collections::VecDeque","std::sync::atomic::AtomicUsize","std::net::SocketAddrV4","std::num::NonZeroU128","std::sync::atomic::AtomicI32","std::net::Ipv4Addr","std::num::NonZeroI128","std::num::NonZeroI16","std::net::SocketAddrV6","std::num::NonZeroU64","std::num::NonZeroU32","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::collections::HashMap","std::num::NonZeroIsize","std::num::NonZeroI64","std::rc::Rc","std::sync::RwLock","std::collections::BinaryHeap","std::path::PathBuf","std::ops::Range","std::ffi::CString","std::sync::atomic::AtomicBool","std::collections::BTreeMap","std::sync::atomic::AtomicI64","std::marker::PhantomData","std::num::NonZeroI8"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::ops::RangeInclusive<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::ops::RangeInclusive<T>>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::ops::RangeInclusive<T>>::encode(p0, p1);
+<std::ops::RangeInclusive<T>>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for std::collections::Bound<T>>::encode
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::clone::Clone","config::internal::InternalEndianConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","config::internal::InternalLimitConfig","std::marker::Copy"]},"<T as std::borrow::ToOwned>":{"T":["std::marker::Sized","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalEndianConfig"],"I":["std::marker::Copy","std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig"],"L":["config::internal::InternalLimitConfig","std::clone::Clone","std::marker::Sized","std::marker::Copy"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for std::collections::Bound<T>>::encode":{"E":["enc::Encoder","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::marker::Sized","std::alloc::Allocator","std::clone::Clone"],"K":["std::cmp::Ord","de::BorrowDecode","enc::Encode","std::marker::Sized","de::Decode"],"V":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::clone::Clone","std::marker::Sized","std::alloc::Allocator"],"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode","std::cmp::Ord"]},"std::collections::BinaryHeap":{"T":["std::cmp::Ord","std::marker::Sized","de::BorrowDecode","enc::Encode","de::Decode"]},"std::collections::Bound":{"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashMap":{"K":["std::cmp::Eq","std::hash::Hash","de::BorrowDecode","enc::Encode","de::Decode","std::marker::Sized"],"S":["std::marker::Sized","std::hash::BuildHasher","std::default::Default"],"V":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]},"std::collections::HashSet":{"S":["std::hash::BuildHasher","std::marker::Sized","std::default::Default"],"T":["enc::Encode","de::Decode","std::hash::Hash","de::BorrowDecode","std::cmp::Eq","std::marker::Sized"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","std::marker::Sized","de::BorrowDecode","de::Decode"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["enc::Encode","std::marker::Sized","de::Decode","de::BorrowDecode"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["enc::Encode","de::Decode","de::BorrowDecode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["enc::Encode","de::Decode","std::marker::Sized","de::BorrowDecode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Fixint","config::BigEndian","config::LittleEndian","config::Limit","config::Configuration","config::NoLimit","config::Varint","std::clone::impls::<impl std::clone::Clone for &T>"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for std::collections::Bound<T>>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"T":["std::collections::Bound","std::sync::atomic::AtomicU16","std::sync::RwLock","std::collections::BTreeSet","std::boxed::Box","std::num::NonZeroU32","std::time::Duration","std::num::NonZeroU128","enc::impls::<impl enc::Encode for &'a T>","std::collections::HashSet","std::ffi::CString","std::path::PathBuf","std::sync::atomic::AtomicI16","std::sync::Arc","std::net::SocketAddrV6","std::num::NonZeroU8","std::collections::HashMap","std::borrow::Cow","std::sync::Mutex","std::num::NonZeroI64","std::cell::RefCell","std::option::Option","std::marker::PhantomData","std::num::NonZeroI8","std::sync::atomic::AtomicU32","std::num::NonZeroIsize","std::sync::atomic::AtomicIsize","std::ops::RangeInclusive","std::num::NonZeroU16","std::sync::atomic::AtomicBool","std::time::SystemTime","std::sync::atomic::AtomicI8","std::num::NonZeroUsize","std::sync::atomic::AtomicUsize","std::vec::Vec","std::net::IpAddr","std::net::Ipv4Addr","std::result::Result","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::ops::Range","std::rc::Rc","std::collections::BinaryHeap","std::net::SocketAddrV4","std::string::String","std::net::SocketAddr","std::net::Ipv6Addr","std::collections::VecDeque","std::num::NonZeroI32","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::num::NonZeroI16","std::collections::BTreeMap","std::sync::atomic::AtomicU8","std::cell::Cell","std::sync::atomic::AtomicI32"]},"features::impl_std::IoWriter":{"W":["std::io::Cursor<&mut [u8]>","std::io::StderrLock<'_>","std::sys::unix::stdio::Stderr","&std::process::ChildStdin","std::net::TcpStream","std::io::Sink","std::io::Cursor<&mut std::vec::Vec<u8, A>>","&std::io::Stderr","std::fs::File","&'a std::os::unix::net::UnixStream","std::io::Cursor<[u8; N]>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::boxed::Box<W>","&std::io::Sink","std::io::stdio::StderrRaw","std::io::LineWriter<W>","std::io::BufWriter<W>","&std::net::TcpStream","std::collections::VecDeque<u8, A>","std::io::stdio::StdoutRaw","std::io::BorrowedCursor<'a>","&std::io::Stdout","std::process::ChildStdin","&std::fs::File","std::sys::unix::stdio::Stdout","std::io::Stderr","std::vec::Vec<u8, A>","std::os::unix::net::UnixStream","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Stdout","std::io::impls::<impl std::io::Write for &mut W>","std::io::StdoutLock<'_>"]},"std::borrow::Cow":{"B":["<T as std::borrow::ToOwned>","std::path::Path","std::ffi::CStr","std::ffi::OsStr"]},"std::boxed::Box":{"A":["std::alloc::System","std::alloc::Global","<&A as std::alloc::Allocator>"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::System","std::alloc::Global"],"K":["std::net::SocketAddrV6","std::rc::Rc","std::num::NonZeroI32","std::num::NonZeroUsize","std::cell::RefCell","std::sync::Arc","std::string::String","std::time::SystemTime","std::cell::Cell","std::num::NonZeroI8","std::net::SocketAddrV4","std::num::NonZeroU128","std::num::NonZeroU64","std::option::Option","std::num::NonZeroU8","std::ffi::CString","std::marker::PhantomData","std::num::NonZeroU16","std::net::SocketAddr","std::net::IpAddr","std::net::Ipv6Addr","std::num::NonZeroI16"],"V":["std::marker::PhantomData","std::path::PathBuf","std::time::Duration","std::num::NonZeroU128","std::num::NonZeroI32","std::collections::Bound","std::string::String","std::sync::atomic::AtomicIsize","std::net::IpAddr","std::num::NonZeroI16","std::net::SocketAddrV6","std::sync::atomic::AtomicU32","std::num::NonZeroI64","std::option::Option","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::net::SocketAddrV4","std::ops::Range","std::net::Ipv6Addr","std::vec::Vec","std::num::NonZeroU8","std::ops::RangeInclusive","std::collections::VecDeque","std::collections::BTreeSet","std::result::Result","std::sync::atomic::AtomicU64","std::net::Ipv4Addr","std::sync::atomic::AtomicI16","std::collections::HashMap","std::collections::BTreeMap","std::sync::Arc","std::num::NonZeroU32","std::cell::RefCell","std::time::SystemTime","std::num::NonZeroI128","std::num::NonZeroUsize","std::num::NonZeroIsize","std::sync::atomic::AtomicUsize","std::borrow::Cow","std::sync::Mutex","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicU8","std::collections::HashSet","std::sync::atomic::AtomicU16","std::cell::Cell","std::sync::atomic::AtomicI32","std::boxed::Box","std::num::NonZeroI8","std::sync::atomic::AtomicI64","std::num::NonZeroU64","std::sync::RwLock","std::ffi::CString","std::net::SocketAddr","std::rc::Rc","std::num::NonZeroU16"]},"std::collections::BTreeSet":{"A":["std::alloc::System","std::alloc::Global"],"T":["std::num::NonZeroU64","std::sync::Arc","std::num::NonZeroU16","std::net::SocketAddrV6","std::net::SocketAddr","std::num::NonZeroIsize","std::net::SocketAddrV4","std::num::NonZeroU32","std::time::Duration","std::num::NonZeroI128","std::ffi::CString","std::rc::Rc","std::num::NonZeroI32","std::num::NonZeroI8","std::num::NonZeroI64","std::num::NonZeroU128","std::net::Ipv4Addr","std::marker::PhantomData","std::cell::RefCell","std::option::Option"]},"std::collections::BinaryHeap":{"T":["std::cell::Cell","std::num::NonZeroU128","std::num::NonZeroI8","std::net::Ipv4Addr","std::marker::PhantomData","std::time::Duration","std::net::SocketAddrV6","std::cell::RefCell","std::net::SocketAddr","std::net::Ipv6Addr","std::num::NonZeroU16","std::num::NonZeroI128","std::num::NonZeroI32","std::time::SystemTime","std::path::PathBuf","std::num::NonZeroIsize","std::sync::Arc","std::num::NonZeroU64","std::string::String","std::rc::Rc"]},"std::collections::Bound":{"T":["std::marker::PhantomData","std::sync::atomic::AtomicUsize","std::ffi::CString","std::time::Duration","std::sync::atomic::AtomicI64","std::num::NonZeroU8","std::option::Option","std::sync::atomic::AtomicU64","std::net::IpAddr","std::cell::Cell","std::collections::HashSet","std::sync::Mutex","std::boxed::Box","std::net::Ipv4Addr","std::collections::Bound","std::sync::atomic::AtomicIsize","std::sync::RwLock","std::result::Result","std::collections::BTreeSet","std::path::PathBuf","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::num::NonZeroU32","std::collections::BTreeMap","std::time::SystemTime","std::sync::atomic::AtomicI16","std::net::Ipv6Addr","std::num::NonZeroU16","std::ops::Range","std::num::NonZeroI16","std::num::NonZeroI8","std::sync::atomic::AtomicU8","std::net::SocketAddrV6","std::num::NonZeroI32","std::cell::RefCell","std::collections::HashMap","std::net::SocketAddrV4","std::borrow::Cow","std::collections::BinaryHeap","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI8","std::sync::Arc","std::collections::VecDeque","std::num::NonZeroI128","std::sync::atomic::AtomicI32","std::num::NonZeroU128","std::num::NonZeroI64","std::num::NonZeroUsize","std::ops::RangeInclusive","std::sync::atomic::AtomicBool","std::string::String","std::net::SocketAddr","std::num::NonZeroIsize","std::rc::Rc","std::vec::Vec"]},"std::collections::HashMap":{"K":["std::num::NonZeroU64","std::net::SocketAddr","std::net::Ipv4Addr","std::num::NonZeroU32","std::num::NonZeroI8","std::num::NonZeroU128","std::option::Option","std::net::IpAddr","std::num::NonZeroU8","std::rc::Rc","std::time::SystemTime","std::path::PathBuf","std::num::NonZeroIsize","std::time::Duration","std::sync::Arc","std::ffi::CString"],"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"V":["std::ffi::CString","std::num::NonZeroU128","std::string::String","std::num::NonZeroI16","std::collections::BTreeSet","std::num::NonZeroI64","std::time::Duration","std::num::NonZeroI8","std::collections::HashMap","std::vec::Vec","std::collections::Bound","std::net::IpAddr","std::marker::PhantomData","std::ops::RangeInclusive","std::sync::atomic::AtomicI64","std::sync::Arc","std::sync::Mutex","std::net::Ipv4Addr","std::ops::Range","std::sync::atomic::AtomicU32","std::num::NonZeroUsize","std::sync::atomic::AtomicIsize","std::net::Ipv6Addr","std::num::NonZeroI32","std::option::Option","std::cell::RefCell","std::collections::HashSet","std::rc::Rc","std::collections::VecDeque","std::boxed::Box","std::time::SystemTime","std::collections::BinaryHeap","std::borrow::Cow","std::num::NonZeroU64","std::num::NonZeroU16","std::sync::atomic::AtomicI32","std::collections::BTreeMap","std::num::NonZeroU32","std::net::SocketAddrV4","std::sync::RwLock","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::cell::Cell","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI8","std::num::NonZeroI128","std::sync::atomic::AtomicU64","std::result::Result","std::num::NonZeroU8","std::net::SocketAddrV6","std::num::NonZeroIsize","std::path::PathBuf","std::sync::atomic::AtomicU8"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::num::NonZeroI128","std::net::Ipv4Addr","std::num::NonZeroU16","std::net::Ipv6Addr","std::net::SocketAddrV6","std::time::Duration","std::net::SocketAddrV4","std::net::SocketAddr","std::num::NonZeroI64","std::num::NonZeroI16","std::num::NonZeroUsize","std::rc::Rc","std::time::SystemTime","std::sync::Arc","std::num::NonZeroU64"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::net::Ipv4Addr","std::boxed::Box","std::sync::atomic::AtomicI8","std::time::SystemTime","std::string::String","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::cell::RefCell","std::num::NonZeroU8","std::num::NonZeroU64","std::num::NonZeroU32","std::sync::Arc","std::ops::Range","std::result::Result","std::ops::RangeInclusive","std::vec::Vec","std::collections::HashSet","std::collections::BTreeMap","std::sync::Mutex","std::option::Option","std::num::NonZeroI32","std::sync::atomic::AtomicU64","std::num::NonZeroI16","std::net::SocketAddr","std::rc::Rc","std::num::NonZeroU128","std::num::NonZeroI64","std::collections::VecDeque","std::time::Duration","std::marker::PhantomData","std::sync::atomic::AtomicU32","std::collections::Bound","std::net::Ipv6Addr","std::num::NonZeroIsize","std::sync::RwLock","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicI64","std::path::PathBuf","std::sync::atomic::AtomicI32","std::num::NonZeroUsize","std::collections::HashMap","std::net::IpAddr","std::sync::atomic::AtomicUsize","std::net::SocketAddrV6","std::ffi::CString","std::cell::Cell","std::num::NonZeroI128","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::collections::BinaryHeap","std::sync::atomic::AtomicBool","std::num::NonZeroI8","std::borrow::Cow","std::net::SocketAddrV4"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::marker::PhantomData","std::num::NonZeroI8","std::cell::Cell","std::sync::atomic::AtomicU16","std::collections::BTreeMap","std::collections::Bound","std::option::Option","std::sync::atomic::AtomicI32","std::ops::RangeInclusive","std::collections::BinaryHeap","std::sync::RwLock","std::collections::BTreeSet","std::net::IpAddr","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::borrow::Cow","std::num::NonZeroUsize","std::collections::VecDeque","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicI16","std::net::SocketAddrV4","std::num::NonZeroI128","std::sync::atomic::AtomicUsize","std::result::Result","std::sync::Mutex","std::sync::atomic::AtomicBool","std::num::NonZeroIsize","std::collections::HashMap","std::num::NonZeroU16","std::sync::atomic::AtomicU32","std::cell::RefCell","std::num::NonZeroU32","std::collections::HashSet","std::time::SystemTime","std::path::PathBuf","std::vec::Vec","std::num::NonZeroI32","std::string::String","std::num::NonZeroI16","std::rc::Rc","std::sync::atomic::AtomicU64","std::num::NonZeroU128","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::sync::atomic::AtomicU8","std::net::SocketAddr","std::time::Duration","std::num::NonZeroU8","std::net::Ipv6Addr","std::boxed::Box","std::num::NonZeroU64","std::sync::Arc","std::ops::Range","std::net::Ipv4Addr","std::ffi::CString"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::net::SocketAddrV4","std::vec::Vec","std::sync::atomic::AtomicU64","std::time::SystemTime","std::collections::Bound","std::rc::Rc","std::collections::HashSet","std::sync::atomic::AtomicUsize","std::net::Ipv6Addr","std::sync::RwLock","std::option::Option","std::sync::Arc","std::sync::atomic::AtomicI64","std::num::NonZeroIsize","std::num::NonZeroU8","std::sync::atomic::AtomicU32","std::cell::Cell","std::collections::BTreeMap","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::num::NonZeroI32","std::ops::RangeInclusive","std::net::Ipv4Addr","std::path::PathBuf","std::sync::Mutex","std::net::SocketAddrV6","std::num::NonZeroUsize","std::sync::atomic::AtomicI8","std::result::Result","std::collections::VecDeque","std::net::SocketAddr","std::boxed::Box","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicIsize","std::num::NonZeroU128","std::ffi::CString","std::num::NonZeroU32","std::sync::atomic::AtomicU8","std::num::NonZeroI128","std::time::Duration","std::sync::atomic::AtomicI32","std::collections::BTreeSet","std::borrow::Cow","std::collections::HashMap","std::cell::RefCell","std::num::NonZeroI16","std::num::NonZeroU16","std::string::String","std::num::NonZeroI8","std::num::NonZeroI64","std::sync::atomic::AtomicU16","std::num::NonZeroU64","std::net::IpAddr","std::marker::PhantomData","std::ops::Range"]},"std::vec::Vec":{"A":["std::alloc::System","<&A as std::alloc::Allocator>","std::alloc::Global"],"T":["std::sync::atomic::AtomicU64","std::cell::RefCell","std::collections::HashSet","std::net::SocketAddrV4","std::option::Option","std::num::NonZeroU64","std::borrow::Cow","std::sync::Mutex","std::num::NonZeroU32","std::collections::BTreeMap","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU16","std::num::NonZeroI64","std::collections::VecDeque","std::sync::atomic::AtomicBool","std::net::SocketAddr","std::collections::BinaryHeap","std::sync::atomic::AtomicIsize","std::marker::PhantomData","std::string::String","std::rc::Rc","std::num::NonZeroI16","std::num::NonZeroI128","std::net::IpAddr","std::path::PathBuf","std::net::SocketAddrV6","std::num::NonZeroI8","std::cell::Cell","std::sync::RwLock","std::ops::Range","std::result::Result","std::net::Ipv4Addr","std::time::SystemTime","std::num::NonZeroU16","std::time::Duration","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI16","std::collections::Bound","std::sync::atomic::AtomicI8","std::num::NonZeroU128","std::sync::Arc","std::collections::BTreeSet","std::vec::Vec","std::sync::atomic::AtomicU32","std::ffi::CString","std::num::NonZeroIsize","std::collections::HashMap","std::num::NonZeroI32","std::ops::RangeInclusive","std::num::NonZeroU8","std::net::Ipv6Addr","std::boxed::Box","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::num::NonZeroUsize"]}}
let mut p0 = & MaybeUninit::uninit().assume_init(); // std::collections::Bound<T>
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for std::collections::Bound<T>>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for std::collections::Bound<T>>::encode(p0, p1);
+<std::collections::Bound<T>>::encode(p0, p1);
-----------------
src/enc/impls.rs enc::impls::<impl enc::Encode for &'a T>::encode
'a
deps:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Copy","config::internal::InternalIntEncodingConfig","config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"<T as std::borrow::ToOwned>":{"T":["std::clone::Clone","std::marker::Sized"]},"config::Configuration":{"E":["config::internal::InternalEndianConfig","std::marker::Sized","std::clone::Clone","std::marker::Copy"],"I":["std::marker::Sized","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy"],"L":["config::internal::InternalLimitConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["config::Config","std::marker::Sized"],"W":["enc::write::Writer","std::marker::Sized"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for &'a T>::encode":{"E":["enc::Encoder","std::marker::Sized"],"T":["enc::Encode"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::borrow::Cow":{"B":["std::borrow::ToOwned"]},"std::boxed::Box":{"A":["std::alloc::Allocator","std::marker::Sized"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Allocator","std::clone::Clone","std::marker::Sized"],"K":["std::marker::Sized","de::Decode","enc::Encode","de::BorrowDecode","std::cmp::Ord"],"V":["std::marker::Sized","de::Decode","de::BorrowDecode","enc::Encode"]},"std::collections::BTreeSet":{"A":["std::alloc::Allocator","std::marker::Sized","std::clone::Clone"],"T":["std::marker::Sized","de::Decode","de::BorrowDecode","std::cmp::Ord","enc::Encode"]},"std::collections::BinaryHeap":{"T":["std::marker::Sized","de::Decode","std::cmp::Ord","enc::Encode","de::BorrowDecode"]},"std::collections::Bound":{"T":["de::BorrowDecode","de::Decode","std::marker::Sized","enc::Encode"]},"std::collections::HashMap":{"K":["enc::Encode","std::cmp::Eq","de::Decode","std::marker::Sized","std::hash::Hash","de::BorrowDecode"],"S":["std::marker::Sized","std::default::Default","std::hash::BuildHasher"],"V":["de::BorrowDecode","std::marker::Sized","enc::Encode","de::Decode"]},"std::collections::HashSet":{"S":["std::default::Default","std::marker::Sized","std::hash::BuildHasher"],"T":["de::BorrowDecode","std::hash::Hash","std::cmp::Eq","enc::Encode","std::marker::Sized","de::Decode"]},"std::collections::VecDeque":{"A":["std::alloc::Allocator","std::marker::Sized"],"T":["de::BorrowDecode","de::Decode","enc::Encode","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["std::marker::Sized"]},"std::ops::RangeInclusive":{"Idx":["std::marker::Sized"]},"std::option::Option":{"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::result::Result":{"E":["std::marker::Sized"],"T":["de::Decode","de::BorrowDecode","enc::Encode","std::marker::Sized"]},"std::vec::Vec":{"A":["std::marker::Sized","std::alloc::Allocator"],"T":["de::Decode","de::BorrowDecode","std::marker::Sized","enc::Encode"]}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&A as std::alloc::Allocator>":{},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"<T as std::borrow::ToOwned>":{"T":["config::Limit","config::BigEndian","config::Fixint","config::Configuration","config::Varint","std::clone::impls::<impl std::clone::Clone for *mut T>","config::NoLimit","config::LittleEndian"]},"config::Configuration":{"E":["config::BigEndian","config::Configuration","config::LittleEndian"],"I":["config::Configuration","config::Fixint","config::Varint"],"L":["config::Configuration","config::Limit","config::NoLimit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SliceWriter","features::impl_std::IoWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter"]},"enc::impls::<impl enc::Encode for &'a T>":{},"enc::impls::<impl enc::Encode for &'a T>::encode":{"E":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"],"T":["std::net::SocketAddr","std::cell::RefCell","std::sync::atomic::AtomicI64","std::num::NonZeroI32","std::num::NonZeroU128","std::net::Ipv4Addr","std::marker::PhantomData","std::result::Result","std::sync::atomic::AtomicI16","std::vec::Vec","std::collections::HashSet","std::num::NonZeroU64","std::collections::BTreeMap","std::string::String","std::time::Duration","std::net::IpAddr","std::num::NonZeroI64","std::num::NonZeroU8","std::num::NonZeroIsize","std::sync::atomic::AtomicU64","std::num::NonZeroI128","std::collections::BTreeSet","std::borrow::Cow","std::sync::atomic::AtomicU32","std::option::Option","std::num::NonZeroI8","std::num::NonZeroU32","std::num::NonZeroUsize","std::sync::atomic::AtomicBool","std::ops::Range","std::time::SystemTime","enc::impls::<impl enc::Encode for &'a T>","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::net::SocketAddrV6","std::num::NonZeroU16","std::net::Ipv6Addr","std::sync::Arc","std::sync::Mutex","std::num::NonZeroI16","std::ffi::CString","std::collections::VecDeque","std::sync::atomic::AtomicU8","std::collections::Bound","std::collections::HashMap","std::path::PathBuf","std::sync::atomic::AtomicI32","std::boxed::Box","std::cell::Cell","std::sync::RwLock","std::net::SocketAddrV4","std::rc::Rc","std::sync::atomic::AtomicU16","std::sync::atomic::AtomicUsize","std::ops::RangeInclusive"]},"features::impl_std::IoWriter":{"W":["std::io::Sink","std::fs::File","&std::process::ChildStdin","std::collections::VecDeque<u8, A>","std::io::stdio::StdoutRaw","&std::net::TcpStream","&'a std::os::unix::net::UnixStream","std::io::Cursor<[u8; N]>","&std::io::Stdout","std::io::stdio::StderrRaw","std::io::BorrowedCursor<'a>","std::process::ChildStdin","std::io::buffered::linewritershim::LineWriterShim<'a, W>","&std::io::Sink","std::io::impls::<impl std::io::Write for &mut W>","std::io::Stderr","std::io::StdoutLock<'_>","std::net::TcpStream","std::io::Stdout","std::boxed::Box<W>","std::sys::unix::stdio::Stderr","std::io::StderrLock<'_>","&std::fs::File","std::io::LineWriter<W>","&std::io::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::os::unix::net::UnixStream","std::io::BufWriter<W>","std::vec::Vec<u8, A>","std::io::Cursor<&mut [u8]>","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<std::vec::Vec<u8, A>>","std::sys::unix::stdio::Stdout"]},"std::borrow::Cow":{"B":["std::path::Path","<T as std::borrow::ToOwned>","std::ffi::OsStr","std::ffi::CStr"]},"std::boxed::Box":{"A":["<&A as std::alloc::Allocator>","std::alloc::System","std::alloc::Global"]},"std::clone::impls::<impl std::clone::Clone for &T>":{},"std::clone::impls::<impl std::clone::Clone for &mut T>":{},"std::clone::impls::<impl std::clone::Clone for *const T>":{},"std::clone::impls::<impl std::clone::Clone for *mut T>":{},"std::collections::BTreeMap":{"A":["std::alloc::Global","std::alloc::System"],"K":["std::net::Ipv4Addr","std::path::PathBuf","std::net::SocketAddrV4","std::time::SystemTime","std::num::NonZeroU8","std::ffi::CString","std::num::NonZeroI64","std::time::Duration","std::net::Ipv6Addr","std::rc::Rc","std::num::NonZeroU64","std::num::NonZeroU16","std::num::NonZeroI32","std::string::String","std::num::NonZeroU128","std::net::IpAddr","std::net::SocketAddr","std::cell::Cell","std::num::NonZeroI16","std::marker::PhantomData","std::net::SocketAddrV6","std::num::NonZeroU32","std::num::NonZeroUsize"],"V":["std::time::Duration","std::rc::Rc","std::boxed::Box","std::sync::atomic::AtomicBool","std::sync::atomic::AtomicIsize","std::num::NonZeroI32","std::num::NonZeroU128","std::collections::VecDeque","std::ops::Range","std::collections::BTreeSet","std::sync::Mutex","std::sync::RwLock","std::sync::atomic::AtomicU16","std::ops::RangeInclusive","std::net::Ipv6Addr","std::borrow::Cow","std::net::SocketAddrV6","std::num::NonZeroI64","std::result::Result","std::ffi::CString","std::sync::Arc","std::sync::atomic::AtomicU64","std::marker::PhantomData","std::num::NonZeroIsize","std::string::String","std::sync::atomic::AtomicI32","std::num::NonZeroU8","std::num::NonZeroU32","std::path::PathBuf","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicUsize","std::net::SocketAddr","std::num::NonZeroU64","std::cell::Cell","std::option::Option","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::collections::BinaryHeap","std::num::NonZeroUsize","std::collections::HashMap","std::net::SocketAddrV4","std::net::IpAddr","std::num::NonZeroI16","std::collections::BTreeMap","std::sync::atomic::AtomicI8","std::num::NonZeroI8","std::collections::Bound","std::collections::HashSet","std::time::SystemTime","std::cell::RefCell","std::net::Ipv4Addr","std::vec::Vec","std::num::NonZeroU16","std::sync::atomic::AtomicU8","std::num::NonZeroI128"]},"std::collections::BTreeSet":{"A":["std::alloc::Global","std::alloc::System"],"T":["std::option::Option","std::net::IpAddr","std::num::NonZeroI128","std::cell::Cell","std::rc::Rc","std::num::NonZeroIsize","std::num::NonZeroI32","std::string::String","std::time::SystemTime","std::num::NonZeroU16","std::num::NonZeroI16","std::net::SocketAddrV4","std::net::Ipv6Addr","std::net::SocketAddr","std::num::NonZeroU64","std::ffi::CString","std::sync::Arc","std::path::PathBuf","std::num::NonZeroU8","std::num::NonZeroI64"]},"std::collections::BinaryHeap":{"T":["std::net::SocketAddrV4","std::num::NonZeroI16","std::path::PathBuf","std::num::NonZeroU64","std::num::NonZeroI64","std::net::Ipv6Addr","std::num::NonZeroU16","std::net::Ipv4Addr","std::net::SocketAddr","std::num::NonZeroI8","std::string::String","std::sync::Arc","std::num::NonZeroIsize","std::net::SocketAddrV6","std::rc::Rc","std::num::NonZeroU32","std::ffi::CString","std::cell::Cell","std::num::NonZeroU8","std::num::NonZeroU128","std::num::NonZeroI32","std::num::NonZeroUsize","std::net::IpAddr","std::num::NonZeroI128"]},"std::collections::Bound":{"T":["std::sync::atomic::AtomicIsize","std::net::SocketAddr","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicI64","std::path::PathBuf","std::sync::atomic::AtomicI8","std::collections::VecDeque","std::ops::RangeInclusive","std::num::NonZeroI16","std::net::IpAddr","std::num::NonZeroIsize","std::num::NonZeroUsize","std::net::Ipv4Addr","std::num::NonZeroU64","std::ops::Range","std::collections::Bound","std::boxed::Box","std::collections::BinaryHeap","std::time::Duration","std::time::SystemTime","std::sync::atomic::AtomicU32","std::sync::Mutex","std::collections::BTreeSet","std::collections::BTreeMap","std::option::Option","std::sync::atomic::AtomicI16","std::num::NonZeroI8","std::num::NonZeroI128","std::sync::atomic::AtomicBool","std::cell::RefCell","std::sync::atomic::AtomicU16","std::collections::HashMap","std::net::SocketAddrV4","std::num::NonZeroU32","std::marker::PhantomData","std::ffi::CString","std::sync::atomic::AtomicI32","std::collections::HashSet","std::vec::Vec","std::result::Result","std::rc::Rc","std::sync::Arc","std::net::SocketAddrV6","std::sync::atomic::AtomicU8","std::cell::Cell","std::num::NonZeroU16","std::sync::atomic::AtomicU64","std::sync::RwLock","std::num::NonZeroU128","std::num::NonZeroU8","std::net::Ipv6Addr","std::num::NonZeroI32","std::string::String","std::borrow::Cow","std::num::NonZeroI64"]},"std::collections::HashMap":{"K":["std::option::Option","std::num::NonZeroI16","std::string::String","std::num::NonZeroU128","std::num::NonZeroU32","std::net::SocketAddrV4","std::net::Ipv6Addr","std::net::IpAddr","std::num::NonZeroI8","std::sync::Arc","std::ffi::CString","std::num::NonZeroU8","std::num::NonZeroI64","std::net::SocketAddrV6","std::num::NonZeroUsize","std::rc::Rc"],"S":["std::hash::BuildHasherDefault<H>","std::collections::hash_map::RandomState"],"V":["std::collections::BTreeSet","std::net::IpAddr","std::num::NonZeroU16","std::sync::atomic::AtomicU16","std::collections::Bound","std::result::Result","std::num::NonZeroIsize","std::num::NonZeroU64","std::sync::atomic::AtomicU32","std::time::Duration","std::net::SocketAddrV4","std::num::NonZeroI128","std::num::NonZeroU32","std::sync::Mutex","std::net::SocketAddr","std::path::PathBuf","std::num::NonZeroI64","std::sync::atomic::AtomicIsize","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicUsize","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI64","std::collections::HashMap","std::sync::RwLock","std::ops::RangeInclusive","std::sync::Arc","std::net::Ipv4Addr","std::collections::BTreeMap","std::collections::HashSet","std::num::NonZeroU8","std::num::NonZeroI8","std::sync::atomic::AtomicBool","std::net::SocketAddrV6","std::sync::atomic::AtomicI8","std::time::SystemTime","std::ops::Range","std::num::NonZeroUsize","std::option::Option","std::sync::atomic::AtomicU64","std::rc::Rc","std::vec::Vec","std::cell::RefCell","std::net::Ipv6Addr","std::num::NonZeroI16","std::string::String","std::collections::BinaryHeap","std::ffi::CString","std::marker::PhantomData","std::boxed::Box","std::sync::atomic::AtomicI32","std::collections::VecDeque","std::num::NonZeroU128","std::borrow::Cow","std::num::NonZeroI32","std::cell::Cell"]},"std::collections::HashSet":{"S":["std::collections::hash_map::RandomState","std::hash::BuildHasherDefault<H>"],"T":["std::option::Option","std::num::NonZeroUsize","std::num::NonZeroI16","std::num::NonZeroU16","std::num::NonZeroI32","std::num::NonZeroU128","std::string::String","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroI128","std::rc::Rc","std::time::SystemTime","std::num::NonZeroU32","std::net::IpAddr","std::num::NonZeroIsize","std::net::SocketAddr"]},"std::collections::VecDeque":{"A":["<&A as std::alloc::Allocator>","std::alloc::Global","std::alloc::System"],"T":["std::num::NonZeroI64","std::path::PathBuf","std::num::NonZeroU32","std::result::Result","std::sync::atomic::AtomicI8","std::option::Option","std::sync::Mutex","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::ops::RangeInclusive","std::num::NonZeroI8","std::marker::PhantomData","std::collections::HashMap","std::num::NonZeroI128","std::time::Duration","std::sync::atomic::AtomicU32","std::cell::RefCell","std::sync::atomic::AtomicIsize","std::net::Ipv4Addr","std::net::SocketAddrV6","std::num::NonZeroU8","std::num::NonZeroU128","std::num::NonZeroU64","std::sync::atomic::AtomicI32","std::net::SocketAddrV4","std::rc::Rc","std::num::NonZeroI16","std::ffi::CString","std::ops::Range","std::sync::atomic::AtomicBool","std::collections::BinaryHeap","std::cell::Cell","std::vec::Vec","std::sync::atomic::AtomicUsize","std::boxed::Box","std::net::Ipv6Addr","std::borrow::Cow","std::string::String","std::collections::VecDeque","std::sync::atomic::AtomicU16","std::sync::Arc","std::sync::atomic::AtomicU8","std::collections::Bound","std::num::NonZeroU16","std::collections::BTreeSet","std::sync::atomic::AtomicI16","std::collections::BTreeMap","std::sync::RwLock","std::collections::HashSet","std::num::NonZeroI32","std::net::SocketAddr","std::sync::atomic::AtomicU64","std::net::IpAddr","std::time::SystemTime","std::num::NonZeroIsize"]},"std::io::impls::<impl std::io::Write for &mut W>":{},"std::ops::Range":{"Idx":["RUG_ANY"]},"std::ops::RangeInclusive":{"Idx":["RUG_ANY"]},"std::option::Option":{"T":["std::boxed::Box","std::sync::atomic::AtomicI64","std::num::NonZeroUsize","std::collections::HashMap","std::num::NonZeroI16","std::marker::PhantomData","std::time::SystemTime","std::collections::HashSet","std::ops::RangeInclusive","std::num::NonZeroI128","std::net::SocketAddrV6","std::num::NonZeroI64","std::sync::atomic::AtomicBool","std::cell::RefCell","std::sync::Arc","std::borrow::Cow","std::sync::atomic::AtomicIsize","std::result::Result","std::collections::Bound","std::vec::Vec","std::collections::BTreeSet","std::net::Ipv6Addr","std::sync::atomic::AtomicU64","std::num::NonZeroI8","std::num::NonZeroU128","std::net::SocketAddrV4","std::collections::VecDeque","std::path::PathBuf","std::num::NonZeroU64","std::net::SocketAddr","std::num::NonZeroIsize","std::ffi::CString","std::collections::BTreeMap","std::sync::atomic::AtomicU16","std::num::NonZeroU32","std::option::Option","std::net::Ipv4Addr","std::time::Duration","std::sync::atomic::AtomicI32","std::sync::atomic::AtomicU32","std::sync::Mutex","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::rc::Rc","std::num::NonZeroI32","std::net::IpAddr","std::num::NonZeroU16","std::string::String","std::cell::Cell","std::sync::atomic::AtomicI16","std::num::NonZeroU8","std::collections::BinaryHeap","std::ops::Range","std::sync::atomic::AtomicU8","std::sync::atomic::AtomicI8"]},"std::result::Result":{"E":["RUG_ANY"],"T":["std::sync::atomic::AtomicIsize","std::num::NonZeroUsize","std::net::SocketAddrV4","std::path::PathBuf","std::time::Duration","std::num::NonZeroU32","std::net::SocketAddrV6","std::string::String","std::num::NonZeroIsize","std::num::NonZeroU16","std::collections::HashSet","std::num::NonZeroI32","std::sync::atomic::AtomicI8","std::rc::Rc","std::num::NonZeroU128","std::collections::Bound","std::ops::Range","std::collections::BinaryHeap","std::num::NonZeroI64","std::num::NonZeroI8","std::cell::Cell","std::vec::Vec","std::collections::HashMap","std::marker::PhantomData","std::sync::atomic::AtomicI16","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicI32","std::cell::RefCell","std::num::NonZeroU64","std::sync::atomic::AtomicUsize","std::option::Option","std::sync::atomic::AtomicU64","std::sync::atomic::AtomicBool","std::time::SystemTime","std::sync::atomic::AtomicU8","std::net::Ipv6Addr","std::net::Ipv4Addr","std::collections::BTreeSet","std::sync::atomic::AtomicU16","std::num::NonZeroI16","std::result::Result","std::borrow::Cow","std::sync::atomic::AtomicI64","std::sync::RwLock","std::collections::VecDeque","std::net::SocketAddr","std::ops::RangeInclusive","std::boxed::Box","std::sync::Mutex","std::net::IpAddr","std::collections::BTreeMap","std::num::NonZeroU8","std::sync::Arc","std::ffi::CString","std::num::NonZeroI128"]},"std::vec::Vec":{"A":["std::alloc::Global","<&A as std::alloc::Allocator>","std::alloc::System"],"T":["std::sync::Mutex","std::sync::atomic::AtomicI32","std::num::NonZeroU64","std::cell::RefCell","std::sync::atomic::AtomicBool","std::num::NonZeroU16","std::sync::atomic::AtomicI8","std::collections::BinaryHeap","std::collections::BTreeMap","std::sync::Arc","std::cell::Cell","std::result::Result","std::num::NonZeroU128","std::vec::Vec","std::num::NonZeroIsize","std::borrow::Cow","std::sync::atomic::AtomicI16","std::collections::BTreeSet","std::time::SystemTime","std::sync::atomic::AtomicU16","std::collections::HashMap","std::net::Ipv6Addr","std::net::SocketAddrV4","std::collections::VecDeque","std::num::NonZeroI64","std::net::SocketAddrV6","std::ops::RangeInclusive","std::num::NonZeroI8","std::ops::Range","std::rc::Rc","std::num::NonZeroU8","std::net::Ipv4Addr","std::sync::atomic::AtomicUsize","std::sync::RwLock","std::sync::atomic::AtomicI64","std::sync::atomic::AtomicU64","std::collections::Bound","std::collections::HashSet","std::sync::atomic::AtomicIsize","std::num::NonZeroI128","std::num::NonZeroI32","std::num::NonZeroU32","std::net::IpAddr","std::option::Option","std::string::String","std::num::NonZeroUsize","std::ffi::CString","std::path::PathBuf","std::time::Duration","std::sync::atomic::AtomicU32","std::sync::atomic::AtomicU8","std::marker::PhantomData","std::num::NonZeroI16","std::boxed::Box","std::net::SocketAddr"]}}
let mut p0 = & & MaybeUninit::uninit().assume_init(); // T
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // E
+p0.encode(p1);
+enc::impls::<impl enc::Encode for &'a T>::encode(p0, p1);
+crate::enc::impls::<impl enc::Encode for &'a T>::encode(p0, p1);
+<&'a T>::encode(p0, p1);
-----------------
src/enc/write.rs <&mut T as enc::write::Writer>::write
deps:{"<&mut T as enc::write::Writer>":{},"<&mut T as enc::write::Writer>::write":{"T":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&mut T as enc::write::Writer>":{},"<&mut T as enc::write::Writer>::write":{"T":["enc::write::SliceWriter","enc::write::SizeWriter","<&mut T as enc::write::Writer>","features::impl_alloc::VecWriter","features::impl_std::IoWriter"]},"features::impl_std::IoWriter":{"W":["&std::io::Stderr","std::collections::VecDeque<u8, A>","std::io::StderrLock<'_>","&std::io::Sink","std::process::ChildStdin","std::io::LineWriter<W>","std::io::BorrowedCursor<'a>","std::io::Cursor<[u8; N]>","std::sys::unix::stdio::Stderr","std::io::impls::<impl std::io::Write for &mut W>","std::io::Cursor<std::boxed::Box<[u8], A>>","&std::net::TcpStream","std::boxed::Box<W>","&std::process::ChildStdin","std::os::unix::net::UnixStream","std::io::BufWriter<W>","std::io::StdoutLock<'_>","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::Cursor<std::vec::Vec<u8, A>>","std::vec::Vec<u8, A>","std::io::stdio::StderrRaw","std::io::stdio::StdoutRaw","std::io::Cursor<&mut [u8]>","std::sys::unix::stdio::Stdout","std::io::Stderr","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::net::TcpStream","std::io::Sink","std::fs::File","&std::io::Stdout","&'a std::os::unix::net::UnixStream","std::io::Stdout","&std::fs::File"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = &mut  &mut MaybeUninit::uninit().assume_init(); // T
let mut p1 = [0u8,0,0].as_mut_slice(); // None+&[u8]
+p0.write(p1);
+<&mut T as enc::write::Writer>::write(p0, p1);
+crate::<&mut T as enc::write::Writer>::write(p0, p1);
+<&mut T>::write(p0, p1);
-----------------
src/enc/write.rs enc::write::SliceWriter::<'storage>::new
'storage
deps:{}
candidates:{}
let mut p0 = &mut [0u8].as_mut_slice(); // None+[u8]
+enc::write::SliceWriter::<'storage>::new(p0);
+crate::enc::write::SliceWriter::<'storage>::new(p0);
+<enc::write::SliceWriter<'storage>>::new(p0);
-----------------
src/enc/write.rs enc::write::SliceWriter::<'storage>::bytes_written
'storage
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // enc::write::SliceWriter<'storage>
+p0.bytes_written();
+enc::write::SliceWriter::<'storage>::bytes_written(p0);
+crate::enc::write::SliceWriter::<'storage>::bytes_written(p0);
+<enc::write::SliceWriter<'storage>>::bytes_written(p0);
-----------------
src/enc/write.rs <enc::write::SliceWriter<'storage> as enc::write::Writer>::write
'storage
deps:{}
candidates:{}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // enc::write::SliceWriter<'storage>
let mut p1 = [0u8,0,0].as_mut_slice(); // None+&[u8]
+p0.write(p1);
+<enc::write::SliceWriter<'storage> as enc::write::Writer>::write(p0, p1);
+crate::<enc::write::SliceWriter<'storage> as enc::write::Writer>::write(p0, p1);
+<enc::write::SliceWriter<'storage>>::write(p0, p1);
-----------------
src/enc/write.rs <enc::write::SizeWriter as std::default::Default>::default
deps:{}
candidates:{}
+<enc::write::SizeWriter as std::default::Default>::default();
+crate::<enc::write::SizeWriter as std::default::Default>::default();
+<enc::write::SizeWriter>::default();
-----------------
src/enc/write.rs <enc::write::SizeWriter as enc::write::Writer>::write
deps:{}
candidates:{}
let mut p0 = &mut  MaybeUninit::uninit().assume_init(); // enc::write::SizeWriter
let mut p1 = [0u8,0,0].as_mut_slice(); // None+&[u8]
+p0.write(p1);
+<enc::write::SizeWriter as enc::write::Writer>::write(p0, p1);
+crate::<enc::write::SizeWriter as enc::write::Writer>::write(p0, p1);
+<enc::write::SizeWriter>::write(p0, p1);
-----------------
src/enc/mod.rs <&'a mut T as enc::Encoder>::writer
'a
deps:{"<&'a mut T as enc::Encoder>":{},"<&'a mut T as enc::Encoder>::writer":{"T":["std::marker::Sized","enc::Encoder"]},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::internal::InternalEndianConfig","config::internal::InternalLimitConfig","config::internal::InternalIntEncodingConfig","std::marker::Sized","std::marker::Copy","std::clone::Clone"]},"config::Configuration":{"E":["std::marker::Sized","config::internal::InternalEndianConfig","std::marker::Copy","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Copy","config::internal::InternalIntEncodingConfig","std::marker::Sized"],"L":["std::marker::Sized","std::marker::Copy","std::clone::Clone","config::internal::InternalLimitConfig"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["enc::write::Writer","std::marker::Sized"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&'a mut T as enc::Encoder>::writer":{"T":["enc::encoder::EncoderImpl","<&'a mut T as enc::Encoder>"]},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::LittleEndian","config::BigEndian","config::Configuration"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::Limit","config::NoLimit","config::Configuration"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["features::impl_alloc::VecWriter","enc::write::SizeWriter","features::impl_std::IoWriter","enc::write::SliceWriter","<&mut T as enc::write::Writer>"]},"features::impl_std::IoWriter":{"W":["std::io::BufWriter<W>","std::io::Stdout","std::sys::unix::stdio::Stdout","&std::fs::File","std::sys::unix::stdio::Stderr","std::process::ChildStdin","std::io::stdio::StdoutRaw","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::StdoutLock<'_>","std::io::Cursor<&mut [u8]>","&std::net::TcpStream","&'a std::os::unix::net::UnixStream","std::io::impls::<impl std::io::Write for &mut W>","std::fs::File","&std::io::Stdout","&std::io::Stderr","&std::process::ChildStdin","std::io::LineWriter<W>","std::io::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::io::BorrowedCursor<'a>","&std::io::Sink","std::boxed::Box<W>","std::collections::VecDeque<u8, A>","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Cursor<[u8; N]>","std::io::stdio::StderrRaw","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Sink","std::os::unix::net::UnixStream","std::io::StderrLock<'_>","std::net::TcpStream","std::vec::Vec<u8, A>"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = &mut  &mut MaybeUninit::uninit().assume_init(); // T
+p0.writer();
+<&'a mut T as enc::Encoder>::writer(p0);
+crate::<&'a mut T as enc::Encoder>::writer(p0);
+<&'a mut T>::writer(p0);
-----------------
src/enc/mod.rs <&'a mut T as enc::Encoder>::config
'a
deps:{"<&'a mut T as enc::Encoder>":{},"<&'a mut T as enc::Encoder>::config":{"T":["std::marker::Sized","enc::Encoder"]},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["std::marker::Sized","config::internal::InternalEndianConfig","std::clone::Clone","config::internal::InternalIntEncodingConfig","std::marker::Copy","config::internal::InternalLimitConfig"]},"config::Configuration":{"E":["std::marker::Sized","std::marker::Copy","config::internal::InternalEndianConfig","std::clone::Clone"],"I":["std::clone::Clone","std::marker::Sized","std::marker::Copy","config::internal::InternalIntEncodingConfig"],"L":["std::marker::Copy","config::internal::InternalLimitConfig","std::marker::Sized","std::clone::Clone"]},"enc::encoder::EncoderImpl":{"C":["std::marker::Sized","config::Config"],"W":["std::marker::Sized","enc::write::Writer"]},"features::impl_std::IoWriter":{"W":["std::io::Write","std::marker::Sized"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
candidates:{"<&'a mut T as enc::Encoder>":{},"<&'a mut T as enc::Encoder>::config":{"T":["<&'a mut T as enc::Encoder>","enc::encoder::EncoderImpl"]},"<&mut T as enc::write::Writer>":{},"<T as config::Config>":{"T":["config::Configuration"]},"config::Configuration":{"E":["config::Configuration","config::LittleEndian","config::BigEndian"],"I":["config::Varint","config::Configuration","config::Fixint"],"L":["config::NoLimit","config::Configuration","config::Limit"]},"enc::encoder::EncoderImpl":{"C":["<T as config::Config>"],"W":["enc::write::SizeWriter","features::impl_alloc::VecWriter","<&mut T as enc::write::Writer>","features::impl_std::IoWriter","enc::write::SliceWriter"]},"features::impl_std::IoWriter":{"W":["std::fs::File","std::io::StderrLock<'_>","&std::net::TcpStream","std::sys::unix::stdio::Stderr","std::io::LineWriter<W>","std::io::Stdout","&std::fs::File","&std::process::ChildStdin","std::io::BorrowedCursor<'a>","std::io::Cursor<[u8; N]>","&std::io::Stdout","std::io::BufWriter<W>","std::sys::unix::stdio::Stdout","std::io::Cursor<std::boxed::Box<[u8], A>>","std::io::Cursor<std::vec::Vec<u8, A>>","std::io::Stderr","std::vec::Vec<u8, A>","std::collections::VecDeque<u8, A>","&std::io::Sink","std::io::stdio::StdoutRaw","std::io::StdoutLock<'_>","std::net::TcpStream","std::io::buffered::linewritershim::LineWriterShim<'a, W>","std::io::Sink","std::io::Cursor<&mut [u8]>","&std::io::Stderr","std::io::Cursor<&mut std::vec::Vec<u8, A>>","std::os::unix::net::UnixStream","std::io::stdio::StderrRaw","std::io::impls::<impl std::io::Write for &mut W>","std::boxed::Box<W>","&'a std::os::unix::net::UnixStream","std::process::ChildStdin"]},"std::io::impls::<impl std::io::Write for &mut W>":{}}
let mut p0 = & & MaybeUninit::uninit().assume_init(); // T
+p0.config();
+<&'a mut T as enc::Encoder>::config(p0);
+crate::<&'a mut T as enc::Encoder>::config(p0);
+<&'a mut T>::config(p0);
-----------------
src/error.rs <error::EncodeError as std::fmt::Debug>::fmt
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // error::EncodeError
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // std::fmt::Formatter<'_>
+format!("{:?}", p0);
+p0.fmt(p1);
+<error::EncodeError as std::fmt::Debug>::fmt(p0, p1);
+crate::<error::EncodeError as std::fmt::Debug>::fmt(p0, p1);
+<error::EncodeError>::fmt(p0, p1);
-----------------
src/error.rs <error::EncodeError as std::fmt::Display>::fmt
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // error::EncodeError
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // std::fmt::Formatter<'_>
+format!("{}", p0);
+p0.fmt(p1);
+<error::EncodeError as std::fmt::Display>::fmt(p0, p1);
+crate::<error::EncodeError as std::fmt::Display>::fmt(p0, p1);
+<error::EncodeError>::fmt(p0, p1);
-----------------
src/error.rs <error::DecodeError as std::fmt::Debug>::fmt
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // error::DecodeError
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // std::fmt::Formatter<'_>
+format!("{:?}", p0);
+p0.fmt(p1);
+<error::DecodeError as std::fmt::Debug>::fmt(p0, p1);
+crate::<error::DecodeError as std::fmt::Debug>::fmt(p0, p1);
+<error::DecodeError>::fmt(p0, p1);
-----------------
src/error.rs <error::DecodeError as std::fmt::Display>::fmt
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // error::DecodeError
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // std::fmt::Formatter<'_>
+format!("{}", p0);
+p0.fmt(p1);
+<error::DecodeError as std::fmt::Display>::fmt(p0, p1);
+crate::<error::DecodeError as std::fmt::Display>::fmt(p0, p1);
+<error::DecodeError>::fmt(p0, p1);
-----------------
src/error.rs error::DecodeError::change_integer_type_to_signed
deps:{}
candidates:{}
let mut p0 = MaybeUninit::uninit().assume_init(); // error::DecodeError
+p0.change_integer_type_to_signed();
+error::DecodeError::change_integer_type_to_signed(p0);
+crate::error::DecodeError::change_integer_type_to_signed(p0);
+<error::DecodeError>::change_integer_type_to_signed(p0);
-----------------
src/error.rs <error::AllowedEnumVariants as std::fmt::Debug>::fmt
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // error::AllowedEnumVariants
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // std::fmt::Formatter<'_>
+format!("{:?}", p0);
+p0.fmt(p1);
+<error::AllowedEnumVariants as std::fmt::Debug>::fmt(p0, p1);
+crate::<error::AllowedEnumVariants as std::fmt::Debug>::fmt(p0, p1);
+<error::AllowedEnumVariants>::fmt(p0, p1);
-----------------
src/error.rs <error::AllowedEnumVariants as std::cmp::PartialEq>::eq
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // error::AllowedEnumVariants
let mut p1 = & MaybeUninit::uninit().assume_init(); // error::AllowedEnumVariants
+p0.eq(p1);
+<error::AllowedEnumVariants as std::cmp::PartialEq>::eq(p0, p1);
+crate::<error::AllowedEnumVariants as std::cmp::PartialEq>::eq(p0, p1);
+<error::AllowedEnumVariants>::eq(p0, p1);
-----------------
src/error.rs <error::AllowedEnumVariants as std::cmp::Eq>::assert_receiver_is_total_eq
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // error::AllowedEnumVariants
+p0.assert_receiver_is_total_eq();
+<error::AllowedEnumVariants as std::cmp::Eq>::assert_receiver_is_total_eq(p0);
+crate::<error::AllowedEnumVariants as std::cmp::Eq>::assert_receiver_is_total_eq(p0);
+<error::AllowedEnumVariants>::assert_receiver_is_total_eq(p0);
-----------------
src/error.rs <error::IntegerType as std::fmt::Debug>::fmt
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // error::IntegerType
let mut p1 = &mut  MaybeUninit::uninit().assume_init(); // std::fmt::Formatter<'_>
+format!("{:?}", p0);
+p0.fmt(p1);
+<error::IntegerType as std::fmt::Debug>::fmt(p0, p1);
+crate::<error::IntegerType as std::fmt::Debug>::fmt(p0, p1);
+<error::IntegerType>::fmt(p0, p1);
-----------------
src/error.rs <error::IntegerType as std::cmp::PartialEq>::eq
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // error::IntegerType
let mut p1 = & MaybeUninit::uninit().assume_init(); // error::IntegerType
+p0.eq(p1);
+<error::IntegerType as std::cmp::PartialEq>::eq(p0, p1);
+crate::<error::IntegerType as std::cmp::PartialEq>::eq(p0, p1);
+<error::IntegerType>::eq(p0, p1);
-----------------
src/error.rs <error::IntegerType as std::cmp::Eq>::assert_receiver_is_total_eq
deps:{}
candidates:{}
let mut p0 = & MaybeUninit::uninit().assume_init(); // error::IntegerType
+p0.assert_receiver_is_total_eq();
+<error::IntegerType as std::cmp::Eq>::assert_receiver_is_total_eq(p0);
+crate::<error::IntegerType as std::cmp::Eq>::assert_receiver_is_total_eq(p0);
+<error::IntegerType>::assert_receiver_is_total_eq(p0);
-----------------
src/error.rs error::IntegerType::into_signed
deps:{}
candidates:{}
let mut p0 = MaybeUninit::uninit().assume_init(); // error::IntegerType
+p0.into_signed();
+error::IntegerType::into_signed(p0);
+crate::error::IntegerType::into_signed(p0);
+<error::IntegerType>::into_signed(p0);