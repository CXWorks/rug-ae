[[bench]]
name = "benchmarks"
harness = false
path = "../benchmarks/main.rs"

[[test]]
name = "tests"
path = "../tests/main.rs"

[package]
name = "time"
version = "0.3.22"
authors = [ "Jacob Pratt <open-source@jhpratt.dev>", "Time contributors",]
edition = "2021"
rust-version = "1.65.0"
repository = "https://github.com/time-rs/time"
homepage = "https://time-rs.github.io"
keywords = [ "date", "time", "calendar", "duration",]
categories = [ "date-and-time", "no-std", "parser-implementations", "value-formatting",]
readme = "../README.md"
license = "MIT OR Apache-2.0"
description = "Date and time library. Fully interoperable with the standard library. Mostly compatible with #![no_std]."
include = [ "src/**/*", "LICENSE-*", "README.md",]

[lib]
bench = false

[features]
default = [ "std",]
alloc = [ "serde?/alloc",]
formatting = [ "dep:itoa", "std", "time-macros?/formatting",]
large-dates = [ "time-macros?/large-dates",]
local-offset = [ "std", "dep:libc", "dep:num_threads",]
macros = [ "dep:time-macros",]
parsing = [ "time-macros?/parsing",]
quickcheck = [ "dep:quickcheck", "alloc",]
rand = [ "dep:rand",]
serde = [ "dep:serde", "time-macros?/serde",]
serde-human-readable = [ "serde", "formatting", "parsing",]
serde-well-known = [ "serde", "formatting", "parsing",]
std = [ "alloc",]
wasm-bindgen = [ "dep:js-sys",]

[dependencies]
bolero = "0.8.0"
arbitrary = "1.3.2"

[dependencies.itoa]
workspace = true
optional = true

[dependencies.quickcheck]
workspace = true
optional = true

[dependencies.rand]
workspace = true
optional = true

[dependencies.serde]
workspace = true
optional = true

[dependencies.time-core]
workspace = true

[dependencies.time-macros]
workspace = true
optional = true

[dev-dependencies.rand]
workspace = true

[dev-dependencies.serde]
workspace = true
features = [ "derive",]

[dev-dependencies.serde_json]
workspace = true

[dev-dependencies.serde_test]
workspace = true

[dev-dependencies.quickcheck_macros]
workspace = true

[dev-dependencies.time-macros]
workspace = true

[package.metadata.docs.rs]
all-features = true
targets = [ "x86_64-unknown-linux-gnu",]
rustdoc-args = [ "--cfg", "__time_03_docs",]

[target."cfg(target_family = \"unix\")".dependencies.libc]
workspace = true
optional = true

[target."cfg(target_family = \"unix\")".dependencies.num_threads]
workspace = true
optional = true

[target."cfg(all(target_family = \"wasm\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))".dependencies.js-sys]
workspace = true
optional = true

[target."cfg(__ui_tests)".dev-dependencies.trybuild]
workspace = true

[target."cfg(bench)".dev-dependencies.criterion]
workspace = true
