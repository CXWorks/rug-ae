{"<&'a mut T as de::BorrowDecoder<'de>>::borrow_reader": false, "<&'a mut T as de::Decoder>::claim_bytes_read": false, "<&'a mut T as de::Decoder>::config": false, "<&'a mut T as de::Decoder>::reader": false, "<&'a mut T as de::Decoder>::unclaim_bytes_read": false, "<&'a mut T as enc::Encoder>::config": true, "<&'a mut T as enc::Encoder>::writer": false, "<&mut T as de::read::Reader>::consume": false, "<&mut T as de::read::Reader>::peek_read": false, "<&mut T as de::read::Reader>::read": false, "<&mut T as enc::write::Writer>::write": true, "<config::Configuration<E, I, L> as std::default::Default>::default": false, "<de::decoder::DecoderImpl<R, C> as de::BorrowDecoder<'de>>::borrow_reader": false, "<de::decoder::DecoderImpl<R, C> as de::Decoder>::claim_bytes_read": false, "<de::decoder::DecoderImpl<R, C> as de::Decoder>::config": false, "<de::decoder::DecoderImpl<R, C> as de::Decoder>::reader": false, "<de::decoder::DecoderImpl<R, C> as de::Decoder>::unclaim_bytes_read": false, "<de::impl_core::collect_into_array::Guard<'_, T, N> as std::ops::Drop>::drop": false, "<de::read::SliceReader<'storage> as de::read::BorrowReader<'storage>>::take_bytes": false, "<de::read::SliceReader<'storage> as de::read::Reader>::consume": true, "<de::read::SliceReader<'storage> as de::read::Reader>::peek_read": false, "<de::read::SliceReader<'storage> as de::read::Reader>::read": true, "<enc::encoder::EncoderImpl<W, C> as enc::Encoder>::config": false, "<enc::encoder::EncoderImpl<W, C> as enc::Encoder>::writer": true, "<enc::write::SizeWriter as enc::write::Writer>::write": true, "<enc::write::SliceWriter<'storage> as enc::write::Writer>::write": false, "<features::impl_alloc::VecWriter as enc::write::Writer>::write": true, "<features::impl_std::IoReader<R> as de::read::Reader>::read": true, "<features::impl_std::IoWriter<'storage, W> as enc::write::Writer>::write": true, "atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicBool>::borrow_decode": false, "atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI16>::borrow_decode": false, "atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI32>::borrow_decode": false, "atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI64>::borrow_decode": false, "atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicI8>::borrow_decode": true, "atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicIsize>::borrow_decode": false, "atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU16>::borrow_decode": false, "atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU32>::borrow_decode": false, "atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU64>::borrow_decode": false, "atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicU8>::borrow_decode": false, "atomic::<impl de::BorrowDecode<'de> for std::sync::atomic::AtomicUsize>::borrow_decode": false, "atomic::<impl de::Decode for std::sync::atomic::AtomicBool>::decode": false, "atomic::<impl de::Decode for std::sync::atomic::AtomicI16>::decode": false, "atomic::<impl de::Decode for std::sync::atomic::AtomicI32>::decode": false, "atomic::<impl de::Decode for std::sync::atomic::AtomicI64>::decode": false, "atomic::<impl de::Decode for std::sync::atomic::AtomicI8>::decode": false, "atomic::<impl de::Decode for std::sync::atomic::AtomicIsize>::decode": true, "atomic::<impl de::Decode for std::sync::atomic::AtomicU16>::decode": false, "atomic::<impl de::Decode for std::sync::atomic::AtomicU32>::decode": false, "atomic::<impl de::Decode for std::sync::atomic::AtomicU64>::decode": false, "atomic::<impl de::Decode for std::sync::atomic::AtomicU8>::decode": false, "atomic::<impl de::Decode for std::sync::atomic::AtomicUsize>::decode": false, "atomic::<impl enc::Encode for std::sync::atomic::AtomicBool>::encode": false, "atomic::<impl enc::Encode for std::sync::atomic::AtomicI16>::encode": false, "atomic::<impl enc::Encode for std::sync::atomic::AtomicI32>::encode": false, "atomic::<impl enc::Encode for std::sync::atomic::AtomicI64>::encode": false, "atomic::<impl enc::Encode for std::sync::atomic::AtomicI8>::encode": false, "atomic::<impl enc::Encode for std::sync::atomic::AtomicIsize>::encode": false, "atomic::<impl enc::Encode for std::sync::atomic::AtomicU16>::encode": false, "atomic::<impl enc::Encode for std::sync::atomic::AtomicU32>::encode": false, "atomic::<impl enc::Encode for std::sync::atomic::AtomicU64>::encode": false, "atomic::<impl enc::Encode for std::sync::atomic::AtomicU8>::encode": false, "atomic::<impl enc::Encode for std::sync::atomic::AtomicUsize>::encode": false, "borrow_decode_from_slice": false, "config::Configuration::<E, I, L>::with_big_endian": false, "config::Configuration::<E, I, L>::with_fixed_int_encoding": false, "config::Configuration::<E, I, L>::with_limit": true, "config::Configuration::<E, I, L>::with_little_endian": false, "config::Configuration::<E, I, L>::with_no_limit": true, "config::Configuration::<E, I, L>::with_variable_int_encoding": false, "config::generate": false, "config::legacy": false, "config::standard": false, "de::Decoder::claim_container_read": false, "de::decode_option_variant": false, "de::decode_slice_len": false, "de::decoder::DecoderImpl::<R, C>::new": false, "de::impl_core::array_assume_init": false, "de::impl_core::collect_into_array": false, "de::impl_core::slice_assume_init_mut": true, "de::impl_core::uninit_array": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::borrow_decode": false, "de::impl_tuples::<impl de::BorrowDecode<'de> for (A,)>::borrow_decode": false, "de::impl_tuples::<impl de::Decode for (A, B)>::decode": false, "de::impl_tuples::<impl de::Decode for (A, B, C)>::decode": false, "de::impl_tuples::<impl de::Decode for (A, B, C, D)>::decode": true, "de::impl_tuples::<impl de::Decode for (A, B, C, D, E)>::decode": false, "de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F)>::decode": false, "de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G)>::decode": false, "de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H)>::decode": false, "de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I)>::decode": false, "de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J)>::decode": false, "de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K)>::decode": false, "de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L)>::decode": false, "de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::decode": false, "de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::decode": false, "de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::decode": false, "de::impl_tuples::<impl de::Decode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::decode": false, "de::impl_tuples::<impl de::Decode for (A,)>::decode": false, "de::impls::<impl de::BorrowDecode<'de> for &'a [u8]>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for &'a str>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for ()>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for [T; N]>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for bool>::borrow_decode": true, "de::impls::<impl de::BorrowDecode<'de> for char>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for f32>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for f64>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for i128>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for i16>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for i32>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for i64>::borrow_decode": true, "de::impls::<impl de::BorrowDecode<'de> for i8>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for isize>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::cell::Cell<T>>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::cell::RefCell<T>>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::collections::Bound<T>>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::marker::PhantomData<T>>::borrow_decode": true, "de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI128>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI16>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI32>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI64>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroI8>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroIsize>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU128>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU16>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU32>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU64>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroU8>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::num::NonZeroUsize>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::ops::Range<T>>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::ops::RangeInclusive<T>>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::option::Option<T>>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::result::Result<T, U>>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for std::time::Duration>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for u128>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for u16>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for u32>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for u64>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for u8>::borrow_decode": false, "de::impls::<impl de::BorrowDecode<'de> for usize>::borrow_decode": false, "de::impls::<impl de::Decode for ()>::decode": false, "de::impls::<impl de::Decode for [T; N]>::decode": false, "de::impls::<impl de::Decode for bool>::decode": false, "de::impls::<impl de::Decode for char>::decode": false, "de::impls::<impl de::Decode for f32>::decode": false, "de::impls::<impl de::Decode for f64>::decode": false, "de::impls::<impl de::Decode for i128>::decode": false, "de::impls::<impl de::Decode for i16>::decode": false, "de::impls::<impl de::Decode for i32>::decode": false, "de::impls::<impl de::Decode for i64>::decode": false, "de::impls::<impl de::Decode for i8>::decode": false, "de::impls::<impl de::Decode for isize>::decode": false, "de::impls::<impl de::Decode for std::cell::Cell<T>>::decode": false, "de::impls::<impl de::Decode for std::cell::RefCell<T>>::decode": false, "de::impls::<impl de::Decode for std::collections::Bound<T>>::decode": false, "de::impls::<impl de::Decode for std::marker::PhantomData<T>>::decode": false, "de::impls::<impl de::Decode for std::num::NonZeroI128>::decode": false, "de::impls::<impl de::Decode for std::num::NonZeroI16>::decode": false, "de::impls::<impl de::Decode for std::num::NonZeroI32>::decode": false, "de::impls::<impl de::Decode for std::num::NonZeroI64>::decode": false, "de::impls::<impl de::Decode for std::num::NonZeroI8>::decode": false, "de::impls::<impl de::Decode for std::num::NonZeroIsize>::decode": false, "de::impls::<impl de::Decode for std::num::NonZeroU128>::decode": false, "de::impls::<impl de::Decode for std::num::NonZeroU16>::decode": false, "de::impls::<impl de::Decode for std::num::NonZeroU32>::decode": false, "de::impls::<impl de::Decode for std::num::NonZeroU64>::decode": false, "de::impls::<impl de::Decode for std::num::NonZeroU8>::decode": false, "de::impls::<impl de::Decode for std::num::NonZeroUsize>::decode": false, "de::impls::<impl de::Decode for std::ops::Range<T>>::decode": true, "de::impls::<impl de::Decode for std::ops::RangeInclusive<T>>::decode": false, "de::impls::<impl de::Decode for std::option::Option<T>>::decode": true, "de::impls::<impl de::Decode for std::result::Result<T, U>>::decode": true, "de::impls::<impl de::Decode for std::time::Duration>::decode": true, "de::impls::<impl de::Decode for u128>::decode": false, "de::impls::<impl de::Decode for u16>::decode": false, "de::impls::<impl de::Decode for u32>::decode": false, "de::impls::<impl de::Decode for u64>::decode": false, "de::impls::<impl de::Decode for u8>::decode": false, "de::impls::<impl de::Decode for usize>::decode": false, "de::impls::utf8_char_width": false, "de::read::Reader::consume": false, "de::read::Reader::peek_read": false, "de::read::SliceReader::<'storage>::new": true, "decode_from_reader": false, "decode_from_slice": true, "enc::encode_option_variant": false, "enc::encode_slice_len": false, "enc::encoder::EncoderImpl::<W, C>::into_writer": false, "enc::encoder::EncoderImpl::<W, C>::new": false, "enc::impl_tuples::<impl enc::Encode for (A, B)>::encode": false, "enc::impl_tuples::<impl enc::Encode for (A, B, C)>::encode": false, "enc::impl_tuples::<impl enc::Encode for (A, B, C, D)>::encode": false, "enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E)>::encode": true, "enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F)>::encode": false, "enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G)>::encode": false, "enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H)>::encode": false, "enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I)>::encode": false, "enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J)>::encode": false, "enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K)>::encode": true, "enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L)>::encode": false, "enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M)>::encode": true, "enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N)>::encode": false, "enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O)>::encode": true, "enc::impl_tuples::<impl enc::Encode for (A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P)>::encode": false, "enc::impl_tuples::<impl enc::Encode for (A,)>::encode": false, "enc::impls::<impl enc::Encode for &'a T>::encode": false, "enc::impls::<impl enc::Encode for ()>::encode": false, "enc::impls::<impl enc::Encode for [T; N]>::encode": false, "enc::impls::<impl enc::Encode for [T]>::encode": false, "enc::impls::<impl enc::Encode for bool>::encode": false, "enc::impls::<impl enc::Encode for char>::encode": false, "enc::impls::<impl enc::Encode for f32>::encode": false, "enc::impls::<impl enc::Encode for f64>::encode": false, "enc::impls::<impl enc::Encode for i128>::encode": false, "enc::impls::<impl enc::Encode for i16>::encode": false, "enc::impls::<impl enc::Encode for i32>::encode": false, "enc::impls::<impl enc::Encode for i64>::encode": false, "enc::impls::<impl enc::Encode for i8>::encode": false, "enc::impls::<impl enc::Encode for isize>::encode": false, "enc::impls::<impl enc::Encode for std::cell::Cell<T>>::encode": false, "enc::impls::<impl enc::Encode for std::cell::RefCell<T>>::encode": false, "enc::impls::<impl enc::Encode for std::collections::Bound<T>>::encode": false, "enc::impls::<impl enc::Encode for std::marker::PhantomData<T>>::encode": false, "enc::impls::<impl enc::Encode for std::num::NonZeroI128>::encode": false, "enc::impls::<impl enc::Encode for std::num::NonZeroI16>::encode": true, "enc::impls::<impl enc::Encode for std::num::NonZeroI32>::encode": false, "enc::impls::<impl enc::Encode for std::num::NonZeroI64>::encode": false, "enc::impls::<impl enc::Encode for std::num::NonZeroI8>::encode": false, "enc::impls::<impl enc::Encode for std::num::NonZeroIsize>::encode": false, "enc::impls::<impl enc::Encode for std::num::NonZeroU128>::encode": false, "enc::impls::<impl enc::Encode for std::num::NonZeroU16>::encode": false, "enc::impls::<impl enc::Encode for std::num::NonZeroU32>::encode": false, "enc::impls::<impl enc::Encode for std::num::NonZeroU64>::encode": false, "enc::impls::<impl enc::Encode for std::num::NonZeroU8>::encode": false, "enc::impls::<impl enc::Encode for std::num::NonZeroUsize>::encode": false, "enc::impls::<impl enc::Encode for std::ops::Range<T>>::encode": false, "enc::impls::<impl enc::Encode for std::ops::RangeInclusive<T>>::encode": false, "enc::impls::<impl enc::Encode for std::option::Option<T>>::encode": false, "enc::impls::<impl enc::Encode for std::result::Result<T, U>>::encode": false, "enc::impls::<impl enc::Encode for std::time::Duration>::encode": false, "enc::impls::<impl enc::Encode for str>::encode": false, "enc::impls::<impl enc::Encode for u128>::encode": false, "enc::impls::<impl enc::Encode for u16>::encode": false, "enc::impls::<impl enc::Encode for u32>::encode": false, "enc::impls::<impl enc::Encode for u64>::encode": false, "enc::impls::<impl enc::Encode for u8>::encode": false, "enc::impls::<impl enc::Encode for usize>::encode": false, "enc::impls::encode_utf8": true, "enc::write::SliceWriter::<'storage>::bytes_written": false, "enc::write::SliceWriter::<'storage>::new": true, "encode_into_slice": false, "encode_into_writer": false, "error::DecodeError::change_integer_type_to_signed": true, "error::IntegerType::into_signed": false, "features::impl_alloc::<impl de::BorrowDecode<'cow> for std::borrow::Cow<'cow, T>>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<T>>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<[T]>>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::boxed::Box<str>>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BTreeMap<K, V>>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BTreeSet<T>>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::BinaryHeap<T>>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::collections::VecDeque<T>>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::rc::Rc<T>>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::rc::Rc<[T]>>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::string::String>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<T>>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<[T]>>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::sync::Arc<str>>::borrow_decode": false, "features::impl_alloc::<impl de::BorrowDecode<'de> for std::vec::Vec<T>>::borrow_decode": false, "features::impl_alloc::<impl de::Decode for std::borrow::Cow<'cow, T>>::decode": false, "features::impl_alloc::<impl de::Decode for std::boxed::Box<T>>::decode": false, "features::impl_alloc::<impl de::Decode for std::boxed::Box<[T]>>::decode": false, "features::impl_alloc::<impl de::Decode for std::boxed::Box<str>>::decode": false, "features::impl_alloc::<impl de::Decode for std::collections::BTreeMap<K, V>>::decode": false, "features::impl_alloc::<impl de::Decode for std::collections::BTreeSet<T>>::decode": false, "features::impl_alloc::<impl de::Decode for std::collections::BinaryHeap<T>>::decode": false, "features::impl_alloc::<impl de::Decode for std::collections::VecDeque<T>>::decode": false, "features::impl_alloc::<impl de::Decode for std::rc::Rc<T>>::decode": false, "features::impl_alloc::<impl de::Decode for std::rc::Rc<[T]>>::decode": false, "features::impl_alloc::<impl de::Decode for std::string::String>::decode": false, "features::impl_alloc::<impl de::Decode for std::sync::Arc<T>>::decode": true, "features::impl_alloc::<impl de::Decode for std::sync::Arc<[T]>>::decode": false, "features::impl_alloc::<impl de::Decode for std::sync::Arc<str>>::decode": false, "features::impl_alloc::<impl de::Decode for std::vec::Vec<T>>::decode": false, "features::impl_alloc::<impl enc::Encode for std::borrow::Cow<'cow, T>>::encode": false, "features::impl_alloc::<impl enc::Encode for std::boxed::Box<T>>::encode": false, "features::impl_alloc::<impl enc::Encode for std::collections::BTreeMap<K, V>>::encode": false, "features::impl_alloc::<impl enc::Encode for std::collections::BTreeSet<T>>::encode": false, "features::impl_alloc::<impl enc::Encode for std::collections::BinaryHeap<T>>::encode": false, "features::impl_alloc::<impl enc::Encode for std::collections::VecDeque<T>>::encode": false, "features::impl_alloc::<impl enc::Encode for std::rc::Rc<T>>::encode": false, "features::impl_alloc::<impl enc::Encode for std::string::String>::encode": false, "features::impl_alloc::<impl enc::Encode for std::sync::Arc<T>>::encode": false, "features::impl_alloc::<impl enc::Encode for std::vec::Vec<T>>::encode": true, "features::impl_alloc::VecWriter::collect": false, "features::impl_alloc::VecWriter::with_capacity": true, "features::impl_alloc::encode_to_vec": false, "features::impl_std::<impl de::BorrowDecode<'de> for &'de std::path::Path>::borrow_decode": false, "features::impl_std::<impl de::BorrowDecode<'de> for std::collections::HashMap<K, V, S>>::borrow_decode": false, "features::impl_std::<impl de::BorrowDecode<'de> for std::collections::HashSet<T, S>>::borrow_decode": false, "features::impl_std::<impl de::BorrowDecode<'de> for std::ffi::CString>::borrow_decode": false, "features::impl_std::<impl de::BorrowDecode<'de> for std::net::IpAddr>::borrow_decode": false, "features::impl_std::<impl de::BorrowDecode<'de> for std::net::Ipv4Addr>::borrow_decode": false, "features::impl_std::<impl de::BorrowDecode<'de> for std::net::Ipv6Addr>::borrow_decode": false, "features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddr>::borrow_decode": false, "features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddrV4>::borrow_decode": false, "features::impl_std::<impl de::BorrowDecode<'de> for std::net::SocketAddrV6>::borrow_decode": false, "features::impl_std::<impl de::BorrowDecode<'de> for std::path::PathBuf>::borrow_decode": false, "features::impl_std::<impl de::BorrowDecode<'de> for std::sync::Mutex<T>>::borrow_decode": false, "features::impl_std::<impl de::BorrowDecode<'de> for std::sync::RwLock<T>>::borrow_decode": false, "features::impl_std::<impl de::BorrowDecode<'de> for std::time::SystemTime>::borrow_decode": false, "features::impl_std::<impl de::Decode for std::collections::HashMap<K, V, S>>::decode": false, "features::impl_std::<impl de::Decode for std::collections::HashSet<T, S>>::decode": false, "features::impl_std::<impl de::Decode for std::ffi::CString>::decode": false, "features::impl_std::<impl de::Decode for std::net::IpAddr>::decode": false, "features::impl_std::<impl de::Decode for std::net::Ipv4Addr>::decode": false, "features::impl_std::<impl de::Decode for std::net::Ipv6Addr>::decode": false, "features::impl_std::<impl de::Decode for std::net::SocketAddr>::decode": false, "features::impl_std::<impl de::Decode for std::net::SocketAddrV4>::decode": false, "features::impl_std::<impl de::Decode for std::net::SocketAddrV6>::decode": false, "features::impl_std::<impl de::Decode for std::path::PathBuf>::decode": false, "features::impl_std::<impl de::Decode for std::sync::Mutex<T>>::decode": false, "features::impl_std::<impl de::Decode for std::sync::RwLock<T>>::decode": false, "features::impl_std::<impl de::Decode for std::time::SystemTime>::decode": false, "features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::consume": true, "features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::peek_read": false, "features::impl_std::<impl de::read::Reader for std::io::BufReader<R>>::read": false, "features::impl_std::<impl enc::Encode for &'a std::ffi::CStr>::encode": false, "features::impl_std::<impl enc::Encode for &std::path::Path>::encode": true, "features::impl_std::<impl enc::Encode for std::collections::HashMap<K, V, S>>::encode": false, "features::impl_std::<impl enc::Encode for std::collections::HashSet<T, S>>::encode": false, "features::impl_std::<impl enc::Encode for std::ffi::CString>::encode": false, "features::impl_std::<impl enc::Encode for std::net::IpAddr>::encode": false, "features::impl_std::<impl enc::Encode for std::net::Ipv4Addr>::encode": false, "features::impl_std::<impl enc::Encode for std::net::Ipv6Addr>::encode": false, "features::impl_std::<impl enc::Encode for std::net::SocketAddr>::encode": false, "features::impl_std::<impl enc::Encode for std::net::SocketAddrV4>::encode": false, "features::impl_std::<impl enc::Encode for std::net::SocketAddrV6>::encode": false, "features::impl_std::<impl enc::Encode for std::path::PathBuf>::encode": true, "features::impl_std::<impl enc::Encode for std::sync::Mutex<T>>::encode": false, "features::impl_std::<impl enc::Encode for std::sync::RwLock<T>>::encode": false, "features::impl_std::<impl enc::Encode for std::time::SystemTime>::encode": false, "features::impl_std::<impl std::error::Error for error::DecodeError>::source": true, "features::impl_std::<impl std::error::Error for error::EncodeError>::source": false, "features::impl_std::IoReader::<R>::new": false, "features::impl_std::IoWriter::<'a, W>::bytes_written": true, "features::impl_std::IoWriter::<'a, W>::new": false, "features::impl_std::decode_from_std_read": false, "features::impl_std::encode_into_std_write": false, "varint::decode_signed::varint_decode_i128": true, "varint::decode_signed::varint_decode_i16": true, "varint::decode_signed::varint_decode_i32": false, "varint::decode_signed::varint_decode_i64": true, "varint::decode_signed::varint_decode_isize": false, "varint::decode_unsigned::deserialize_varint_cold_u128": false, "varint::decode_unsigned::deserialize_varint_cold_u16": false, "varint::decode_unsigned::deserialize_varint_cold_u32": false, "varint::decode_unsigned::deserialize_varint_cold_u64": false, "varint::decode_unsigned::deserialize_varint_cold_usize": false, "varint::decode_unsigned::invalid_varint_discriminant": false, "varint::decode_unsigned::varint_decode_u128": true, "varint::decode_unsigned::varint_decode_u16": false, "varint::decode_unsigned::varint_decode_u32": true, "varint::decode_unsigned::varint_decode_u64": true, "varint::decode_unsigned::varint_decode_usize": false, "varint::encode_signed::varint_encode_i128": false, "varint::encode_signed::varint_encode_i16": false, "varint::encode_signed::varint_encode_i32": false, "varint::encode_signed::varint_encode_i64": true, "varint::encode_signed::varint_encode_isize": false, "varint::encode_unsigned::varint_encode_u128": false, "varint::encode_unsigned::varint_encode_u16": false, "varint::encode_unsigned::varint_encode_u32": false, "varint::encode_unsigned::varint_encode_u64": false, "varint::encode_unsigned::varint_encode_usize": true}