{"tests_llm_16_5": {"non_empty_lines_next_empty_string": {"rug_fuzz_0": "\"\""}, "non_empty_lines_next_new_lines_only": {"rug_fuzz_0": "\"\\n\\n\""}, "non_empty_lines_next_single_line_no_newline": {"rug_fuzz_0": "\"line\""}, "non_empty_lines_next_single_line_with_newline": {"rug_fuzz_0": "\"line\\n\""}, "non_empty_lines_next_single_line_with_crlf": {"rug_fuzz_0": "\"line\\r\\n\""}, "non_empty_lines_next_multiple_lines": {"rug_fuzz_0": "\"line1\\nline2\\nline3\""}, "non_empty_lines_next_multiple_lines_with_empty_lines": {"rug_fuzz_0": "\"line1\\n\\nline2\\n\\n\\nline3\\n\""}, "non_empty_lines_next_multiple_lines_with_crlf": {"rug_fuzz_0": "\"line1\\r\\nline2\\r\\nline3\""}}, "tests_llm_16_34": {"test_refill_with_fixed_width": {"rug_fuzz_0": "\"> Memory safety without garbage collection.\"", "rug_fuzz_1": "\"> Memory safety\\n> without garbage\\n> collection.\"", "rug_fuzz_2": "20"}, "test_refill_with_options": {"rug_fuzz_0": "\"\\\n            - This is\n            my indented\n            text.\"", "rug_fuzz_1": "20", "rug_fuzz_2": "\"- \"", "rug_fuzz_3": "\"  \"", "rug_fuzz_4": "\"\\\n            - This is my\n              indented text.\""}, "test_refill_with_bullet_points": {"rug_fuzz_0": "\"\\\n            - Bullet point\n              text here.\"", "rug_fuzz_1": "\"\\\n            - Bullet point\n              text here.\"", "rug_fuzz_2": "30"}, "test_refill_with_shrinking_width": {"rug_fuzz_0": "\"\\\n            Some text that\n            will be shrunk.\"", "rug_fuzz_1": "\"\\\n            Some text\n            that will\n            be shrunk.\"", "rug_fuzz_2": "10"}, "test_refill_without_changing": {"rug_fuzz_0": "\"No newlines here.\"", "rug_fuzz_1": "\"No newlines here.\"", "rug_fuzz_2": "30"}, "test_refill_with_emtpy_string": {"rug_fuzz_0": "\"\"", "rug_fuzz_1": "\"\"", "rug_fuzz_2": "20"}}, "tests_llm_16_35": {"test_unfill_simple": {"rug_fuzz_0": "\"Hello\\nworld.\""}, "test_unfill_with_indentation": {"rug_fuzz_0": "\"  Hello\\n  world.\""}, "test_unfill_with_different_indentation": {"rug_fuzz_0": "\"  Hello\\n    world.\""}, "test_unfill_with_bullet_points": {"rug_fuzz_0": "\"* Hello\\n  world.\""}, "test_unfill_with_mixed_line_endings": {"rug_fuzz_0": "\"* Hello\\r\\n  world.\""}, "test_unfill_with_crlf_line_endings": {"rug_fuzz_0": "\"* Hello\\r\\n  world.\\r\\n\""}, "test_unfill_single_line": {"rug_fuzz_0": "\"Hello world.\""}, "test_unfill_empty_string": {"rug_fuzz_0": "\"\""}, "test_unfill_multiple_paragraphs": {"rug_fuzz_0": "\"Hello world.\\n\\nNew paragraph.\""}}, "tests_llm_16_23": {"test_dedent_empty_string": {"rug_fuzz_0": "\"\""}, "test_dedent_no_indentation": {"rug_fuzz_0": "\"No indentation\\non these lines.\\n\""}, "test_dedent_varied_indentation": {"rug_fuzz_0": "\"\n            Indented line\n          Less indented line\n        \""}, "test_dedent_single_line_with_indentation": {"rug_fuzz_0": "\"    Single line with spaces\""}, "test_dedent_single_line_with_tabs": {"rug_fuzz_0": "\"\\tSingle line with tab\""}, "test_dedent_with_empty_lines": {"rug_fuzz_0": "\"\n            \n            Indented line with empty lines\n            \n        \""}, "test_dedent_with_only_whitespace_lines": {"rug_fuzz_0": "\"    \\n    \\n    \""}, "test_dedent_with_mixed_whitespace": {"rug_fuzz_0": "\"\\t  Indented line\\n\\t\\t  More indentation\""}, "test_dedent_do_not_strip_trailing_newline": {"rug_fuzz_0": "\"\n            Line with trailing newline\n        \"", "rug_fuzz_1": "'\\n'"}, "test_dedent_trailing_newline_when_input_lacks_one": {"rug_fuzz_0": "\"\n            Line without trailing newline\"", "rug_fuzz_1": "'\\n'"}, "test_dedent_mixed_empty_and_non_empty_lines": {"rug_fuzz_0": "\"\n            Some indented line\n            \n            Another indented line\n        \""}}, "tests_llm_16_24": {"indent_empty_string": {"rug_fuzz_0": "\"\"", "rug_fuzz_1": "\"  \""}, "indent_no_newline": {"rug_fuzz_0": "\"Single line\"", "rug_fuzz_1": "\"  \""}, "indent_with_newline": {"rug_fuzz_0": "\"First line.\\nSecond line.\\n\"", "rug_fuzz_1": "\"  \""}, "indent_empty_lines": {"rug_fuzz_0": "\"First line.\\n\\n\\nSecond line.\\n\"", "rug_fuzz_1": "\"  \""}, "indent_empty_lines_with_comment": {"rug_fuzz_0": "\"foo = 123\\n\\nprint(foo)\\n\"", "rug_fuzz_1": "\"# \""}, "indent_preserving_whitespace": {"rug_fuzz_0": "\" \\t  Foo   \"", "rug_fuzz_1": "\"->\""}, "indent_with_complex_prefix": {"rug_fuzz_0": "\"Line\\n\\nAnother line\"", "rug_fuzz_1": "\"=>  \""}, "indent_with_empty_prefix": {"rug_fuzz_0": "\"Line\\nAnother line\"", "rug_fuzz_1": "\"\""}, "indent_with_leading_and_trailing_newlines": {"rug_fuzz_0": "\"\\nLine\\nAnother line\\n\"", "rug_fuzz_1": "\"  \""}, "indent_with_empty_lines_and_no_whitespace_prefix": {"rug_fuzz_0": "\"First line.\\n\\n\\nSecond line.\\n\"", "rug_fuzz_1": "\"#\""}}, "tests_llm_16_10": {"eq_optimal_fit_with_different_penalties": {"rug_fuzz_0": "1000", "rug_fuzz_1": "2500", "rug_fuzz_2": "4", "rug_fuzz_3": "25", "rug_fuzz_4": "25", "rug_fuzz_5": "2000", "rug_fuzz_6": "2500", "rug_fuzz_7": "4", "rug_fuzz_8": "25", "rug_fuzz_9": "25"}}, "tests_llm_16_53_llm_16_53": {"wrap_first_fit_empty_input": {"rug_fuzz_0": "10.0"}, "wrap_first_fit_single_line": {"rug_fuzz_0": "\"Hello \"", "rug_fuzz_1": "10.0"}, "wrap_first_fit_multiple_lines": {"rug_fuzz_0": "\"Hello \"", "rug_fuzz_1": "3", "rug_fuzz_2": "15.0"}, "wrap_first_fit_words_longer_than_line_width": {"rug_fuzz_0": "\"Hello \"", "rug_fuzz_1": "1", "rug_fuzz_2": "5.0"}, "wrap_first_fit_variable_line_widths": {"rug_fuzz_0": "\"Hello \"", "rug_fuzz_1": "2", "rug_fuzz_2": "10.0", "rug_fuzz_3": "10.0", "rug_fuzz_4": "5.0"}, "wrap_first_fit_incomplete_line_widths": {"rug_fuzz_0": "\"Hello \"", "rug_fuzz_1": "2", "rug_fuzz_2": "10.0", "rug_fuzz_3": "10.0"}, "wrap_first_fit_line_width_zero": {"rug_fuzz_0": "\"Hello \"", "rug_fuzz_1": "0.0"}}, "tests_llm_16_43_llm_16_43": {"test_wrap_simple": {"rug_fuzz_0": "\"Memory safety without garbage collection.\"", "rug_fuzz_1": "15"}, "test_wrap_with_options": {"rug_fuzz_0": "15", "rug_fuzz_1": "\"- \"", "rug_fuzz_2": "\"  \"", "rug_fuzz_3": "\"Memory safety without garbage collection.\""}, "test_wrap_with_indentation": {"rug_fuzz_0": "15", "rug_fuzz_1": "\"....\"", "rug_fuzz_2": "\"Wrapping text all day long.\""}, "test_wrap_preserve_leading_whitespace": {"rug_fuzz_0": "\"  Foo   bar baz\"", "rug_fuzz_1": "8"}, "test_wrap_discard_trailing_whitespace": {"rug_fuzz_0": "\"Foo   bar baz\"", "rug_fuzz_1": "8"}, "test_wrap_discard_extra_trailing_whitespace": {"rug_fuzz_0": "\"Foo   bar   baz\"", "rug_fuzz_1": "10"}, "test_wrap_leading_whitespace_causing_empty_line": {"rug_fuzz_0": "\"  foo bar\"", "rug_fuzz_1": "4"}}, "tests_llm_16_44": {"test_wrap_single_line_empty_indent": {"rug_fuzz_0": "\"This is a test line that is longer than the line width we set below.\"", "rug_fuzz_1": "15", "rug_fuzz_2": "\"\"", "rug_fuzz_3": "\"\"", "rug_fuzz_4": "false"}, "test_wrap_single_line_with_initial_indent": {"rug_fuzz_0": "\"This is a test line.\"", "rug_fuzz_1": "15", "rug_fuzz_2": "\">>\"", "rug_fuzz_3": "\"\"", "rug_fuzz_4": "false"}, "test_wrap_single_line_with_subsequent_indent": {"rug_fuzz_0": "\"This is a test line.\"", "rug_fuzz_1": "\"First line.\"", "rug_fuzz_2": "15", "rug_fuzz_3": "\"\"", "rug_fuzz_4": "\"++\"", "rug_fuzz_5": "false"}, "test_wrap_single_line_with_indent_and_trim": {"rug_fuzz_0": "\"This is a test line with spaces at the end     \"", "rug_fuzz_1": "15", "rug_fuzz_2": "\"##\"", "rug_fuzz_3": "\"\"", "rug_fuzz_4": "false"}, "test_wrap_single_line_slow_path": {"rug_fuzz_0": "\"This is a test line that will invoke the slow path due to its length\"", "rug_fuzz_1": "10", "rug_fuzz_2": "\"\"", "rug_fuzz_3": "\"\"", "rug_fuzz_4": "false", "rug_fuzz_5": "1"}}, "tests_llm_16_45": {"test_wrap_single_line_slow_path_empty_line": {"rug_fuzz_0": "\"\"", "rug_fuzz_1": "10"}, "test_wrap_single_line_slow_path_no_wrap": {"rug_fuzz_0": "\"small line\"", "rug_fuzz_1": "10"}, "test_wrap_single_line_slow_path_with_wrap": {"rug_fuzz_0": "\"Wrap this line please\"", "rug_fuzz_1": "10"}, "test_wrap_single_line_slow_path_with_long_word": {"rug_fuzz_0": "\"Wrap this supercalifragilisticexpialidocious line please\"", "rug_fuzz_1": "10", "rug_fuzz_2": "true"}, "test_wrap_single_line_slow_path_initial_indent": {"rug_fuzz_0": "\"Wrap this line with initial indent\"", "rug_fuzz_1": "12", "rug_fuzz_2": "\">> \""}, "test_wrap_single_line_slow_path_subsequent_indent": {"rug_fuzz_0": "\"Wrap this line with subsequent indent\"", "rug_fuzz_1": "15", "rug_fuzz_2": "\"... \""}, "test_wrap_single_line_slow_path_initial_and_subsequent_indent": {"rug_fuzz_0": "\"Wrap this line with both indents\"", "rug_fuzz_1": "16", "rug_fuzz_2": "\">>\"", "rug_fuzz_3": "\"...\""}}, "tests_llm_16_21": {"test_fill_inplace_single_line": {"rug_fuzz_0": "\"Single line text that fits the width.\"", "rug_fuzz_1": "50"}, "test_fill_inplace_multiple_lines": {"rug_fuzz_0": "\"This text should be split across multiple lines.\"", "rug_fuzz_1": "10", "rug_fuzz_2": "\"This text\\nshould be\\nsplit\\nacross\\nmultiple\\nlines.\""}, "test_fill_inplace_empty_line": {"rug_fuzz_0": "\"\"", "rug_fuzz_1": "10"}, "test_fill_inplace_preserves_existing_linebreaks": {"rug_fuzz_0": "\"Line with\\nexisting line break.\"", "rug_fuzz_1": "50"}, "test_fill_inplace_existing_multiple_spaces": {"rug_fuzz_0": "\"Line  with  multiple  spaces.\"", "rug_fuzz_1": "50"}, "test_fill_inplace_long_word": {"rug_fuzz_0": "\"ThisIsALongWordThatCannotBeSplit.\"", "rug_fuzz_1": "10"}, "test_fill_inplace_multiple_paragraphs": {"rug_fuzz_0": "\"First paragraph.\\n\\nSecond paragraph.\\n\\nThird paragraph.\"", "rug_fuzz_1": "50"}}, "tests_llm_16_22_llm_16_22": {"fill_slow_path_short_text": {"rug_fuzz_0": "10", "rug_fuzz_1": "\"short text\""}, "fill_slow_path_long_text": {"rug_fuzz_0": "10", "rug_fuzz_1": "\"\"", "rug_fuzz_2": "\"\"", "rug_fuzz_3": "true", "rug_fuzz_4": "\"a longer piece of text that should be broken down into several lines\""}, "fill_slow_path_custom_indent": {"rug_fuzz_0": "10", "rug_fuzz_1": "\"> \"", "rug_fuzz_2": "\":: \"", "rug_fuzz_3": "\"indented text should be broken down with consistent indentation\""}, "fill_slow_path_long_word": {"rug_fuzz_0": "10", "rug_fuzz_1": "\"* \"", "rug_fuzz_2": "\"- \"", "rug_fuzz_3": "true", "rug_fuzz_4": "\"antidisestablishmentarianism is a long word\""}, "fill_slow_path_crlf_line_ending": {"rug_fuzz_0": "20", "rug_fuzz_1": "\"this text should be broken with CRLF\""}}, "tests_llm_16_49": {"test_line_numbers_get": {"rug_fuzz_0": "0", "rug_fuzz_1": "0", "rug_fuzz_2": "1", "rug_fuzz_3": "2", "rug_fuzz_4": "2", "rug_fuzz_5": "1", "rug_fuzz_6": "2", "rug_fuzz_7": "2", "rug_fuzz_8": "3", "rug_fuzz_9": "3", "rug_fuzz_10": "6"}}, "tests_llm_16_50_llm_16_50": {"test_new_line_numbers": {"rug_fuzz_0": "10", "rug_fuzz_1": "0"}}, "tests_llm_16_52": {"test_wrap_optimal_fit_simple_case": {"rug_fuzz_0": "\"To\"", "rug_fuzz_1": "10.0"}, "test_wrap_optimal_fit_overflow_error": {"rug_fuzz_0": "\"infinity\""}, "test_wrap_optimal_fit_overflows_still_wrap": {"rug_fuzz_0": "\"some\"", "rug_fuzz_1": "0", "rug_fuzz_2": "15.0"}, "test_wrap_optimal_fit_with_hyphen_penalty": {"rug_fuzz_0": "\"hyphen-\"", "rug_fuzz_1": "\" \"", "rug_fuzz_2": "\"-\"", "rug_fuzz_3": "7", "rug_fuzz_4": "50", "rug_fuzz_5": "10.0"}}, "tests_llm_16_39_llm_16_39": {"test_find_words_unicode_break_properties": {"rug_fuzz_0": "\"The quick (\\\"brown\\\") fox can't jump 32.3 feet, right?\""}, "test_find_words_unicode_break_properties_with_ansi": {"rug_fuzz_0": "\"\\x1b[31mHello\\x1b[0m World\""}, "test_find_words_unicode_break_properties_empty_string": {"rug_fuzz_0": "\"\""}, "test_find_words_unicode_break_properties_with_shy": {"rug_fuzz_0": "\"hy\\u{00AD}phen\\u{00AD}ation\""}}, "tests_llm_16_40": {"test_strip_ansi_escape_sequences": {"rug_fuzz_0": "\"\\x1B[31mRed\\x1B[0m Normal \\x1B[32mGreen\\x1B[0m\"", "rug_fuzz_1": "\"Red Normal Green\""}, "test_strip_ansi_escape_sequences_empty": {"rug_fuzz_0": "\"\"", "rug_fuzz_1": "\"\""}, "test_strip_ansi_escape_sequences_no_ansi": {"rug_fuzz_0": "\"No special characters\"", "rug_fuzz_1": "\"No special characters\""}, "test_strip_ansi_escape_sequences_only_ansi": {"rug_fuzz_0": "\"\\x1B[31m\\x1B[0m\"", "rug_fuzz_1": "\"\""}, "test_strip_ansi_escape_sequences_nested_ansi": {"rug_fuzz_0": "\"\\x1B[1mBold \\x1B[31mRed\\x1B[0m\\x1B[22m Normal\"", "rug_fuzz_1": "\"Bold Red Normal\""}}, "tests_llm_16_1": {"penalty_width_empty_penalty": {"rug_fuzz_0": "\"example\"", "rug_fuzz_1": "\" \"", "rug_fuzz_2": "\"\"", "rug_fuzz_3": "7"}, "penalty_width_non_empty_penalty": {"rug_fuzz_0": "\"example\"", "rug_fuzz_1": "\" \"", "rug_fuzz_2": "\"-\"", "rug_fuzz_3": "7"}, "penalty_width_with_multiple_chars_penalty": {"rug_fuzz_0": "\"example\"", "rug_fuzz_1": "\" \"", "rug_fuzz_2": "\"--\"", "rug_fuzz_3": "7"}}, "tests_llm_16_2": {"whitespace_width_test": {"rug_fuzz_0": "\"Hello\"", "rug_fuzz_1": "\"     \"", "rug_fuzz_2": "\"\"", "rug_fuzz_3": "5", "rug_fuzz_4": "\"Hello\"", "rug_fuzz_5": "\"\"", "rug_fuzz_6": "\"\"", "rug_fuzz_7": "5", "rug_fuzz_8": "\"Hello\"", "rug_fuzz_9": "\" \\t\\n\"", "rug_fuzz_10": "\"\"", "rug_fuzz_11": "5"}}, "tests_llm_16_3": {"test_word_width": {"rug_fuzz_0": "\"test\"", "rug_fuzz_1": "\"   \"", "rug_fuzz_2": "\"\"", "rug_fuzz_3": "4"}}, "tests_llm_16_4": {"word_deref": {"rug_fuzz_0": "\"hello\""}}, "tests_llm_16_14": {"test_break_apart": {"rug_fuzz_0": "\"HelloWorld\"", "rug_fuzz_1": "5", "rug_fuzz_2": "\"Hello  \"", "rug_fuzz_3": "3", "rug_fuzz_4": "\"Hello-\"", "rug_fuzz_5": "\"\"", "rug_fuzz_6": "\"-\"", "rug_fuzz_7": "6", "rug_fuzz_8": "5", "rug_fuzz_9": "\"Hey\"", "rug_fuzz_10": "5", "rug_fuzz_11": "\"\"", "rug_fuzz_12": "5"}}, "tests_llm_16_19_llm_16_19": {"test_skip_ansi_escape_sequence": {"rug_fuzz_0": "\"[31;1;4mHello World\\x1B[0m\"", "rug_fuzz_1": "\"Hello \\x1B[31;1;4mWorld\\x1B[0m\"", "rug_fuzz_2": "0", "rug_fuzz_3": "6", "rug_fuzz_4": "\"Hello World\"", "rug_fuzz_5": "\"\\x1BHello World\""}}, "tests_llm_16_13": {"wrap_columns_zero_columns": {"rug_fuzz_0": "\"This text should panic because we're trying to wrap it into zero columns.\"", "rug_fuzz_1": "0", "rug_fuzz_2": "30", "rug_fuzz_3": "\"\"", "rug_fuzz_4": "\"\"", "rug_fuzz_5": "\"\""}, "wrap_columns_single_column": {"rug_fuzz_0": "\"This text is wrapped into a single column.\"", "rug_fuzz_1": "1", "rug_fuzz_2": "30", "rug_fuzz_3": "\"\"", "rug_fuzz_4": "\"\"", "rug_fuzz_5": "\"\""}, "wrap_columns_multiple_columns": {"rug_fuzz_0": "\"This text is wrapped into multiple columns.\"", "rug_fuzz_1": "2", "rug_fuzz_2": "30", "rug_fuzz_3": "\"|\"", "rug_fuzz_4": "\"|\"", "rug_fuzz_5": "\"|\""}, "wrap_columns_with_gaps": {"rug_fuzz_0": "\"This text is wrapped with gaps around.\"", "rug_fuzz_1": "2", "rug_fuzz_2": "40", "rug_fuzz_3": "\" \"", "rug_fuzz_4": "\" | \"", "rug_fuzz_5": "\" \""}, "wrap_columns_with_options": {"rug_fuzz_0": "\"This text is wrapped with custom options.\"", "rug_fuzz_1": "40", "rug_fuzz_2": "false", "rug_fuzz_3": "2", "rug_fuzz_4": "\" \"", "rug_fuzz_5": "\"|\"", "rug_fuzz_6": "\" \""}}, "tests_llm_16_6": {"test_from_options": {"rug_fuzz_0": "20", "rug_fuzz_1": "\"->\"", "rug_fuzz_2": "\"--\"", "rug_fuzz_3": "false"}}, "tests_llm_16_7": {"options_from_usize": {"rug_fuzz_0": "42"}}, "tests_llm_16_26": {"test_break_words": {"rug_fuzz_0": "10", "rug_fuzz_1": "true", "rug_fuzz_2": "false"}}, "tests_llm_16_27": {"test_initial_indent": {"rug_fuzz_0": "80", "rug_fuzz_1": "\"* \"", "rug_fuzz_2": "\"\"", "rug_fuzz_3": "80", "rug_fuzz_4": "\">> \""}}, "tests_llm_16_28_llm_16_28": {"test_line_ending_crlf": {"rug_fuzz_0": "15"}, "test_line_ending_lf": {"rug_fuzz_0": "15"}, "test_line_ending_retains_other_fields": {"rug_fuzz_0": "42", "rug_fuzz_1": "\">> \"", "rug_fuzz_2": "\"|| \"", "rug_fuzz_3": "false"}}, "tests_llm_16_29": {"options_new_default_values": {"rug_fuzz_0": "80"}}, "tests_llm_16_30": {"test_subsequent_indent": {"rug_fuzz_0": "15", "rug_fuzz_1": "\"-> \"", "rug_fuzz_2": "\"\"", "rug_fuzz_3": "\"-> \"", "rug_fuzz_4": "\"-->\"", "rug_fuzz_5": "\"\""}}, "tests_llm_16_32_llm_16_32": {"test_options_word_splitter": {"rug_fuzz_0": "10"}}}