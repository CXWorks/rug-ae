//! Reversi
//!
//! Check struct [`Reversi`](https://docs.rs/gamie/*/gamie/reversi/struct.Reversi.html) for more information
//!
//! # Examples
//!
//! ```rust
//! # fn reversi() {
//! use gamie::reversi::{Reversi, Player as ReversiPlayer};
//!
//! let mut game = Reversi::new().unwrap();
//!
//! game.place(ReversiPlayer::Player0, 2, 4).unwrap();
//!
//! // The next player may not be able to place the piece in any position, so check the output of `get_next_player()`
//! assert_eq!(game.get_next_player(), ReversiPlayer::Player1);
//!
//! game.place(ReversiPlayer::Player1, 2, 3).unwrap();
//!
//! // ...
//! # }
//! ```

use crate::std_lib::{iter, Infallible, Ordering};

#[cfg(feature = "serde")]
use serde::{Deserialize, Serialize};

use snafu::Snafu;

/// Reversi
///
/// Passing an invalid position to a method will cause panic. Check the target position validity first when dealing with user input
#[derive(Clone, Debug)]
#[cfg_attr(feature = "serde", derive(Serialize, Deserialize))]
pub struct Reversi {
    board: [[Option<Player>; 8]; 8],
    next: Player,
    status: GameState,
}

/// Players
#[derive(Clone, Copy, Debug, Eq, PartialEq)]
#[cfg_attr(feature = "serde", derive(Serialize, Deserialize))]
pub enum Player {
    Player0,
    Player1,
}

impl Player {
    /// Get the opposite player
    pub fn other(self) -> Self {
        match self {
            Player::Player0 => Player::Player1,
            Player::Player1 => Player::Player0,
        }
    }
}

/// Game status
#[derive(Clone, Debug, Eq, PartialEq)]
#[cfg_attr(feature = "serde", derive(Serialize, Deserialize))]
pub enum GameState {
    Win(Player),
    Tie,
    InProgress,
}

impl Reversi {
    /// Create a new Reversi game
    pub fn new() -> Result<Self, Infallible> {
        let mut board = [[None; 8]; 8];
        board[3][3] = Some(Player::Player0);
        board[4][4] = Some(Player::Player0);
        board[3][4] = Some(Player::Player1);
        board[4][3] = Some(Player::Player1);

        Ok(Self {
            board,
            next: Player::Player0,
            status: GameState::InProgress,
        })
    }

    /// Get a cell reference from the game board
    /// Panic when target position out of bounds
    pub fn get(&self, row: usize, col: usize) -> &Option<Player> {
        &self.board[row][col]
    }

    /// Check if the game was end
    pub fn is_ended(&self) -> bool {
        self.status != GameState::InProgress
    }

    /// Get the winner of the game. Return `None` when the game is tied or not end yet
    pub fn winner(&self) -> Option<Player> {
        if let GameState::Win(player) = self.status {
            Some(player)
        } else {
            None
        }
    }

    /// Get the game status
    pub fn status(&self) -> &GameState {
        &self.status
    }

    /// Get the next player
    pub fn get_next_player(&self) -> Player {
        self.next
    }

    /// Place a piece on the board
    /// Panic when target position out of bounds
    pub fn place(&mut self, player: Player, row: usize, col: usize) -> Result<(), ReversiError> {
        self.simple_check_position_validity(row, col, player)?;

        let mut flipped = false;

        for dir in Direction::iter() {
            if let Some((to_row, to_col)) =
                self.check_occupied_line_in_direction(row, col, dir, player)
            {
                self.flip(row, col, to_row, to_col, dir, player);
                flipped = true;
            }
        }

        if flipped {
            self.next = player.other();

            if !self.can_player_move(player.other()) {
                self.next = player;

                if !self.can_player_move(player) {
                    self.check_state();
                }
            }

            Ok(())
        } else {
            Err(ReversiError::InvalidPosition)
        }
    }

    /// Check if a position is valid for placing piece
    /// Panic when target position out of bounds
    pub fn check_position_validity(
        &self,
        row: usize,
        col: usize,
        player: Player,
    ) -> Result<(), ReversiError> {
        self.simple_check_position_validity(row, col, player)?;

        if Direction::iter()
            .map(|dir| self.check_occupied_line_in_direction(row, col, dir, player))
            .any(|o| o.is_some())
        {
            Ok(())
        } else {
            Err(ReversiError::InvalidPosition)
        }
    }

    fn simple_check_position_validity(
        &self,
        row: usize,
        col: usize,
        player: Player,
    ) -> Result<(), ReversiError> {
        if self.is_ended() {
            return Err(ReversiError::GameEnded);
        }

        if player != self.next {
            return Err(ReversiError::WrongPlayer);
        }

        if self.board[row][col].is_some() {
            return Err(ReversiError::OccupiedPosition);
        }

        Ok(())
    }

    fn can_player_move(&self, player: Player) -> bool {
        for row in 0..8 {
            for col in 0..8 {
                if self.board[row][col].is_none()
                    && self.check_position_validity(row, col, player).is_ok()
                {
                    return true;
                }
            }
        }

        false
    }

    fn check_state(&mut self) {
        let mut black_count = 0;
        let mut white_count = 0;

        for cell in self.board.iter().flatten().flatten() {
            match cell {
                Player::Player0 => black_count += 1,
                Player::Player1 => white_count += 1,
            }
        }

        self.status = match black_count.cmp(&white_count) {
            Ordering::Less => GameState::Win(Player::Player1),
            Ordering::Equal => GameState::Tie,
            Ordering::Greater => GameState::Win(Player::Player0),
        };
    }

    fn flip(
        &mut self,
        from_row: usize,
        from_col: usize,
        to_row: usize,
        to_col: usize,
        dir: Direction,
        player: Player,
    ) {
        self.iter_positions_in_direction_from(from_row, from_col, dir)
            .take_while(|(row, col)| *row != to_row || *col != to_col)
            .for_each(|(row, col)| {
                self.board[row][col] = Some(player);
            });
    }

    fn check_occupied_line_in_direction(
        &self,
        row: usize,
        col: usize,
        dir: Direction,
        player: Player,
    ) -> Option<(usize, usize)> {
        let mut pos = self.iter_positions_in_direction_from(row, col, dir);

        pos.next();

        let first = if let Some(pos) = pos.next() {
            pos
        } else {
            return None;
        };

        if self.board[first.0][first.1] != Some(player.other()) {
            return None;
        }

        for (row, col) in pos {
            match self.board[row][col] {
                Some(piece) if piece == player.other() => continue,
                Some(_) => return Some((row, col)),
                None => return None,
            }
        }

        None
    }

    fn iter_positions_in_direction_from(
        &self,
        row: usize,
        col: usize,
        dir: Direction,
    ) -> impl Iterator<Item = (usize, usize)> {
        iter::successors(Some((row, col)), move |(row, col)| {
            let (offset_row, offset_col) = dir.as_offset();
            Some((
                (*row as i8 + offset_row) as usize,
                (*col as i8 + offset_col) as usize,
            ))
        })
        .take_while(|(row, col)| *row < 8 && *col < 8)
    }
}

#[derive(Clone, Copy, Debug, PartialEq)]
enum Direction {
    Upper,
    UpperRight,
    Right,
    LowerRight,
    Lower,
    LowerLeft,
    Left,
    UpperLeft,
}

impl Direction {
    fn as_offset(&self) -> (i8, i8) {
        match self {
            Direction::Upper => (-1, 0),
            Direction::UpperRight => (-1, 1),
            Direction::Right => (0, 1),
            Direction::LowerRight => (1, 1),
            Direction::Lower => (1, 0),
            Direction::LowerLeft => (1, -1),
            Direction::Left => (0, -1),
            Direction::UpperLeft => (-1, -1),
        }
    }

    fn iter() -> impl Iterator<Item = Self> {
        [
            Direction::Upper,
            Direction::UpperRight,
            Direction::Right,
            Direction::LowerRight,
            Direction::Lower,
            Direction::LowerLeft,
            Direction::Left,
            Direction::UpperLeft,
        ]
        .into_iter()
    }
}

/// Errors that can occur when placing a piece on the board
#[derive(Debug, Eq, PartialEq, Snafu)]
pub enum ReversiError {
    #[snafu(display("Wrong player"))]
    WrongPlayer,
    #[snafu(display("Position already occupied"))]
    OccupiedPosition,
    #[snafu(display("Invalid position"))]
    InvalidPosition,
    #[snafu(display("The game was already end"))]
    GameEnded,
}

#[cfg(test)]
mod tests {
    use crate::reversi::*;

    #[test]
    fn test() {
        let mut game = Reversi::new().unwrap();

        assert_eq!(game.place(Player::Player0, 2, 4), Ok(()));

        assert_eq!(game.place(Player::Player1, 2, 3), Ok(()));

        assert_eq!(
            game.place(Player::Player1, 2, 6),
            Err(ReversiError::WrongPlayer)
        );

        assert_eq!(
            game.place(Player::Player0, 2, 6),
            Err(ReversiError::InvalidPosition)
        );
    }
}

#[cfg(test)]
mod rusty_tests {
	use crate::*;
	use std::cmp::PartialEq;
	use std::clone::Clone;
	use snafu::ErrorCompat;
	use std::cmp::Eq;
#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_3554() {
    rusty_monitor::set_test_id(3554);
    let mut player_0: gomoku::Player = crate::gomoku::Player::Player0;
    let mut player_1: gomoku::Player = crate::gomoku::Player::other(player_0);
    let mut minesweepererror_0: minesweeper::MinesweeperError = crate::minesweeper::MinesweeperError::TooManyMines;
    let mut minesweepererror_0_ref_0: &minesweeper::MinesweeperError = &mut minesweepererror_0;
    let mut gamestate_0: minesweeper::GameState = crate::minesweeper::GameState::Win;
    let mut gamestate_0_ref_0: &minesweeper::GameState = &mut gamestate_0;
    let mut gamestate_1: minesweeper::GameState = crate::minesweeper::GameState::Win;
    let mut minesweepererror_1: minesweeper::MinesweeperError = crate::minesweeper::MinesweeperError::AlreadyRevealed;
    let mut minesweepererror_1_ref_0: &minesweeper::MinesweeperError = &mut minesweepererror_1;
    let mut gamestate_2: minesweeper::GameState = crate::minesweeper::GameState::Win;
    let mut gamestate_2_ref_0: &minesweeper::GameState = &mut gamestate_2;
    let mut gamestate_3: minesweeper::GameState = crate::minesweeper::GameState::Win;
    let mut gamestate_3_ref_0: &minesweeper::GameState = &mut gamestate_3;
    let mut minesweepererror_2: minesweeper::MinesweeperError = crate::minesweeper::MinesweeperError::AlreadyRevealed;
    let mut minesweepererror_2_ref_0: &minesweeper::MinesweeperError = &mut minesweepererror_2;
    let mut gamestate_1_ref_0: &minesweeper::GameState = &mut gamestate_1;
    let mut gamestate_4: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut result_0: std::result::Result<crate::connect_four::ConnectFour, std::convert::Infallible> = crate::connect_four::ConnectFour::new();
    let mut minesweepererror_3: minesweeper::MinesweeperError = crate::minesweeper::MinesweeperError::AlreadyRevealed;
    let mut minesweepererror_3_ref_0: &minesweeper::MinesweeperError = &mut minesweepererror_3;
    let mut gamestate_4_ref_0: &reversi::GameState = &mut gamestate_4;
    let mut reversierror_0: reversi::ReversiError = crate::reversi::ReversiError::WrongPlayer;
    let mut reversierror_0_ref_0: &reversi::ReversiError = &mut reversierror_0;
    let mut option_0: std::option::Option<&snafu::Backtrace> = snafu::ErrorCompat::backtrace(reversierror_0_ref_0);
    let mut player_2: tictactoe::Player = crate::tictactoe::Player::Player0;
    let mut player_2_ref_0: &tictactoe::Player = &mut player_2;
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_335() {
    rusty_monitor::set_test_id(335);
    let mut gamestate_0: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_0: reversi::Player = crate::reversi::Player::Player0;
    let mut player_1: reversi::Player = crate::reversi::Player::Player1;
    let mut player_2: reversi::Player = crate::reversi::Player::other(player_1);
    let mut option_0: std::option::Option<reversi::Player> = std::option::Option::Some(player_2);
    let mut player_3: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1: std::option::Option<reversi::Player> = std::option::Option::Some(player_3);
    let mut player_4: reversi::Player = crate::reversi::Player::Player0;
    let mut option_2: std::option::Option<reversi::Player> = std::option::Option::Some(player_4);
    let mut player_5: reversi::Player = crate::reversi::Player::Player0;
    let mut option_3: std::option::Option<reversi::Player> = std::option::Option::Some(player_5);
    let mut option_4: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_5: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_6: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_7: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_0: [std::option::Option<reversi::Player>; 8] = [option_7, option_6, option_5, option_4, option_3, option_2, option_1, option_0];
    let mut player_6: reversi::Player = crate::reversi::Player::Player0;
    let mut player_7: reversi::Player = crate::reversi::Player::other(player_6);
    let mut option_8: std::option::Option<reversi::Player> = std::option::Option::Some(player_7);
    let mut option_9: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_8: reversi::Player = crate::reversi::Player::Player1;
    let mut option_10: std::option::Option<reversi::Player> = std::option::Option::Some(player_8);
    let mut option_11: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_9: reversi::Player = crate::reversi::Player::Player0;
    let mut player_10: reversi::Player = crate::reversi::Player::other(player_9);
    let mut option_12: std::option::Option<reversi::Player> = std::option::Option::Some(player_10);
    let mut option_13: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_11: reversi::Player = crate::reversi::Player::Player0;
    let mut option_14: std::option::Option<reversi::Player> = std::option::Option::Some(player_11);
    let mut player_12: reversi::Player = crate::reversi::Player::Player0;
    let mut player_13: reversi::Player = crate::reversi::Player::other(player_12);
    let mut option_15: std::option::Option<reversi::Player> = std::option::Option::Some(player_13);
    let mut option_array_1: [std::option::Option<reversi::Player>; 8] = [option_15, option_14, option_13, option_12, option_11, option_10, option_9, option_8];
    let mut option_16: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_14: reversi::Player = crate::reversi::Player::Player1;
    let mut option_17: std::option::Option<reversi::Player> = std::option::Option::Some(player_14);
    let mut player_15: reversi::Player = crate::reversi::Player::Player1;
    let mut option_18: std::option::Option<reversi::Player> = std::option::Option::Some(player_15);
    let mut option_19: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_20: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_16: reversi::Player = crate::reversi::Player::Player0;
    let mut player_17: reversi::Player = crate::reversi::Player::other(player_16);
    let mut option_21: std::option::Option<reversi::Player> = std::option::Option::Some(player_17);
    let mut player_18: reversi::Player = crate::reversi::Player::Player1;
    let mut option_22: std::option::Option<reversi::Player> = std::option::Option::Some(player_18);
    let mut player_19: reversi::Player = crate::reversi::Player::Player0;
    let mut player_20: reversi::Player = crate::reversi::Player::other(player_19);
    let mut option_23: std::option::Option<reversi::Player> = std::option::Option::Some(player_20);
    let mut option_array_2: [std::option::Option<reversi::Player>; 8] = [option_23, option_22, option_21, option_20, option_19, option_18, option_17, option_16];
    let mut player_21: reversi::Player = crate::reversi::Player::Player1;
    let mut option_24: std::option::Option<reversi::Player> = std::option::Option::Some(player_21);
    let mut player_22: reversi::Player = crate::reversi::Player::Player1;
    let mut option_25: std::option::Option<reversi::Player> = std::option::Option::Some(player_22);
    let mut option_26: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_23: reversi::Player = crate::reversi::Player::Player1;
    let mut option_27: std::option::Option<reversi::Player> = std::option::Option::Some(player_23);
    let mut player_24: reversi::Player = crate::reversi::Player::Player1;
    let mut option_28: std::option::Option<reversi::Player> = std::option::Option::Some(player_24);
    let mut option_29: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_25: reversi::Player = crate::reversi::Player::Player1;
    let mut player_26: reversi::Player = crate::reversi::Player::other(player_25);
    let mut option_30: std::option::Option<reversi::Player> = std::option::Option::Some(player_26);
    let mut option_31: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_3: [std::option::Option<reversi::Player>; 8] = [option_31, option_30, option_29, option_28, option_27, option_26, option_25, option_24];
    let mut player_27: reversi::Player = crate::reversi::Player::Player0;
    let mut option_32: std::option::Option<reversi::Player> = std::option::Option::Some(player_27);
    let mut option_33: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_34: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_28: reversi::Player = crate::reversi::Player::Player1;
    let mut option_35: std::option::Option<reversi::Player> = std::option::Option::Some(player_28);
    let mut player_29: reversi::Player = crate::reversi::Player::Player0;
    let mut option_36: std::option::Option<reversi::Player> = std::option::Option::Some(player_29);
    let mut player_30: reversi::Player = crate::reversi::Player::Player0;
    let mut player_31: reversi::Player = crate::reversi::Player::other(player_30);
    let mut option_37: std::option::Option<reversi::Player> = std::option::Option::Some(player_31);
    let mut option_38: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_32: reversi::Player = crate::reversi::Player::Player0;
    let mut option_39: std::option::Option<reversi::Player> = std::option::Option::Some(player_32);
    let mut option_array_4: [std::option::Option<reversi::Player>; 8] = [option_39, option_38, option_37, option_36, option_35, option_34, option_33, option_32];
    let mut option_40: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_33: reversi::Player = crate::reversi::Player::Player0;
    let mut option_41: std::option::Option<reversi::Player> = std::option::Option::Some(player_33);
    let mut option_42: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_43: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_44: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_34: reversi::Player = crate::reversi::Player::Player1;
    let mut option_45: std::option::Option<reversi::Player> = std::option::Option::Some(player_34);
    let mut option_46: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_47: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_5: [std::option::Option<reversi::Player>; 8] = [option_47, option_46, option_45, option_44, option_43, option_42, option_41, option_40];
    let mut player_35: reversi::Player = crate::reversi::Player::Player0;
    let mut option_48: std::option::Option<reversi::Player> = std::option::Option::Some(player_35);
    let mut option_49: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_50: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_51: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_52: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_53: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_36: reversi::Player = crate::reversi::Player::Player0;
    let mut option_54: std::option::Option<reversi::Player> = std::option::Option::Some(player_36);
    let mut option_55: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_6: [std::option::Option<reversi::Player>; 8] = [option_55, option_54, option_53, option_52, option_51, option_50, option_49, option_48];
    let mut player_37: reversi::Player = crate::reversi::Player::Player0;
    let mut player_38: reversi::Player = crate::reversi::Player::other(player_37);
    let mut option_56: std::option::Option<reversi::Player> = std::option::Option::Some(player_38);
    let mut player_39: reversi::Player = crate::reversi::Player::Player0;
    let mut option_57: std::option::Option<reversi::Player> = std::option::Option::Some(player_39);
    let mut option_58: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_40: reversi::Player = crate::reversi::Player::Player0;
    let mut option_59: std::option::Option<reversi::Player> = std::option::Option::Some(player_40);
    let mut player_41: reversi::Player = crate::reversi::Player::Player1;
    let mut option_60: std::option::Option<reversi::Player> = std::option::Option::Some(player_41);
    let mut player_42: reversi::Player = crate::reversi::Player::Player1;
    let mut option_61: std::option::Option<reversi::Player> = std::option::Option::Some(player_42);
    let mut option_62: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_63: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_7: [std::option::Option<reversi::Player>; 8] = [option_63, option_62, option_61, option_60, option_59, option_58, option_57, option_56];
    let mut option_array_array_0: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_7, option_array_6, option_array_5, option_array_4, option_array_3, option_array_2, option_array_1, option_array_0];
    let mut reversi_0: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_0, next: player_0, status: gamestate_0};
    let mut reversi_0_ref_0: &mut crate::reversi::Reversi = &mut reversi_0;
    let mut player_43: connect_four::Player = crate::connect_four::Player::Player0;
    let mut player_43_ref_0: &connect_four::Player = &mut player_43;
    let mut vec_0: std::vec::Vec<(usize, usize)> = std::vec::Vec::new();
    let mut player_44: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut gamestate_1: gomoku::GameState = crate::gomoku::GameState::InProgress;
    let mut player_45: gomoku::Player = crate::gomoku::Player::Player0;
    let mut player_46: gomoku::Player = crate::gomoku::Player::Player0;
    let mut player_47: gomoku::Player = crate::gomoku::Player::other(player_46);
    let mut gamestate_2: connect_four::GameState = crate::connect_four::GameState::InProgress;
    let mut player_48: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut player_49: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut gamestate_3: connect_four::GameState = crate::connect_four::GameState::InProgress;
    let mut gamestate_2_ref_0: &connect_four::GameState = &mut gamestate_2;
    let mut gamestate_4: connect_four::GameState = crate::connect_four::GameState::InProgress;
    let mut player_50: connect_four::Player = crate::connect_four::Player::Player0;
    let mut gamestate_5: minesweeper::GameState = crate::minesweeper::GameState::Win;
    let mut vec_1: std::vec::Vec<(usize, usize)> = std::vec::Vec::new();
    let mut gamestate_6: minesweeper::GameState = crate::minesweeper::GameState::Exploded(vec_0);
    let mut gamestate_5_ref_0: &minesweeper::GameState = &mut gamestate_5;
    let mut gamestate_7: minesweeper::GameState = crate::minesweeper::GameState::InProgress;
    let mut player_51: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut player_49_ref_0: &tictactoe::Player = &mut player_49;
    let mut player_50_ref_0: &connect_four::Player = &mut player_50;
    crate::reversi::Reversi::check_state(reversi_0_ref_0);
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_206() {
    rusty_monitor::set_test_id(206);
    let mut player_0: reversi::Player = crate::reversi::Player::Player0;
    let mut player_1: reversi::Player = crate::reversi::Player::other(player_0);
    let mut reversierror_0: reversi::ReversiError = crate::reversi::ReversiError::OccupiedPosition;
    let mut reversierror_0_ref_0: &reversi::ReversiError = &mut reversierror_0;
    let mut reversierror_1: reversi::ReversiError = crate::reversi::ReversiError::InvalidPosition;
    let mut reversierror_1_ref_0: &reversi::ReversiError = &mut reversierror_1;
    let mut reversierror_2: reversi::ReversiError = crate::reversi::ReversiError::InvalidPosition;
    let mut reversierror_2_ref_0: &reversi::ReversiError = &mut reversierror_2;
    let mut player_2: connect_four::Player = crate::connect_four::Player::Player0;
    let mut player_3: connect_four::Player = crate::connect_four::Player::other(player_2);
    let mut player_4: reversi::Player = crate::reversi::Player::Player0;
    let mut player_5: reversi::Player = crate::reversi::Player::other(player_4);
    let mut player_6: connect_four::Player = crate::connect_four::Player::Player1;
    let mut result_0: std::result::Result<crate::connect_four::ConnectFour, std::convert::Infallible> = crate::connect_four::ConnectFour::new();
    let mut direction_0: reversi::Direction = crate::reversi::Direction::UpperRight;
    let mut gamestate_0: connect_four::GameState = crate::connect_four::GameState::Win(player_6);
    let mut tictactoeerror_0: tictactoe::TicTacToeError = crate::tictactoe::TicTacToeError::OccupiedPosition;
    let mut tictactoeerror_0_ref_0: &tictactoe::TicTacToeError = &mut tictactoeerror_0;
    let mut direction_1: reversi::Direction = crate::reversi::Direction::UpperRight;
    let mut player_7: reversi::Player = crate::reversi::Player::other(player_1);
    let mut tictactoeerror_1: tictactoe::TicTacToeError = crate::tictactoe::TicTacToeError::WrongPlayer;
    let mut connectfourerror_0: connect_four::ConnectFourError = crate::connect_four::ConnectFourError::ColumnFilled;
    let mut gamestate_1: connect_four::GameState = crate::connect_four::GameState::InProgress;
    let mut player_8: connect_four::Player = crate::connect_four::Player::other(player_3);
    let mut direction_2: reversi::Direction = crate::reversi::Direction::UpperRight;
    let mut direction_3: reversi::Direction = crate::reversi::Direction::UpperRight;
    let mut bool_0: bool = std::cmp::PartialEq::eq(reversierror_0_ref_0, reversierror_2_ref_0);
    let mut reversierror_3: reversi::ReversiError = crate::reversi::ReversiError::OccupiedPosition;
    let mut gomokuerror_0: gomoku::GomokuError = crate::gomoku::GomokuError::WrongPlayer;
    let mut gamestate_2: reversi::GameState = crate::reversi::GameState::InProgress;
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_8504() {
    rusty_monitor::set_test_id(8504);
    let mut player_0: reversi::Player = crate::reversi::Player::Player0;
    let mut player_1: reversi::Player = crate::reversi::Player::other(player_0);
    let mut usize_0: usize = 1usize;
    let mut usize_1: usize = 8usize;
    let mut gamestate_0: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_2: reversi::Player = crate::reversi::Player::Player0;
    let mut player_3: reversi::Player = crate::reversi::Player::other(player_2);
    let mut option_0: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_4: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1: std::option::Option<reversi::Player> = std::option::Option::Some(player_4);
    let mut option_2: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_3: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_4: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_5: reversi::Player = crate::reversi::Player::Player0;
    let mut option_5: std::option::Option<reversi::Player> = std::option::Option::Some(player_5);
    let mut player_6: reversi::Player = crate::reversi::Player::Player0;
    let mut player_7: reversi::Player = crate::reversi::Player::other(player_6);
    let mut option_6: std::option::Option<reversi::Player> = std::option::Option::Some(player_7);
    let mut option_7: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_0: [std::option::Option<reversi::Player>; 8] = [option_7, option_6, option_5, option_4, option_3, option_2, option_1, option_0];
    let mut option_8: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_9: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_8: reversi::Player = crate::reversi::Player::Player1;
    let mut option_10: std::option::Option<reversi::Player> = std::option::Option::Some(player_8);
    let mut option_11: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_12: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_9: reversi::Player = crate::reversi::Player::Player1;
    let mut option_13: std::option::Option<reversi::Player> = std::option::Option::Some(player_9);
    let mut option_14: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_15: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_1: [std::option::Option<reversi::Player>; 8] = [option_15, option_14, option_13, option_12, option_11, option_10, option_9, option_8];
    let mut option_16: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_10: reversi::Player = crate::reversi::Player::Player0;
    let mut option_17: std::option::Option<reversi::Player> = std::option::Option::Some(player_10);
    let mut option_18: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_19: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_11: reversi::Player = crate::reversi::Player::Player1;
    let mut player_12: reversi::Player = crate::reversi::Player::other(player_11);
    let mut option_20: std::option::Option<reversi::Player> = std::option::Option::Some(player_12);
    let mut player_13: reversi::Player = crate::reversi::Player::Player1;
    let mut option_21: std::option::Option<reversi::Player> = std::option::Option::Some(player_13);
    let mut player_14: reversi::Player = crate::reversi::Player::Player1;
    let mut option_22: std::option::Option<reversi::Player> = std::option::Option::Some(player_14);
    let mut option_23: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_2: [std::option::Option<reversi::Player>; 8] = [option_23, option_22, option_21, option_20, option_19, option_18, option_17, option_16];
    let mut player_15: reversi::Player = crate::reversi::Player::Player0;
    let mut option_24: std::option::Option<reversi::Player> = std::option::Option::Some(player_15);
    let mut option_25: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_26: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_27: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_28: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_16: reversi::Player = crate::reversi::Player::Player0;
    let mut option_29: std::option::Option<reversi::Player> = std::option::Option::Some(player_16);
    let mut option_30: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_17: reversi::Player = crate::reversi::Player::Player0;
    let mut option_31: std::option::Option<reversi::Player> = std::option::Option::Some(player_17);
    let mut option_array_3: [std::option::Option<reversi::Player>; 8] = [option_31, option_30, option_29, option_28, option_27, option_26, option_25, option_24];
    let mut player_18: reversi::Player = crate::reversi::Player::Player1;
    let mut player_19: reversi::Player = crate::reversi::Player::other(player_18);
    let mut option_32: std::option::Option<reversi::Player> = std::option::Option::Some(player_19);
    let mut option_33: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_34: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_20: reversi::Player = crate::reversi::Player::Player0;
    let mut player_21: reversi::Player = crate::reversi::Player::other(player_20);
    let mut option_35: std::option::Option<reversi::Player> = std::option::Option::Some(player_21);
    let mut option_36: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_37: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_22: reversi::Player = crate::reversi::Player::Player0;
    let mut option_38: std::option::Option<reversi::Player> = std::option::Option::Some(player_22);
    let mut option_39: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_4: [std::option::Option<reversi::Player>; 8] = [option_39, option_38, option_37, option_36, option_35, option_34, option_33, option_32];
    let mut option_40: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_41: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_42: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_43: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_44: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_23: reversi::Player = crate::reversi::Player::Player0;
    let mut player_24: reversi::Player = crate::reversi::Player::other(player_23);
    let mut option_45: std::option::Option<reversi::Player> = std::option::Option::Some(player_24);
    let mut player_25: reversi::Player = crate::reversi::Player::Player1;
    let mut option_46: std::option::Option<reversi::Player> = std::option::Option::Some(player_25);
    let mut option_47: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_5: [std::option::Option<reversi::Player>; 8] = [option_47, option_46, option_45, option_44, option_43, option_42, option_41, option_40];
    let mut option_48: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_49: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_26: reversi::Player = crate::reversi::Player::Player1;
    let mut player_27: reversi::Player = crate::reversi::Player::other(player_26);
    let mut option_50: std::option::Option<reversi::Player> = std::option::Option::Some(player_27);
    let mut option_51: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_52: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_53: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_28: reversi::Player = crate::reversi::Player::Player0;
    let mut option_54: std::option::Option<reversi::Player> = std::option::Option::Some(player_28);
    let mut option_55: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_6: [std::option::Option<reversi::Player>; 8] = [option_55, option_54, option_53, option_52, option_51, option_50, option_49, option_48];
    let mut player_29: reversi::Player = crate::reversi::Player::Player1;
    let mut option_56: std::option::Option<reversi::Player> = std::option::Option::Some(player_29);
    let mut player_30: reversi::Player = crate::reversi::Player::Player1;
    let mut option_57: std::option::Option<reversi::Player> = std::option::Option::Some(player_30);
    let mut option_58: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_59: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_31: reversi::Player = crate::reversi::Player::Player0;
    let mut option_60: std::option::Option<reversi::Player> = std::option::Option::Some(player_31);
    let mut option_61: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_62: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_63: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_7: [std::option::Option<reversi::Player>; 8] = [option_63, option_62, option_61, option_60, option_59, option_58, option_57, option_56];
    let mut option_array_array_0: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_7, option_array_6, option_array_5, option_array_4, option_array_3, option_array_2, option_array_1, option_array_0];
    let mut reversi_0: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_0, next: player_3, status: gamestate_0};
    let mut reversi_0_ref_0: &crate::reversi::Reversi = &mut reversi_0;
    let mut result_0: std::result::Result<(), reversi::ReversiError> = crate::reversi::Reversi::simple_check_position_validity(reversi_0_ref_0, usize_1, usize_0, player_1);
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_2593() {
    rusty_monitor::set_test_id(2593);
    let mut player_0: gomoku::Player = crate::gomoku::Player::Player0;
    let mut player_1: gomoku::Player = crate::gomoku::Player::other(player_0);
    let mut minesweepererror_0: minesweeper::MinesweeperError = crate::minesweeper::MinesweeperError::TooManyMines;
    let mut minesweepererror_0_ref_0: &minesweeper::MinesweeperError = &mut minesweepererror_0;
    let mut gamestate_0: minesweeper::GameState = crate::minesweeper::GameState::Win;
    let mut gamestate_0_ref_0: &minesweeper::GameState = &mut gamestate_0;
    let mut gamestate_1: minesweeper::GameState = crate::minesweeper::GameState::Win;
    let mut minesweepererror_1: minesweeper::MinesweeperError = crate::minesweeper::MinesweeperError::AlreadyRevealed;
    let mut minesweepererror_1_ref_0: &minesweeper::MinesweeperError = &mut minesweepererror_1;
    let mut gamestate_2: minesweeper::GameState = crate::minesweeper::GameState::Win;
    let mut gamestate_2_ref_0: &minesweeper::GameState = &mut gamestate_2;
    let mut gamestate_3: minesweeper::GameState = crate::minesweeper::GameState::Win;
    let mut gamestate_3_ref_0: &minesweeper::GameState = &mut gamestate_3;
    let mut minesweepererror_2: minesweeper::MinesweeperError = crate::minesweeper::MinesweeperError::AlreadyRevealed;
    let mut minesweepererror_2_ref_0: &minesweeper::MinesweeperError = &mut minesweepererror_2;
    let mut gamestate_1_ref_0: &minesweeper::GameState = &mut gamestate_1;
    let mut gamestate_4: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut result_0: std::result::Result<crate::connect_four::ConnectFour, std::convert::Infallible> = crate::connect_four::ConnectFour::new();
    let mut minesweepererror_3: minesweeper::MinesweeperError = crate::minesweeper::MinesweeperError::AlreadyRevealed;
    let mut minesweepererror_3_ref_0: &minesweeper::MinesweeperError = &mut minesweepererror_3;
    let mut reversierror_0: reversi::ReversiError = crate::reversi::ReversiError::WrongPlayer;
    let mut gamestate_4_ref_0: &reversi::GameState = &mut gamestate_4;
    let mut tuple_0: () = std::cmp::Eq::assert_receiver_is_total_eq(gamestate_4_ref_0);
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_153() {
    rusty_monitor::set_test_id(153);
    let mut direction_0: reversi::Direction = crate::reversi::Direction::Upper;
    let mut player_0: reversi::Player = crate::reversi::Player::Player0;
    let mut player_1: reversi::Player = crate::reversi::Player::Player0;
    let mut gamestate_0: reversi::GameState = crate::reversi::GameState::Win(player_1);
    let mut player_2: reversi::Player = crate::reversi::Player::Player0;
    let mut player_3: reversi::Player = crate::reversi::Player::other(player_2);
    let mut option_0: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_4: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1: std::option::Option<reversi::Player> = std::option::Option::Some(player_4);
    let mut player_5: reversi::Player = crate::reversi::Player::Player0;
    let mut player_6: reversi::Player = crate::reversi::Player::other(player_5);
    let mut player_7: reversi::Player = crate::reversi::Player::Player0;
    let mut option_2: std::option::Option<reversi::Player> = std::option::Option::Some(player_7);
    let mut option_3: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_4: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_5: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_8: reversi::Player = crate::reversi::Player::Player1;
    let mut player_9: reversi::Player = crate::reversi::Player::other(player_8);
    let mut option_6: std::option::Option<reversi::Player> = std::option::Option::Some(player_9);
    let mut option_7: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_10: reversi::Player = crate::reversi::Player::Player1;
    let mut option_8: std::option::Option<reversi::Player> = std::option::Option::Some(player_3);
    let mut option_9: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_10: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_11: reversi::Player = crate::reversi::Player::Player1;
    let mut option_11: std::option::Option<reversi::Player> = std::option::Option::Some(player_11);
    let mut option_12: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_12: reversi::Player = crate::reversi::Player::Player1;
    let mut option_13: std::option::Option<reversi::Player> = std::option::Option::Some(player_12);
    let mut option_14: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_0: [std::option::Option<reversi::Player>; 8] = [option_14, option_13, option_12, option_11, option_10, option_9, option_8, option_7];
    let mut player_13: reversi::Player = crate::reversi::Player::Player1;
    let mut player_14: reversi::Player = crate::reversi::Player::other(player_13);
    let mut option_15: std::option::Option<reversi::Player> = std::option::Option::Some(player_14);
    let mut option_16: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_17: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_15: reversi::Player = crate::reversi::Player::Player0;
    let mut option_18: std::option::Option<reversi::Player> = std::option::Option::Some(player_15);
    let mut player_16: reversi::Player = crate::reversi::Player::Player1;
    let mut option_19: std::option::Option<reversi::Player> = std::option::Option::Some(player_16);
    let mut option_20: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_21: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_17: reversi::Player = crate::reversi::Player::Player1;
    let mut option_22: std::option::Option<reversi::Player> = std::option::Option::Some(player_17);
    let mut option_array_1: [std::option::Option<reversi::Player>; 8] = [option_22, option_21, option_20, option_19, option_18, option_17, option_16, option_15];
    let mut option_23: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_18: reversi::Player = crate::reversi::Player::Player1;
    let mut player_19: reversi::Player = crate::reversi::Player::other(player_18);
    let mut option_24: std::option::Option<reversi::Player> = std::option::Option::Some(player_19);
    let mut option_25: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_26: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_27: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_28: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_29: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_20: reversi::Player = crate::reversi::Player::Player0;
    let mut option_30: std::option::Option<reversi::Player> = std::option::Option::Some(player_20);
    let mut option_array_2: [std::option::Option<reversi::Player>; 8] = [option_30, option_29, option_28, option_27, option_26, option_25, option_24, option_23];
    let mut option_31: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_21: reversi::Player = crate::reversi::Player::Player1;
    let mut option_32: std::option::Option<reversi::Player> = std::option::Option::Some(player_21);
    let mut option_33: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_34: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_35: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_36: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_37: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_22: reversi::Player = crate::reversi::Player::Player0;
    let mut option_38: std::option::Option<reversi::Player> = std::option::Option::Some(player_22);
    let mut option_array_3: [std::option::Option<reversi::Player>; 8] = [option_38, option_37, option_36, option_35, option_34, option_33, option_32, option_31];
    let mut player_23: reversi::Player = crate::reversi::Player::Player1;
    let mut player_24: reversi::Player = crate::reversi::Player::other(player_23);
    let mut option_39: std::option::Option<reversi::Player> = std::option::Option::Some(player_24);
    let mut player_25: reversi::Player = crate::reversi::Player::Player1;
    let mut option_40: std::option::Option<reversi::Player> = std::option::Option::Some(player_25);
    let mut option_41: std::option::Option<reversi::Player> = std::option::Option::Some(player_10);
    let mut option_42: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_26: reversi::Player = crate::reversi::Player::Player0;
    let mut option_43: std::option::Option<reversi::Player> = std::option::Option::Some(player_26);
    let mut option_44: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_27: reversi::Player = crate::reversi::Player::Player0;
    let mut player_28: reversi::Player = crate::reversi::Player::other(player_27);
    let mut option_45: std::option::Option<reversi::Player> = std::option::Option::Some(player_28);
    let mut option_46: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_4: [std::option::Option<reversi::Player>; 8] = [option_46, option_45, option_44, option_43, option_42, option_41, option_40, option_39];
    let mut option_47: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_48: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_49: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_50: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_29: reversi::Player = crate::reversi::Player::Player1;
    let mut option_51: std::option::Option<reversi::Player> = std::option::Option::Some(player_29);
    let mut player_30: reversi::Player = crate::reversi::Player::Player1;
    let mut option_52: std::option::Option<reversi::Player> = std::option::Option::Some(player_30);
    let mut player_31: reversi::Player = crate::reversi::Player::Player0;
    let mut option_53: std::option::Option<reversi::Player> = std::option::Option::Some(player_31);
    let mut player_32: reversi::Player = crate::reversi::Player::Player0;
    let mut option_54: std::option::Option<reversi::Player> = std::option::Option::Some(player_32);
    let mut option_array_5: [std::option::Option<reversi::Player>; 8] = [option_54, option_53, option_52, option_51, option_50, option_49, option_48, option_47];
    let mut player_33: reversi::Player = crate::reversi::Player::Player1;
    let mut player_34: reversi::Player = crate::reversi::Player::other(player_33);
    let mut option_55: std::option::Option<reversi::Player> = std::option::Option::Some(player_34);
    let mut player_35: reversi::Player = crate::reversi::Player::Player1;
    let mut option_56: std::option::Option<reversi::Player> = std::option::Option::Some(player_35);
    let mut option_57: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_36: reversi::Player = crate::reversi::Player::Player0;
    let mut option_58: std::option::Option<reversi::Player> = std::option::Option::Some(player_36);
    let mut player_37: reversi::Player = crate::reversi::Player::Player0;
    let mut option_59: std::option::Option<reversi::Player> = std::option::Option::Some(player_37);
    let mut option_60: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_38: reversi::Player = crate::reversi::Player::Player1;
    let mut player_39: reversi::Player = crate::reversi::Player::other(player_38);
    let mut option_61: std::option::Option<reversi::Player> = std::option::Option::Some(player_39);
    let mut player_40: reversi::Player = crate::reversi::Player::Player1;
    let mut option_62: std::option::Option<reversi::Player> = std::option::Option::Some(player_40);
    let mut option_array_6: [std::option::Option<reversi::Player>; 8] = [option_62, option_61, option_60, option_59, option_58, option_57, option_56, option_55];
    let mut direction_1: reversi::Direction = crate::reversi::Direction::Right;
    let mut direction_0_ref_0: &reversi::Direction = &mut direction_0;
    let mut tuple_0: (i8, i8) = crate::reversi::Direction::as_offset(direction_0_ref_0);
    let mut gomokuerror_0: gomoku::GomokuError = crate::gomoku::GomokuError::OccupiedPosition;
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_802() {
    rusty_monitor::set_test_id(802);
    let mut gamestate_0: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut gamestate_0_ref_0: &reversi::GameState = &mut gamestate_0;
    let mut gamestate_1: tictactoe::GameState = crate::tictactoe::GameState::Tie;
    let mut player_0: tictactoe::Player = crate::tictactoe::Player::Player0;
    let mut player_1: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut option_0: std::option::Option<tictactoe::Player> = std::option::Option::Some(player_1);
    let mut player_2: tictactoe::Player = crate::tictactoe::Player::Player0;
    let mut option_1: std::option::Option<tictactoe::Player> = std::option::Option::Some(player_2);
    let mut player_3: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut option_2: std::option::Option<tictactoe::Player> = std::option::Option::Some(player_3);
    let mut option_array_0: [std::option::Option<tictactoe::Player>; 3] = [option_2, option_1, option_0];
    let mut option_3: std::option::Option<tictactoe::Player> = std::option::Option::None;
    let mut option_4: std::option::Option<tictactoe::Player> = std::option::Option::None;
    let mut option_5: std::option::Option<tictactoe::Player> = std::option::Option::None;
    let mut option_array_1: [std::option::Option<tictactoe::Player>; 3] = [option_5, option_4, option_3];
    let mut player_4: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut option_6: std::option::Option<tictactoe::Player> = std::option::Option::Some(player_4);
    let mut option_7: std::option::Option<tictactoe::Player> = std::option::Option::None;
    let mut option_8: std::option::Option<tictactoe::Player> = std::option::Option::None;
    let mut option_array_2: [std::option::Option<tictactoe::Player>; 3] = [option_8, option_7, option_6];
    let mut option_array_array_0: [[std::option::Option<tictactoe::Player>; 3]; 3] = [option_array_2, option_array_1, option_array_0];
    let mut player_5: tictactoe::Player = crate::tictactoe::Player::Player0;
    let mut player_6: tictactoe::Player = crate::tictactoe::Player::other(player_5);
    let mut player_7: reversi::Player = crate::reversi::Player::Player0;
    let mut player_8: reversi::Player = crate::reversi::Player::Player0;
    let mut gamestate_2: reversi::GameState = crate::reversi::GameState::Win(player_8);
    let mut player_9: reversi::Player = crate::reversi::Player::Player1;
    let mut option_9: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_10: reversi::Player = crate::reversi::Player::Player0;
    let mut option_10: std::option::Option<reversi::Player> = std::option::Option::Some(player_10);
    let mut player_11: reversi::Player = crate::reversi::Player::Player0;
    let mut option_11: std::option::Option<reversi::Player> = std::option::Option::Some(player_11);
    let mut player_12: reversi::Player = crate::reversi::Player::Player1;
    let mut option_12: std::option::Option<reversi::Player> = std::option::Option::Some(player_12);
    let mut player_13: reversi::Player = crate::reversi::Player::Player0;
    let mut player_14: reversi::Player = crate::reversi::Player::other(player_13);
    let mut option_13: std::option::Option<reversi::Player> = std::option::Option::Some(player_14);
    let mut option_14: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_15: reversi::Player = crate::reversi::Player::Player1;
    let mut player_16: reversi::Player = crate::reversi::Player::other(player_15);
    let mut option_15: std::option::Option<reversi::Player> = std::option::Option::Some(player_16);
    let mut player_17: reversi::Player = crate::reversi::Player::Player0;
    let mut option_16: std::option::Option<reversi::Player> = std::option::Option::Some(player_17);
    let mut option_array_3: [std::option::Option<reversi::Player>; 8] = [option_16, option_15, option_14, option_13, option_12, option_11, option_10, option_9];
    let mut player_18: reversi::Player = crate::reversi::Player::Player1;
    let mut option_17: std::option::Option<reversi::Player> = std::option::Option::Some(player_7);
    let mut player_19: reversi::Player = crate::reversi::Player::Player1;
    let mut player_20: reversi::Player = crate::reversi::Player::other(player_19);
    let mut player_21: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut player_6_ref_0: &tictactoe::Player = &mut player_6;
    let mut player_22: reversi::Player = crate::reversi::Player::Player1;
    let mut player_9_ref_0: &reversi::Player = &mut player_9;
    let mut gamestate_2_ref_0: &reversi::GameState = &mut gamestate_2;
    let mut bool_0: bool = std::cmp::PartialEq::eq(gamestate_2_ref_0, gamestate_0_ref_0);
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_7630() {
    rusty_monitor::set_test_id(7630);
    let mut player_0: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut player_1: tictactoe::Player = crate::tictactoe::Player::other(player_0);
    let mut gamestate_0: tictactoe::GameState = crate::tictactoe::GameState::Win(player_1);
    let mut player_2: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut player_3: tictactoe::Player = crate::tictactoe::Player::other(player_2);
    let mut option_0: std::option::Option<tictactoe::Player> = std::option::Option::None;
    let mut option_1: std::option::Option<tictactoe::Player> = std::option::Option::None;
    let mut option_2: std::option::Option<tictactoe::Player> = std::option::Option::None;
    let mut option_array_0: [std::option::Option<tictactoe::Player>; 3] = [option_2, option_1, option_0];
    let mut player_4: tictactoe::Player = crate::tictactoe::Player::Player0;
    let mut option_3: std::option::Option<tictactoe::Player> = std::option::Option::Some(player_4);
    let mut option_4: std::option::Option<tictactoe::Player> = std::option::Option::None;
    let mut player_5: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut player_6: tictactoe::Player = crate::tictactoe::Player::other(player_5);
    let mut option_5: std::option::Option<tictactoe::Player> = std::option::Option::Some(player_6);
    let mut option_array_1: [std::option::Option<tictactoe::Player>; 3] = [option_5, option_4, option_3];
    let mut player_7: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut option_6: std::option::Option<tictactoe::Player> = std::option::Option::Some(player_7);
    let mut option_7: std::option::Option<tictactoe::Player> = std::option::Option::None;
    let mut player_8: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut option_8: std::option::Option<tictactoe::Player> = std::option::Option::Some(player_8);
    let mut option_array_2: [std::option::Option<tictactoe::Player>; 3] = [option_8, option_7, option_6];
    let mut option_array_array_0: [[std::option::Option<tictactoe::Player>; 3]; 3] = [option_array_2, option_array_1, option_array_0];
    let mut player_9: gomoku::Player = crate::gomoku::Player::Player1;
    let mut gamestate_1: tictactoe::GameState = crate::tictactoe::GameState::Tie;
    let mut gamestate_1_ref_0: &tictactoe::GameState = &mut gamestate_1;
    let mut player_10: gomoku::Player = crate::gomoku::Player::Player0;
    let mut player_11: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut player_12: tictactoe::Player = crate::tictactoe::Player::other(player_11);
    let mut player_12_ref_0: &tictactoe::Player = &mut player_12;
    let mut gamestate_2: tictactoe::GameState = crate::tictactoe::GameState::Tie;
    let mut player_13: gomoku::Player = crate::gomoku::Player::other(player_10);
    let mut gamestate_2_ref_0: &tictactoe::GameState = &mut gamestate_2;
    let mut player_13_ref_0: &gomoku::Player = &mut player_13;
    let mut gamestate_3: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut gamestate_3_ref_0: &reversi::GameState = &mut gamestate_3;
    let mut gamestate_4: reversi::GameState = std::clone::Clone::clone(gamestate_3_ref_0);
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_3136() {
    rusty_monitor::set_test_id(3136);
    let mut gamestate_0: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_0: reversi::Player = crate::reversi::Player::Player1;
    let mut player_1: reversi::Player = crate::reversi::Player::other(player_0);
    let mut option_0: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_2: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_2: reversi::Player = crate::reversi::Player::Player1;
    let mut option_3: std::option::Option<reversi::Player> = std::option::Option::Some(player_2);
    let mut option_4: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_5: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_3: reversi::Player = crate::reversi::Player::Player0;
    let mut player_4: reversi::Player = crate::reversi::Player::other(player_3);
    let mut option_6: std::option::Option<reversi::Player> = std::option::Option::Some(player_4);
    let mut option_7: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_0: [std::option::Option<reversi::Player>; 8] = [option_7, option_6, option_5, option_4, option_3, option_2, option_1, option_0];
    let mut option_8: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_9: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_5: reversi::Player = crate::reversi::Player::Player1;
    let mut option_10: std::option::Option<reversi::Player> = std::option::Option::Some(player_5);
    let mut player_6: reversi::Player = crate::reversi::Player::Player1;
    let mut option_11: std::option::Option<reversi::Player> = std::option::Option::Some(player_6);
    let mut player_7: reversi::Player = crate::reversi::Player::Player1;
    let mut option_12: std::option::Option<reversi::Player> = std::option::Option::Some(player_7);
    let mut player_8: reversi::Player = crate::reversi::Player::Player1;
    let mut option_13: std::option::Option<reversi::Player> = std::option::Option::Some(player_8);
    let mut player_9: reversi::Player = crate::reversi::Player::Player1;
    let mut option_14: std::option::Option<reversi::Player> = std::option::Option::Some(player_9);
    let mut option_15: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_10: reversi::Player = crate::reversi::Player::Player1;
    let mut player_11: reversi::Player = crate::reversi::Player::other(player_10);
    let mut option_16: std::option::Option<reversi::Player> = std::option::Option::Some(player_11);
    let mut player_12: reversi::Player = crate::reversi::Player::Player1;
    let mut option_17: std::option::Option<reversi::Player> = std::option::Option::Some(player_12);
    let mut player_13: reversi::Player = crate::reversi::Player::Player0;
    let mut player_14: reversi::Player = crate::reversi::Player::other(player_13);
    let mut option_18: std::option::Option<reversi::Player> = std::option::Option::Some(player_14);
    let mut player_15: reversi::Player = crate::reversi::Player::Player0;
    let mut player_16: reversi::Player = crate::reversi::Player::other(player_15);
    let mut option_19: std::option::Option<reversi::Player> = std::option::Option::Some(player_16);
    let mut option_20: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_17: reversi::Player = crate::reversi::Player::Player1;
    let mut option_21: std::option::Option<reversi::Player> = std::option::Option::Some(player_17);
    let mut player_18: reversi::Player = crate::reversi::Player::Player0;
    let mut player_19: reversi::Player = crate::reversi::Player::other(player_18);
    let mut option_22: std::option::Option<reversi::Player> = std::option::Option::Some(player_19);
    let mut option_array_1: [std::option::Option<reversi::Player>; 8] = [option_22, option_21, option_20, option_19, option_18, option_17, option_16, option_15];
    let mut option_23: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_24: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_20: reversi::Player = crate::reversi::Player::Player1;
    let mut option_25: std::option::Option<reversi::Player> = std::option::Option::Some(player_20);
    let mut player_21: reversi::Player = crate::reversi::Player::Player1;
    let mut player_22: reversi::Player = crate::reversi::Player::other(player_21);
    let mut player_23: reversi::Player = crate::reversi::Player::Player0;
    let mut option_26: std::option::Option<reversi::Player> = std::option::Option::Some(player_23);
    let mut player_24: reversi::Player = crate::reversi::Player::Player0;
    let mut option_27: std::option::Option<reversi::Player> = std::option::Option::Some(player_24);
    let mut option_28: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_29: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_25: reversi::Player = crate::reversi::Player::Player0;
    let mut option_30: std::option::Option<reversi::Player> = std::option::Option::Some(player_25);
    let mut player_26: reversi::Player = crate::reversi::Player::Player0;
    let mut player_27: reversi::Player = crate::reversi::Player::other(player_26);
    let mut option_31: std::option::Option<reversi::Player> = std::option::Option::Some(player_27);
    let mut player_28: reversi::Player = crate::reversi::Player::Player1;
    let mut option_32: std::option::Option<reversi::Player> = std::option::Option::Some(player_28);
    let mut option_33: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_34: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_35: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_36: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_2: [std::option::Option<reversi::Player>; 8] = [option_36, option_35, option_34, option_33, option_32, option_31, option_30, option_29];
    let mut player_29: reversi::Player = crate::reversi::Player::Player1;
    let mut option_37: std::option::Option<reversi::Player> = std::option::Option::Some(player_29);
    let mut option_38: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_39: std::option::Option<reversi::Player> = std::option::Option::Some(player_1);
    let mut option_40: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_41: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_30: reversi::Player = crate::reversi::Player::Player0;
    let mut option_42: std::option::Option<reversi::Player> = std::option::Option::Some(player_30);
    let mut option_43: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_44: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_3: [std::option::Option<reversi::Player>; 8] = [option_44, option_43, option_42, option_41, option_40, option_39, option_38, option_37];
    let mut player_31: reversi::Player = crate::reversi::Player::Player1;
    let mut option_45: std::option::Option<reversi::Player> = std::option::Option::Some(player_31);
    let mut player_32: reversi::Player = crate::reversi::Player::Player1;
    let mut option_46: std::option::Option<reversi::Player> = std::option::Option::Some(player_32);
    let mut player_33: reversi::Player = crate::reversi::Player::Player0;
    let mut player_34: reversi::Player = crate::reversi::Player::other(player_33);
    let mut option_47: std::option::Option<reversi::Player> = std::option::Option::Some(player_34);
    let mut option_48: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_35: reversi::Player = crate::reversi::Player::Player0;
    let mut option_49: std::option::Option<reversi::Player> = std::option::Option::Some(player_35);
    let mut player_36: reversi::Player = crate::reversi::Player::Player1;
    let mut option_50: std::option::Option<reversi::Player> = std::option::Option::Some(player_36);
    let mut player_37: reversi::Player = crate::reversi::Player::Player1;
    let mut option_51: std::option::Option<reversi::Player> = std::option::Option::Some(player_37);
    let mut option_52: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_4: [std::option::Option<reversi::Player>; 8] = [option_52, option_51, option_50, option_49, option_48, option_47, option_46, option_45];
    let mut option_53: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_38: reversi::Player = crate::reversi::Player::Player0;
    let mut option_54: std::option::Option<reversi::Player> = std::option::Option::Some(player_22);
    let mut player_39: reversi::Player = crate::reversi::Player::Player0;
    let mut player_40: reversi::Player = crate::reversi::Player::other(player_39);
    let mut option_55: std::option::Option<reversi::Player> = std::option::Option::Some(player_40);
    let mut player_41: reversi::Player = crate::reversi::Player::Player1;
    let mut player_42: reversi::Player = crate::reversi::Player::Player1;
    let mut option_56: std::option::Option<reversi::Player> = std::option::Option::Some(player_42);
    let mut option_57: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_43: reversi::Player = crate::reversi::Player::Player1;
    let mut option_58: std::option::Option<reversi::Player> = std::option::Option::Some(player_43);
    let mut player_44: reversi::Player = crate::reversi::Player::Player0;
    let mut option_59: std::option::Option<reversi::Player> = std::option::Option::Some(player_44);
    let mut direction_0: reversi::Direction = crate::reversi::Direction::Right;
    let mut direction_0_ref_0: &reversi::Direction = &mut direction_0;
    let mut player_45: connect_four::Player = crate::connect_four::Player::Player1;
    let mut player_46: connect_four::Player = crate::connect_four::Player::other(player_45);
    let mut reversierror_0: reversi::ReversiError = crate::reversi::ReversiError::InvalidPosition;
    let mut reversierror_0_ref_0: &reversi::ReversiError = &mut reversierror_0;
    let mut reversierror_1: reversi::ReversiError = crate::reversi::ReversiError::WrongPlayer;
    let mut reversierror_1_ref_0: &reversi::ReversiError = &mut reversierror_1;
    let mut direction_1: reversi::Direction = crate::reversi::Direction::Upper;
    let mut direction_1_ref_0: &reversi::Direction = &mut direction_1;
    let mut gamestate_1: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut gamestate_1_ref_0: &reversi::GameState = &mut gamestate_1;
    let mut minesweepererror_0: minesweeper::MinesweeperError = crate::minesweeper::MinesweeperError::GameEnded;
    let mut minesweepererror_0_ref_0: &minesweeper::MinesweeperError = &mut minesweepererror_0;
    let mut tuple_0: () = std::cmp::Eq::assert_receiver_is_total_eq(gamestate_1_ref_0);
    let mut direction_2: reversi::Direction = crate::reversi::Direction::Left;
    let mut tuple_1: () = std::cmp::Eq::assert_receiver_is_total_eq(reversierror_0_ref_0);
    let mut gamestate_2: connect_four::GameState = crate::connect_four::GameState::Win(player_46);
    let mut result_0: std::result::Result<crate::reversi::Reversi, std::convert::Infallible> = crate::reversi::Reversi::new();
    let mut direction_3: reversi::Direction = crate::reversi::Direction::LowerRight;
    let mut direction_3_ref_0: &reversi::Direction = &mut direction_3;
    let mut bool_0: bool = std::cmp::PartialEq::eq(direction_3_ref_0, direction_0_ref_0);
    let mut gamestate_3: tictactoe::GameState = crate::tictactoe::GameState::Tie;
    let mut player_47: connect_four::Player = crate::connect_four::Player::Player1;
    let mut gamestate_4: connect_four::GameState = crate::connect_four::GameState::InProgress;
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_2710() {
    rusty_monitor::set_test_id(2710);
    let mut player_0: reversi::Player = crate::reversi::Player::Player0;
    let mut gamestate_0: reversi::GameState = crate::reversi::GameState::Win(player_0);
    let mut player_1: reversi::Player = crate::reversi::Player::Player0;
    let mut player_2: reversi::Player = crate::reversi::Player::other(player_1);
    let mut option_0: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_3: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1: std::option::Option<reversi::Player> = std::option::Option::Some(player_3);
    let mut player_4: reversi::Player = crate::reversi::Player::Player0;
    let mut player_5: reversi::Player = crate::reversi::Player::other(player_4);
    let mut option_2: std::option::Option<reversi::Player> = std::option::Option::Some(player_5);
    let mut player_6: reversi::Player = crate::reversi::Player::Player0;
    let mut option_3: std::option::Option<reversi::Player> = std::option::Option::Some(player_6);
    let mut option_4: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_5: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_6: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_7: reversi::Player = crate::reversi::Player::other(player_2);
    let mut option_7: std::option::Option<reversi::Player> = std::option::Option::Some(player_7);
    let mut option_array_0: [std::option::Option<reversi::Player>; 8] = [option_7, option_6, option_5, option_4, option_3, option_2, option_1, option_0];
    let mut option_8: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_8: reversi::Player = crate::reversi::Player::Player1;
    let mut player_9: reversi::Player = crate::reversi::Player::other(player_8);
    let mut option_9: std::option::Option<reversi::Player> = std::option::Option::Some(player_9);
    let mut option_10: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_11: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_10: reversi::Player = crate::reversi::Player::Player1;
    let mut option_12: std::option::Option<reversi::Player> = std::option::Option::Some(player_10);
    let mut option_13: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_11: reversi::Player = crate::reversi::Player::Player1;
    let mut option_14: std::option::Option<reversi::Player> = std::option::Option::Some(player_11);
    let mut option_15: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_1: [std::option::Option<reversi::Player>; 8] = [option_15, option_14, option_13, option_12, option_11, option_10, option_9, option_8];
    let mut player_12: reversi::Player = crate::reversi::Player::Player1;
    let mut player_13: reversi::Player = crate::reversi::Player::other(player_12);
    let mut option_16: std::option::Option<reversi::Player> = std::option::Option::Some(player_13);
    let mut option_17: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_18: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_14: reversi::Player = crate::reversi::Player::Player0;
    let mut option_19: std::option::Option<reversi::Player> = std::option::Option::Some(player_14);
    let mut player_15: reversi::Player = crate::reversi::Player::Player1;
    let mut option_20: std::option::Option<reversi::Player> = std::option::Option::Some(player_15);
    let mut option_21: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_22: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_16: reversi::Player = crate::reversi::Player::Player1;
    let mut option_23: std::option::Option<reversi::Player> = std::option::Option::Some(player_16);
    let mut option_array_2: [std::option::Option<reversi::Player>; 8] = [option_23, option_22, option_21, option_20, option_19, option_18, option_17, option_16];
    let mut option_24: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_17: reversi::Player = crate::reversi::Player::Player1;
    let mut player_18: reversi::Player = crate::reversi::Player::other(player_17);
    let mut option_25: std::option::Option<reversi::Player> = std::option::Option::Some(player_18);
    let mut option_26: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_27: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_28: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_29: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_30: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_19: reversi::Player = crate::reversi::Player::Player0;
    let mut option_31: std::option::Option<reversi::Player> = std::option::Option::Some(player_19);
    let mut option_array_3: [std::option::Option<reversi::Player>; 8] = [option_31, option_30, option_29, option_28, option_27, option_26, option_25, option_24];
    let mut option_32: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_20: reversi::Player = crate::reversi::Player::Player1;
    let mut option_33: std::option::Option<reversi::Player> = std::option::Option::Some(player_20);
    let mut option_34: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_35: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_36: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_37: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_38: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_21: reversi::Player = crate::reversi::Player::Player0;
    let mut option_39: std::option::Option<reversi::Player> = std::option::Option::Some(player_21);
    let mut option_array_4: [std::option::Option<reversi::Player>; 8] = [option_39, option_38, option_37, option_36, option_35, option_34, option_33, option_32];
    let mut player_22: reversi::Player = crate::reversi::Player::Player1;
    let mut player_23: reversi::Player = crate::reversi::Player::other(player_22);
    let mut option_40: std::option::Option<reversi::Player> = std::option::Option::Some(player_23);
    let mut player_24: reversi::Player = crate::reversi::Player::Player1;
    let mut option_41: std::option::Option<reversi::Player> = std::option::Option::Some(player_24);
    let mut option_42: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_25: reversi::Player = crate::reversi::Player::Player0;
    let mut option_43: std::option::Option<reversi::Player> = std::option::Option::Some(player_25);
    let mut option_44: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_26: reversi::Player = crate::reversi::Player::Player0;
    let mut player_27: reversi::Player = crate::reversi::Player::other(player_26);
    let mut option_45: std::option::Option<reversi::Player> = std::option::Option::Some(player_27);
    let mut option_46: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_47: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_48: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_49: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_50: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_28: reversi::Player = crate::reversi::Player::Player1;
    let mut option_51: std::option::Option<reversi::Player> = std::option::Option::Some(player_28);
    let mut player_29: reversi::Player = crate::reversi::Player::Player0;
    let mut option_52: std::option::Option<reversi::Player> = std::option::Option::Some(player_29);
    let mut player_30: reversi::Player = crate::reversi::Player::Player0;
    let mut option_53: std::option::Option<reversi::Player> = std::option::Option::Some(player_30);
    let mut player_31: reversi::Player = crate::reversi::Player::Player1;
    let mut player_32: reversi::Player = crate::reversi::Player::other(player_31);
    let mut option_54: std::option::Option<reversi::Player> = std::option::Option::Some(player_32);
    let mut player_33: reversi::Player = crate::reversi::Player::Player1;
    let mut option_55: std::option::Option<reversi::Player> = std::option::Option::Some(player_33);
    let mut option_56: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_34: reversi::Player = crate::reversi::Player::Player0;
    let mut option_57: std::option::Option<reversi::Player> = std::option::Option::Some(player_34);
    let mut player_35: reversi::Player = crate::reversi::Player::Player0;
    let mut option_58: std::option::Option<reversi::Player> = std::option::Option::Some(player_35);
    let mut option_59: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_36: reversi::Player = crate::reversi::Player::Player1;
    let mut player_37: reversi::Player = crate::reversi::Player::other(player_36);
    let mut option_60: std::option::Option<reversi::Player> = std::option::Option::Some(player_37);
    let mut player_38: reversi::Player = crate::reversi::Player::Player1;
    let mut option_61: std::option::Option<reversi::Player> = std::option::Option::Some(player_38);
    let mut option_array_5: [std::option::Option<reversi::Player>; 8] = [option_61, option_60, option_59, option_58, option_57, option_56, option_55, option_54];
    let mut direction_0: reversi::Direction = crate::reversi::Direction::Right;
    let mut direction_0_ref_0: &reversi::Direction = &mut direction_0;
    let mut tuple_0: (i8, i8) = crate::reversi::Direction::as_offset(direction_0_ref_0);
    let mut gomokuerror_0: gomoku::GomokuError = crate::gomoku::GomokuError::OccupiedPosition;
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_1767() {
    rusty_monitor::set_test_id(1767);
    let mut gamestate_0: minesweeper::GameState = crate::minesweeper::GameState::InProgress;
    let mut gamestate_0_ref_0: &minesweeper::GameState = &mut gamestate_0;
    let mut gamestate_1: minesweeper::GameState = crate::minesweeper::GameState::InProgress;
    let mut bool_0: bool = true;
    let mut gamestate_2: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_0: reversi::Player = crate::reversi::Player::Player1;
    let mut player_1: reversi::Player = crate::reversi::Player::other(player_0);
    let mut option_0: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_2: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_2: reversi::Player = crate::reversi::Player::Player1;
    let mut option_3: std::option::Option<reversi::Player> = std::option::Option::Some(player_2);
    let mut option_4: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_5: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_3: reversi::Player = crate::reversi::Player::Player0;
    let mut player_4: reversi::Player = crate::reversi::Player::other(player_3);
    let mut option_6: std::option::Option<reversi::Player> = std::option::Option::Some(player_4);
    let mut option_7: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_0: [std::option::Option<reversi::Player>; 8] = [option_7, option_6, option_5, option_4, option_3, option_2, option_1, option_0];
    let mut player_5: reversi::Player = crate::reversi::Player::Player0;
    let mut player_6: reversi::Player = crate::reversi::Player::other(player_5);
    let mut gamestate_1_ref_0: &minesweeper::GameState = &mut gamestate_1;
    let mut result_0: std::result::Result<crate::tictactoe::TicTacToe, std::convert::Infallible> = crate::tictactoe::TicTacToe::new();
    let mut player_7: reversi::Player = crate::reversi::Player::other(player_1);
    let mut player_7_ref_0: &reversi::Player = &mut player_7;
    let mut player_8: reversi::Player = std::clone::Clone::clone(player_7_ref_0);
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_7554() {
    rusty_monitor::set_test_id(7554);
    let mut direction_0: reversi::Direction = crate::reversi::Direction::Left;
    let mut direction_0_ref_0: &reversi::Direction = &mut direction_0;
    let mut player_0: reversi::Player = crate::reversi::Player::Player0;
    let mut gamestate_0: reversi::GameState = crate::reversi::GameState::Win(player_0);
    let mut player_1: reversi::Player = crate::reversi::Player::Player0;
    let mut player_2: reversi::Player = crate::reversi::Player::other(player_1);
    let mut option_0: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_3: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1: std::option::Option<reversi::Player> = std::option::Option::Some(player_3);
    let mut player_4: reversi::Player = crate::reversi::Player::Player0;
    let mut player_5: reversi::Player = crate::reversi::Player::other(player_4);
    let mut option_2: std::option::Option<reversi::Player> = std::option::Option::Some(player_5);
    let mut player_6: reversi::Player = crate::reversi::Player::Player0;
    let mut option_3: std::option::Option<reversi::Player> = std::option::Option::Some(player_6);
    let mut option_4: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_5: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_6: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_7: reversi::Player = crate::reversi::Player::Player1;
    let mut player_8: reversi::Player = crate::reversi::Player::other(player_7);
    let mut option_7: std::option::Option<reversi::Player> = std::option::Option::Some(player_8);
    let mut option_array_0: [std::option::Option<reversi::Player>; 8] = [option_7, option_6, option_5, option_4, option_3, option_2, option_1, option_0];
    let mut option_8: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_9: reversi::Player = crate::reversi::Player::Player1;
    let mut player_10: reversi::Player = crate::reversi::Player::other(player_9);
    let mut option_9: std::option::Option<reversi::Player> = std::option::Option::Some(player_10);
    let mut option_10: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_11: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_11: reversi::Player = crate::reversi::Player::Player1;
    let mut option_12: std::option::Option<reversi::Player> = std::option::Option::Some(player_11);
    let mut option_13: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_12: reversi::Player = crate::reversi::Player::Player1;
    let mut option_14: std::option::Option<reversi::Player> = std::option::Option::Some(player_12);
    let mut option_15: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_1: [std::option::Option<reversi::Player>; 8] = [option_15, option_14, option_13, option_12, option_11, option_10, option_9, option_8];
    let mut player_13: reversi::Player = crate::reversi::Player::Player1;
    let mut player_14: reversi::Player = crate::reversi::Player::other(player_13);
    let mut option_16: std::option::Option<reversi::Player> = std::option::Option::Some(player_14);
    let mut option_17: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_18: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_15: reversi::Player = crate::reversi::Player::Player0;
    let mut option_19: std::option::Option<reversi::Player> = std::option::Option::Some(player_15);
    let mut player_16: reversi::Player = crate::reversi::Player::Player1;
    let mut option_20: std::option::Option<reversi::Player> = std::option::Option::Some(player_16);
    let mut option_21: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_22: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_17: reversi::Player = crate::reversi::Player::Player1;
    let mut option_23: std::option::Option<reversi::Player> = std::option::Option::Some(player_17);
    let mut option_array_2: [std::option::Option<reversi::Player>; 8] = [option_23, option_22, option_21, option_20, option_19, option_18, option_17, option_16];
    let mut option_24: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_18: reversi::Player = crate::reversi::Player::Player1;
    let mut player_19: reversi::Player = crate::reversi::Player::other(player_18);
    let mut option_25: std::option::Option<reversi::Player> = std::option::Option::Some(player_19);
    let mut option_26: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_27: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_28: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_29: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_30: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_20: reversi::Player = crate::reversi::Player::Player0;
    let mut option_31: std::option::Option<reversi::Player> = std::option::Option::Some(player_20);
    let mut option_array_3: [std::option::Option<reversi::Player>; 8] = [option_31, option_30, option_29, option_28, option_27, option_26, option_25, option_24];
    let mut option_32: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_21: reversi::Player = crate::reversi::Player::Player1;
    let mut option_33: std::option::Option<reversi::Player> = std::option::Option::Some(player_21);
    let mut option_34: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_35: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_36: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_37: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_38: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_22: reversi::Player = crate::reversi::Player::Player0;
    let mut option_39: std::option::Option<reversi::Player> = std::option::Option::Some(player_22);
    let mut option_array_4: [std::option::Option<reversi::Player>; 8] = [option_39, option_38, option_37, option_36, option_35, option_34, option_33, option_32];
    let mut player_23: reversi::Player = crate::reversi::Player::Player1;
    let mut player_24: reversi::Player = crate::reversi::Player::other(player_23);
    let mut option_40: std::option::Option<reversi::Player> = std::option::Option::Some(player_24);
    let mut player_25: reversi::Player = crate::reversi::Player::Player1;
    let mut option_41: std::option::Option<reversi::Player> = std::option::Option::Some(player_25);
    let mut option_42: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_43: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_26: reversi::Player = crate::reversi::Player::Player0;
    let mut option_44: std::option::Option<reversi::Player> = std::option::Option::Some(player_26);
    let mut option_45: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_27: reversi::Player = crate::reversi::Player::Player0;
    let mut player_28: reversi::Player = crate::reversi::Player::other(player_27);
    let mut option_46: std::option::Option<reversi::Player> = std::option::Option::Some(player_28);
    let mut option_47: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_5: [std::option::Option<reversi::Player>; 8] = [option_47, option_46, option_45, option_44, option_43, option_42, option_41, option_40];
    let mut option_48: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_49: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_50: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_51: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_29: reversi::Player = crate::reversi::Player::Player1;
    let mut option_52: std::option::Option<reversi::Player> = std::option::Option::Some(player_29);
    let mut player_30: reversi::Player = crate::reversi::Player::Player1;
    let mut option_53: std::option::Option<reversi::Player> = std::option::Option::Some(player_30);
    let mut player_31: reversi::Player = crate::reversi::Player::Player0;
    let mut option_54: std::option::Option<reversi::Player> = std::option::Option::Some(player_31);
    let mut player_32: reversi::Player = crate::reversi::Player::Player0;
    let mut option_55: std::option::Option<reversi::Player> = std::option::Option::Some(player_32);
    let mut option_array_6: [std::option::Option<reversi::Player>; 8] = [option_55, option_54, option_53, option_52, option_51, option_50, option_49, option_48];
    let mut player_33: reversi::Player = crate::reversi::Player::Player1;
    let mut player_34: reversi::Player = crate::reversi::Player::other(player_33);
    let mut option_56: std::option::Option<reversi::Player> = std::option::Option::Some(player_34);
    let mut player_35: reversi::Player = crate::reversi::Player::Player1;
    let mut option_57: std::option::Option<reversi::Player> = std::option::Option::Some(player_35);
    let mut option_58: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_36: reversi::Player = crate::reversi::Player::Player0;
    let mut option_59: std::option::Option<reversi::Player> = std::option::Option::Some(player_36);
    let mut player_37: reversi::Player = crate::reversi::Player::Player0;
    let mut option_60: std::option::Option<reversi::Player> = std::option::Option::Some(player_37);
    let mut option_61: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_38: reversi::Player = crate::reversi::Player::Player1;
    let mut player_39: reversi::Player = crate::reversi::Player::other(player_38);
    let mut option_62: std::option::Option<reversi::Player> = std::option::Option::Some(player_39);
    let mut player_40: reversi::Player = crate::reversi::Player::Player1;
    let mut option_63: std::option::Option<reversi::Player> = std::option::Option::Some(player_40);
    let mut option_array_7: [std::option::Option<reversi::Player>; 8] = [option_63, option_62, option_61, option_60, option_59, option_58, option_57, option_56];
    let mut option_array_array_0: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_7, option_array_6, option_array_5, option_array_4, option_array_3, option_array_2, option_array_1, option_array_0];
    let mut direction_1: reversi::Direction = crate::reversi::Direction::Right;
    let mut direction_1_ref_0: &reversi::Direction = &mut direction_1;
    let mut tuple_0: (i8, i8) = crate::reversi::Direction::as_offset(direction_0_ref_0);
    let mut gomokuerror_0: gomoku::GomokuError = crate::gomoku::GomokuError::OccupiedPosition;
    let mut reversi_0: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_0, next: player_2, status: gamestate_0};
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_5506() {
    rusty_monitor::set_test_id(5506);
    let mut player_0: reversi::Player = crate::reversi::Player::Player1;
    let mut player_1: reversi::Player = crate::reversi::Player::other(player_0);
    let mut usize_0: usize = 1usize;
    let mut usize_1: usize = 8usize;
    let mut gamestate_0: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_2: reversi::Player = crate::reversi::Player::Player0;
    let mut player_3: reversi::Player = crate::reversi::Player::other(player_2);
    let mut option_0: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_4: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1: std::option::Option<reversi::Player> = std::option::Option::Some(player_4);
    let mut option_2: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_3: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_4: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_5: reversi::Player = crate::reversi::Player::Player0;
    let mut option_5: std::option::Option<reversi::Player> = std::option::Option::Some(player_5);
    let mut player_6: reversi::Player = crate::reversi::Player::Player0;
    let mut player_7: reversi::Player = crate::reversi::Player::other(player_6);
    let mut option_6: std::option::Option<reversi::Player> = std::option::Option::Some(player_7);
    let mut option_7: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_0: [std::option::Option<reversi::Player>; 8] = [option_7, option_6, option_5, option_4, option_3, option_2, option_1, option_0];
    let mut option_8: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_9: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_8: reversi::Player = crate::reversi::Player::Player1;
    let mut option_10: std::option::Option<reversi::Player> = std::option::Option::Some(player_8);
    let mut option_11: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_12: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_9: reversi::Player = crate::reversi::Player::Player1;
    let mut option_13: std::option::Option<reversi::Player> = std::option::Option::Some(player_9);
    let mut option_14: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_15: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_1: [std::option::Option<reversi::Player>; 8] = [option_15, option_14, option_13, option_12, option_11, option_10, option_9, option_8];
    let mut option_16: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_10: reversi::Player = crate::reversi::Player::Player0;
    let mut option_17: std::option::Option<reversi::Player> = std::option::Option::Some(player_10);
    let mut option_18: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_19: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_11: reversi::Player = crate::reversi::Player::Player1;
    let mut player_12: reversi::Player = crate::reversi::Player::other(player_11);
    let mut option_20: std::option::Option<reversi::Player> = std::option::Option::Some(player_12);
    let mut player_13: reversi::Player = crate::reversi::Player::Player1;
    let mut option_21: std::option::Option<reversi::Player> = std::option::Option::Some(player_13);
    let mut player_14: reversi::Player = crate::reversi::Player::Player1;
    let mut option_22: std::option::Option<reversi::Player> = std::option::Option::Some(player_14);
    let mut option_23: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_2: [std::option::Option<reversi::Player>; 8] = [option_23, option_22, option_21, option_20, option_19, option_18, option_17, option_16];
    let mut player_15: reversi::Player = crate::reversi::Player::Player0;
    let mut option_24: std::option::Option<reversi::Player> = std::option::Option::Some(player_15);
    let mut option_25: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_26: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_27: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_28: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_16: reversi::Player = crate::reversi::Player::Player0;
    let mut option_29: std::option::Option<reversi::Player> = std::option::Option::Some(player_16);
    let mut option_30: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_17: reversi::Player = crate::reversi::Player::Player0;
    let mut option_31: std::option::Option<reversi::Player> = std::option::Option::Some(player_17);
    let mut option_array_3: [std::option::Option<reversi::Player>; 8] = [option_31, option_30, option_29, option_28, option_27, option_26, option_25, option_24];
    let mut player_18: reversi::Player = crate::reversi::Player::Player1;
    let mut player_19: reversi::Player = crate::reversi::Player::other(player_18);
    let mut option_32: std::option::Option<reversi::Player> = std::option::Option::Some(player_19);
    let mut option_33: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_34: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_20: reversi::Player = crate::reversi::Player::Player0;
    let mut player_21: reversi::Player = crate::reversi::Player::other(player_20);
    let mut option_35: std::option::Option<reversi::Player> = std::option::Option::Some(player_21);
    let mut option_36: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_37: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_22: reversi::Player = crate::reversi::Player::Player0;
    let mut option_38: std::option::Option<reversi::Player> = std::option::Option::Some(player_22);
    let mut option_39: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_4: [std::option::Option<reversi::Player>; 8] = [option_39, option_38, option_37, option_36, option_35, option_34, option_33, option_32];
    let mut option_40: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_41: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_42: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_43: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_44: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_23: reversi::Player = crate::reversi::Player::Player0;
    let mut player_24: reversi::Player = crate::reversi::Player::other(player_23);
    let mut option_45: std::option::Option<reversi::Player> = std::option::Option::Some(player_24);
    let mut player_25: reversi::Player = crate::reversi::Player::Player0;
    let mut option_46: std::option::Option<reversi::Player> = std::option::Option::Some(player_25);
    let mut option_47: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_5: [std::option::Option<reversi::Player>; 8] = [option_47, option_46, option_45, option_44, option_43, option_42, option_41, option_40];
    let mut option_48: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_49: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_26: reversi::Player = crate::reversi::Player::Player1;
    let mut player_27: reversi::Player = crate::reversi::Player::other(player_26);
    let mut option_50: std::option::Option<reversi::Player> = std::option::Option::Some(player_27);
    let mut option_51: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_52: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_53: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_28: reversi::Player = crate::reversi::Player::Player0;
    let mut option_54: std::option::Option<reversi::Player> = std::option::Option::Some(player_28);
    let mut option_55: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_6: [std::option::Option<reversi::Player>; 8] = [option_55, option_54, option_53, option_52, option_51, option_50, option_49, option_48];
    let mut player_29: reversi::Player = crate::reversi::Player::Player1;
    let mut option_56: std::option::Option<reversi::Player> = std::option::Option::Some(player_29);
    let mut player_30: reversi::Player = crate::reversi::Player::Player1;
    let mut option_57: std::option::Option<reversi::Player> = std::option::Option::Some(player_30);
    let mut option_58: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_59: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_31: reversi::Player = crate::reversi::Player::Player0;
    let mut option_60: std::option::Option<reversi::Player> = std::option::Option::Some(player_31);
    let mut option_61: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_62: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_63: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_7: [std::option::Option<reversi::Player>; 8] = [option_63, option_62, option_61, option_60, option_59, option_58, option_57, option_56];
    let mut option_array_array_0: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_7, option_array_6, option_array_5, option_array_4, option_array_3, option_array_2, option_array_1, option_array_0];
    let mut reversi_0: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_0, next: player_3, status: gamestate_0};
    let mut reversi_0_ref_0: &crate::reversi::Reversi = &mut reversi_0;
    let mut result_0: std::result::Result<(), reversi::ReversiError> = crate::reversi::Reversi::simple_check_position_validity(reversi_0_ref_0, usize_1, usize_0, player_1);
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_2149() {
    rusty_monitor::set_test_id(2149);
    let mut gamestate_0: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_0: reversi::Player = crate::reversi::Player::Player0;
    let mut direction_0: reversi::Direction = crate::reversi::Direction::UpperLeft;
    let mut direction_0_ref_0: &reversi::Direction = &mut direction_0;
    let mut direction_1: reversi::Direction = crate::reversi::Direction::LowerRight;
    let mut option_0: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_1: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1: std::option::Option<reversi::Player> = std::option::Option::Some(player_1);
    let mut player_2: reversi::Player = crate::reversi::Player::Player1;
    let mut option_2: std::option::Option<reversi::Player> = std::option::Option::Some(player_2);
    let mut player_3: reversi::Player = crate::reversi::Player::Player1;
    let mut option_3: std::option::Option<reversi::Player> = std::option::Option::Some(player_3);
    let mut option_4: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_4: reversi::Player = crate::reversi::Player::Player1;
    let mut player_5: reversi::Player = crate::reversi::Player::other(player_4);
    let mut gamestate_1: reversi::GameState = crate::reversi::GameState::Win(player_5);
    let mut player_6: reversi::Player = crate::reversi::Player::Player1;
    let mut option_5: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_6: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_7: reversi::Player = crate::reversi::Player::Player0;
    let mut option_7: std::option::Option<reversi::Player> = std::option::Option::Some(player_7);
    let mut option_8: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_9: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_10: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_8: reversi::Player = crate::reversi::Player::Player1;
    let mut player_9: reversi::Player = crate::reversi::Player::other(player_8);
    let mut option_11: std::option::Option<reversi::Player> = std::option::Option::Some(player_9);
    let mut player_10: reversi::Player = crate::reversi::Player::Player1;
    let mut option_12: std::option::Option<reversi::Player> = std::option::Option::Some(player_10);
    let mut option_array_0: [std::option::Option<reversi::Player>; 8] = [option_12, option_11, option_10, option_9, option_8, option_7, option_6, option_5];
    let mut player_11: reversi::Player = crate::reversi::Player::Player1;
    let mut option_13: std::option::Option<reversi::Player> = std::option::Option::Some(player_11);
    let mut player_12: reversi::Player = crate::reversi::Player::Player1;
    let mut option_14: std::option::Option<reversi::Player> = std::option::Option::Some(player_12);
    let mut option_15: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_16: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_13: reversi::Player = crate::reversi::Player::Player1;
    let mut option_17: std::option::Option<reversi::Player> = std::option::Option::Some(player_13);
    let mut option_18: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_14: reversi::Player = crate::reversi::Player::Player1;
    let mut option_19: std::option::Option<reversi::Player> = std::option::Option::Some(player_14);
    let mut player_15: reversi::Player = crate::reversi::Player::Player1;
    let mut player_16: reversi::Player = crate::reversi::Player::other(player_15);
    let mut option_20: std::option::Option<reversi::Player> = std::option::Option::Some(player_16);
    let mut option_array_1: [std::option::Option<reversi::Player>; 8] = [option_20, option_19, option_18, option_17, option_16, option_15, option_14, option_13];
    let mut player_17: reversi::Player = crate::reversi::Player::Player0;
    let mut player_18: reversi::Player = crate::reversi::Player::other(player_17);
    let mut option_21: std::option::Option<reversi::Player> = std::option::Option::Some(player_18);
    let mut option_22: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_23: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_24: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_19: reversi::Player = crate::reversi::Player::Player1;
    let mut player_20: reversi::Player = crate::reversi::Player::other(player_19);
    let mut option_25: std::option::Option<reversi::Player> = std::option::Option::Some(player_20);
    let mut option_26: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_21: reversi::Player = crate::reversi::Player::Player1;
    let mut player_22: reversi::Player = crate::reversi::Player::other(player_21);
    let mut option_27: std::option::Option<reversi::Player> = std::option::Option::Some(player_22);
    let mut option_28: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_2: [std::option::Option<reversi::Player>; 8] = [option_28, option_27, option_26, option_25, option_24, option_23, option_22, option_21];
    let mut player_23: reversi::Player = crate::reversi::Player::Player1;
    let mut player_24: reversi::Player = crate::reversi::Player::other(player_23);
    let mut option_29: std::option::Option<reversi::Player> = std::option::Option::Some(player_24);
    let mut option_30: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_25: reversi::Player = crate::reversi::Player::Player0;
    let mut player_26: reversi::Player = crate::reversi::Player::other(player_25);
    let mut option_31: std::option::Option<reversi::Player> = std::option::Option::Some(player_26);
    let mut option_32: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_27: reversi::Player = crate::reversi::Player::Player1;
    let mut option_33: std::option::Option<reversi::Player> = std::option::Option::Some(player_27);
    let mut option_34: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_28: reversi::Player = crate::reversi::Player::Player1;
    let mut option_35: std::option::Option<reversi::Player> = std::option::Option::Some(player_28);
    let mut player_29: reversi::Player = crate::reversi::Player::Player1;
    let mut option_36: std::option::Option<reversi::Player> = std::option::Option::Some(player_29);
    let mut option_array_3: [std::option::Option<reversi::Player>; 8] = [option_36, option_35, option_34, option_33, option_32, option_31, option_30, option_29];
    let mut player_30: reversi::Player = crate::reversi::Player::Player0;
    let mut player_31: reversi::Player = crate::reversi::Player::other(player_30);
    let mut option_37: std::option::Option<reversi::Player> = std::option::Option::Some(player_31);
    let mut option_38: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_39: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_40: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_41: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_32: reversi::Player = crate::reversi::Player::Player0;
    let mut option_42: std::option::Option<reversi::Player> = std::option::Option::Some(player_32);
    let mut option_43: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_33: reversi::Player = crate::reversi::Player::Player0;
    let mut option_44: std::option::Option<reversi::Player> = std::option::Option::Some(player_33);
    let mut option_array_4: [std::option::Option<reversi::Player>; 8] = [option_44, option_43, option_42, option_41, option_40, option_39, option_38, option_37];
    let mut player_34: reversi::Player = crate::reversi::Player::Player0;
    let mut option_45: std::option::Option<reversi::Player> = std::option::Option::Some(player_34);
    let mut player_35: reversi::Player = crate::reversi::Player::Player1;
    let mut option_46: std::option::Option<reversi::Player> = std::option::Option::Some(player_35);
    let mut option_47: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_48: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_36: reversi::Player = crate::reversi::Player::Player0;
    let mut player_37: reversi::Player = crate::reversi::Player::other(player_36);
    let mut option_49: std::option::Option<reversi::Player> = std::option::Option::Some(player_37);
    let mut player_38: reversi::Player = crate::reversi::Player::Player1;
    let mut player_39: reversi::Player = crate::reversi::Player::other(player_38);
    let mut option_50: std::option::Option<reversi::Player> = std::option::Option::Some(player_39);
    let mut player_40: reversi::Player = crate::reversi::Player::Player1;
    let mut option_51: std::option::Option<reversi::Player> = std::option::Option::Some(player_40);
    let mut option_52: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_5: [std::option::Option<reversi::Player>; 8] = [option_52, option_51, option_50, option_49, option_48, option_47, option_46, option_45];
    let mut player_41: reversi::Player = crate::reversi::Player::Player1;
    let mut player_42: reversi::Player = crate::reversi::Player::other(player_41);
    let mut option_53: std::option::Option<reversi::Player> = std::option::Option::Some(player_42);
    let mut player_43: reversi::Player = crate::reversi::Player::Player1;
    let mut option_54: std::option::Option<reversi::Player> = std::option::Option::Some(player_43);
    let mut option_55: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_44: reversi::Player = crate::reversi::Player::Player0;
    let mut option_56: std::option::Option<reversi::Player> = std::option::Option::Some(player_44);
    let mut option_57: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_58: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_59: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_60: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_6: [std::option::Option<reversi::Player>; 8] = [option_60, option_59, option_58, option_57, option_56, option_55, option_54, option_53];
    let mut player_45: reversi::Player = crate::reversi::Player::Player1;
    let mut option_61: std::option::Option<reversi::Player> = std::option::Option::Some(player_45);
    let mut option_62: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_46: reversi::Player = crate::reversi::Player::Player1;
    let mut option_63: std::option::Option<reversi::Player> = std::option::Option::Some(player_46);
    let mut option_64: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_47: reversi::Player = crate::reversi::Player::Player0;
    let mut option_65: std::option::Option<reversi::Player> = std::option::Option::Some(player_47);
    let mut player_48: reversi::Player = crate::reversi::Player::Player1;
    let mut option_66: std::option::Option<reversi::Player> = std::option::Option::Some(player_48);
    let mut option_67: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_68: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_7: [std::option::Option<reversi::Player>; 8] = [option_68, option_67, option_66, option_65, option_64, option_63, option_62, option_61];
    let mut option_array_array_0: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_7, option_array_6, option_array_5, option_array_4, option_array_3, option_array_2, option_array_1, option_array_0];
    let mut reversi_0: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_0, next: player_6, status: gamestate_1};
    let mut reversi_0_ref_0: &crate::reversi::Reversi = &mut reversi_0;
    let mut option_69: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_0_ref_0);
    let mut option_70: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_49: reversi::Player = crate::reversi::Player::Player0;
    let mut gamestate_2: reversi::GameState = crate::reversi::GameState::Win(player_49);
    let mut player_50: reversi::Player = crate::reversi::Player::Player1;
    let mut player_51: reversi::Player = crate::reversi::Player::Player0;
    let mut option_71: std::option::Option<reversi::Player> = std::option::Option::Some(player_51);
    let mut player_52: reversi::Player = crate::reversi::Player::Player0;
    let mut option_72: std::option::Option<reversi::Player> = std::option::Option::Some(player_52);
    let mut option_73: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_74: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_53: reversi::Player = crate::reversi::Player::Player1;
    let mut option_75: std::option::Option<reversi::Player> = std::option::Option::Some(player_53);
    let mut option_76: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_77: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_78: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_8: [std::option::Option<reversi::Player>; 8] = [option_78, option_77, option_76, option_75, option_74, option_73, option_72, option_71];
    let mut option_79: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_80: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_54: reversi::Player = crate::reversi::Player::Player1;
    let mut option_81: std::option::Option<reversi::Player> = std::option::Option::Some(player_54);
    let mut player_55: reversi::Player = crate::reversi::Player::Player0;
    let mut option_82: std::option::Option<reversi::Player> = std::option::Option::Some(player_55);
    let mut option_83: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_84: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_56: reversi::Player = crate::reversi::Player::Player1;
    let mut player_57: reversi::Player = crate::reversi::Player::other(player_56);
    let mut option_85: std::option::Option<reversi::Player> = std::option::Option::Some(player_57);
    let mut option_86: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_9: [std::option::Option<reversi::Player>; 8] = [option_86, option_85, option_84, option_83, option_82, option_81, option_80, option_79];
    let mut player_58: reversi::Player = crate::reversi::Player::Player1;
    let mut player_59: reversi::Player = crate::reversi::Player::other(player_58);
    let mut option_87: std::option::Option<reversi::Player> = std::option::Option::Some(player_59);
    let mut option_88: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_89: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_60: reversi::Player = crate::reversi::Player::Player0;
    let mut option_90: std::option::Option<reversi::Player> = std::option::Option::Some(player_60);
    let mut option_91: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_61: reversi::Player = crate::reversi::Player::Player1;
    let mut option_92: std::option::Option<reversi::Player> = std::option::Option::Some(player_61);
    let mut option_93: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_62: reversi::Player = crate::reversi::Player::Player0;
    let mut option_94: std::option::Option<reversi::Player> = std::option::Option::Some(player_62);
    let mut option_array_10: [std::option::Option<reversi::Player>; 8] = [option_94, option_93, option_92, option_91, option_90, option_89, option_88, option_87];
    let mut player_63: reversi::Player = crate::reversi::Player::Player1;
    let mut option_95: std::option::Option<reversi::Player> = std::option::Option::Some(player_63);
    let mut option_96: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_64: reversi::Player = crate::reversi::Player::Player1;
    let mut player_65: reversi::Player = crate::reversi::Player::other(player_64);
    let mut option_97: std::option::Option<reversi::Player> = std::option::Option::Some(player_65);
    let mut option_98: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_99: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_100: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_101: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_66: reversi::Player = crate::reversi::Player::Player0;
    let mut player_67: reversi::Player = crate::reversi::Player::other(player_66);
    let mut option_102: std::option::Option<reversi::Player> = std::option::Option::Some(player_67);
    let mut option_array_11: [std::option::Option<reversi::Player>; 8] = [option_102, option_101, option_100, option_99, option_98, option_97, option_96, option_95];
    let mut player_68: reversi::Player = crate::reversi::Player::Player0;
    let mut player_69: reversi::Player = crate::reversi::Player::other(player_68);
    let mut option_103: std::option::Option<reversi::Player> = std::option::Option::Some(player_69);
    let mut player_70: reversi::Player = crate::reversi::Player::Player0;
    let mut player_71: reversi::Player = crate::reversi::Player::other(player_70);
    let mut option_104: std::option::Option<reversi::Player> = std::option::Option::Some(player_71);
    let mut option_105: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_72: reversi::Player = crate::reversi::Player::Player1;
    let mut player_73: reversi::Player = crate::reversi::Player::other(player_72);
    let mut option_106: std::option::Option<reversi::Player> = std::option::Option::Some(player_73);
    let mut option_107: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_74: reversi::Player = crate::reversi::Player::Player0;
    let mut option_108: std::option::Option<reversi::Player> = std::option::Option::Some(player_74);
    let mut option_109: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_110: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_12: [std::option::Option<reversi::Player>; 8] = [option_110, option_109, option_108, option_107, option_106, option_105, option_104, option_103];
    let mut option_111: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_75: reversi::Player = crate::reversi::Player::Player0;
    let mut option_112: std::option::Option<reversi::Player> = std::option::Option::Some(player_75);
    let mut player_76: reversi::Player = crate::reversi::Player::Player0;
    let mut option_113: std::option::Option<reversi::Player> = std::option::Option::Some(player_76);
    let mut player_77: reversi::Player = crate::reversi::Player::Player1;
    let mut player_78: reversi::Player = crate::reversi::Player::other(player_77);
    let mut option_114: std::option::Option<reversi::Player> = std::option::Option::Some(player_78);
    let mut player_79: reversi::Player = crate::reversi::Player::Player1;
    let mut option_115: std::option::Option<reversi::Player> = std::option::Option::Some(player_79);
    let mut option_116: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_80: reversi::Player = crate::reversi::Player::Player1;
    let mut player_81: reversi::Player = crate::reversi::Player::other(player_80);
    let mut option_117: std::option::Option<reversi::Player> = std::option::Option::Some(player_81);
    let mut option_118: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_13: [std::option::Option<reversi::Player>; 8] = [option_118, option_117, option_116, option_115, option_114, option_113, option_112, option_111];
    let mut player_82: reversi::Player = crate::reversi::Player::Player0;
    let mut option_119: std::option::Option<reversi::Player> = std::option::Option::Some(player_82);
    let mut player_83: reversi::Player = crate::reversi::Player::Player0;
    let mut option_120: std::option::Option<reversi::Player> = std::option::Option::Some(player_83);
    let mut option_121: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_84: reversi::Player = crate::reversi::Player::Player1;
    let mut option_122: std::option::Option<reversi::Player> = std::option::Option::Some(player_84);
    let mut option_123: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_85: reversi::Player = crate::reversi::Player::Player1;
    let mut option_124: std::option::Option<reversi::Player> = std::option::Option::Some(player_85);
    let mut option_125: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_86: reversi::Player = crate::reversi::Player::Player0;
    let mut option_126: std::option::Option<reversi::Player> = std::option::Option::Some(player_86);
    let mut option_array_14: [std::option::Option<reversi::Player>; 8] = [option_126, option_125, option_124, option_123, option_122, option_121, option_120, option_119];
    let mut player_87: reversi::Player = crate::reversi::Player::Player0;
    let mut player_88: reversi::Player = crate::reversi::Player::other(player_87);
    let mut option_127: std::option::Option<reversi::Player> = std::option::Option::Some(player_88);
    let mut option_128: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_89: reversi::Player = crate::reversi::Player::Player0;
    let mut option_129: std::option::Option<reversi::Player> = std::option::Option::Some(player_89);
    let mut option_130: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_90: reversi::Player = crate::reversi::Player::Player1;
    let mut option_131: std::option::Option<reversi::Player> = std::option::Option::Some(player_90);
    let mut option_132: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_91: reversi::Player = crate::reversi::Player::Player1;
    let mut option_133: std::option::Option<reversi::Player> = std::option::Option::Some(player_91);
    let mut player_92: reversi::Player = crate::reversi::Player::Player0;
    let mut option_134: std::option::Option<reversi::Player> = std::option::Option::Some(player_92);
    let mut option_array_15: [std::option::Option<reversi::Player>; 8] = [option_134, option_133, option_132, option_131, option_130, option_129, option_128, option_127];
    let mut option_array_array_1: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_15, option_array_14, option_array_13, option_array_12, option_array_11, option_array_10, option_array_9, option_array_8];
    let mut reversi_1: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_1, next: player_50, status: gamestate_2};
    let mut reversi_1_ref_0: &crate::reversi::Reversi = &mut reversi_1;
    let mut option_135: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_1_ref_0);
    let mut option_array_16: [std::option::Option<reversi::Player>; 8] = [option_135, option_70, option_69, option_4, option_3, option_2, option_1, option_0];
    let mut player_93: reversi::Player = crate::reversi::Player::Player1;
    let mut option_136: std::option::Option<reversi::Player> = std::option::Option::Some(player_93);
    let mut option_137: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_94: reversi::Player = crate::reversi::Player::Player1;
    let mut gamestate_3: reversi::GameState = crate::reversi::GameState::Win(player_94);
    let mut player_95: reversi::Player = crate::reversi::Player::Player0;
    let mut option_138: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_96: reversi::Player = crate::reversi::Player::Player1;
    let mut option_139: std::option::Option<reversi::Player> = std::option::Option::Some(player_96);
    let mut option_140: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_141: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_97: reversi::Player = crate::reversi::Player::Player1;
    let mut player_98: reversi::Player = crate::reversi::Player::other(player_97);
    let mut option_142: std::option::Option<reversi::Player> = std::option::Option::Some(player_98);
    let mut player_99: reversi::Player = crate::reversi::Player::Player1;
    let mut option_143: std::option::Option<reversi::Player> = std::option::Option::Some(player_99);
    let mut player_100: reversi::Player = crate::reversi::Player::Player1;
    let mut option_144: std::option::Option<reversi::Player> = std::option::Option::Some(player_100);
    let mut player_101: reversi::Player = crate::reversi::Player::Player0;
    let mut player_102: reversi::Player = crate::reversi::Player::other(player_101);
    let mut option_145: std::option::Option<reversi::Player> = std::option::Option::Some(player_102);
    let mut option_array_17: [std::option::Option<reversi::Player>; 8] = [option_145, option_144, option_143, option_142, option_141, option_140, option_139, option_138];
    let mut option_146: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_103: reversi::Player = crate::reversi::Player::Player0;
    let mut player_104: reversi::Player = crate::reversi::Player::other(player_103);
    let mut option_147: std::option::Option<reversi::Player> = std::option::Option::Some(player_104);
    let mut option_148: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_149: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_150: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_151: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_105: reversi::Player = crate::reversi::Player::Player1;
    let mut option_152: std::option::Option<reversi::Player> = std::option::Option::Some(player_105);
    let mut player_106: reversi::Player = crate::reversi::Player::Player1;
    let mut option_153: std::option::Option<reversi::Player> = std::option::Option::Some(player_106);
    let mut option_array_18: [std::option::Option<reversi::Player>; 8] = [option_153, option_152, option_151, option_150, option_149, option_148, option_147, option_146];
    let mut option_154: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_155: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_156: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_107: reversi::Player = crate::reversi::Player::Player0;
    let mut option_157: std::option::Option<reversi::Player> = std::option::Option::Some(player_107);
    let mut option_158: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_108: reversi::Player = crate::reversi::Player::Player1;
    let mut option_159: std::option::Option<reversi::Player> = std::option::Option::Some(player_108);
    let mut player_109: reversi::Player = crate::reversi::Player::Player0;
    let mut player_110: reversi::Player = crate::reversi::Player::other(player_109);
    let mut option_160: std::option::Option<reversi::Player> = std::option::Option::Some(player_110);
    let mut player_111: reversi::Player = crate::reversi::Player::Player1;
    let mut player_112: reversi::Player = crate::reversi::Player::other(player_111);
    let mut option_161: std::option::Option<reversi::Player> = std::option::Option::Some(player_112);
    let mut option_array_19: [std::option::Option<reversi::Player>; 8] = [option_161, option_160, option_159, option_158, option_157, option_156, option_155, option_154];
    let mut player_113: reversi::Player = crate::reversi::Player::Player1;
    let mut option_162: std::option::Option<reversi::Player> = std::option::Option::Some(player_113);
    let mut player_114: reversi::Player = crate::reversi::Player::Player1;
    let mut option_163: std::option::Option<reversi::Player> = std::option::Option::Some(player_114);
    let mut option_164: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_165: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_166: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_115: reversi::Player = crate::reversi::Player::Player1;
    let mut option_167: std::option::Option<reversi::Player> = std::option::Option::Some(player_115);
    let mut player_116: reversi::Player = crate::reversi::Player::Player1;
    let mut player_117: reversi::Player = crate::reversi::Player::other(player_116);
    let mut option_168: std::option::Option<reversi::Player> = std::option::Option::Some(player_117);
    let mut player_118: reversi::Player = crate::reversi::Player::Player1;
    let mut option_169: std::option::Option<reversi::Player> = std::option::Option::Some(player_118);
    let mut option_array_20: [std::option::Option<reversi::Player>; 8] = [option_169, option_168, option_167, option_166, option_165, option_164, option_163, option_162];
    let mut option_170: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_119: reversi::Player = crate::reversi::Player::Player1;
    let mut player_120: reversi::Player = crate::reversi::Player::other(player_119);
    let mut option_171: std::option::Option<reversi::Player> = std::option::Option::Some(player_120);
    let mut option_172: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_173: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_121: reversi::Player = crate::reversi::Player::Player0;
    let mut option_174: std::option::Option<reversi::Player> = std::option::Option::Some(player_121);
    let mut option_175: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_176: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_122: reversi::Player = crate::reversi::Player::Player0;
    let mut option_177: std::option::Option<reversi::Player> = std::option::Option::Some(player_122);
    let mut option_array_21: [std::option::Option<reversi::Player>; 8] = [option_177, option_176, option_175, option_174, option_173, option_172, option_171, option_170];
    let mut option_178: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_179: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_123: reversi::Player = crate::reversi::Player::Player0;
    let mut option_180: std::option::Option<reversi::Player> = std::option::Option::Some(player_123);
    let mut player_124: reversi::Player = crate::reversi::Player::Player0;
    let mut option_181: std::option::Option<reversi::Player> = std::option::Option::Some(player_124);
    let mut option_182: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_125: reversi::Player = crate::reversi::Player::Player0;
    let mut option_183: std::option::Option<reversi::Player> = std::option::Option::Some(player_125);
    let mut option_184: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_126: reversi::Player = crate::reversi::Player::Player0;
    let mut option_185: std::option::Option<reversi::Player> = std::option::Option::Some(player_126);
    let mut option_array_22: [std::option::Option<reversi::Player>; 8] = [option_185, option_184, option_183, option_182, option_181, option_180, option_179, option_178];
    let mut option_186: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_187: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_188: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_189: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_127: reversi::Player = crate::reversi::Player::Player0;
    let mut option_190: std::option::Option<reversi::Player> = std::option::Option::Some(player_127);
    let mut option_191: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_192: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_193: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_23: [std::option::Option<reversi::Player>; 8] = [option_193, option_192, option_191, option_190, option_189, option_188, option_187, option_186];
    let mut player_128: reversi::Player = crate::reversi::Player::Player0;
    let mut player_129: reversi::Player = crate::reversi::Player::other(player_128);
    let mut option_194: std::option::Option<reversi::Player> = std::option::Option::Some(player_129);
    let mut player_130: reversi::Player = crate::reversi::Player::Player0;
    let mut player_131: reversi::Player = crate::reversi::Player::other(player_130);
    let mut option_195: std::option::Option<reversi::Player> = std::option::Option::Some(player_131);
    let mut option_196: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_197: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_132: reversi::Player = crate::reversi::Player::Player1;
    let mut player_133: reversi::Player = crate::reversi::Player::other(player_132);
    let mut option_198: std::option::Option<reversi::Player> = std::option::Option::Some(player_133);
    let mut player_134: reversi::Player = crate::reversi::Player::Player0;
    let mut option_199: std::option::Option<reversi::Player> = std::option::Option::Some(player_134);
    let mut option_200: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_135: reversi::Player = crate::reversi::Player::Player0;
    let mut option_201: std::option::Option<reversi::Player> = std::option::Option::Some(player_135);
    let mut option_array_24: [std::option::Option<reversi::Player>; 8] = [option_201, option_200, option_199, option_198, option_197, option_196, option_195, option_194];
    let mut option_array_array_2: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_24, option_array_23, option_array_22, option_array_21, option_array_20, option_array_19, option_array_18, option_array_17];
    let mut reversi_2: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_2, next: player_95, status: gamestate_3};
    let mut reversi_2_ref_0: &crate::reversi::Reversi = &mut reversi_2;
    let mut option_202: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_2_ref_0);
    let mut gamestate_4: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_136: reversi::Player = crate::reversi::Player::Player0;
    let mut player_137: reversi::Player = crate::reversi::Player::other(player_136);
    let mut player_138: reversi::Player = crate::reversi::Player::Player0;
    let mut player_139: reversi::Player = crate::reversi::Player::other(player_138);
    let mut option_203: std::option::Option<reversi::Player> = std::option::Option::Some(player_139);
    let mut option_204: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_205: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_140: reversi::Player = crate::reversi::Player::Player1;
    let mut player_141: reversi::Player = crate::reversi::Player::other(player_140);
    let mut option_206: std::option::Option<reversi::Player> = std::option::Option::Some(player_141);
    let mut player_142: reversi::Player = crate::reversi::Player::Player0;
    let mut player_143: reversi::Player = crate::reversi::Player::other(player_142);
    let mut option_207: std::option::Option<reversi::Player> = std::option::Option::Some(player_143);
    let mut player_144: reversi::Player = crate::reversi::Player::Player0;
    let mut player_145: reversi::Player = crate::reversi::Player::other(player_144);
    let mut option_208: std::option::Option<reversi::Player> = std::option::Option::Some(player_145);
    let mut player_146: reversi::Player = crate::reversi::Player::Player1;
    let mut option_209: std::option::Option<reversi::Player> = std::option::Option::Some(player_146);
    let mut option_210: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_25: [std::option::Option<reversi::Player>; 8] = [option_210, option_209, option_208, option_207, option_206, option_205, option_204, option_203];
    let mut option_211: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_212: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_213: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_147: reversi::Player = crate::reversi::Player::Player0;
    let mut option_214: std::option::Option<reversi::Player> = std::option::Option::Some(player_147);
    let mut option_215: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_216: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_148: reversi::Player = crate::reversi::Player::Player1;
    let mut option_217: std::option::Option<reversi::Player> = std::option::Option::Some(player_148);
    let mut player_149: reversi::Player = crate::reversi::Player::Player1;
    let mut player_150: reversi::Player = crate::reversi::Player::other(player_149);
    let mut option_218: std::option::Option<reversi::Player> = std::option::Option::Some(player_150);
    let mut option_array_26: [std::option::Option<reversi::Player>; 8] = [option_218, option_217, option_216, option_215, option_214, option_213, option_212, option_211];
    let mut player_151: reversi::Player = crate::reversi::Player::Player0;
    let mut option_219: std::option::Option<reversi::Player> = std::option::Option::Some(player_151);
    let mut player_152: reversi::Player = crate::reversi::Player::Player0;
    let mut option_220: std::option::Option<reversi::Player> = std::option::Option::Some(player_152);
    let mut player_153: reversi::Player = crate::reversi::Player::Player1;
    let mut option_221: std::option::Option<reversi::Player> = std::option::Option::Some(player_153);
    let mut option_222: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_223: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_154: reversi::Player = crate::reversi::Player::Player1;
    let mut option_224: std::option::Option<reversi::Player> = std::option::Option::Some(player_154);
    let mut player_155: reversi::Player = crate::reversi::Player::Player1;
    let mut option_225: std::option::Option<reversi::Player> = std::option::Option::Some(player_155);
    let mut player_156: reversi::Player = crate::reversi::Player::Player1;
    let mut player_157: reversi::Player = crate::reversi::Player::other(player_156);
    let mut option_226: std::option::Option<reversi::Player> = std::option::Option::Some(player_157);
    let mut option_array_27: [std::option::Option<reversi::Player>; 8] = [option_226, option_225, option_224, option_223, option_222, option_221, option_220, option_219];
    let mut player_158: reversi::Player = crate::reversi::Player::Player0;
    let mut option_227: std::option::Option<reversi::Player> = std::option::Option::Some(player_158);
    let mut player_159: reversi::Player = crate::reversi::Player::Player0;
    let mut option_228: std::option::Option<reversi::Player> = std::option::Option::Some(player_159);
    let mut player_160: reversi::Player = crate::reversi::Player::Player1;
    let mut player_161: reversi::Player = crate::reversi::Player::other(player_160);
    let mut option_229: std::option::Option<reversi::Player> = std::option::Option::Some(player_161);
    let mut option_230: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_162: reversi::Player = crate::reversi::Player::Player0;
    let mut option_231: std::option::Option<reversi::Player> = std::option::Option::Some(player_162);
    let mut option_232: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_163: reversi::Player = crate::reversi::Player::Player1;
    let mut option_233: std::option::Option<reversi::Player> = std::option::Option::Some(player_163);
    let mut player_164: reversi::Player = crate::reversi::Player::Player0;
    let mut option_234: std::option::Option<reversi::Player> = std::option::Option::Some(player_164);
    let mut option_array_28: [std::option::Option<reversi::Player>; 8] = [option_234, option_233, option_232, option_231, option_230, option_229, option_228, option_227];
    let mut option_235: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_165: reversi::Player = crate::reversi::Player::Player0;
    let mut option_236: std::option::Option<reversi::Player> = std::option::Option::Some(player_165);
    let mut option_237: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_166: reversi::Player = crate::reversi::Player::Player0;
    let mut option_238: std::option::Option<reversi::Player> = std::option::Option::Some(player_166);
    let mut option_239: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_167: reversi::Player = crate::reversi::Player::Player0;
    let mut option_240: std::option::Option<reversi::Player> = std::option::Option::Some(player_167);
    let mut player_168: reversi::Player = crate::reversi::Player::Player1;
    let mut option_241: std::option::Option<reversi::Player> = std::option::Option::Some(player_168);
    let mut player_169: reversi::Player = crate::reversi::Player::Player0;
    let mut player_170: reversi::Player = crate::reversi::Player::other(player_169);
    let mut option_242: std::option::Option<reversi::Player> = std::option::Option::Some(player_170);
    let mut option_array_29: [std::option::Option<reversi::Player>; 8] = [option_242, option_241, option_240, option_239, option_238, option_237, option_236, option_235];
    let mut option_243: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_171: reversi::Player = crate::reversi::Player::Player0;
    let mut player_172: reversi::Player = crate::reversi::Player::other(player_171);
    let mut option_244: std::option::Option<reversi::Player> = std::option::Option::Some(player_172);
    let mut option_245: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_246: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_173: reversi::Player = crate::reversi::Player::Player1;
    let mut player_174: reversi::Player = crate::reversi::Player::other(player_173);
    let mut option_247: std::option::Option<reversi::Player> = std::option::Option::Some(player_174);
    let mut option_248: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_249: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_250: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_30: [std::option::Option<reversi::Player>; 8] = [option_250, option_249, option_248, option_247, option_246, option_245, option_244, option_243];
    let mut player_175: reversi::Player = crate::reversi::Player::Player0;
    let mut player_176: reversi::Player = crate::reversi::Player::other(player_175);
    let mut option_251: std::option::Option<reversi::Player> = std::option::Option::Some(player_176);
    let mut player_177: reversi::Player = crate::reversi::Player::Player1;
    let mut option_252: std::option::Option<reversi::Player> = std::option::Option::Some(player_177);
    let mut player_178: reversi::Player = crate::reversi::Player::Player0;
    let mut option_253: std::option::Option<reversi::Player> = std::option::Option::Some(player_178);
    let mut option_254: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_255: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_179: reversi::Player = crate::reversi::Player::Player1;
    let mut player_180: reversi::Player = crate::reversi::Player::other(player_179);
    let mut option_256: std::option::Option<reversi::Player> = std::option::Option::Some(player_180);
    let mut option_257: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_181: reversi::Player = crate::reversi::Player::Player1;
    let mut option_258: std::option::Option<reversi::Player> = std::option::Option::Some(player_181);
    let mut option_array_31: [std::option::Option<reversi::Player>; 8] = [option_258, option_257, option_256, option_255, option_254, option_253, option_252, option_251];
    let mut player_182: reversi::Player = crate::reversi::Player::Player0;
    let mut option_259: std::option::Option<reversi::Player> = std::option::Option::Some(player_182);
    let mut player_183: reversi::Player = crate::reversi::Player::Player1;
    let mut option_260: std::option::Option<reversi::Player> = std::option::Option::Some(player_183);
    let mut option_261: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_184: reversi::Player = crate::reversi::Player::Player1;
    let mut player_185: reversi::Player = crate::reversi::Player::other(player_184);
    let mut option_262: std::option::Option<reversi::Player> = std::option::Option::Some(player_185);
    let mut player_186: reversi::Player = crate::reversi::Player::Player1;
    let mut option_263: std::option::Option<reversi::Player> = std::option::Option::Some(player_186);
    let mut option_264: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_265: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_187: reversi::Player = crate::reversi::Player::Player0;
    let mut option_266: std::option::Option<reversi::Player> = std::option::Option::Some(player_187);
    let mut option_array_32: [std::option::Option<reversi::Player>; 8] = [option_266, option_265, option_264, option_263, option_262, option_261, option_260, option_259];
    let mut option_array_array_3: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_32, option_array_31, option_array_30, option_array_29, option_array_28, option_array_27, option_array_26, option_array_25];
    let mut reversi_3: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_3, next: player_137, status: gamestate_4};
    let mut reversi_3_ref_0: &crate::reversi::Reversi = &mut reversi_3;
    let mut option_267: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_3_ref_0);
    let mut player_188: reversi::Player = crate::reversi::Player::Player1;
    let mut gamestate_5: reversi::GameState = crate::reversi::GameState::Win(player_188);
    let mut player_189: reversi::Player = crate::reversi::Player::Player1;
    let mut player_190: reversi::Player = crate::reversi::Player::other(player_189);
    let mut option_268: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_191: reversi::Player = crate::reversi::Player::Player0;
    let mut option_269: std::option::Option<reversi::Player> = std::option::Option::Some(player_191);
    let mut player_192: reversi::Player = crate::reversi::Player::Player1;
    let mut player_193: reversi::Player = crate::reversi::Player::other(player_192);
    let mut option_270: std::option::Option<reversi::Player> = std::option::Option::Some(player_193);
    let mut option_271: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_272: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_194: reversi::Player = crate::reversi::Player::Player0;
    let mut option_273: std::option::Option<reversi::Player> = std::option::Option::Some(player_194);
    let mut option_274: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_275: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_33: [std::option::Option<reversi::Player>; 8] = [option_275, option_274, option_273, option_272, option_271, option_270, option_269, option_268];
    let mut option_276: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_195: reversi::Player = crate::reversi::Player::Player0;
    let mut player_196: reversi::Player = crate::reversi::Player::other(player_195);
    let mut option_277: std::option::Option<reversi::Player> = std::option::Option::Some(player_196);
    let mut player_197: reversi::Player = crate::reversi::Player::Player1;
    let mut player_198: reversi::Player = crate::reversi::Player::other(player_197);
    let mut option_278: std::option::Option<reversi::Player> = std::option::Option::Some(player_198);
    let mut player_199: reversi::Player = crate::reversi::Player::Player0;
    let mut option_279: std::option::Option<reversi::Player> = std::option::Option::Some(player_199);
    let mut option_280: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_200: reversi::Player = crate::reversi::Player::Player0;
    let mut option_281: std::option::Option<reversi::Player> = std::option::Option::Some(player_200);
    let mut player_201: reversi::Player = crate::reversi::Player::Player1;
    let mut option_282: std::option::Option<reversi::Player> = std::option::Option::Some(player_201);
    let mut option_283: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_34: [std::option::Option<reversi::Player>; 8] = [option_283, option_282, option_281, option_280, option_279, option_278, option_277, option_276];
    let mut option_284: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_202: reversi::Player = crate::reversi::Player::Player0;
    let mut option_285: std::option::Option<reversi::Player> = std::option::Option::Some(player_202);
    let mut option_286: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_203: reversi::Player = crate::reversi::Player::Player0;
    let mut option_287: std::option::Option<reversi::Player> = std::option::Option::Some(player_203);
    let mut option_288: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_289: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_204: reversi::Player = crate::reversi::Player::Player0;
    let mut player_205: reversi::Player = crate::reversi::Player::other(player_204);
    let mut option_290: std::option::Option<reversi::Player> = std::option::Option::Some(player_205);
    let mut player_206: reversi::Player = crate::reversi::Player::Player0;
    let mut option_291: std::option::Option<reversi::Player> = std::option::Option::Some(player_206);
    let mut option_array_35: [std::option::Option<reversi::Player>; 8] = [option_291, option_290, option_289, option_288, option_287, option_286, option_285, option_284];
    let mut option_292: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_207: reversi::Player = crate::reversi::Player::Player1;
    let mut option_293: std::option::Option<reversi::Player> = std::option::Option::Some(player_207);
    let mut player_208: reversi::Player = crate::reversi::Player::Player1;
    let mut option_294: std::option::Option<reversi::Player> = std::option::Option::Some(player_208);
    let mut option_295: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_296: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_209: reversi::Player = crate::reversi::Player::Player0;
    let mut option_297: std::option::Option<reversi::Player> = std::option::Option::Some(player_209);
    let mut option_298: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_299: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_36: [std::option::Option<reversi::Player>; 8] = [option_299, option_298, option_297, option_296, option_295, option_294, option_293, option_292];
    let mut option_300: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_301: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_302: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_303: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_210: reversi::Player = crate::reversi::Player::Player1;
    let mut player_211: reversi::Player = crate::reversi::Player::other(player_210);
    let mut option_304: std::option::Option<reversi::Player> = std::option::Option::Some(player_211);
    let mut option_305: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_306: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_307: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_37: [std::option::Option<reversi::Player>; 8] = [option_307, option_306, option_305, option_304, option_303, option_302, option_301, option_300];
    let mut player_212: reversi::Player = crate::reversi::Player::Player1;
    let mut option_308: std::option::Option<reversi::Player> = std::option::Option::Some(player_212);
    let mut player_213: reversi::Player = crate::reversi::Player::Player0;
    let mut option_309: std::option::Option<reversi::Player> = std::option::Option::Some(player_213);
    let mut player_214: reversi::Player = crate::reversi::Player::Player1;
    let mut player_215: reversi::Player = crate::reversi::Player::other(player_214);
    let mut option_310: std::option::Option<reversi::Player> = std::option::Option::Some(player_215);
    let mut player_216: reversi::Player = crate::reversi::Player::Player1;
    let mut option_311: std::option::Option<reversi::Player> = std::option::Option::Some(player_216);
    let mut player_217: reversi::Player = crate::reversi::Player::Player1;
    let mut option_312: std::option::Option<reversi::Player> = std::option::Option::Some(player_217);
    let mut option_313: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_314: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_218: reversi::Player = crate::reversi::Player::Player1;
    let mut option_315: std::option::Option<reversi::Player> = std::option::Option::Some(player_218);
    let mut option_array_38: [std::option::Option<reversi::Player>; 8] = [option_315, option_314, option_313, option_312, option_311, option_310, option_309, option_308];
    let mut option_316: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_219: reversi::Player = crate::reversi::Player::Player0;
    let mut option_317: std::option::Option<reversi::Player> = std::option::Option::Some(player_219);
    let mut player_220: reversi::Player = crate::reversi::Player::Player0;
    let mut option_318: std::option::Option<reversi::Player> = std::option::Option::Some(player_220);
    let mut option_319: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_221: reversi::Player = crate::reversi::Player::Player0;
    let mut player_222: reversi::Player = crate::reversi::Player::other(player_221);
    let mut option_320: std::option::Option<reversi::Player> = std::option::Option::Some(player_222);
    let mut option_321: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_223: reversi::Player = crate::reversi::Player::Player1;
    let mut option_322: std::option::Option<reversi::Player> = std::option::Option::Some(player_223);
    let mut option_323: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_39: [std::option::Option<reversi::Player>; 8] = [option_323, option_322, option_321, option_320, option_319, option_318, option_317, option_316];
    let mut option_324: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_224: reversi::Player = crate::reversi::Player::Player0;
    let mut option_325: std::option::Option<reversi::Player> = std::option::Option::Some(player_224);
    let mut option_326: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_225: reversi::Player = crate::reversi::Player::Player0;
    let mut player_226: reversi::Player = crate::reversi::Player::other(player_225);
    let mut option_327: std::option::Option<reversi::Player> = std::option::Option::Some(player_226);
    let mut option_328: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_227: reversi::Player = crate::reversi::Player::Player1;
    let mut player_228: reversi::Player = crate::reversi::Player::other(player_227);
    let mut option_329: std::option::Option<reversi::Player> = std::option::Option::Some(player_228);
    let mut option_330: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_229: reversi::Player = crate::reversi::Player::Player1;
    let mut player_230: reversi::Player = crate::reversi::Player::other(player_229);
    let mut option_331: std::option::Option<reversi::Player> = std::option::Option::Some(player_230);
    let mut option_array_40: [std::option::Option<reversi::Player>; 8] = [option_331, option_330, option_329, option_328, option_327, option_326, option_325, option_324];
    let mut option_array_array_4: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_40, option_array_39, option_array_38, option_array_37, option_array_36, option_array_35, option_array_34, option_array_33];
    let mut reversi_4: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_4, next: player_190, status: gamestate_5};
    let mut reversi_4_ref_0: &crate::reversi::Reversi = &mut reversi_4;
    let mut option_332: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_4_ref_0);
    let mut option_333: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_231: reversi::Player = crate::reversi::Player::Player1;
    let mut option_334: std::option::Option<reversi::Player> = std::option::Option::Some(player_231);
    let mut option_335: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_41: [std::option::Option<reversi::Player>; 8] = [option_335, option_334, option_333, option_332, option_267, option_202, option_137, option_136];
    let mut gamestate_6: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_232: reversi::Player = crate::reversi::Player::Player0;
    let mut option_336: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_233: reversi::Player = crate::reversi::Player::Player1;
    let mut player_234: reversi::Player = crate::reversi::Player::other(player_233);
    let mut option_337: std::option::Option<reversi::Player> = std::option::Option::Some(player_234);
    let mut option_338: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_235: reversi::Player = crate::reversi::Player::Player1;
    let mut option_339: std::option::Option<reversi::Player> = std::option::Option::Some(player_235);
    let mut player_236: reversi::Player = crate::reversi::Player::Player1;
    let mut option_340: std::option::Option<reversi::Player> = std::option::Option::Some(player_236);
    let mut option_341: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_342: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_343: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_42: [std::option::Option<reversi::Player>; 8] = [option_343, option_342, option_341, option_340, option_339, option_338, option_337, option_336];
    let mut player_237: reversi::Player = crate::reversi::Player::Player1;
    let mut option_344: std::option::Option<reversi::Player> = std::option::Option::Some(player_237);
    let mut option_345: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_346: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_347: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_238: reversi::Player = crate::reversi::Player::Player0;
    let mut player_239: reversi::Player = crate::reversi::Player::other(player_238);
    let mut option_348: std::option::Option<reversi::Player> = std::option::Option::Some(player_239);
    let mut player_240: reversi::Player = crate::reversi::Player::Player0;
    let mut option_349: std::option::Option<reversi::Player> = std::option::Option::Some(player_240);
    let mut option_350: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_241: reversi::Player = crate::reversi::Player::Player0;
    let mut player_242: reversi::Player = crate::reversi::Player::other(player_241);
    let mut option_351: std::option::Option<reversi::Player> = std::option::Option::Some(player_242);
    let mut option_array_43: [std::option::Option<reversi::Player>; 8] = [option_351, option_350, option_349, option_348, option_347, option_346, option_345, option_344];
    let mut option_352: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_243: reversi::Player = crate::reversi::Player::Player0;
    let mut player_244: reversi::Player = crate::reversi::Player::other(player_243);
    let mut option_353: std::option::Option<reversi::Player> = std::option::Option::Some(player_244);
    let mut option_354: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_355: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_356: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_357: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_358: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_245: reversi::Player = crate::reversi::Player::Player0;
    let mut player_246: reversi::Player = crate::reversi::Player::other(player_245);
    let mut option_359: std::option::Option<reversi::Player> = std::option::Option::Some(player_246);
    let mut option_array_44: [std::option::Option<reversi::Player>; 8] = [option_359, option_358, option_357, option_356, option_355, option_354, option_353, option_352];
    let mut option_360: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_247: reversi::Player = crate::reversi::Player::Player1;
    let mut option_361: std::option::Option<reversi::Player> = std::option::Option::Some(player_247);
    let mut option_362: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_363: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_248: reversi::Player = crate::reversi::Player::Player1;
    let mut option_364: std::option::Option<reversi::Player> = std::option::Option::Some(player_248);
    let mut player_249: reversi::Player = crate::reversi::Player::Player0;
    let mut option_365: std::option::Option<reversi::Player> = std::option::Option::Some(player_249);
    let mut option_366: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_367: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_45: [std::option::Option<reversi::Player>; 8] = [option_367, option_366, option_365, option_364, option_363, option_362, option_361, option_360];
    let mut player_250: reversi::Player = crate::reversi::Player::Player1;
    let mut option_368: std::option::Option<reversi::Player> = std::option::Option::Some(player_250);
    let mut option_369: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_251: reversi::Player = crate::reversi::Player::Player0;
    let mut option_370: std::option::Option<reversi::Player> = std::option::Option::Some(player_251);
    let mut player_252: reversi::Player = crate::reversi::Player::Player0;
    let mut option_371: std::option::Option<reversi::Player> = std::option::Option::Some(player_252);
    let mut option_372: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_253: reversi::Player = crate::reversi::Player::Player1;
    let mut player_254: reversi::Player = crate::reversi::Player::other(player_253);
    let mut option_373: std::option::Option<reversi::Player> = std::option::Option::Some(player_254);
    let mut option_374: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_375: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_46: [std::option::Option<reversi::Player>; 8] = [option_375, option_374, option_373, option_372, option_371, option_370, option_369, option_368];
    let mut option_376: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_377: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_255: reversi::Player = crate::reversi::Player::Player0;
    let mut option_378: std::option::Option<reversi::Player> = std::option::Option::Some(player_255);
    let mut player_256: reversi::Player = crate::reversi::Player::Player1;
    let mut player_257: reversi::Player = crate::reversi::Player::other(player_256);
    let mut option_379: std::option::Option<reversi::Player> = std::option::Option::Some(player_257);
    let mut player_258: reversi::Player = crate::reversi::Player::Player1;
    let mut player_259: reversi::Player = crate::reversi::Player::other(player_258);
    let mut option_380: std::option::Option<reversi::Player> = std::option::Option::Some(player_259);
    let mut option_381: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_382: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_383: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_47: [std::option::Option<reversi::Player>; 8] = [option_383, option_382, option_381, option_380, option_379, option_378, option_377, option_376];
    let mut player_260: reversi::Player = crate::reversi::Player::Player0;
    let mut option_384: std::option::Option<reversi::Player> = std::option::Option::Some(player_260);
    let mut player_261: reversi::Player = crate::reversi::Player::Player1;
    let mut option_385: std::option::Option<reversi::Player> = std::option::Option::Some(player_261);
    let mut option_386: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_262: reversi::Player = crate::reversi::Player::Player0;
    let mut option_387: std::option::Option<reversi::Player> = std::option::Option::Some(player_262);
    let mut player_263: reversi::Player = crate::reversi::Player::Player0;
    let mut option_388: std::option::Option<reversi::Player> = std::option::Option::Some(player_263);
    let mut player_264: reversi::Player = crate::reversi::Player::Player1;
    let mut option_389: std::option::Option<reversi::Player> = std::option::Option::Some(player_264);
    let mut player_265: reversi::Player = crate::reversi::Player::Player0;
    let mut player_266: reversi::Player = crate::reversi::Player::other(player_265);
    let mut option_390: std::option::Option<reversi::Player> = std::option::Option::Some(player_266);
    let mut player_267: reversi::Player = crate::reversi::Player::Player0;
    let mut option_391: std::option::Option<reversi::Player> = std::option::Option::Some(player_267);
    let mut option_array_48: [std::option::Option<reversi::Player>; 8] = [option_391, option_390, option_389, option_388, option_387, option_386, option_385, option_384];
    let mut option_392: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_393: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_268: reversi::Player = crate::reversi::Player::Player1;
    let mut player_269: reversi::Player = crate::reversi::Player::other(player_268);
    let mut option_394: std::option::Option<reversi::Player> = std::option::Option::Some(player_269);
    let mut option_395: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_270: reversi::Player = crate::reversi::Player::Player0;
    let mut player_271: reversi::Player = crate::reversi::Player::other(player_270);
    let mut option_396: std::option::Option<reversi::Player> = std::option::Option::Some(player_271);
    let mut option_397: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_272: reversi::Player = crate::reversi::Player::Player0;
    let mut option_398: std::option::Option<reversi::Player> = std::option::Option::Some(player_272);
    let mut player_273: reversi::Player = crate::reversi::Player::Player1;
    let mut option_399: std::option::Option<reversi::Player> = std::option::Option::Some(player_273);
    let mut option_array_49: [std::option::Option<reversi::Player>; 8] = [option_399, option_398, option_397, option_396, option_395, option_394, option_393, option_392];
    let mut option_array_array_5: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_49, option_array_48, option_array_47, option_array_46, option_array_45, option_array_44, option_array_43, option_array_42];
    let mut reversi_5: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_5, next: player_232, status: gamestate_6};
    let mut reversi_5_ref_0: &crate::reversi::Reversi = &mut reversi_5;
    let mut option_400: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_5_ref_0);
    let mut option_401: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_274: reversi::Player = crate::reversi::Player::Player1;
    let mut option_402: std::option::Option<reversi::Player> = std::option::Option::Some(player_274);
    let mut option_403: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_404: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_275: reversi::Player = crate::reversi::Player::Player0;
    let mut option_405: std::option::Option<reversi::Player> = std::option::Option::Some(player_275);
    let mut player_276: reversi::Player = crate::reversi::Player::Player0;
    let mut option_406: std::option::Option<reversi::Player> = std::option::Option::Some(player_276);
    let mut option_407: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_50: [std::option::Option<reversi::Player>; 8] = [option_407, option_406, option_405, option_404, option_403, option_402, option_401, option_400];
    let mut player_277: reversi::Player = crate::reversi::Player::Player0;
    let mut player_278: reversi::Player = crate::reversi::Player::other(player_277);
    let mut option_408: std::option::Option<reversi::Player> = std::option::Option::Some(player_278);
    let mut option_409: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_279: reversi::Player = crate::reversi::Player::Player0;
    let mut player_280: reversi::Player = crate::reversi::Player::other(player_279);
    let mut option_410: std::option::Option<reversi::Player> = std::option::Option::Some(player_280);
    let mut option_411: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut gamestate_7: reversi::GameState = crate::reversi::GameState::Tie;
    let mut player_281: reversi::Player = crate::reversi::Player::Player1;
    let mut player_282: reversi::Player = crate::reversi::Player::other(player_281);
    let mut player_283: reversi::Player = crate::reversi::Player::Player0;
    let mut option_412: std::option::Option<reversi::Player> = std::option::Option::Some(player_283);
    let mut player_284: reversi::Player = crate::reversi::Player::Player0;
    let mut option_413: std::option::Option<reversi::Player> = std::option::Option::Some(player_284);
    let mut option_414: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_285: reversi::Player = crate::reversi::Player::Player1;
    let mut player_286: reversi::Player = crate::reversi::Player::other(player_285);
    let mut option_415: std::option::Option<reversi::Player> = std::option::Option::Some(player_286);
    let mut player_287: reversi::Player = crate::reversi::Player::Player0;
    let mut option_416: std::option::Option<reversi::Player> = std::option::Option::Some(player_287);
    let mut option_417: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_288: reversi::Player = crate::reversi::Player::Player1;
    let mut player_289: reversi::Player = crate::reversi::Player::other(player_288);
    let mut option_418: std::option::Option<reversi::Player> = std::option::Option::Some(player_289);
    let mut option_419: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_51: [std::option::Option<reversi::Player>; 8] = [option_419, option_418, option_417, option_416, option_415, option_414, option_413, option_412];
    let mut option_420: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_421: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_290: reversi::Player = crate::reversi::Player::Player0;
    let mut option_422: std::option::Option<reversi::Player> = std::option::Option::Some(player_290);
    let mut player_291: reversi::Player = crate::reversi::Player::Player0;
    let mut player_292: reversi::Player = crate::reversi::Player::other(player_291);
    let mut option_423: std::option::Option<reversi::Player> = std::option::Option::Some(player_292);
    let mut option_424: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_425: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_293: reversi::Player = crate::reversi::Player::Player0;
    let mut option_426: std::option::Option<reversi::Player> = std::option::Option::Some(player_293);
    let mut player_294: reversi::Player = crate::reversi::Player::Player1;
    let mut player_295: reversi::Player = crate::reversi::Player::other(player_294);
    let mut option_427: std::option::Option<reversi::Player> = std::option::Option::Some(player_295);
    let mut option_array_52: [std::option::Option<reversi::Player>; 8] = [option_427, option_426, option_425, option_424, option_423, option_422, option_421, option_420];
    let mut player_296: reversi::Player = crate::reversi::Player::Player1;
    let mut player_297: reversi::Player = crate::reversi::Player::other(player_296);
    let mut option_428: std::option::Option<reversi::Player> = std::option::Option::Some(player_297);
    let mut player_298: reversi::Player = crate::reversi::Player::Player0;
    let mut option_429: std::option::Option<reversi::Player> = std::option::Option::Some(player_298);
    let mut option_430: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_431: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_432: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_299: reversi::Player = crate::reversi::Player::Player1;
    let mut option_433: std::option::Option<reversi::Player> = std::option::Option::Some(player_299);
    let mut option_434: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_300: reversi::Player = crate::reversi::Player::Player1;
    let mut option_435: std::option::Option<reversi::Player> = std::option::Option::Some(player_300);
    let mut option_array_53: [std::option::Option<reversi::Player>; 8] = [option_435, option_434, option_433, option_432, option_431, option_430, option_429, option_428];
    let mut player_301: reversi::Player = crate::reversi::Player::Player0;
    let mut player_302: reversi::Player = crate::reversi::Player::other(player_301);
    let mut option_436: std::option::Option<reversi::Player> = std::option::Option::Some(player_302);
    let mut option_437: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_303: reversi::Player = crate::reversi::Player::Player0;
    let mut player_304: reversi::Player = crate::reversi::Player::other(player_303);
    let mut option_438: std::option::Option<reversi::Player> = std::option::Option::Some(player_304);
    let mut player_305: reversi::Player = crate::reversi::Player::Player0;
    let mut player_306: reversi::Player = crate::reversi::Player::other(player_305);
    let mut option_439: std::option::Option<reversi::Player> = std::option::Option::Some(player_306);
    let mut option_440: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_307: reversi::Player = crate::reversi::Player::Player0;
    let mut option_441: std::option::Option<reversi::Player> = std::option::Option::Some(player_307);
    let mut option_442: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_443: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_54: [std::option::Option<reversi::Player>; 8] = [option_443, option_442, option_441, option_440, option_439, option_438, option_437, option_436];
    let mut player_308: reversi::Player = crate::reversi::Player::Player1;
    let mut option_444: std::option::Option<reversi::Player> = std::option::Option::Some(player_308);
    let mut option_445: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_309: reversi::Player = crate::reversi::Player::Player1;
    let mut option_446: std::option::Option<reversi::Player> = std::option::Option::Some(player_309);
    let mut player_310: reversi::Player = crate::reversi::Player::Player0;
    let mut option_447: std::option::Option<reversi::Player> = std::option::Option::Some(player_310);
    let mut player_311: reversi::Player = crate::reversi::Player::Player0;
    let mut option_448: std::option::Option<reversi::Player> = std::option::Option::Some(player_311);
    let mut player_312: reversi::Player = crate::reversi::Player::Player0;
    let mut option_449: std::option::Option<reversi::Player> = std::option::Option::Some(player_312);
    let mut player_313: reversi::Player = crate::reversi::Player::Player0;
    let mut option_450: std::option::Option<reversi::Player> = std::option::Option::Some(player_313);
    let mut player_314: reversi::Player = crate::reversi::Player::Player0;
    let mut option_451: std::option::Option<reversi::Player> = std::option::Option::Some(player_314);
    let mut option_array_55: [std::option::Option<reversi::Player>; 8] = [option_451, option_450, option_449, option_448, option_447, option_446, option_445, option_444];
    let mut option_452: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_453: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_454: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_455: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_315: reversi::Player = crate::reversi::Player::Player0;
    let mut option_456: std::option::Option<reversi::Player> = std::option::Option::Some(player_315);
    let mut option_457: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_458: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_459: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_56: [std::option::Option<reversi::Player>; 8] = [option_459, option_458, option_457, option_456, option_455, option_454, option_453, option_452];
    let mut player_316: reversi::Player = crate::reversi::Player::Player1;
    let mut option_460: std::option::Option<reversi::Player> = std::option::Option::Some(player_316);
    let mut player_317: reversi::Player = crate::reversi::Player::Player0;
    let mut player_318: reversi::Player = crate::reversi::Player::other(player_317);
    let mut option_461: std::option::Option<reversi::Player> = std::option::Option::Some(player_318);
    let mut option_462: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_463: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_464: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_319: reversi::Player = crate::reversi::Player::Player0;
    let mut option_465: std::option::Option<reversi::Player> = std::option::Option::Some(player_319);
    let mut player_320: reversi::Player = crate::reversi::Player::Player1;
    let mut option_466: std::option::Option<reversi::Player> = std::option::Option::Some(player_320);
    let mut option_467: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_57: [std::option::Option<reversi::Player>; 8] = [option_467, option_466, option_465, option_464, option_463, option_462, option_461, option_460];
    let mut option_468: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_321: reversi::Player = crate::reversi::Player::Player1;
    let mut option_469: std::option::Option<reversi::Player> = std::option::Option::Some(player_321);
    let mut option_470: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_471: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_322: reversi::Player = crate::reversi::Player::Player0;
    let mut option_472: std::option::Option<reversi::Player> = std::option::Option::Some(player_322);
    let mut option_473: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_474: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_323: reversi::Player = crate::reversi::Player::Player0;
    let mut option_475: std::option::Option<reversi::Player> = std::option::Option::Some(player_323);
    let mut option_array_58: [std::option::Option<reversi::Player>; 8] = [option_475, option_474, option_473, option_472, option_471, option_470, option_469, option_468];
    let mut option_array_array_6: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_58, option_array_57, option_array_56, option_array_55, option_array_54, option_array_53, option_array_52, option_array_51];
    let mut reversi_6: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_6, next: player_282, status: gamestate_7};
    let mut reversi_6_ref_0: &crate::reversi::Reversi = &mut reversi_6;
    let mut option_476: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_6_ref_0);
    let mut player_324: reversi::Player = crate::reversi::Player::Player1;
    let mut option_477: std::option::Option<reversi::Player> = std::option::Option::Some(player_324);
    let mut gamestate_8: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_325: reversi::Player = crate::reversi::Player::Player0;
    let mut player_326: reversi::Player = crate::reversi::Player::other(player_325);
    let mut player_327: reversi::Player = crate::reversi::Player::Player1;
    let mut player_328: reversi::Player = crate::reversi::Player::other(player_327);
    let mut option_478: std::option::Option<reversi::Player> = std::option::Option::Some(player_328);
    let mut player_329: reversi::Player = crate::reversi::Player::Player1;
    let mut player_330: reversi::Player = crate::reversi::Player::other(player_329);
    let mut option_479: std::option::Option<reversi::Player> = std::option::Option::Some(player_330);
    let mut player_331: reversi::Player = crate::reversi::Player::Player0;
    let mut option_480: std::option::Option<reversi::Player> = std::option::Option::Some(player_331);
    let mut option_481: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_332: reversi::Player = crate::reversi::Player::Player1;
    let mut player_333: reversi::Player = crate::reversi::Player::other(player_332);
    let mut option_482: std::option::Option<reversi::Player> = std::option::Option::Some(player_333);
    let mut player_334: reversi::Player = crate::reversi::Player::Player1;
    let mut option_483: std::option::Option<reversi::Player> = std::option::Option::Some(player_334);
    let mut player_335: reversi::Player = crate::reversi::Player::Player0;
    let mut player_336: reversi::Player = crate::reversi::Player::other(player_335);
    let mut option_484: std::option::Option<reversi::Player> = std::option::Option::Some(player_336);
    let mut option_485: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_59: [std::option::Option<reversi::Player>; 8] = [option_485, option_484, option_483, option_482, option_481, option_480, option_479, option_478];
    let mut option_486: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_337: reversi::Player = crate::reversi::Player::Player1;
    let mut option_487: std::option::Option<reversi::Player> = std::option::Option::Some(player_337);
    let mut player_338: reversi::Player = crate::reversi::Player::Player1;
    let mut option_488: std::option::Option<reversi::Player> = std::option::Option::Some(player_338);
    let mut option_489: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_490: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_339: reversi::Player = crate::reversi::Player::Player0;
    let mut option_491: std::option::Option<reversi::Player> = std::option::Option::Some(player_339);
    let mut option_492: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_493: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_60: [std::option::Option<reversi::Player>; 8] = [option_493, option_492, option_491, option_490, option_489, option_488, option_487, option_486];
    let mut player_340: reversi::Player = crate::reversi::Player::Player0;
    let mut option_494: std::option::Option<reversi::Player> = std::option::Option::Some(player_340);
    let mut option_495: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_496: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_497: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_341: reversi::Player = crate::reversi::Player::Player1;
    let mut option_498: std::option::Option<reversi::Player> = std::option::Option::Some(player_341);
    let mut option_499: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_342: reversi::Player = crate::reversi::Player::Player1;
    let mut option_500: std::option::Option<reversi::Player> = std::option::Option::Some(player_342);
    let mut option_501: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_61: [std::option::Option<reversi::Player>; 8] = [option_501, option_500, option_499, option_498, option_497, option_496, option_495, option_494];
    let mut player_343: reversi::Player = crate::reversi::Player::Player1;
    let mut option_502: std::option::Option<reversi::Player> = std::option::Option::Some(player_343);
    let mut option_503: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_344: reversi::Player = crate::reversi::Player::Player0;
    let mut player_345: reversi::Player = crate::reversi::Player::other(player_344);
    let mut option_504: std::option::Option<reversi::Player> = std::option::Option::Some(player_345);
    let mut option_505: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_346: reversi::Player = crate::reversi::Player::Player0;
    let mut option_506: std::option::Option<reversi::Player> = std::option::Option::Some(player_346);
    let mut player_347: reversi::Player = crate::reversi::Player::Player1;
    let mut option_507: std::option::Option<reversi::Player> = std::option::Option::Some(player_347);
    let mut player_348: reversi::Player = crate::reversi::Player::Player1;
    let mut option_508: std::option::Option<reversi::Player> = std::option::Option::Some(player_348);
    let mut player_349: reversi::Player = crate::reversi::Player::Player1;
    let mut option_509: std::option::Option<reversi::Player> = std::option::Option::Some(player_349);
    let mut option_array_62: [std::option::Option<reversi::Player>; 8] = [option_509, option_508, option_507, option_506, option_505, option_504, option_503, option_502];
    let mut option_510: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_511: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_512: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_513: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_350: reversi::Player = crate::reversi::Player::Player0;
    let mut option_514: std::option::Option<reversi::Player> = std::option::Option::Some(player_350);
    let mut option_515: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_351: reversi::Player = crate::reversi::Player::Player0;
    let mut option_516: std::option::Option<reversi::Player> = std::option::Option::Some(player_351);
    let mut player_352: reversi::Player = crate::reversi::Player::Player1;
    let mut option_517: std::option::Option<reversi::Player> = std::option::Option::Some(player_352);
    let mut option_array_63: [std::option::Option<reversi::Player>; 8] = [option_517, option_516, option_515, option_514, option_513, option_512, option_511, option_510];
    let mut player_353: reversi::Player = crate::reversi::Player::Player1;
    let mut player_354: reversi::Player = crate::reversi::Player::other(player_353);
    let mut option_518: std::option::Option<reversi::Player> = std::option::Option::Some(player_354);
    let mut option_519: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_355: reversi::Player = crate::reversi::Player::Player1;
    let mut player_356: reversi::Player = crate::reversi::Player::other(player_355);
    let mut option_520: std::option::Option<reversi::Player> = std::option::Option::Some(player_356);
    let mut option_521: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_522: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_357: reversi::Player = crate::reversi::Player::Player0;
    let mut player_358: reversi::Player = crate::reversi::Player::other(player_357);
    let mut option_523: std::option::Option<reversi::Player> = std::option::Option::Some(player_358);
    let mut option_524: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_359: reversi::Player = crate::reversi::Player::Player1;
    let mut option_525: std::option::Option<reversi::Player> = std::option::Option::Some(player_359);
    let mut option_array_64: [std::option::Option<reversi::Player>; 8] = [option_525, option_524, option_523, option_522, option_521, option_520, option_519, option_518];
    let mut player_360: reversi::Player = crate::reversi::Player::Player0;
    let mut player_361: reversi::Player = crate::reversi::Player::other(player_360);
    let mut option_526: std::option::Option<reversi::Player> = std::option::Option::Some(player_361);
    let mut player_362: reversi::Player = crate::reversi::Player::Player1;
    let mut option_527: std::option::Option<reversi::Player> = std::option::Option::Some(player_362);
    let mut option_528: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_363: reversi::Player = crate::reversi::Player::Player0;
    let mut option_529: std::option::Option<reversi::Player> = std::option::Option::Some(player_363);
    let mut player_364: reversi::Player = crate::reversi::Player::Player1;
    let mut option_530: std::option::Option<reversi::Player> = std::option::Option::Some(player_364);
    let mut player_365: reversi::Player = crate::reversi::Player::Player1;
    let mut option_531: std::option::Option<reversi::Player> = std::option::Option::Some(player_365);
    let mut option_532: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_366: reversi::Player = crate::reversi::Player::Player1;
    let mut player_367: reversi::Player = crate::reversi::Player::other(player_366);
    let mut option_533: std::option::Option<reversi::Player> = std::option::Option::Some(player_367);
    let mut option_array_65: [std::option::Option<reversi::Player>; 8] = [option_533, option_532, option_531, option_530, option_529, option_528, option_527, option_526];
    let mut option_534: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_535: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_536: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_537: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_538: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_368: reversi::Player = crate::reversi::Player::Player1;
    let mut player_369: reversi::Player = crate::reversi::Player::other(player_368);
    let mut option_539: std::option::Option<reversi::Player> = std::option::Option::Some(player_369);
    let mut option_540: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_370: reversi::Player = crate::reversi::Player::Player1;
    let mut player_371: reversi::Player = crate::reversi::Player::other(player_370);
    let mut option_541: std::option::Option<reversi::Player> = std::option::Option::Some(player_371);
    let mut option_array_66: [std::option::Option<reversi::Player>; 8] = [option_541, option_540, option_539, option_538, option_537, option_536, option_535, option_534];
    let mut option_array_array_7: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_66, option_array_65, option_array_64, option_array_63, option_array_62, option_array_61, option_array_60, option_array_59];
    let mut reversi_7: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_7, next: player_326, status: gamestate_8};
    let mut reversi_7_ref_0: &crate::reversi::Reversi = &mut reversi_7;
    let mut option_542: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_7_ref_0);
    let mut player_372: reversi::Player = crate::reversi::Player::Player0;
    let mut player_373: reversi::Player = crate::reversi::Player::other(player_372);
    let mut gamestate_9: reversi::GameState = crate::reversi::GameState::Win(player_373);
    let mut player_374: reversi::Player = crate::reversi::Player::Player0;
    let mut player_375: reversi::Player = crate::reversi::Player::other(player_374);
    let mut player_376: reversi::Player = crate::reversi::Player::Player1;
    let mut option_543: std::option::Option<reversi::Player> = std::option::Option::Some(player_376);
    let mut player_377: reversi::Player = crate::reversi::Player::Player1;
    let mut option_544: std::option::Option<reversi::Player> = std::option::Option::Some(player_377);
    let mut option_545: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_378: reversi::Player = crate::reversi::Player::Player0;
    let mut player_379: reversi::Player = crate::reversi::Player::other(player_378);
    let mut option_546: std::option::Option<reversi::Player> = std::option::Option::Some(player_379);
    let mut player_380: reversi::Player = crate::reversi::Player::Player0;
    let mut option_547: std::option::Option<reversi::Player> = std::option::Option::Some(player_380);
    let mut option_548: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_549: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_381: reversi::Player = crate::reversi::Player::Player0;
    let mut option_550: std::option::Option<reversi::Player> = std::option::Option::Some(player_381);
    let mut option_array_67: [std::option::Option<reversi::Player>; 8] = [option_550, option_549, option_548, option_547, option_546, option_545, option_544, option_543];
    let mut player_382: reversi::Player = crate::reversi::Player::Player0;
    let mut option_551: std::option::Option<reversi::Player> = std::option::Option::Some(player_382);
    let mut player_383: reversi::Player = crate::reversi::Player::Player1;
    let mut option_552: std::option::Option<reversi::Player> = std::option::Option::Some(player_383);
    let mut option_553: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_554: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_384: reversi::Player = crate::reversi::Player::Player0;
    let mut option_555: std::option::Option<reversi::Player> = std::option::Option::Some(player_384);
    let mut option_556: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_557: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_385: reversi::Player = crate::reversi::Player::Player0;
    let mut option_558: std::option::Option<reversi::Player> = std::option::Option::Some(player_385);
    let mut option_array_68: [std::option::Option<reversi::Player>; 8] = [option_558, option_557, option_556, option_555, option_554, option_553, option_552, option_551];
    let mut option_559: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_560: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_386: reversi::Player = crate::reversi::Player::Player0;
    let mut player_387: reversi::Player = crate::reversi::Player::other(player_386);
    let mut option_561: std::option::Option<reversi::Player> = std::option::Option::Some(player_387);
    let mut option_562: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_563: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_388: reversi::Player = crate::reversi::Player::Player0;
    let mut option_564: std::option::Option<reversi::Player> = std::option::Option::Some(player_388);
    let mut option_565: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_389: reversi::Player = crate::reversi::Player::Player0;
    let mut option_566: std::option::Option<reversi::Player> = std::option::Option::Some(player_389);
    let mut option_array_69: [std::option::Option<reversi::Player>; 8] = [option_566, option_565, option_564, option_563, option_562, option_561, option_560, option_559];
    let mut player_390: reversi::Player = crate::reversi::Player::Player1;
    let mut option_567: std::option::Option<reversi::Player> = std::option::Option::Some(player_390);
    let mut option_568: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_569: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_391: reversi::Player = crate::reversi::Player::Player1;
    let mut option_570: std::option::Option<reversi::Player> = std::option::Option::Some(player_391);
    let mut option_571: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_572: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_573: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_392: reversi::Player = crate::reversi::Player::Player0;
    let mut player_393: reversi::Player = crate::reversi::Player::other(player_392);
    let mut option_574: std::option::Option<reversi::Player> = std::option::Option::Some(player_393);
    let mut option_array_70: [std::option::Option<reversi::Player>; 8] = [option_574, option_573, option_572, option_571, option_570, option_569, option_568, option_567];
    let mut option_575: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_576: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_394: reversi::Player = crate::reversi::Player::Player1;
    let mut player_395: reversi::Player = crate::reversi::Player::other(player_394);
    let mut option_577: std::option::Option<reversi::Player> = std::option::Option::Some(player_395);
    let mut player_396: reversi::Player = crate::reversi::Player::Player0;
    let mut player_397: reversi::Player = crate::reversi::Player::other(player_396);
    let mut option_578: std::option::Option<reversi::Player> = std::option::Option::Some(player_397);
    let mut player_398: reversi::Player = crate::reversi::Player::Player1;
    let mut option_579: std::option::Option<reversi::Player> = std::option::Option::Some(player_398);
    let mut option_580: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_581: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_582: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_71: [std::option::Option<reversi::Player>; 8] = [option_582, option_581, option_580, option_579, option_578, option_577, option_576, option_575];
    let mut player_399: reversi::Player = crate::reversi::Player::Player0;
    let mut option_583: std::option::Option<reversi::Player> = std::option::Option::Some(player_399);
    let mut option_584: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_585: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_400: reversi::Player = crate::reversi::Player::Player1;
    let mut option_586: std::option::Option<reversi::Player> = std::option::Option::Some(player_400);
    let mut player_401: reversi::Player = crate::reversi::Player::Player0;
    let mut option_587: std::option::Option<reversi::Player> = std::option::Option::Some(player_401);
    let mut option_588: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_402: reversi::Player = crate::reversi::Player::Player1;
    let mut option_589: std::option::Option<reversi::Player> = std::option::Option::Some(player_402);
    let mut player_403: reversi::Player = crate::reversi::Player::Player0;
    let mut player_404: reversi::Player = crate::reversi::Player::other(player_403);
    let mut option_590: std::option::Option<reversi::Player> = std::option::Option::Some(player_404);
    let mut option_array_72: [std::option::Option<reversi::Player>; 8] = [option_590, option_589, option_588, option_587, option_586, option_585, option_584, option_583];
    let mut player_405: reversi::Player = crate::reversi::Player::Player0;
    let mut player_406: reversi::Player = crate::reversi::Player::other(player_405);
    let mut option_591: std::option::Option<reversi::Player> = std::option::Option::Some(player_406);
    let mut option_592: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_407: reversi::Player = crate::reversi::Player::Player1;
    let mut player_408: reversi::Player = crate::reversi::Player::other(player_407);
    let mut option_593: std::option::Option<reversi::Player> = std::option::Option::Some(player_408);
    let mut player_409: reversi::Player = crate::reversi::Player::Player1;
    let mut player_410: reversi::Player = crate::reversi::Player::other(player_409);
    let mut option_594: std::option::Option<reversi::Player> = std::option::Option::Some(player_410);
    let mut option_595: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_411: reversi::Player = crate::reversi::Player::Player1;
    let mut player_412: reversi::Player = crate::reversi::Player::other(player_411);
    let mut option_596: std::option::Option<reversi::Player> = std::option::Option::Some(player_412);
    let mut option_597: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_413: reversi::Player = crate::reversi::Player::Player1;
    let mut option_598: std::option::Option<reversi::Player> = std::option::Option::Some(player_413);
    let mut option_array_73: [std::option::Option<reversi::Player>; 8] = [option_598, option_597, option_596, option_595, option_594, option_593, option_592, option_591];
    let mut player_414: reversi::Player = crate::reversi::Player::Player1;
    let mut player_415: reversi::Player = crate::reversi::Player::other(player_414);
    let mut option_599: std::option::Option<reversi::Player> = std::option::Option::Some(player_415);
    let mut player_416: reversi::Player = crate::reversi::Player::Player0;
    let mut option_600: std::option::Option<reversi::Player> = std::option::Option::Some(player_416);
    let mut option_601: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_417: reversi::Player = crate::reversi::Player::Player0;
    let mut player_418: reversi::Player = crate::reversi::Player::other(player_417);
    let mut option_602: std::option::Option<reversi::Player> = std::option::Option::Some(player_418);
    let mut option_603: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_419: reversi::Player = crate::reversi::Player::Player0;
    let mut player_420: reversi::Player = crate::reversi::Player::other(player_419);
    let mut option_604: std::option::Option<reversi::Player> = std::option::Option::Some(player_420);
    let mut option_605: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_606: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_74: [std::option::Option<reversi::Player>; 8] = [option_606, option_605, option_604, option_603, option_602, option_601, option_600, option_599];
    let mut option_array_array_8: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_74, option_array_73, option_array_72, option_array_71, option_array_70, option_array_69, option_array_68, option_array_67];
    let mut reversi_8: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_8, next: player_375, status: gamestate_9};
    let mut reversi_8_ref_0: &crate::reversi::Reversi = &mut reversi_8;
    let mut option_607: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_8_ref_0);
    let mut option_array_75: [std::option::Option<reversi::Player>; 8] = [option_607, option_542, option_477, option_476, option_411, option_410, option_409, option_408];
    let mut option_608: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_609: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_421: reversi::Player = crate::reversi::Player::Player0;
    let mut option_610: std::option::Option<reversi::Player> = std::option::Option::Some(player_421);
    let mut gamestate_10: reversi::GameState = crate::reversi::GameState::Tie;
    let mut player_422: reversi::Player = crate::reversi::Player::Player0;
    let mut player_423: reversi::Player = crate::reversi::Player::other(player_422);
    let mut player_424: reversi::Player = crate::reversi::Player::Player1;
    let mut player_425: reversi::Player = crate::reversi::Player::other(player_424);
    let mut option_611: std::option::Option<reversi::Player> = std::option::Option::Some(player_425);
    let mut option_612: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_613: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_614: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_615: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_426: reversi::Player = crate::reversi::Player::Player0;
    let mut option_616: std::option::Option<reversi::Player> = std::option::Option::Some(player_426);
    let mut player_427: reversi::Player = crate::reversi::Player::Player1;
    let mut option_617: std::option::Option<reversi::Player> = std::option::Option::Some(player_427);
    let mut player_428: reversi::Player = crate::reversi::Player::Player0;
    let mut option_618: std::option::Option<reversi::Player> = std::option::Option::Some(player_428);
    let mut option_array_76: [std::option::Option<reversi::Player>; 8] = [option_618, option_617, option_616, option_615, option_614, option_613, option_612, option_611];
    let mut player_429: reversi::Player = crate::reversi::Player::Player0;
    let mut option_619: std::option::Option<reversi::Player> = std::option::Option::Some(player_429);
    let mut player_430: reversi::Player = crate::reversi::Player::Player1;
    let mut option_620: std::option::Option<reversi::Player> = std::option::Option::Some(player_430);
    let mut player_431: reversi::Player = crate::reversi::Player::Player0;
    let mut option_621: std::option::Option<reversi::Player> = std::option::Option::Some(player_431);
    let mut option_622: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_623: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_624: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_432: reversi::Player = crate::reversi::Player::Player1;
    let mut option_625: std::option::Option<reversi::Player> = std::option::Option::Some(player_432);
    let mut option_626: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_77: [std::option::Option<reversi::Player>; 8] = [option_626, option_625, option_624, option_623, option_622, option_621, option_620, option_619];
    let mut player_433: reversi::Player = crate::reversi::Player::Player1;
    let mut option_627: std::option::Option<reversi::Player> = std::option::Option::Some(player_433);
    let mut player_434: reversi::Player = crate::reversi::Player::Player0;
    let mut player_435: reversi::Player = crate::reversi::Player::other(player_434);
    let mut option_628: std::option::Option<reversi::Player> = std::option::Option::Some(player_435);
    let mut player_436: reversi::Player = crate::reversi::Player::Player0;
    let mut player_437: reversi::Player = crate::reversi::Player::other(player_436);
    let mut option_629: std::option::Option<reversi::Player> = std::option::Option::Some(player_437);
    let mut player_438: reversi::Player = crate::reversi::Player::Player1;
    let mut player_439: reversi::Player = crate::reversi::Player::other(player_438);
    let mut option_630: std::option::Option<reversi::Player> = std::option::Option::Some(player_439);
    let mut player_440: reversi::Player = crate::reversi::Player::Player1;
    let mut player_441: reversi::Player = crate::reversi::Player::other(player_440);
    let mut option_631: std::option::Option<reversi::Player> = std::option::Option::Some(player_441);
    let mut option_632: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_442: reversi::Player = crate::reversi::Player::Player1;
    let mut option_633: std::option::Option<reversi::Player> = std::option::Option::Some(player_442);
    let mut option_634: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_78: [std::option::Option<reversi::Player>; 8] = [option_634, option_633, option_632, option_631, option_630, option_629, option_628, option_627];
    let mut option_635: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_443: reversi::Player = crate::reversi::Player::Player0;
    let mut player_444: reversi::Player = crate::reversi::Player::other(player_443);
    let mut option_636: std::option::Option<reversi::Player> = std::option::Option::Some(player_444);
    let mut player_445: reversi::Player = crate::reversi::Player::Player1;
    let mut option_637: std::option::Option<reversi::Player> = std::option::Option::Some(player_445);
    let mut option_638: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_639: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_640: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_641: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_642: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_79: [std::option::Option<reversi::Player>; 8] = [option_642, option_641, option_640, option_639, option_638, option_637, option_636, option_635];
    let mut player_446: reversi::Player = crate::reversi::Player::Player1;
    let mut option_643: std::option::Option<reversi::Player> = std::option::Option::Some(player_446);
    let mut option_644: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_447: reversi::Player = crate::reversi::Player::Player1;
    let mut player_448: reversi::Player = crate::reversi::Player::other(player_447);
    let mut option_645: std::option::Option<reversi::Player> = std::option::Option::Some(player_448);
    let mut option_646: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_647: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_648: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_449: reversi::Player = crate::reversi::Player::Player1;
    let mut player_450: reversi::Player = crate::reversi::Player::other(player_449);
    let mut option_649: std::option::Option<reversi::Player> = std::option::Option::Some(player_450);
    let mut player_451: reversi::Player = crate::reversi::Player::Player0;
    let mut option_650: std::option::Option<reversi::Player> = std::option::Option::Some(player_451);
    let mut option_array_80: [std::option::Option<reversi::Player>; 8] = [option_650, option_649, option_648, option_647, option_646, option_645, option_644, option_643];
    let mut option_651: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_652: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_452: reversi::Player = crate::reversi::Player::Player1;
    let mut option_653: std::option::Option<reversi::Player> = std::option::Option::Some(player_452);
    let mut option_654: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_453: reversi::Player = crate::reversi::Player::Player0;
    let mut option_655: std::option::Option<reversi::Player> = std::option::Option::Some(player_453);
    let mut option_656: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_454: reversi::Player = crate::reversi::Player::Player1;
    let mut option_657: std::option::Option<reversi::Player> = std::option::Option::Some(player_454);
    let mut option_658: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_81: [std::option::Option<reversi::Player>; 8] = [option_658, option_657, option_656, option_655, option_654, option_653, option_652, option_651];
    let mut option_659: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_455: reversi::Player = crate::reversi::Player::Player0;
    let mut player_456: reversi::Player = crate::reversi::Player::other(player_455);
    let mut option_660: std::option::Option<reversi::Player> = std::option::Option::Some(player_456);
    let mut option_661: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_457: reversi::Player = crate::reversi::Player::Player0;
    let mut player_458: reversi::Player = crate::reversi::Player::other(player_457);
    let mut option_662: std::option::Option<reversi::Player> = std::option::Option::Some(player_458);
    let mut player_459: reversi::Player = crate::reversi::Player::Player1;
    let mut option_663: std::option::Option<reversi::Player> = std::option::Option::Some(player_459);
    let mut player_460: reversi::Player = crate::reversi::Player::Player1;
    let mut option_664: std::option::Option<reversi::Player> = std::option::Option::Some(player_460);
    let mut player_461: reversi::Player = crate::reversi::Player::Player1;
    let mut option_665: std::option::Option<reversi::Player> = std::option::Option::Some(player_461);
    let mut player_462: reversi::Player = crate::reversi::Player::Player0;
    let mut player_463: reversi::Player = crate::reversi::Player::other(player_462);
    let mut option_666: std::option::Option<reversi::Player> = std::option::Option::Some(player_463);
    let mut option_array_82: [std::option::Option<reversi::Player>; 8] = [option_666, option_665, option_664, option_663, option_662, option_661, option_660, option_659];
    let mut option_667: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_464: reversi::Player = crate::reversi::Player::Player0;
    let mut player_465: reversi::Player = crate::reversi::Player::other(player_464);
    let mut option_668: std::option::Option<reversi::Player> = std::option::Option::Some(player_465);
    let mut option_669: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_466: reversi::Player = crate::reversi::Player::Player1;
    let mut player_467: reversi::Player = crate::reversi::Player::other(player_466);
    let mut option_670: std::option::Option<reversi::Player> = std::option::Option::Some(player_467);
    let mut player_468: reversi::Player = crate::reversi::Player::Player1;
    let mut player_469: reversi::Player = crate::reversi::Player::other(player_468);
    let mut option_671: std::option::Option<reversi::Player> = std::option::Option::Some(player_469);
    let mut option_672: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_673: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_470: reversi::Player = crate::reversi::Player::Player1;
    let mut option_674: std::option::Option<reversi::Player> = std::option::Option::Some(player_470);
    let mut option_array_83: [std::option::Option<reversi::Player>; 8] = [option_674, option_673, option_672, option_671, option_670, option_669, option_668, option_667];
    let mut option_array_array_9: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_83, option_array_82, option_array_81, option_array_80, option_array_79, option_array_78, option_array_77, option_array_76];
    let mut reversi_9: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_9, next: player_423, status: gamestate_10};
    let mut reversi_9_ref_0: &crate::reversi::Reversi = &mut reversi_9;
    let mut option_675: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_9_ref_0);
    let mut gamestate_11: reversi::GameState = crate::reversi::GameState::Tie;
    let mut player_471: reversi::Player = crate::reversi::Player::Player1;
    let mut option_676: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_472: reversi::Player = crate::reversi::Player::Player0;
    let mut player_473: reversi::Player = crate::reversi::Player::other(player_472);
    let mut option_677: std::option::Option<reversi::Player> = std::option::Option::Some(player_473);
    let mut player_474: reversi::Player = crate::reversi::Player::Player0;
    let mut option_678: std::option::Option<reversi::Player> = std::option::Option::Some(player_474);
    let mut player_475: reversi::Player = crate::reversi::Player::Player0;
    let mut option_679: std::option::Option<reversi::Player> = std::option::Option::Some(player_475);
    let mut player_476: reversi::Player = crate::reversi::Player::Player1;
    let mut option_680: std::option::Option<reversi::Player> = std::option::Option::Some(player_476);
    let mut option_681: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_682: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_477: reversi::Player = crate::reversi::Player::Player1;
    let mut option_683: std::option::Option<reversi::Player> = std::option::Option::Some(player_477);
    let mut option_array_84: [std::option::Option<reversi::Player>; 8] = [option_683, option_682, option_681, option_680, option_679, option_678, option_677, option_676];
    let mut player_478: reversi::Player = crate::reversi::Player::Player1;
    let mut option_684: std::option::Option<reversi::Player> = std::option::Option::Some(player_478);
    let mut option_685: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_686: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_687: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_688: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_689: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_690: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_479: reversi::Player = crate::reversi::Player::Player0;
    let mut player_480: reversi::Player = crate::reversi::Player::other(player_479);
    let mut option_691: std::option::Option<reversi::Player> = std::option::Option::Some(player_480);
    let mut option_array_85: [std::option::Option<reversi::Player>; 8] = [option_691, option_690, option_689, option_688, option_687, option_686, option_685, option_684];
    let mut option_692: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_481: reversi::Player = crate::reversi::Player::Player1;
    let mut player_482: reversi::Player = crate::reversi::Player::other(player_481);
    let mut option_693: std::option::Option<reversi::Player> = std::option::Option::Some(player_482);
    let mut player_483: reversi::Player = crate::reversi::Player::Player0;
    let mut player_484: reversi::Player = crate::reversi::Player::other(player_483);
    let mut option_694: std::option::Option<reversi::Player> = std::option::Option::Some(player_484);
    let mut player_485: reversi::Player = crate::reversi::Player::Player1;
    let mut player_486: reversi::Player = crate::reversi::Player::other(player_485);
    let mut option_695: std::option::Option<reversi::Player> = std::option::Option::Some(player_486);
    let mut option_696: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_487: reversi::Player = crate::reversi::Player::Player0;
    let mut option_697: std::option::Option<reversi::Player> = std::option::Option::Some(player_487);
    let mut option_698: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_699: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_86: [std::option::Option<reversi::Player>; 8] = [option_699, option_698, option_697, option_696, option_695, option_694, option_693, option_692];
    let mut player_488: reversi::Player = crate::reversi::Player::Player0;
    let mut option_700: std::option::Option<reversi::Player> = std::option::Option::Some(player_488);
    let mut player_489: reversi::Player = crate::reversi::Player::Player0;
    let mut option_701: std::option::Option<reversi::Player> = std::option::Option::Some(player_489);
    let mut option_702: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_490: reversi::Player = crate::reversi::Player::Player0;
    let mut option_703: std::option::Option<reversi::Player> = std::option::Option::Some(player_490);
    let mut option_704: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_491: reversi::Player = crate::reversi::Player::Player1;
    let mut player_492: reversi::Player = crate::reversi::Player::other(player_491);
    let mut option_705: std::option::Option<reversi::Player> = std::option::Option::Some(player_492);
    let mut option_706: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_493: reversi::Player = crate::reversi::Player::Player0;
    let mut option_707: std::option::Option<reversi::Player> = std::option::Option::Some(player_493);
    let mut option_array_87: [std::option::Option<reversi::Player>; 8] = [option_707, option_706, option_705, option_704, option_703, option_702, option_701, option_700];
    let mut option_708: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_494: reversi::Player = crate::reversi::Player::Player1;
    let mut option_709: std::option::Option<reversi::Player> = std::option::Option::Some(player_494);
    let mut player_495: reversi::Player = crate::reversi::Player::Player1;
    let mut option_710: std::option::Option<reversi::Player> = std::option::Option::Some(player_495);
    let mut option_711: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_712: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_496: reversi::Player = crate::reversi::Player::Player1;
    let mut option_713: std::option::Option<reversi::Player> = std::option::Option::Some(player_496);
    let mut player_497: reversi::Player = crate::reversi::Player::Player1;
    let mut option_714: std::option::Option<reversi::Player> = std::option::Option::Some(player_497);
    let mut option_715: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_88: [std::option::Option<reversi::Player>; 8] = [option_715, option_714, option_713, option_712, option_711, option_710, option_709, option_708];
    let mut player_498: reversi::Player = crate::reversi::Player::Player0;
    let mut option_716: std::option::Option<reversi::Player> = std::option::Option::Some(player_498);
    let mut option_717: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_718: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_719: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_499: reversi::Player = crate::reversi::Player::Player1;
    let mut option_720: std::option::Option<reversi::Player> = std::option::Option::Some(player_499);
    let mut player_500: reversi::Player = crate::reversi::Player::Player0;
    let mut option_721: std::option::Option<reversi::Player> = std::option::Option::Some(player_500);
    let mut option_722: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_723: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_89: [std::option::Option<reversi::Player>; 8] = [option_723, option_722, option_721, option_720, option_719, option_718, option_717, option_716];
    let mut option_724: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_501: reversi::Player = crate::reversi::Player::Player1;
    let mut player_502: reversi::Player = crate::reversi::Player::other(player_501);
    let mut option_725: std::option::Option<reversi::Player> = std::option::Option::Some(player_502);
    let mut player_503: reversi::Player = crate::reversi::Player::Player1;
    let mut option_726: std::option::Option<reversi::Player> = std::option::Option::Some(player_503);
    let mut player_504: reversi::Player = crate::reversi::Player::Player1;
    let mut option_727: std::option::Option<reversi::Player> = std::option::Option::Some(player_504);
    let mut player_505: reversi::Player = crate::reversi::Player::Player0;
    let mut option_728: std::option::Option<reversi::Player> = std::option::Option::Some(player_505);
    let mut option_729: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_506: reversi::Player = crate::reversi::Player::Player1;
    let mut player_507: reversi::Player = crate::reversi::Player::other(player_506);
    let mut option_730: std::option::Option<reversi::Player> = std::option::Option::Some(player_507);
    let mut player_508: reversi::Player = crate::reversi::Player::Player0;
    let mut player_509: reversi::Player = crate::reversi::Player::other(player_508);
    let mut option_731: std::option::Option<reversi::Player> = std::option::Option::Some(player_509);
    let mut option_array_90: [std::option::Option<reversi::Player>; 8] = [option_731, option_730, option_729, option_728, option_727, option_726, option_725, option_724];
    let mut option_732: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_510: reversi::Player = crate::reversi::Player::Player1;
    let mut option_733: std::option::Option<reversi::Player> = std::option::Option::Some(player_510);
    let mut option_734: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_735: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_736: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_511: reversi::Player = crate::reversi::Player::Player0;
    let mut player_512: reversi::Player = crate::reversi::Player::other(player_511);
    let mut option_737: std::option::Option<reversi::Player> = std::option::Option::Some(player_512);
    let mut player_513: reversi::Player = crate::reversi::Player::Player0;
    let mut player_514: reversi::Player = crate::reversi::Player::other(player_513);
    let mut option_738: std::option::Option<reversi::Player> = std::option::Option::Some(player_514);
    let mut player_515: reversi::Player = crate::reversi::Player::Player1;
    let mut option_739: std::option::Option<reversi::Player> = std::option::Option::Some(player_515);
    let mut option_array_91: [std::option::Option<reversi::Player>; 8] = [option_739, option_738, option_737, option_736, option_735, option_734, option_733, option_732];
    let mut option_array_array_10: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_91, option_array_90, option_array_89, option_array_88, option_array_87, option_array_86, option_array_85, option_array_84];
    let mut reversi_10: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_10, next: player_471, status: gamestate_11};
    let mut reversi_10_ref_0: &crate::reversi::Reversi = &mut reversi_10;
    let mut option_740: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_10_ref_0);
    let mut player_516: reversi::Player = crate::reversi::Player::Player0;
    let mut player_517: reversi::Player = crate::reversi::Player::other(player_516);
    let mut option_741: std::option::Option<reversi::Player> = std::option::Option::Some(player_517);
    let mut option_742: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_743: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_92: [std::option::Option<reversi::Player>; 8] = [option_743, option_742, option_741, option_740, option_675, option_610, option_609, option_608];
    let mut option_744: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_745: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_746: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_518: reversi::Player = crate::reversi::Player::Player1;
    let mut player_519: reversi::Player = crate::reversi::Player::other(player_518);
    let mut option_747: std::option::Option<reversi::Player> = std::option::Option::Some(player_519);
    let mut option_748: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_520: reversi::Player = crate::reversi::Player::Player0;
    let mut option_749: std::option::Option<reversi::Player> = std::option::Option::Some(player_520);
    let mut option_750: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_521: reversi::Player = crate::reversi::Player::Player1;
    let mut player_522: reversi::Player = crate::reversi::Player::other(player_521);
    let mut gamestate_12: reversi::GameState = crate::reversi::GameState::Win(player_522);
    let mut player_523: reversi::Player = crate::reversi::Player::Player1;
    let mut option_751: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_752: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_753: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_754: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_524: reversi::Player = crate::reversi::Player::Player1;
    let mut option_755: std::option::Option<reversi::Player> = std::option::Option::Some(player_524);
    let mut player_525: reversi::Player = crate::reversi::Player::Player0;
    let mut player_526: reversi::Player = crate::reversi::Player::other(player_525);
    let mut option_756: std::option::Option<reversi::Player> = std::option::Option::Some(player_526);
    let mut option_757: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_527: reversi::Player = crate::reversi::Player::Player1;
    let mut option_758: std::option::Option<reversi::Player> = std::option::Option::Some(player_527);
    let mut option_array_93: [std::option::Option<reversi::Player>; 8] = [option_758, option_757, option_756, option_755, option_754, option_753, option_752, option_751];
    let mut player_528: reversi::Player = crate::reversi::Player::Player0;
    let mut option_759: std::option::Option<reversi::Player> = std::option::Option::Some(player_528);
    let mut player_529: reversi::Player = crate::reversi::Player::Player0;
    let mut option_760: std::option::Option<reversi::Player> = std::option::Option::Some(player_529);
    let mut option_761: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_762: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_763: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_764: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_530: reversi::Player = crate::reversi::Player::Player1;
    let mut option_765: std::option::Option<reversi::Player> = std::option::Option::Some(player_530);
    let mut option_766: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_94: [std::option::Option<reversi::Player>; 8] = [option_766, option_765, option_764, option_763, option_762, option_761, option_760, option_759];
    let mut player_531: reversi::Player = crate::reversi::Player::Player0;
    let mut option_767: std::option::Option<reversi::Player> = std::option::Option::Some(player_531);
    let mut option_768: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_769: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_532: reversi::Player = crate::reversi::Player::Player1;
    let mut option_770: std::option::Option<reversi::Player> = std::option::Option::Some(player_532);
    let mut option_771: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_533: reversi::Player = crate::reversi::Player::Player1;
    let mut player_534: reversi::Player = crate::reversi::Player::other(player_533);
    let mut option_772: std::option::Option<reversi::Player> = std::option::Option::Some(player_534);
    let mut player_535: reversi::Player = crate::reversi::Player::Player0;
    let mut option_773: std::option::Option<reversi::Player> = std::option::Option::Some(player_535);
    let mut player_536: reversi::Player = crate::reversi::Player::Player1;
    let mut option_774: std::option::Option<reversi::Player> = std::option::Option::Some(player_536);
    let mut option_array_95: [std::option::Option<reversi::Player>; 8] = [option_774, option_773, option_772, option_771, option_770, option_769, option_768, option_767];
    let mut player_537: reversi::Player = crate::reversi::Player::Player1;
    let mut option_775: std::option::Option<reversi::Player> = std::option::Option::Some(player_537);
    let mut option_776: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_777: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_778: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_779: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_538: reversi::Player = crate::reversi::Player::Player0;
    let mut option_780: std::option::Option<reversi::Player> = std::option::Option::Some(player_538);
    let mut player_539: reversi::Player = crate::reversi::Player::Player0;
    let mut player_540: reversi::Player = crate::reversi::Player::other(player_539);
    let mut option_781: std::option::Option<reversi::Player> = std::option::Option::Some(player_540);
    let mut option_782: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_96: [std::option::Option<reversi::Player>; 8] = [option_782, option_781, option_780, option_779, option_778, option_777, option_776, option_775];
    let mut option_783: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_541: reversi::Player = crate::reversi::Player::Player0;
    let mut player_542: reversi::Player = crate::reversi::Player::other(player_541);
    let mut option_784: std::option::Option<reversi::Player> = std::option::Option::Some(player_542);
    let mut player_543: reversi::Player = crate::reversi::Player::Player1;
    let mut option_785: std::option::Option<reversi::Player> = std::option::Option::Some(player_543);
    let mut option_786: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_544: reversi::Player = crate::reversi::Player::Player1;
    let mut option_787: std::option::Option<reversi::Player> = std::option::Option::Some(player_544);
    let mut option_788: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_789: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_545: reversi::Player = crate::reversi::Player::Player1;
    let mut option_790: std::option::Option<reversi::Player> = std::option::Option::Some(player_545);
    let mut option_array_97: [std::option::Option<reversi::Player>; 8] = [option_790, option_789, option_788, option_787, option_786, option_785, option_784, option_783];
    let mut player_546: reversi::Player = crate::reversi::Player::Player0;
    let mut player_547: reversi::Player = crate::reversi::Player::other(player_546);
    let mut option_791: std::option::Option<reversi::Player> = std::option::Option::Some(player_547);
    let mut option_792: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_793: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_548: reversi::Player = crate::reversi::Player::Player1;
    let mut player_549: reversi::Player = crate::reversi::Player::other(player_548);
    let mut option_794: std::option::Option<reversi::Player> = std::option::Option::Some(player_549);
    let mut player_550: reversi::Player = crate::reversi::Player::Player1;
    let mut option_795: std::option::Option<reversi::Player> = std::option::Option::Some(player_550);
    let mut option_796: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_797: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_551: reversi::Player = crate::reversi::Player::Player0;
    let mut player_552: reversi::Player = crate::reversi::Player::other(player_551);
    let mut option_798: std::option::Option<reversi::Player> = std::option::Option::Some(player_552);
    let mut option_array_98: [std::option::Option<reversi::Player>; 8] = [option_798, option_797, option_796, option_795, option_794, option_793, option_792, option_791];
    let mut player_553: reversi::Player = crate::reversi::Player::Player0;
    let mut option_799: std::option::Option<reversi::Player> = std::option::Option::Some(player_553);
    let mut option_800: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_554: reversi::Player = crate::reversi::Player::Player0;
    let mut option_801: std::option::Option<reversi::Player> = std::option::Option::Some(player_554);
    let mut option_802: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_803: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_555: reversi::Player = crate::reversi::Player::Player0;
    let mut player_556: reversi::Player = crate::reversi::Player::other(player_555);
    let mut option_804: std::option::Option<reversi::Player> = std::option::Option::Some(player_556);
    let mut player_557: reversi::Player = crate::reversi::Player::Player1;
    let mut player_558: reversi::Player = crate::reversi::Player::other(player_557);
    let mut option_805: std::option::Option<reversi::Player> = std::option::Option::Some(player_558);
    let mut player_559: reversi::Player = crate::reversi::Player::Player1;
    let mut option_806: std::option::Option<reversi::Player> = std::option::Option::Some(player_559);
    let mut option_array_99: [std::option::Option<reversi::Player>; 8] = [option_806, option_805, option_804, option_803, option_802, option_801, option_800, option_799];
    let mut option_807: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_560: reversi::Player = crate::reversi::Player::Player1;
    let mut option_808: std::option::Option<reversi::Player> = std::option::Option::Some(player_560);
    let mut option_809: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_561: reversi::Player = crate::reversi::Player::Player0;
    let mut option_810: std::option::Option<reversi::Player> = std::option::Option::Some(player_561);
    let mut option_811: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_562: reversi::Player = crate::reversi::Player::Player0;
    let mut option_812: std::option::Option<reversi::Player> = std::option::Option::Some(player_562);
    let mut player_563: reversi::Player = crate::reversi::Player::Player0;
    let mut player_564: reversi::Player = crate::reversi::Player::other(player_563);
    let mut option_813: std::option::Option<reversi::Player> = std::option::Option::Some(player_564);
    let mut player_565: reversi::Player = crate::reversi::Player::Player1;
    let mut player_566: reversi::Player = crate::reversi::Player::other(player_565);
    let mut option_814: std::option::Option<reversi::Player> = std::option::Option::Some(player_566);
    let mut option_array_100: [std::option::Option<reversi::Player>; 8] = [option_814, option_813, option_812, option_811, option_810, option_809, option_808, option_807];
    let mut option_array_array_11: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_100, option_array_99, option_array_98, option_array_97, option_array_96, option_array_95, option_array_94, option_array_93];
    let mut reversi_11: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_11, next: player_523, status: gamestate_12};
    let mut reversi_11_ref_0: &crate::reversi::Reversi = &mut reversi_11;
    let mut option_815: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_11_ref_0);
    let mut option_array_101: [std::option::Option<reversi::Player>; 8] = [option_815, option_750, option_749, option_748, option_747, option_746, option_745, option_744];
    let mut gamestate_13: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_567: reversi::Player = crate::reversi::Player::Player1;
    let mut player_568: reversi::Player = crate::reversi::Player::other(player_567);
    let mut player_569: reversi::Player = crate::reversi::Player::Player0;
    let mut option_816: std::option::Option<reversi::Player> = std::option::Option::Some(player_569);
    let mut option_817: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_570: reversi::Player = crate::reversi::Player::Player0;
    let mut option_818: std::option::Option<reversi::Player> = std::option::Option::Some(player_570);
    let mut player_571: reversi::Player = crate::reversi::Player::Player0;
    let mut option_819: std::option::Option<reversi::Player> = std::option::Option::Some(player_571);
    let mut option_820: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_821: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_822: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_823: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_102: [std::option::Option<reversi::Player>; 8] = [option_823, option_822, option_821, option_820, option_819, option_818, option_817, option_816];
    let mut option_824: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_572: reversi::Player = crate::reversi::Player::Player1;
    let mut option_825: std::option::Option<reversi::Player> = std::option::Option::Some(player_572);
    let mut option_826: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_573: reversi::Player = crate::reversi::Player::Player0;
    let mut option_827: std::option::Option<reversi::Player> = std::option::Option::Some(player_573);
    let mut player_574: reversi::Player = crate::reversi::Player::Player1;
    let mut option_828: std::option::Option<reversi::Player> = std::option::Option::Some(player_574);
    let mut option_829: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_575: reversi::Player = crate::reversi::Player::Player0;
    let mut player_576: reversi::Player = crate::reversi::Player::other(player_575);
    let mut option_830: std::option::Option<reversi::Player> = std::option::Option::Some(player_576);
    let mut option_831: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_103: [std::option::Option<reversi::Player>; 8] = [option_831, option_830, option_829, option_828, option_827, option_826, option_825, option_824];
    let mut option_832: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_833: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_577: reversi::Player = crate::reversi::Player::Player1;
    let mut player_578: reversi::Player = crate::reversi::Player::other(player_577);
    let mut option_834: std::option::Option<reversi::Player> = std::option::Option::Some(player_578);
    let mut player_579: reversi::Player = crate::reversi::Player::Player0;
    let mut option_835: std::option::Option<reversi::Player> = std::option::Option::Some(player_579);
    let mut option_836: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_837: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_838: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_839: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_104: [std::option::Option<reversi::Player>; 8] = [option_839, option_838, option_837, option_836, option_835, option_834, option_833, option_832];
    let mut option_840: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_580: reversi::Player = crate::reversi::Player::Player1;
    let mut option_841: std::option::Option<reversi::Player> = std::option::Option::Some(player_580);
    let mut option_842: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_843: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_844: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_845: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_846: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_847: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_105: [std::option::Option<reversi::Player>; 8] = [option_847, option_846, option_845, option_844, option_843, option_842, option_841, option_840];
    let mut player_581: reversi::Player = crate::reversi::Player::Player1;
    let mut player_582: reversi::Player = crate::reversi::Player::other(player_581);
    let mut option_848: std::option::Option<reversi::Player> = std::option::Option::Some(player_582);
    let mut option_849: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_583: reversi::Player = crate::reversi::Player::Player1;
    let mut option_850: std::option::Option<reversi::Player> = std::option::Option::Some(player_583);
    let mut option_851: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_852: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_853: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_854: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_855: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_106: [std::option::Option<reversi::Player>; 8] = [option_855, option_854, option_853, option_852, option_851, option_850, option_849, option_848];
    let mut player_584: reversi::Player = crate::reversi::Player::Player0;
    let mut player_585: reversi::Player = crate::reversi::Player::other(player_584);
    let mut option_856: std::option::Option<reversi::Player> = std::option::Option::Some(player_585);
    let mut player_586: reversi::Player = crate::reversi::Player::Player1;
    let mut player_587: reversi::Player = crate::reversi::Player::other(player_586);
    let mut option_857: std::option::Option<reversi::Player> = std::option::Option::Some(player_587);
    let mut option_858: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_588: reversi::Player = crate::reversi::Player::Player0;
    let mut option_859: std::option::Option<reversi::Player> = std::option::Option::Some(player_588);
    let mut option_860: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_861: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_862: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_863: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_107: [std::option::Option<reversi::Player>; 8] = [option_863, option_862, option_861, option_860, option_859, option_858, option_857, option_856];
    let mut player_589: reversi::Player = crate::reversi::Player::Player1;
    let mut option_864: std::option::Option<reversi::Player> = std::option::Option::Some(player_589);
    let mut player_590: reversi::Player = crate::reversi::Player::Player1;
    let mut player_591: reversi::Player = crate::reversi::Player::other(player_590);
    let mut option_865: std::option::Option<reversi::Player> = std::option::Option::Some(player_591);
    let mut player_592: reversi::Player = crate::reversi::Player::Player1;
    let mut player_593: reversi::Player = crate::reversi::Player::other(player_592);
    let mut option_866: std::option::Option<reversi::Player> = std::option::Option::Some(player_593);
    let mut option_867: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_594: reversi::Player = crate::reversi::Player::Player1;
    let mut option_868: std::option::Option<reversi::Player> = std::option::Option::Some(player_594);
    let mut option_869: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_870: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_871: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_108: [std::option::Option<reversi::Player>; 8] = [option_871, option_870, option_869, option_868, option_867, option_866, option_865, option_864];
    let mut option_872: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_595: reversi::Player = crate::reversi::Player::Player1;
    let mut player_596: reversi::Player = crate::reversi::Player::other(player_595);
    let mut option_873: std::option::Option<reversi::Player> = std::option::Option::Some(player_596);
    let mut option_874: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_875: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_876: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_597: reversi::Player = crate::reversi::Player::Player0;
    let mut option_877: std::option::Option<reversi::Player> = std::option::Option::Some(player_597);
    let mut option_878: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_598: reversi::Player = crate::reversi::Player::Player0;
    let mut option_879: std::option::Option<reversi::Player> = std::option::Option::Some(player_598);
    let mut option_array_109: [std::option::Option<reversi::Player>; 8] = [option_879, option_878, option_877, option_876, option_875, option_874, option_873, option_872];
    let mut option_array_array_12: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_109, option_array_108, option_array_107, option_array_106, option_array_105, option_array_104, option_array_103, option_array_102];
    let mut reversi_12: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_12, next: player_568, status: gamestate_13};
    let mut reversi_12_ref_0: &crate::reversi::Reversi = &mut reversi_12;
    let mut option_880: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_12_ref_0);
    let mut player_599: reversi::Player = crate::reversi::Player::Player0;
    let mut player_600: reversi::Player = crate::reversi::Player::other(player_599);
    let mut option_881: std::option::Option<reversi::Player> = std::option::Option::Some(player_600);
    let mut player_601: reversi::Player = crate::reversi::Player::Player1;
    let mut player_602: reversi::Player = crate::reversi::Player::other(player_601);
    let mut option_882: std::option::Option<reversi::Player> = std::option::Option::Some(player_602);
    let mut option_883: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_603: reversi::Player = crate::reversi::Player::Player1;
    let mut option_884: std::option::Option<reversi::Player> = std::option::Option::Some(player_603);
    let mut player_604: reversi::Player = crate::reversi::Player::Player1;
    let mut option_885: std::option::Option<reversi::Player> = std::option::Option::Some(player_604);
    let mut player_605: reversi::Player = crate::reversi::Player::Player1;
    let mut player_606: reversi::Player = crate::reversi::Player::other(player_605);
    let mut option_886: std::option::Option<reversi::Player> = std::option::Option::Some(player_606);
    let mut player_607: reversi::Player = crate::reversi::Player::Player0;
    let mut option_887: std::option::Option<reversi::Player> = std::option::Option::Some(player_607);
    let mut option_array_110: [std::option::Option<reversi::Player>; 8] = [option_887, option_886, option_885, option_884, option_883, option_882, option_881, option_880];
    let mut gamestate_14: reversi::GameState = crate::reversi::GameState::Tie;
    let mut player_608: reversi::Player = crate::reversi::Player::Player0;
    let mut player_609: reversi::Player = crate::reversi::Player::Player1;
    let mut option_888: std::option::Option<reversi::Player> = std::option::Option::Some(player_609);
    let mut player_610: reversi::Player = crate::reversi::Player::Player1;
    let mut option_889: std::option::Option<reversi::Player> = std::option::Option::Some(player_610);
    let mut player_611: reversi::Player = crate::reversi::Player::Player1;
    let mut player_612: reversi::Player = crate::reversi::Player::other(player_611);
    let mut option_890: std::option::Option<reversi::Player> = std::option::Option::Some(player_612);
    let mut player_613: reversi::Player = crate::reversi::Player::Player0;
    let mut option_891: std::option::Option<reversi::Player> = std::option::Option::Some(player_613);
    let mut option_892: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_893: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_894: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_614: reversi::Player = crate::reversi::Player::Player0;
    let mut option_895: std::option::Option<reversi::Player> = std::option::Option::Some(player_614);
    let mut option_array_111: [std::option::Option<reversi::Player>; 8] = [option_895, option_894, option_893, option_892, option_891, option_890, option_889, option_888];
    let mut option_896: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_897: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_898: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_615: reversi::Player = crate::reversi::Player::Player1;
    let mut option_899: std::option::Option<reversi::Player> = std::option::Option::Some(player_615);
    let mut player_616: reversi::Player = crate::reversi::Player::Player0;
    let mut option_900: std::option::Option<reversi::Player> = std::option::Option::Some(player_616);
    let mut player_617: reversi::Player = crate::reversi::Player::Player1;
    let mut player_618: reversi::Player = crate::reversi::Player::other(player_617);
    let mut option_901: std::option::Option<reversi::Player> = std::option::Option::Some(player_618);
    let mut option_902: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_619: reversi::Player = crate::reversi::Player::Player1;
    let mut player_620: reversi::Player = crate::reversi::Player::other(player_619);
    let mut option_903: std::option::Option<reversi::Player> = std::option::Option::Some(player_620);
    let mut option_array_112: [std::option::Option<reversi::Player>; 8] = [option_903, option_902, option_901, option_900, option_899, option_898, option_897, option_896];
    let mut option_904: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_621: reversi::Player = crate::reversi::Player::Player0;
    let mut option_905: std::option::Option<reversi::Player> = std::option::Option::Some(player_621);
    let mut player_622: reversi::Player = crate::reversi::Player::Player1;
    let mut option_906: std::option::Option<reversi::Player> = std::option::Option::Some(player_622);
    let mut option_907: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_908: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_623: reversi::Player = crate::reversi::Player::Player0;
    let mut option_909: std::option::Option<reversi::Player> = std::option::Option::Some(player_623);
    let mut player_624: reversi::Player = crate::reversi::Player::Player1;
    let mut player_625: reversi::Player = crate::reversi::Player::other(player_624);
    let mut option_910: std::option::Option<reversi::Player> = std::option::Option::Some(player_625);
    let mut option_911: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_113: [std::option::Option<reversi::Player>; 8] = [option_911, option_910, option_909, option_908, option_907, option_906, option_905, option_904];
    let mut option_912: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_626: reversi::Player = crate::reversi::Player::Player0;
    let mut option_913: std::option::Option<reversi::Player> = std::option::Option::Some(player_626);
    let mut option_914: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_915: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_916: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_917: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_627: reversi::Player = crate::reversi::Player::Player1;
    let mut player_628: reversi::Player = crate::reversi::Player::other(player_627);
    let mut option_918: std::option::Option<reversi::Player> = std::option::Option::Some(player_628);
    let mut option_919: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_114: [std::option::Option<reversi::Player>; 8] = [option_919, option_918, option_917, option_916, option_915, option_914, option_913, option_912];
    let mut player_629: reversi::Player = crate::reversi::Player::Player0;
    let mut option_920: std::option::Option<reversi::Player> = std::option::Option::Some(player_629);
    let mut option_921: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_630: reversi::Player = crate::reversi::Player::Player1;
    let mut option_922: std::option::Option<reversi::Player> = std::option::Option::Some(player_630);
    let mut option_923: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_924: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_631: reversi::Player = crate::reversi::Player::Player0;
    let mut option_925: std::option::Option<reversi::Player> = std::option::Option::Some(player_631);
    let mut option_926: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_927: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_115: [std::option::Option<reversi::Player>; 8] = [option_927, option_926, option_925, option_924, option_923, option_922, option_921, option_920];
    let mut option_928: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_929: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_930: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_931: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_632: reversi::Player = crate::reversi::Player::Player1;
    let mut player_633: reversi::Player = crate::reversi::Player::other(player_632);
    let mut option_932: std::option::Option<reversi::Player> = std::option::Option::Some(player_633);
    let mut option_933: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_634: reversi::Player = crate::reversi::Player::Player0;
    let mut player_635: reversi::Player = crate::reversi::Player::other(player_634);
    let mut option_934: std::option::Option<reversi::Player> = std::option::Option::Some(player_635);
    let mut option_935: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_116: [std::option::Option<reversi::Player>; 8] = [option_935, option_934, option_933, option_932, option_931, option_930, option_929, option_928];
    let mut option_936: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_937: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_636: reversi::Player = crate::reversi::Player::Player1;
    let mut option_938: std::option::Option<reversi::Player> = std::option::Option::Some(player_636);
    let mut option_939: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_940: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_637: reversi::Player = crate::reversi::Player::Player0;
    let mut option_941: std::option::Option<reversi::Player> = std::option::Option::Some(player_637);
    let mut option_942: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_638: reversi::Player = crate::reversi::Player::Player1;
    let mut option_943: std::option::Option<reversi::Player> = std::option::Option::Some(player_638);
    let mut option_array_117: [std::option::Option<reversi::Player>; 8] = [option_943, option_942, option_941, option_940, option_939, option_938, option_937, option_936];
    let mut player_639: reversi::Player = crate::reversi::Player::Player1;
    let mut option_944: std::option::Option<reversi::Player> = std::option::Option::Some(player_639);
    let mut player_640: reversi::Player = crate::reversi::Player::Player0;
    let mut option_945: std::option::Option<reversi::Player> = std::option::Option::Some(player_640);
    let mut option_946: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_947: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_641: reversi::Player = crate::reversi::Player::Player1;
    let mut player_642: reversi::Player = crate::reversi::Player::other(player_641);
    let mut option_948: std::option::Option<reversi::Player> = std::option::Option::Some(player_642);
    let mut player_643: reversi::Player = crate::reversi::Player::Player0;
    let mut option_949: std::option::Option<reversi::Player> = std::option::Option::Some(player_643);
    let mut option_950: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_951: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_118: [std::option::Option<reversi::Player>; 8] = [option_951, option_950, option_949, option_948, option_947, option_946, option_945, option_944];
    let mut option_array_array_13: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_118, option_array_117, option_array_116, option_array_115, option_array_114, option_array_113, option_array_112, option_array_111];
    let mut reversi_13: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_13, next: player_608, status: gamestate_14};
    let mut reversi_13_ref_0: &crate::reversi::Reversi = &mut reversi_13;
    let mut option_952: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_13_ref_0);
    let mut gamestate_15: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_644: reversi::Player = crate::reversi::Player::Player1;
    let mut option_953: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_645: reversi::Player = crate::reversi::Player::Player0;
    let mut option_954: std::option::Option<reversi::Player> = std::option::Option::Some(player_645);
    let mut player_646: reversi::Player = crate::reversi::Player::Player1;
    let mut player_647: reversi::Player = crate::reversi::Player::other(player_646);
    let mut option_955: std::option::Option<reversi::Player> = std::option::Option::Some(player_647);
    let mut option_956: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_648: reversi::Player = crate::reversi::Player::Player1;
    let mut option_957: std::option::Option<reversi::Player> = std::option::Option::Some(player_648);
    let mut player_649: reversi::Player = crate::reversi::Player::Player0;
    let mut player_650: reversi::Player = crate::reversi::Player::other(player_649);
    let mut option_958: std::option::Option<reversi::Player> = std::option::Option::Some(player_650);
    let mut player_651: reversi::Player = crate::reversi::Player::Player0;
    let mut option_959: std::option::Option<reversi::Player> = std::option::Option::Some(player_651);
    let mut player_652: reversi::Player = crate::reversi::Player::Player1;
    let mut player_653: reversi::Player = crate::reversi::Player::other(player_652);
    let mut option_960: std::option::Option<reversi::Player> = std::option::Option::Some(player_653);
    let mut option_array_119: [std::option::Option<reversi::Player>; 8] = [option_960, option_959, option_958, option_957, option_956, option_955, option_954, option_953];
    let mut option_961: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_962: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_963: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_964: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_654: reversi::Player = crate::reversi::Player::Player0;
    let mut option_965: std::option::Option<reversi::Player> = std::option::Option::Some(player_654);
    let mut option_966: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_655: reversi::Player = crate::reversi::Player::Player1;
    let mut option_967: std::option::Option<reversi::Player> = std::option::Option::Some(player_655);
    let mut option_968: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_120: [std::option::Option<reversi::Player>; 8] = [option_968, option_967, option_966, option_965, option_964, option_963, option_962, option_961];
    let mut option_969: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_970: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_656: reversi::Player = crate::reversi::Player::Player0;
    let mut option_971: std::option::Option<reversi::Player> = std::option::Option::Some(player_656);
    let mut option_972: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_657: reversi::Player = crate::reversi::Player::Player1;
    let mut option_973: std::option::Option<reversi::Player> = std::option::Option::Some(player_657);
    let mut player_658: reversi::Player = crate::reversi::Player::Player1;
    let mut option_974: std::option::Option<reversi::Player> = std::option::Option::Some(player_658);
    let mut option_975: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_659: reversi::Player = crate::reversi::Player::Player0;
    let mut option_976: std::option::Option<reversi::Player> = std::option::Option::Some(player_659);
    let mut option_array_121: [std::option::Option<reversi::Player>; 8] = [option_976, option_975, option_974, option_973, option_972, option_971, option_970, option_969];
    let mut option_977: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_978: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_979: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_980: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_981: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_982: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_660: reversi::Player = crate::reversi::Player::Player1;
    let mut option_983: std::option::Option<reversi::Player> = std::option::Option::Some(player_660);
    let mut player_661: reversi::Player = crate::reversi::Player::Player1;
    let mut option_984: std::option::Option<reversi::Player> = std::option::Option::Some(player_661);
    let mut option_array_122: [std::option::Option<reversi::Player>; 8] = [option_984, option_983, option_982, option_981, option_980, option_979, option_978, option_977];
    let mut option_985: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_986: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_987: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_662: reversi::Player = crate::reversi::Player::Player0;
    let mut option_988: std::option::Option<reversi::Player> = std::option::Option::Some(player_662);
    let mut option_989: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_990: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_991: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_663: reversi::Player = crate::reversi::Player::Player0;
    let mut option_992: std::option::Option<reversi::Player> = std::option::Option::Some(player_663);
    let mut option_array_123: [std::option::Option<reversi::Player>; 8] = [option_992, option_991, option_990, option_989, option_988, option_987, option_986, option_985];
    let mut option_993: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_994: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_995: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_996: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_997: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_664: reversi::Player = crate::reversi::Player::Player0;
    let mut option_998: std::option::Option<reversi::Player> = std::option::Option::Some(player_664);
    let mut option_999: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_665: reversi::Player = crate::reversi::Player::Player1;
    let mut player_666: reversi::Player = crate::reversi::Player::other(player_665);
    let mut option_1000: std::option::Option<reversi::Player> = std::option::Option::Some(player_666);
    let mut option_array_124: [std::option::Option<reversi::Player>; 8] = [option_1000, option_999, option_998, option_997, option_996, option_995, option_994, option_993];
    let mut option_1001: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1002: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_667: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1003: std::option::Option<reversi::Player> = std::option::Option::Some(player_667);
    let mut option_1004: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_668: reversi::Player = crate::reversi::Player::Player1;
    let mut player_669: reversi::Player = crate::reversi::Player::other(player_668);
    let mut option_1005: std::option::Option<reversi::Player> = std::option::Option::Some(player_669);
    let mut option_1006: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_670: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1007: std::option::Option<reversi::Player> = std::option::Option::Some(player_670);
    let mut option_1008: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_125: [std::option::Option<reversi::Player>; 8] = [option_1008, option_1007, option_1006, option_1005, option_1004, option_1003, option_1002, option_1001];
    let mut option_1009: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_671: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1010: std::option::Option<reversi::Player> = std::option::Option::Some(player_671);
    let mut player_672: reversi::Player = crate::reversi::Player::Player0;
    let mut player_673: reversi::Player = crate::reversi::Player::other(player_672);
    let mut option_1011: std::option::Option<reversi::Player> = std::option::Option::Some(player_673);
    let mut player_674: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1012: std::option::Option<reversi::Player> = std::option::Option::Some(player_674);
    let mut option_1013: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_675: reversi::Player = crate::reversi::Player::Player1;
    let mut player_676: reversi::Player = crate::reversi::Player::other(player_675);
    let mut option_1014: std::option::Option<reversi::Player> = std::option::Option::Some(player_676);
    let mut option_1015: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_677: reversi::Player = crate::reversi::Player::Player0;
    let mut player_678: reversi::Player = crate::reversi::Player::other(player_677);
    let mut option_1016: std::option::Option<reversi::Player> = std::option::Option::Some(player_678);
    let mut option_array_126: [std::option::Option<reversi::Player>; 8] = [option_1016, option_1015, option_1014, option_1013, option_1012, option_1011, option_1010, option_1009];
    let mut option_array_array_14: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_126, option_array_125, option_array_124, option_array_123, option_array_122, option_array_121, option_array_120, option_array_119];
    let mut reversi_14: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_14, next: player_644, status: gamestate_15};
    let mut reversi_14_ref_0: &crate::reversi::Reversi = &mut reversi_14;
    let mut option_1017: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_14_ref_0);
    let mut gamestate_16: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_679: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1018: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1019: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_680: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1020: std::option::Option<reversi::Player> = std::option::Option::Some(player_680);
    let mut player_681: reversi::Player = crate::reversi::Player::Player0;
    let mut player_682: reversi::Player = crate::reversi::Player::other(player_681);
    let mut option_1021: std::option::Option<reversi::Player> = std::option::Option::Some(player_682);
    let mut player_683: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1022: std::option::Option<reversi::Player> = std::option::Option::Some(player_683);
    let mut player_684: reversi::Player = crate::reversi::Player::Player1;
    let mut player_685: reversi::Player = crate::reversi::Player::other(player_684);
    let mut option_1023: std::option::Option<reversi::Player> = std::option::Option::Some(player_685);
    let mut option_1024: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_686: reversi::Player = crate::reversi::Player::Player0;
    let mut player_687: reversi::Player = crate::reversi::Player::other(player_686);
    let mut option_1025: std::option::Option<reversi::Player> = std::option::Option::Some(player_687);
    let mut option_array_127: [std::option::Option<reversi::Player>; 8] = [option_1025, option_1024, option_1023, option_1022, option_1021, option_1020, option_1019, option_1018];
    let mut option_1026: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1027: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1028: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_688: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1029: std::option::Option<reversi::Player> = std::option::Option::Some(player_688);
    let mut option_1030: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1031: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1032: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_689: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1033: std::option::Option<reversi::Player> = std::option::Option::Some(player_689);
    let mut option_array_128: [std::option::Option<reversi::Player>; 8] = [option_1033, option_1032, option_1031, option_1030, option_1029, option_1028, option_1027, option_1026];
    let mut option_1034: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_690: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1035: std::option::Option<reversi::Player> = std::option::Option::Some(player_690);
    let mut option_1036: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_691: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1037: std::option::Option<reversi::Player> = std::option::Option::Some(player_691);
    let mut option_1038: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_692: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1039: std::option::Option<reversi::Player> = std::option::Option::Some(player_692);
    let mut player_693: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1040: std::option::Option<reversi::Player> = std::option::Option::Some(player_693);
    let mut option_1041: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_129: [std::option::Option<reversi::Player>; 8] = [option_1041, option_1040, option_1039, option_1038, option_1037, option_1036, option_1035, option_1034];
    let mut player_694: reversi::Player = crate::reversi::Player::Player1;
    let mut player_695: reversi::Player = crate::reversi::Player::other(player_694);
    let mut option_1042: std::option::Option<reversi::Player> = std::option::Option::Some(player_695);
    let mut player_696: reversi::Player = crate::reversi::Player::Player1;
    let mut player_697: reversi::Player = crate::reversi::Player::other(player_696);
    let mut option_1043: std::option::Option<reversi::Player> = std::option::Option::Some(player_697);
    let mut player_698: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1044: std::option::Option<reversi::Player> = std::option::Option::Some(player_698);
    let mut player_699: reversi::Player = crate::reversi::Player::Player0;
    let mut player_700: reversi::Player = crate::reversi::Player::other(player_699);
    let mut option_1045: std::option::Option<reversi::Player> = std::option::Option::Some(player_700);
    let mut option_1046: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1047: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1048: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_701: reversi::Player = crate::reversi::Player::Player0;
    let mut player_702: reversi::Player = crate::reversi::Player::other(player_701);
    let mut option_1049: std::option::Option<reversi::Player> = std::option::Option::Some(player_702);
    let mut option_array_130: [std::option::Option<reversi::Player>; 8] = [option_1049, option_1048, option_1047, option_1046, option_1045, option_1044, option_1043, option_1042];
    let mut option_1050: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_703: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1051: std::option::Option<reversi::Player> = std::option::Option::Some(player_703);
    let mut option_1052: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_704: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1053: std::option::Option<reversi::Player> = std::option::Option::Some(player_704);
    let mut option_1054: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_705: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1055: std::option::Option<reversi::Player> = std::option::Option::Some(player_705);
    let mut option_1056: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1057: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_131: [std::option::Option<reversi::Player>; 8] = [option_1057, option_1056, option_1055, option_1054, option_1053, option_1052, option_1051, option_1050];
    let mut player_706: reversi::Player = crate::reversi::Player::Player0;
    let mut player_707: reversi::Player = crate::reversi::Player::other(player_706);
    let mut option_1058: std::option::Option<reversi::Player> = std::option::Option::Some(player_707);
    let mut option_1059: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1060: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_708: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1061: std::option::Option<reversi::Player> = std::option::Option::Some(player_708);
    let mut option_1062: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_709: reversi::Player = crate::reversi::Player::Player1;
    let mut player_710: reversi::Player = crate::reversi::Player::other(player_709);
    let mut option_1063: std::option::Option<reversi::Player> = std::option::Option::Some(player_710);
    let mut option_1064: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_711: reversi::Player = crate::reversi::Player::Player0;
    let mut player_712: reversi::Player = crate::reversi::Player::other(player_711);
    let mut option_1065: std::option::Option<reversi::Player> = std::option::Option::Some(player_712);
    let mut option_array_132: [std::option::Option<reversi::Player>; 8] = [option_1065, option_1064, option_1063, option_1062, option_1061, option_1060, option_1059, option_1058];
    let mut player_713: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1066: std::option::Option<reversi::Player> = std::option::Option::Some(player_713);
    let mut option_1067: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_714: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1068: std::option::Option<reversi::Player> = std::option::Option::Some(player_714);
    let mut player_715: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1069: std::option::Option<reversi::Player> = std::option::Option::Some(player_715);
    let mut option_1070: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1071: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1072: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1073: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_133: [std::option::Option<reversi::Player>; 8] = [option_1073, option_1072, option_1071, option_1070, option_1069, option_1068, option_1067, option_1066];
    let mut option_1074: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_716: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1075: std::option::Option<reversi::Player> = std::option::Option::Some(player_716);
    let mut option_1076: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1077: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_717: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1078: std::option::Option<reversi::Player> = std::option::Option::Some(player_717);
    let mut option_1079: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_718: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1080: std::option::Option<reversi::Player> = std::option::Option::Some(player_718);
    let mut player_719: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1081: std::option::Option<reversi::Player> = std::option::Option::Some(player_719);
    let mut option_array_134: [std::option::Option<reversi::Player>; 8] = [option_1081, option_1080, option_1079, option_1078, option_1077, option_1076, option_1075, option_1074];
    let mut option_array_array_15: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_134, option_array_133, option_array_132, option_array_131, option_array_130, option_array_129, option_array_128, option_array_127];
    let mut reversi_15: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_15, next: player_679, status: gamestate_16};
    let mut reversi_15_ref_0: &crate::reversi::Reversi = &mut reversi_15;
    let mut option_1082: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_15_ref_0);
    let mut player_720: reversi::Player = crate::reversi::Player::Player0;
    let mut gamestate_17: reversi::GameState = crate::reversi::GameState::Win(player_720);
    let mut player_721: reversi::Player = crate::reversi::Player::Player1;
    let mut player_722: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1083: std::option::Option<reversi::Player> = std::option::Option::Some(player_722);
    let mut player_723: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1084: std::option::Option<reversi::Player> = std::option::Option::Some(player_723);
    let mut player_724: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1085: std::option::Option<reversi::Player> = std::option::Option::Some(player_724);
    let mut option_1086: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1087: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_725: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1088: std::option::Option<reversi::Player> = std::option::Option::Some(player_725);
    let mut player_726: reversi::Player = crate::reversi::Player::Player1;
    let mut player_727: reversi::Player = crate::reversi::Player::other(player_726);
    let mut option_1089: std::option::Option<reversi::Player> = std::option::Option::Some(player_727);
    let mut player_728: reversi::Player = crate::reversi::Player::Player1;
    let mut player_729: reversi::Player = crate::reversi::Player::other(player_728);
    let mut option_1090: std::option::Option<reversi::Player> = std::option::Option::Some(player_729);
    let mut option_array_135: [std::option::Option<reversi::Player>; 8] = [option_1090, option_1089, option_1088, option_1087, option_1086, option_1085, option_1084, option_1083];
    let mut option_1091: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1092: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1093: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_730: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1094: std::option::Option<reversi::Player> = std::option::Option::Some(player_730);
    let mut player_731: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1095: std::option::Option<reversi::Player> = std::option::Option::Some(player_731);
    let mut player_732: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1096: std::option::Option<reversi::Player> = std::option::Option::Some(player_732);
    let mut player_733: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1097: std::option::Option<reversi::Player> = std::option::Option::Some(player_733);
    let mut player_734: reversi::Player = crate::reversi::Player::Player1;
    let mut player_735: reversi::Player = crate::reversi::Player::other(player_734);
    let mut option_1098: std::option::Option<reversi::Player> = std::option::Option::Some(player_735);
    let mut option_array_136: [std::option::Option<reversi::Player>; 8] = [option_1098, option_1097, option_1096, option_1095, option_1094, option_1093, option_1092, option_1091];
    let mut option_1099: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1100: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1101: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1102: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1103: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1104: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_736: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1105: std::option::Option<reversi::Player> = std::option::Option::Some(player_736);
    let mut option_1106: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_137: [std::option::Option<reversi::Player>; 8] = [option_1106, option_1105, option_1104, option_1103, option_1102, option_1101, option_1100, option_1099];
    let mut option_1107: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_737: reversi::Player = crate::reversi::Player::Player1;
    let mut player_738: reversi::Player = crate::reversi::Player::other(player_737);
    let mut option_1108: std::option::Option<reversi::Player> = std::option::Option::Some(player_738);
    let mut option_1109: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1110: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_739: reversi::Player = crate::reversi::Player::Player0;
    let mut player_740: reversi::Player = crate::reversi::Player::other(player_739);
    let mut option_1111: std::option::Option<reversi::Player> = std::option::Option::Some(player_740);
    let mut player_741: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1112: std::option::Option<reversi::Player> = std::option::Option::Some(player_741);
    let mut option_1113: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_742: reversi::Player = crate::reversi::Player::Player0;
    let mut player_743: reversi::Player = crate::reversi::Player::other(player_742);
    let mut option_1114: std::option::Option<reversi::Player> = std::option::Option::Some(player_743);
    let mut option_array_138: [std::option::Option<reversi::Player>; 8] = [option_1114, option_1113, option_1112, option_1111, option_1110, option_1109, option_1108, option_1107];
    let mut option_1115: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1116: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1117: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1118: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1119: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_744: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1120: std::option::Option<reversi::Player> = std::option::Option::Some(player_744);
    let mut player_745: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1121: std::option::Option<reversi::Player> = std::option::Option::Some(player_745);
    let mut option_1122: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_139: [std::option::Option<reversi::Player>; 8] = [option_1122, option_1121, option_1120, option_1119, option_1118, option_1117, option_1116, option_1115];
    let mut player_746: reversi::Player = crate::reversi::Player::Player0;
    let mut player_747: reversi::Player = crate::reversi::Player::other(player_746);
    let mut option_1123: std::option::Option<reversi::Player> = std::option::Option::Some(player_747);
    let mut player_748: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1124: std::option::Option<reversi::Player> = std::option::Option::Some(player_748);
    let mut option_1125: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_749: reversi::Player = crate::reversi::Player::Player1;
    let mut player_750: reversi::Player = crate::reversi::Player::other(player_749);
    let mut option_1126: std::option::Option<reversi::Player> = std::option::Option::Some(player_750);
    let mut player_751: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1127: std::option::Option<reversi::Player> = std::option::Option::Some(player_751);
    let mut player_752: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1128: std::option::Option<reversi::Player> = std::option::Option::Some(player_752);
    let mut player_753: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1129: std::option::Option<reversi::Player> = std::option::Option::Some(player_753);
    let mut player_754: reversi::Player = crate::reversi::Player::Player0;
    let mut player_755: reversi::Player = crate::reversi::Player::other(player_754);
    let mut option_1130: std::option::Option<reversi::Player> = std::option::Option::Some(player_755);
    let mut option_array_140: [std::option::Option<reversi::Player>; 8] = [option_1130, option_1129, option_1128, option_1127, option_1126, option_1125, option_1124, option_1123];
    let mut option_1131: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_756: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1132: std::option::Option<reversi::Player> = std::option::Option::Some(player_756);
    let mut option_1133: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1134: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1135: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_757: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1136: std::option::Option<reversi::Player> = std::option::Option::Some(player_757);
    let mut option_1137: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1138: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_141: [std::option::Option<reversi::Player>; 8] = [option_1138, option_1137, option_1136, option_1135, option_1134, option_1133, option_1132, option_1131];
    let mut player_758: reversi::Player = crate::reversi::Player::Player0;
    let mut player_759: reversi::Player = crate::reversi::Player::other(player_758);
    let mut option_1139: std::option::Option<reversi::Player> = std::option::Option::Some(player_759);
    let mut option_1140: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_760: reversi::Player = crate::reversi::Player::Player0;
    let mut player_761: reversi::Player = crate::reversi::Player::other(player_760);
    let mut option_1141: std::option::Option<reversi::Player> = std::option::Option::Some(player_761);
    let mut player_762: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1142: std::option::Option<reversi::Player> = std::option::Option::Some(player_762);
    let mut player_763: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1143: std::option::Option<reversi::Player> = std::option::Option::Some(player_763);
    let mut player_764: reversi::Player = crate::reversi::Player::Player0;
    let mut player_765: reversi::Player = crate::reversi::Player::other(player_764);
    let mut option_1144: std::option::Option<reversi::Player> = std::option::Option::Some(player_765);
    let mut player_766: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1145: std::option::Option<reversi::Player> = std::option::Option::Some(player_766);
    let mut player_767: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1146: std::option::Option<reversi::Player> = std::option::Option::Some(player_767);
    let mut option_array_142: [std::option::Option<reversi::Player>; 8] = [option_1146, option_1145, option_1144, option_1143, option_1142, option_1141, option_1140, option_1139];
    let mut option_array_array_16: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_142, option_array_141, option_array_140, option_array_139, option_array_138, option_array_137, option_array_136, option_array_135];
    let mut reversi_16: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_16, next: player_721, status: gamestate_17};
    let mut reversi_16_ref_0: &crate::reversi::Reversi = &mut reversi_16;
    let mut option_1147: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_16_ref_0);
    let mut gamestate_18: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_768: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1148: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1149: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_769: reversi::Player = crate::reversi::Player::Player1;
    let mut player_770: reversi::Player = crate::reversi::Player::other(player_769);
    let mut option_1150: std::option::Option<reversi::Player> = std::option::Option::Some(player_770);
    let mut option_1151: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_771: reversi::Player = crate::reversi::Player::Player0;
    let mut player_772: reversi::Player = crate::reversi::Player::other(player_771);
    let mut option_1152: std::option::Option<reversi::Player> = std::option::Option::Some(player_772);
    let mut option_1153: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1154: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_773: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1155: std::option::Option<reversi::Player> = std::option::Option::Some(player_773);
    let mut option_array_143: [std::option::Option<reversi::Player>; 8] = [option_1155, option_1154, option_1153, option_1152, option_1151, option_1150, option_1149, option_1148];
    let mut player_774: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1156: std::option::Option<reversi::Player> = std::option::Option::Some(player_774);
    let mut player_775: reversi::Player = crate::reversi::Player::Player1;
    let mut player_776: reversi::Player = crate::reversi::Player::other(player_775);
    let mut option_1157: std::option::Option<reversi::Player> = std::option::Option::Some(player_776);
    let mut player_777: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1158: std::option::Option<reversi::Player> = std::option::Option::Some(player_777);
    let mut option_1159: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_778: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1160: std::option::Option<reversi::Player> = std::option::Option::Some(player_778);
    let mut option_1161: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_779: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1162: std::option::Option<reversi::Player> = std::option::Option::Some(player_779);
    let mut option_1163: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_144: [std::option::Option<reversi::Player>; 8] = [option_1163, option_1162, option_1161, option_1160, option_1159, option_1158, option_1157, option_1156];
    let mut option_1164: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_780: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1165: std::option::Option<reversi::Player> = std::option::Option::Some(player_780);
    let mut player_781: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1166: std::option::Option<reversi::Player> = std::option::Option::Some(player_781);
    let mut player_782: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1167: std::option::Option<reversi::Player> = std::option::Option::Some(player_782);
    let mut option_1168: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1169: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_783: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1170: std::option::Option<reversi::Player> = std::option::Option::Some(player_783);
    let mut option_1171: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_145: [std::option::Option<reversi::Player>; 8] = [option_1171, option_1170, option_1169, option_1168, option_1167, option_1166, option_1165, option_1164];
    let mut option_1172: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1173: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1174: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_784: reversi::Player = crate::reversi::Player::Player0;
    let mut player_785: reversi::Player = crate::reversi::Player::other(player_784);
    let mut option_1175: std::option::Option<reversi::Player> = std::option::Option::Some(player_785);
    let mut player_786: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1176: std::option::Option<reversi::Player> = std::option::Option::Some(player_786);
    let mut player_787: reversi::Player = crate::reversi::Player::Player1;
    let mut player_788: reversi::Player = crate::reversi::Player::other(player_787);
    let mut option_1177: std::option::Option<reversi::Player> = std::option::Option::Some(player_788);
    let mut player_789: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1178: std::option::Option<reversi::Player> = std::option::Option::Some(player_789);
    let mut player_790: reversi::Player = crate::reversi::Player::Player0;
    let mut player_791: reversi::Player = crate::reversi::Player::other(player_790);
    let mut option_1179: std::option::Option<reversi::Player> = std::option::Option::Some(player_791);
    let mut option_array_146: [std::option::Option<reversi::Player>; 8] = [option_1179, option_1178, option_1177, option_1176, option_1175, option_1174, option_1173, option_1172];
    let mut player_792: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1180: std::option::Option<reversi::Player> = std::option::Option::Some(player_792);
    let mut option_1181: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1182: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_793: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1183: std::option::Option<reversi::Player> = std::option::Option::Some(player_793);
    let mut option_1184: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_794: reversi::Player = crate::reversi::Player::Player0;
    let mut player_795: reversi::Player = crate::reversi::Player::other(player_794);
    let mut option_1185: std::option::Option<reversi::Player> = std::option::Option::Some(player_795);
    let mut player_796: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1186: std::option::Option<reversi::Player> = std::option::Option::Some(player_796);
    let mut option_1187: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_147: [std::option::Option<reversi::Player>; 8] = [option_1187, option_1186, option_1185, option_1184, option_1183, option_1182, option_1181, option_1180];
    let mut option_1188: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_797: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1189: std::option::Option<reversi::Player> = std::option::Option::Some(player_797);
    let mut option_1190: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1191: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1192: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_798: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1193: std::option::Option<reversi::Player> = std::option::Option::Some(player_798);
    let mut player_799: reversi::Player = crate::reversi::Player::Player0;
    let mut player_800: reversi::Player = crate::reversi::Player::other(player_799);
    let mut option_1194: std::option::Option<reversi::Player> = std::option::Option::Some(player_800);
    let mut player_801: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1195: std::option::Option<reversi::Player> = std::option::Option::Some(player_801);
    let mut player_802: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1196: std::option::Option<reversi::Player> = std::option::Option::Some(player_802);
    let mut player_803: reversi::Player = crate::reversi::Player::Player0;
    let mut player_804: reversi::Player = crate::reversi::Player::other(player_803);
    let mut option_1197: std::option::Option<reversi::Player> = std::option::Option::Some(player_804);
    let mut option_1198: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_805: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1199: std::option::Option<reversi::Player> = std::option::Option::Some(player_805);
    let mut player_806: reversi::Player = crate::reversi::Player::Player1;
    let mut player_807: reversi::Player = crate::reversi::Player::other(player_806);
    let mut option_1200: std::option::Option<reversi::Player> = std::option::Option::Some(player_807);
    let mut player_808: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1201: std::option::Option<reversi::Player> = std::option::Option::Some(player_808);
    let mut option_1202: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_148: [std::option::Option<reversi::Player>; 8] = [option_1202, option_1201, option_1200, option_1199, option_1198, option_1197, option_1196, option_1195];
    let mut player_809: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1203: std::option::Option<reversi::Player> = std::option::Option::Some(player_809);
    let mut option_1204: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_810: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1205: std::option::Option<reversi::Player> = std::option::Option::Some(player_810);
    let mut player_811: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1206: std::option::Option<reversi::Player> = std::option::Option::Some(player_811);
    let mut player_812: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1207: std::option::Option<reversi::Player> = std::option::Option::Some(player_812);
    let mut option_1208: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1209: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_813: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1210: std::option::Option<reversi::Player> = std::option::Option::Some(player_813);
    let mut option_array_149: [std::option::Option<reversi::Player>; 8] = [option_1210, option_1209, option_1208, option_1207, option_1206, option_1205, option_1204, option_1203];
    let mut gamestate_19: reversi::GameState = crate::reversi::GameState::Tie;
    let mut player_814: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1211: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_815: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1212: std::option::Option<reversi::Player> = std::option::Option::Some(player_815);
    let mut option_1213: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_816: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1214: std::option::Option<reversi::Player> = std::option::Option::Some(player_816);
    let mut player_817: reversi::Player = crate::reversi::Player::Player1;
    let mut player_818: reversi::Player = crate::reversi::Player::other(player_817);
    let mut option_1215: std::option::Option<reversi::Player> = std::option::Option::Some(player_818);
    let mut player_819: reversi::Player = crate::reversi::Player::Player1;
    let mut player_820: reversi::Player = crate::reversi::Player::other(player_819);
    let mut option_1216: std::option::Option<reversi::Player> = std::option::Option::Some(player_820);
    let mut player_821: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1217: std::option::Option<reversi::Player> = std::option::Option::Some(player_821);
    let mut player_822: reversi::Player = crate::reversi::Player::Player1;
    let mut player_823: reversi::Player = crate::reversi::Player::other(player_822);
    let mut option_1218: std::option::Option<reversi::Player> = std::option::Option::Some(player_823);
    let mut option_array_150: [std::option::Option<reversi::Player>; 8] = [option_1218, option_1217, option_1216, option_1215, option_1214, option_1213, option_1212, option_1211];
    let mut player_824: reversi::Player = crate::reversi::Player::Player1;
    let mut player_825: reversi::Player = crate::reversi::Player::other(player_824);
    let mut option_1219: std::option::Option<reversi::Player> = std::option::Option::Some(player_825);
    let mut player_826: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1220: std::option::Option<reversi::Player> = std::option::Option::Some(player_826);
    let mut option_1221: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1222: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1223: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1224: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_827: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1225: std::option::Option<reversi::Player> = std::option::Option::Some(player_827);
    let mut option_1226: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_151: [std::option::Option<reversi::Player>; 8] = [option_1226, option_1225, option_1224, option_1223, option_1222, option_1221, option_1220, option_1219];
    let mut option_1227: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1228: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_828: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1229: std::option::Option<reversi::Player> = std::option::Option::Some(player_828);
    let mut player_829: reversi::Player = crate::reversi::Player::Player0;
    let mut player_830: reversi::Player = crate::reversi::Player::other(player_829);
    let mut option_1230: std::option::Option<reversi::Player> = std::option::Option::Some(player_830);
    let mut player_831: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1231: std::option::Option<reversi::Player> = std::option::Option::Some(player_831);
    let mut option_1232: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_832: reversi::Player = crate::reversi::Player::Player1;
    let mut player_833: reversi::Player = crate::reversi::Player::other(player_832);
    let mut option_1233: std::option::Option<reversi::Player> = std::option::Option::Some(player_833);
    let mut option_1234: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_152: [std::option::Option<reversi::Player>; 8] = [option_1234, option_1233, option_1232, option_1231, option_1230, option_1229, option_1228, option_1227];
    let mut option_1235: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_834: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1236: std::option::Option<reversi::Player> = std::option::Option::Some(player_834);
    let mut player_835: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1237: std::option::Option<reversi::Player> = std::option::Option::Some(player_835);
    let mut option_1238: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1239: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1240: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_836: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1241: std::option::Option<reversi::Player> = std::option::Option::Some(player_836);
    let mut player_837: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1242: std::option::Option<reversi::Player> = std::option::Option::Some(player_837);
    let mut option_array_153: [std::option::Option<reversi::Player>; 8] = [option_1242, option_1241, option_1240, option_1239, option_1238, option_1237, option_1236, option_1235];
    let mut option_1243: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1244: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_838: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1245: std::option::Option<reversi::Player> = std::option::Option::Some(player_838);
    let mut option_1246: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1247: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1248: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_839: reversi::Player = crate::reversi::Player::Player0;
    let mut player_840: reversi::Player = crate::reversi::Player::other(player_839);
    let mut option_1249: std::option::Option<reversi::Player> = std::option::Option::Some(player_840);
    let mut player_841: reversi::Player = crate::reversi::Player::Player0;
    let mut player_842: reversi::Player = crate::reversi::Player::other(player_841);
    let mut option_1250: std::option::Option<reversi::Player> = std::option::Option::Some(player_842);
    let mut option_array_154: [std::option::Option<reversi::Player>; 8] = [option_1250, option_1249, option_1248, option_1247, option_1246, option_1245, option_1244, option_1243];
    let mut player_843: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1251: std::option::Option<reversi::Player> = std::option::Option::Some(player_843);
    let mut player_844: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1252: std::option::Option<reversi::Player> = std::option::Option::Some(player_844);
    let mut option_1253: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1254: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1255: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1256: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1257: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_845: reversi::Player = crate::reversi::Player::Player1;
    let mut player_846: reversi::Player = crate::reversi::Player::other(player_845);
    let mut option_1258: std::option::Option<reversi::Player> = std::option::Option::Some(player_846);
    let mut option_array_155: [std::option::Option<reversi::Player>; 8] = [option_1258, option_1257, option_1256, option_1255, option_1254, option_1253, option_1252, option_1251];
    let mut option_1259: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_847: reversi::Player = crate::reversi::Player::Player1;
    let mut player_848: reversi::Player = crate::reversi::Player::other(player_847);
    let mut option_1260: std::option::Option<reversi::Player> = std::option::Option::Some(player_848);
    let mut option_1261: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1262: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_849: reversi::Player = crate::reversi::Player::Player0;
    let mut player_850: reversi::Player = crate::reversi::Player::other(player_849);
    let mut option_1263: std::option::Option<reversi::Player> = std::option::Option::Some(player_850);
    let mut player_851: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1264: std::option::Option<reversi::Player> = std::option::Option::Some(player_851);
    let mut player_852: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1265: std::option::Option<reversi::Player> = std::option::Option::Some(player_852);
    let mut player_853: reversi::Player = crate::reversi::Player::Player1;
    let mut player_854: reversi::Player = crate::reversi::Player::other(player_853);
    let mut option_1266: std::option::Option<reversi::Player> = std::option::Option::Some(player_854);
    let mut option_array_156: [std::option::Option<reversi::Player>; 8] = [option_1266, option_1265, option_1264, option_1263, option_1262, option_1261, option_1260, option_1259];
    let mut option_1267: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1268: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_855: reversi::Player = crate::reversi::Player::Player0;
    let mut player_856: reversi::Player = crate::reversi::Player::other(player_855);
    let mut option_1269: std::option::Option<reversi::Player> = std::option::Option::Some(player_856);
    let mut option_1270: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_857: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1271: std::option::Option<reversi::Player> = std::option::Option::Some(player_857);
    let mut option_1272: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1273: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_858: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1274: std::option::Option<reversi::Player> = std::option::Option::Some(player_858);
    let mut option_array_157: [std::option::Option<reversi::Player>; 8] = [option_1274, option_1273, option_1272, option_1271, option_1270, option_1269, option_1268, option_1267];
    let mut option_array_array_17: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_157, option_array_156, option_array_155, option_array_154, option_array_153, option_array_152, option_array_151, option_array_150];
    let mut reversi_17: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_17, next: player_814, status: gamestate_19};
    let mut reversi_17_ref_0: &crate::reversi::Reversi = &mut reversi_17;
    let mut option_1275: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_17_ref_0);
    let mut player_859: reversi::Player = crate::reversi::Player::Player0;
    let mut player_860: reversi::Player = crate::reversi::Player::other(player_859);
    let mut gamestate_20: reversi::GameState = crate::reversi::GameState::Win(player_860);
    let mut player_861: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1276: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_862: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1277: std::option::Option<reversi::Player> = std::option::Option::Some(player_862);
    let mut option_1278: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_863: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1279: std::option::Option<reversi::Player> = std::option::Option::Some(player_863);
    let mut player_864: reversi::Player = crate::reversi::Player::Player1;
    let mut player_865: reversi::Player = crate::reversi::Player::other(player_864);
    let mut option_1280: std::option::Option<reversi::Player> = std::option::Option::Some(player_865);
    let mut player_866: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1281: std::option::Option<reversi::Player> = std::option::Option::Some(player_866);
    let mut player_867: reversi::Player = crate::reversi::Player::Player1;
    let mut player_868: reversi::Player = crate::reversi::Player::other(player_867);
    let mut option_1282: std::option::Option<reversi::Player> = std::option::Option::Some(player_868);
    let mut player_869: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1283: std::option::Option<reversi::Player> = std::option::Option::Some(player_869);
    let mut option_array_158: [std::option::Option<reversi::Player>; 8] = [option_1283, option_1282, option_1281, option_1280, option_1279, option_1278, option_1277, option_1276];
    let mut option_1284: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_870: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1285: std::option::Option<reversi::Player> = std::option::Option::Some(player_870);
    let mut option_1286: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_871: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1287: std::option::Option<reversi::Player> = std::option::Option::Some(player_871);
    let mut option_1288: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_872: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1289: std::option::Option<reversi::Player> = std::option::Option::Some(player_872);
    let mut player_873: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1290: std::option::Option<reversi::Player> = std::option::Option::Some(player_873);
    let mut option_1291: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_159: [std::option::Option<reversi::Player>; 8] = [option_1291, option_1290, option_1289, option_1288, option_1287, option_1286, option_1285, option_1284];
    let mut player_874: reversi::Player = crate::reversi::Player::Player0;
    let mut player_875: reversi::Player = crate::reversi::Player::other(player_874);
    let mut option_1292: std::option::Option<reversi::Player> = std::option::Option::Some(player_875);
    let mut option_1293: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1294: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_876: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1295: std::option::Option<reversi::Player> = std::option::Option::Some(player_876);
    let mut player_877: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1296: std::option::Option<reversi::Player> = std::option::Option::Some(player_877);
    let mut player_878: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1297: std::option::Option<reversi::Player> = std::option::Option::Some(player_878);
    let mut option_1298: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1299: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_160: [std::option::Option<reversi::Player>; 8] = [option_1299, option_1298, option_1297, option_1296, option_1295, option_1294, option_1293, option_1292];
    let mut option_1300: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1301: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1302: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1303: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_879: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1304: std::option::Option<reversi::Player> = std::option::Option::Some(player_879);
    let mut player_880: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1305: std::option::Option<reversi::Player> = std::option::Option::Some(player_880);
    let mut option_1306: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1307: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_161: [std::option::Option<reversi::Player>; 8] = [option_1307, option_1306, option_1305, option_1304, option_1303, option_1302, option_1301, option_1300];
    let mut option_1308: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1309: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_881: reversi::Player = crate::reversi::Player::Player0;
    let mut player_882: reversi::Player = crate::reversi::Player::other(player_881);
    let mut option_1310: std::option::Option<reversi::Player> = std::option::Option::Some(player_882);
    let mut option_1311: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1312: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1313: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1314: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_883: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1315: std::option::Option<reversi::Player> = std::option::Option::Some(player_883);
    let mut option_array_162: [std::option::Option<reversi::Player>; 8] = [option_1315, option_1314, option_1313, option_1312, option_1311, option_1310, option_1309, option_1308];
    let mut option_1316: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_884: reversi::Player = crate::reversi::Player::Player1;
    let mut player_885: reversi::Player = crate::reversi::Player::other(player_884);
    let mut option_1317: std::option::Option<reversi::Player> = std::option::Option::Some(player_885);
    let mut player_886: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1318: std::option::Option<reversi::Player> = std::option::Option::Some(player_886);
    let mut player_887: reversi::Player = crate::reversi::Player::Player0;
    let mut player_888: reversi::Player = crate::reversi::Player::other(player_887);
    let mut option_1319: std::option::Option<reversi::Player> = std::option::Option::Some(player_888);
    let mut player_889: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1320: std::option::Option<reversi::Player> = std::option::Option::Some(player_889);
    let mut option_1321: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_890: reversi::Player = crate::reversi::Player::Player1;
    let mut player_891: reversi::Player = crate::reversi::Player::other(player_890);
    let mut option_1322: std::option::Option<reversi::Player> = std::option::Option::Some(player_891);
    let mut option_1323: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_163: [std::option::Option<reversi::Player>; 8] = [option_1323, option_1322, option_1321, option_1320, option_1319, option_1318, option_1317, option_1316];
    let mut player_892: reversi::Player = crate::reversi::Player::Player1;
    let mut player_893: reversi::Player = crate::reversi::Player::other(player_892);
    let mut option_1324: std::option::Option<reversi::Player> = std::option::Option::Some(player_893);
    let mut player_894: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1325: std::option::Option<reversi::Player> = std::option::Option::Some(player_894);
    let mut option_1326: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_895: reversi::Player = crate::reversi::Player::Player1;
    let mut player_896: reversi::Player = crate::reversi::Player::other(player_895);
    let mut option_1327: std::option::Option<reversi::Player> = std::option::Option::Some(player_896);
    let mut option_1328: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_897: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1329: std::option::Option<reversi::Player> = std::option::Option::Some(player_897);
    let mut option_1330: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1331: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_164: [std::option::Option<reversi::Player>; 8] = [option_1331, option_1330, option_1329, option_1328, option_1327, option_1326, option_1325, option_1324];
    let mut option_1332: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_898: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1333: std::option::Option<reversi::Player> = std::option::Option::Some(player_898);
    let mut option_1334: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_899: reversi::Player = crate::reversi::Player::Player0;
    let mut player_900: reversi::Player = crate::reversi::Player::other(player_899);
    let mut option_1335: std::option::Option<reversi::Player> = std::option::Option::Some(player_900);
    let mut player_901: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1336: std::option::Option<reversi::Player> = std::option::Option::Some(player_901);
    let mut option_1337: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1338: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_902: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1339: std::option::Option<reversi::Player> = std::option::Option::Some(player_902);
    let mut option_array_165: [std::option::Option<reversi::Player>; 8] = [option_1339, option_1338, option_1337, option_1336, option_1335, option_1334, option_1333, option_1332];
    let mut option_array_array_18: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_165, option_array_164, option_array_163, option_array_162, option_array_161, option_array_160, option_array_159, option_array_158];
    let mut reversi_18: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_18, next: player_861, status: gamestate_20};
    let mut reversi_18_ref_0: &crate::reversi::Reversi = &mut reversi_18;
    let mut option_1340: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_18_ref_0);
    let mut gamestate_21: reversi::GameState = crate::reversi::GameState::Tie;
    let mut player_903: reversi::Player = crate::reversi::Player::Player0;
    let mut player_904: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1341: std::option::Option<reversi::Player> = std::option::Option::Some(player_904);
    let mut option_1342: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_905: reversi::Player = crate::reversi::Player::Player1;
    let mut player_906: reversi::Player = crate::reversi::Player::other(player_905);
    let mut option_1343: std::option::Option<reversi::Player> = std::option::Option::Some(player_906);
    let mut option_1344: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1345: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1346: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_907: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1347: std::option::Option<reversi::Player> = std::option::Option::Some(player_907);
    let mut player_908: reversi::Player = crate::reversi::Player::Player1;
    let mut player_909: reversi::Player = crate::reversi::Player::other(player_908);
    let mut option_1348: std::option::Option<reversi::Player> = std::option::Option::Some(player_909);
    let mut option_array_166: [std::option::Option<reversi::Player>; 8] = [option_1348, option_1347, option_1346, option_1345, option_1344, option_1343, option_1342, option_1341];
    let mut option_1349: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_910: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1350: std::option::Option<reversi::Player> = std::option::Option::Some(player_910);
    let mut player_911: reversi::Player = crate::reversi::Player::Player1;
    let mut player_912: reversi::Player = crate::reversi::Player::other(player_911);
    let mut option_1351: std::option::Option<reversi::Player> = std::option::Option::Some(player_912);
    let mut option_1352: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1353: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1354: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1355: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_913: reversi::Player = crate::reversi::Player::Player0;
    let mut player_914: reversi::Player = crate::reversi::Player::other(player_913);
    let mut option_1356: std::option::Option<reversi::Player> = std::option::Option::Some(player_914);
    let mut option_array_167: [std::option::Option<reversi::Player>; 8] = [option_1356, option_1355, option_1354, option_1353, option_1352, option_1351, option_1350, option_1349];
    let mut option_1357: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1358: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_915: reversi::Player = crate::reversi::Player::Player0;
    let mut player_916: reversi::Player = crate::reversi::Player::other(player_915);
    let mut option_1359: std::option::Option<reversi::Player> = std::option::Option::Some(player_916);
    let mut player_917: reversi::Player = crate::reversi::Player::Player1;
    let mut player_918: reversi::Player = crate::reversi::Player::other(player_917);
    let mut option_1360: std::option::Option<reversi::Player> = std::option::Option::Some(player_918);
    let mut player_919: reversi::Player = crate::reversi::Player::Player0;
    let mut player_920: reversi::Player = crate::reversi::Player::other(player_919);
    let mut option_1361: std::option::Option<reversi::Player> = std::option::Option::Some(player_920);
    let mut player_921: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1362: std::option::Option<reversi::Player> = std::option::Option::Some(player_921);
    let mut player_922: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1363: std::option::Option<reversi::Player> = std::option::Option::Some(player_922);
    let mut player_923: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1364: std::option::Option<reversi::Player> = std::option::Option::Some(player_923);
    let mut option_array_168: [std::option::Option<reversi::Player>; 8] = [option_1364, option_1363, option_1362, option_1361, option_1360, option_1359, option_1358, option_1357];
    let mut option_1365: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_924: reversi::Player = crate::reversi::Player::Player0;
    let mut player_925: reversi::Player = crate::reversi::Player::other(player_924);
    let mut option_1366: std::option::Option<reversi::Player> = std::option::Option::Some(player_925);
    let mut option_1367: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_926: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1368: std::option::Option<reversi::Player> = std::option::Option::Some(player_926);
    let mut option_1369: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_927: reversi::Player = crate::reversi::Player::Player0;
    let mut player_928: reversi::Player = crate::reversi::Player::other(player_927);
    let mut option_1370: std::option::Option<reversi::Player> = std::option::Option::Some(player_928);
    let mut player_929: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1371: std::option::Option<reversi::Player> = std::option::Option::Some(player_929);
    let mut option_1372: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_169: [std::option::Option<reversi::Player>; 8] = [option_1372, option_1371, option_1370, option_1369, option_1368, option_1367, option_1366, option_1365];
    let mut player_930: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1373: std::option::Option<reversi::Player> = std::option::Option::Some(player_930);
    let mut player_931: reversi::Player = crate::reversi::Player::Player1;
    let mut player_932: reversi::Player = crate::reversi::Player::other(player_931);
    let mut option_1374: std::option::Option<reversi::Player> = std::option::Option::Some(player_932);
    let mut option_1375: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_933: reversi::Player = crate::reversi::Player::Player1;
    let mut player_934: reversi::Player = crate::reversi::Player::other(player_933);
    let mut option_1376: std::option::Option<reversi::Player> = std::option::Option::Some(player_934);
    let mut option_1377: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_935: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1378: std::option::Option<reversi::Player> = std::option::Option::Some(player_935);
    let mut option_1379: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1380: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_170: [std::option::Option<reversi::Player>; 8] = [option_1380, option_1379, option_1378, option_1377, option_1376, option_1375, option_1374, option_1373];
    let mut player_936: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1381: std::option::Option<reversi::Player> = std::option::Option::Some(player_936);
    let mut option_1382: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_937: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1383: std::option::Option<reversi::Player> = std::option::Option::Some(player_937);
    let mut player_938: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1384: std::option::Option<reversi::Player> = std::option::Option::Some(player_938);
    let mut player_939: reversi::Player = crate::reversi::Player::Player0;
    let mut player_940: reversi::Player = crate::reversi::Player::other(player_939);
    let mut option_1385: std::option::Option<reversi::Player> = std::option::Option::Some(player_940);
    let mut option_1386: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1387: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1388: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_171: [std::option::Option<reversi::Player>; 8] = [option_1388, option_1387, option_1386, option_1385, option_1384, option_1383, option_1382, option_1381];
    let mut player_941: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1389: std::option::Option<reversi::Player> = std::option::Option::Some(player_941);
    let mut player_942: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1390: std::option::Option<reversi::Player> = std::option::Option::Some(player_942);
    let mut player_943: reversi::Player = crate::reversi::Player::Player1;
    let mut player_944: reversi::Player = crate::reversi::Player::other(player_943);
    let mut option_1391: std::option::Option<reversi::Player> = std::option::Option::Some(player_944);
    let mut option_1392: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_945: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1393: std::option::Option<reversi::Player> = std::option::Option::Some(player_945);
    let mut option_1394: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1395: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1396: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_172: [std::option::Option<reversi::Player>; 8] = [option_1396, option_1395, option_1394, option_1393, option_1392, option_1391, option_1390, option_1389];
    let mut player_946: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1397: std::option::Option<reversi::Player> = std::option::Option::Some(player_946);
    let mut option_1398: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1399: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_947: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1400: std::option::Option<reversi::Player> = std::option::Option::Some(player_947);
    let mut option_1401: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_1402: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_948: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1403: std::option::Option<reversi::Player> = std::option::Option::Some(player_948);
    let mut player_949: reversi::Player = crate::reversi::Player::Player1;
    let mut player_950: reversi::Player = crate::reversi::Player::other(player_949);
    let mut option_1404: std::option::Option<reversi::Player> = std::option::Option::Some(player_950);
    let mut option_array_173: [std::option::Option<reversi::Player>; 8] = [option_1404, option_1403, option_1402, option_1401, option_1400, option_1399, option_1398, option_1397];
    let mut option_array_array_19: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_173, option_array_172, option_array_171, option_array_170, option_array_169, option_array_168, option_array_167, option_array_166];
    let mut reversi_19: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_19, next: player_903, status: gamestate_21};
    let mut reversi_19_ref_0: &crate::reversi::Reversi = &mut reversi_19;
    let mut option_1405: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_19_ref_0);
    let mut gamestate_22: gomoku::GameState = crate::gomoku::GameState::InProgress;
    let mut player_951: gomoku::Player = crate::gomoku::Player::Player1;
    let mut player_952: gomoku::Player = crate::gomoku::Player::other(player_951);
    let mut option_1406: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1407: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1408: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1409: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1410: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1411: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1412: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1413: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1414: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_953: gomoku::Player = crate::gomoku::Player::Player0;
    let mut option_1415: std::option::Option<gomoku::Player> = std::option::Option::Some(player_953);
    let mut option_1416: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_954: gomoku::Player = crate::gomoku::Player::Player1;
    let mut option_1417: std::option::Option<gomoku::Player> = std::option::Option::Some(player_954);
    let mut player_955: gomoku::Player = crate::gomoku::Player::Player1;
    let mut option_1418: std::option::Option<gomoku::Player> = std::option::Option::Some(player_955);
    let mut option_1419: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_956: gomoku::Player = crate::gomoku::Player::Player1;
    let mut option_1420: std::option::Option<gomoku::Player> = std::option::Option::Some(player_956);
    let mut option_array_174: [std::option::Option<gomoku::Player>; 15] = [option_1420, option_1419, option_1418, option_1417, option_1416, option_1415, option_1414, option_1413, option_1412, option_1411, option_1410, option_1409, option_1408, option_1407, option_1406];
    let mut player_957: gomoku::Player = crate::gomoku::Player::Player1;
    let mut player_958: gomoku::Player = crate::gomoku::Player::other(player_957);
    let mut option_1421: std::option::Option<gomoku::Player> = std::option::Option::Some(player_958);
    let mut player_959: gomoku::Player = crate::gomoku::Player::Player0;
    let mut option_1422: std::option::Option<gomoku::Player> = std::option::Option::Some(player_959);
    let mut player_960: gomoku::Player = crate::gomoku::Player::Player0;
    let mut player_961: gomoku::Player = crate::gomoku::Player::other(player_960);
    let mut option_1423: std::option::Option<gomoku::Player> = std::option::Option::Some(player_961);
    let mut option_1424: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_962: gomoku::Player = crate::gomoku::Player::Player1;
    let mut option_1425: std::option::Option<gomoku::Player> = std::option::Option::Some(player_962);
    let mut player_963: gomoku::Player = crate::gomoku::Player::Player0;
    let mut option_1426: std::option::Option<gomoku::Player> = std::option::Option::Some(player_963);
    let mut option_1427: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1428: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_964: gomoku::Player = crate::gomoku::Player::Player0;
    let mut player_965: gomoku::Player = crate::gomoku::Player::other(player_964);
    let mut option_1429: std::option::Option<gomoku::Player> = std::option::Option::Some(player_965);
    let mut player_966: gomoku::Player = crate::gomoku::Player::Player0;
    let mut option_1430: std::option::Option<gomoku::Player> = std::option::Option::Some(player_966);
    let mut option_1431: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1432: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_967: gomoku::Player = crate::gomoku::Player::Player0;
    let mut player_968: gomoku::Player = crate::gomoku::Player::other(player_967);
    let mut option_1433: std::option::Option<gomoku::Player> = std::option::Option::Some(player_968);
    let mut player_969: gomoku::Player = crate::gomoku::Player::Player0;
    let mut option_1434: std::option::Option<gomoku::Player> = std::option::Option::Some(player_969);
    let mut option_1435: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_array_175: [std::option::Option<gomoku::Player>; 15] = [option_1435, option_1434, option_1433, option_1432, option_1431, option_1430, option_1429, option_1428, option_1427, option_1426, option_1425, option_1424, option_1423, option_1422, option_1421];
    let mut player_970: gomoku::Player = crate::gomoku::Player::Player1;
    let mut option_1436: std::option::Option<gomoku::Player> = std::option::Option::Some(player_970);
    let mut option_1437: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1438: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_971: gomoku::Player = crate::gomoku::Player::Player1;
    let mut player_972: gomoku::Player = crate::gomoku::Player::other(player_971);
    let mut option_1439: std::option::Option<gomoku::Player> = std::option::Option::Some(player_972);
    let mut option_1440: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1441: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1442: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1443: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_973: gomoku::Player = crate::gomoku::Player::Player0;
    let mut player_974: gomoku::Player = crate::gomoku::Player::Player1;
    let mut player_975: gomoku::Player = crate::gomoku::Player::other(player_974);
    let mut option_1444: std::option::Option<gomoku::Player> = std::option::Option::Some(player_975);
    let mut option_1445: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_976: gomoku::Player = crate::gomoku::Player::Player1;
    let mut option_1446: std::option::Option<gomoku::Player> = std::option::Option::Some(player_976);
    let mut player_977: gomoku::Player = crate::gomoku::Player::Player1;
    let mut option_1447: std::option::Option<gomoku::Player> = std::option::Option::Some(player_977);
    let mut option_1448: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_978: gomoku::Player = crate::gomoku::Player::Player1;
    let mut option_1449: std::option::Option<gomoku::Player> = std::option::Option::Some(player_978);
    let mut player_979: gomoku::Player = crate::gomoku::Player::Player0;
    let mut option_1450: std::option::Option<gomoku::Player> = std::option::Option::Some(player_979);
    let mut player_980: gomoku::Player = crate::gomoku::Player::Player1;
    let mut player_981: gomoku::Player = crate::gomoku::Player::other(player_980);
    let mut option_1451: std::option::Option<gomoku::Player> = std::option::Option::Some(player_981);
    let mut option_1452: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1453: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1454: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_982: gomoku::Player = crate::gomoku::Player::Player1;
    let mut player_983: gomoku::Player = crate::gomoku::Player::other(player_982);
    let mut option_1455: std::option::Option<gomoku::Player> = std::option::Option::Some(player_983);
    let mut option_1456: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1457: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_984: gomoku::Player = crate::gomoku::Player::Player1;
    let mut option_1458: std::option::Option<gomoku::Player> = std::option::Option::Some(player_984);
    let mut option_1459: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1460: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_985: gomoku::Player = crate::gomoku::Player::Player0;
    let mut option_1461: std::option::Option<gomoku::Player> = std::option::Option::Some(player_985);
    let mut player_986: gomoku::Player = crate::gomoku::Player::Player0;
    let mut option_1462: std::option::Option<gomoku::Player> = std::option::Option::Some(player_986);
    let mut option_1463: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1464: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_array_176: [std::option::Option<gomoku::Player>; 15] = [option_1464, option_1463, option_1462, option_1461, option_1460, option_1459, option_1458, option_1457, option_1456, option_1455, option_1454, option_1453, option_1452, option_1451, option_1450];
    let mut option_1465: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_987: gomoku::Player = crate::gomoku::Player::Player0;
    let mut player_988: gomoku::Player = crate::gomoku::Player::other(player_987);
    let mut option_1466: std::option::Option<gomoku::Player> = std::option::Option::Some(player_988);
    let mut player_989: gomoku::Player = crate::gomoku::Player::Player0;
    let mut option_1467: std::option::Option<gomoku::Player> = std::option::Option::Some(player_989);
    let mut option_1468: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_990: gomoku::Player = crate::gomoku::Player::Player1;
    let mut option_1469: std::option::Option<gomoku::Player> = std::option::Option::Some(player_990);
    let mut option_1470: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut option_1471: std::option::Option<gomoku::Player> = std::option::Option::None;
    let mut player_991: gomoku::Player = crate::gomoku::Player::Player1;
    let mut option_1472: std::option::Option<gomoku::Player> = std::option::Option::Some(player_991);
    let mut player_992: gomoku::Player = crate::gomoku::Player::Player0;
    let mut option_1473: std::option::Option<gomoku::Player> = std::option::Option::Some(player_992);
    let mut direction_2: reversi::Direction = crate::reversi::Direction::Right;
    let mut direction_1_ref_0: &reversi::Direction = &mut direction_1;
    let mut tuple_0: (i8, i8) = crate::reversi::Direction::as_offset(direction_0_ref_0);
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_1679() {
    rusty_monitor::set_test_id(1679);
    let mut reversierror_0: reversi::ReversiError = crate::reversi::ReversiError::GameEnded;
    let mut reversierror_0_ref_0: &reversi::ReversiError = &mut reversierror_0;
    let mut connectfourerror_0: connect_four::ConnectFourError = crate::connect_four::ConnectFourError::GameEnded;
    let mut connectfourerror_0_ref_0: &connect_four::ConnectFourError = &mut connectfourerror_0;
    let mut connectfourerror_1: connect_four::ConnectFourError = crate::connect_four::ConnectFourError::GameEnded;
    let mut player_0: connect_four::Player = crate::connect_four::Player::Player1;
    let mut player_0_ref_0: &connect_four::Player = &mut player_0;
    let mut player_1: connect_four::Player = crate::connect_four::Player::Player1;
    let mut player_2: connect_four::Player = crate::connect_four::Player::other(player_1);
    let mut minesweepererror_0: minesweeper::MinesweeperError = crate::minesweeper::MinesweeperError::AlreadyFlagged;
    let mut player_3: reversi::Player = crate::reversi::Player::Player0;
    let mut player_4: reversi::Player = crate::reversi::Player::other(player_3);
    let mut gamestate_0: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_5: reversi::Player = crate::reversi::Player::Player0;
    let mut player_6: reversi::Player = crate::reversi::Player::other(player_5);
    let mut option_0: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_7: reversi::Player = crate::reversi::Player::Player1;
    let mut option_1: std::option::Option<reversi::Player> = std::option::Option::Some(player_7);
    let mut option_2: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_3: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_4: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_8: reversi::Player = crate::reversi::Player::Player0;
    let mut option_5: std::option::Option<reversi::Player> = std::option::Option::Some(player_8);
    let mut player_9: reversi::Player = crate::reversi::Player::Player0;
    let mut player_10: reversi::Player = crate::reversi::Player::other(player_9);
    let mut minesweepererror_1: minesweeper::MinesweeperError = crate::minesweeper::MinesweeperError::AlreadyFlagged;
    let mut minesweepererror_0_ref_0: &minesweeper::MinesweeperError = &mut minesweepererror_0;
    let mut minesweepererror_2: minesweeper::MinesweeperError = crate::minesweeper::MinesweeperError::AlreadyFlagged;
    let mut minesweepererror_1_ref_0: &minesweeper::MinesweeperError = &mut minesweepererror_1;
    let mut player_11: connect_four::Player = crate::connect_four::Player::Player0;
    let mut player_2_ref_0: &connect_four::Player = &mut player_2;
    let mut connectfourerror_2: connect_four::ConnectFourError = crate::connect_four::ConnectFourError::ColumnFilled;
    let mut connectfourerror_1_ref_0: &connect_four::ConnectFourError = &mut connectfourerror_1;
    let mut player_10_ref_0: &reversi::Player = &mut player_10;
    let mut tuple_0: () = std::cmp::Eq::assert_receiver_is_total_eq(player_10_ref_0);
    let mut tuple_1: () = std::cmp::Eq::assert_receiver_is_total_eq(reversierror_0_ref_0);
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_98() {
    rusty_monitor::set_test_id(98);
    let mut player_0: reversi::Player = crate::reversi::Player::Player1;
    let mut player_1: reversi::Player = crate::reversi::Player::Player1;
    let mut gamestate_0: reversi::GameState = crate::reversi::GameState::Win(player_1);
    let mut player_2: reversi::Player = crate::reversi::Player::Player1;
    let mut player_3: reversi::Player = crate::reversi::Player::other(player_2);
    let mut player_4: reversi::Player = crate::reversi::Player::Player1;
    let mut option_0: std::option::Option<reversi::Player> = std::option::Option::Some(player_0);
    let mut option_1: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_2: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_3: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_4: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_5: reversi::Player = crate::reversi::Player::Player0;
    let mut option_5: std::option::Option<reversi::Player> = std::option::Option::Some(player_5);
    let mut player_6: reversi::Player = crate::reversi::Player::Player0;
    let mut player_7: reversi::Player = crate::reversi::Player::other(player_6);
    let mut option_6: std::option::Option<reversi::Player> = std::option::Option::Some(player_7);
    let mut player_8: reversi::Player = crate::reversi::Player::Player1;
    let mut option_7: std::option::Option<reversi::Player> = std::option::Option::Some(player_8);
    let mut option_array_0: [std::option::Option<reversi::Player>; 8] = [option_7, option_6, option_5, option_4, option_3, option_2, option_1, option_0];
    let mut player_9: reversi::Player = crate::reversi::Player::Player1;
    let mut player_10: reversi::Player = crate::reversi::Player::other(player_9);
    let mut option_8: std::option::Option<reversi::Player> = std::option::Option::Some(player_10);
    let mut option_9: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_11: reversi::Player = crate::reversi::Player::Player1;
    let mut player_12: reversi::Player = crate::reversi::Player::other(player_11);
    let mut option_10: std::option::Option<reversi::Player> = std::option::Option::Some(player_12);
    let mut player_13: reversi::Player = crate::reversi::Player::Player0;
    let mut option_11: std::option::Option<reversi::Player> = std::option::Option::Some(player_13);
    let mut option_12: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_14: reversi::Player = crate::reversi::Player::Player1;
    let mut option_13: std::option::Option<reversi::Player> = std::option::Option::Some(player_14);
    let mut player_15: reversi::Player = crate::reversi::Player::Player1;
    let mut option_14: std::option::Option<reversi::Player> = std::option::Option::Some(player_15);
    let mut player_16: reversi::Player = crate::reversi::Player::Player1;
    let mut option_15: std::option::Option<reversi::Player> = std::option::Option::Some(player_16);
    let mut option_array_1: [std::option::Option<reversi::Player>; 8] = [option_15, option_14, option_13, option_12, option_11, option_10, option_9, option_8];
    let mut player_17: reversi::Player = crate::reversi::Player::Player0;
    let mut option_16: std::option::Option<reversi::Player> = std::option::Option::Some(player_17);
    let mut option_17: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_18: reversi::Player = crate::reversi::Player::Player0;
    let mut player_19: reversi::Player = crate::reversi::Player::other(player_18);
    let mut option_18: std::option::Option<reversi::Player> = std::option::Option::Some(player_19);
    let mut player_20: reversi::Player = crate::reversi::Player::Player0;
    let mut player_21: reversi::Player = crate::reversi::Player::other(player_20);
    let mut option_19: std::option::Option<reversi::Player> = std::option::Option::Some(player_21);
    let mut player_22: reversi::Player = crate::reversi::Player::Player0;
    let mut option_20: std::option::Option<reversi::Player> = std::option::Option::Some(player_22);
    let mut option_21: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_22: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_23: reversi::Player = crate::reversi::Player::Player0;
    let mut option_23: std::option::Option<reversi::Player> = std::option::Option::Some(player_23);
    let mut option_array_2: [std::option::Option<reversi::Player>; 8] = [option_23, option_22, option_21, option_20, option_19, option_18, option_17, option_16];
    let mut player_24: reversi::Player = crate::reversi::Player::Player0;
    let mut option_24: std::option::Option<reversi::Player> = std::option::Option::Some(player_24);
    let mut player_25: reversi::Player = crate::reversi::Player::Player1;
    let mut option_25: std::option::Option<reversi::Player> = std::option::Option::Some(player_25);
    let mut option_26: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_27: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_26: reversi::Player = crate::reversi::Player::Player0;
    let mut option_28: std::option::Option<reversi::Player> = std::option::Option::Some(player_26);
    let mut option_29: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_30: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_31: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_3: [std::option::Option<reversi::Player>; 8] = [option_31, option_30, option_29, option_28, option_27, option_26, option_25, option_24];
    let mut option_32: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_33: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_34: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_27: reversi::Player = crate::reversi::Player::Player1;
    let mut option_35: std::option::Option<reversi::Player> = std::option::Option::Some(player_27);
    let mut option_36: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_28: reversi::Player = crate::reversi::Player::Player1;
    let mut option_37: std::option::Option<reversi::Player> = std::option::Option::Some(player_28);
    let mut player_29: reversi::Player = crate::reversi::Player::Player0;
    let mut option_38: std::option::Option<reversi::Player> = std::option::Option::Some(player_29);
    let mut player_30: reversi::Player = crate::reversi::Player::Player0;
    let mut option_39: std::option::Option<reversi::Player> = std::option::Option::Some(player_30);
    let mut option_array_4: [std::option::Option<reversi::Player>; 8] = [option_39, option_38, option_37, option_36, option_35, option_34, option_33, option_32];
    let mut player_31: reversi::Player = crate::reversi::Player::Player0;
    let mut option_40: std::option::Option<reversi::Player> = std::option::Option::Some(player_31);
    let mut option_41: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_32: reversi::Player = crate::reversi::Player::Player1;
    let mut option_42: std::option::Option<reversi::Player> = std::option::Option::Some(player_32);
    let mut player_33: reversi::Player = crate::reversi::Player::Player0;
    let mut player_34: reversi::Player = crate::reversi::Player::other(player_33);
    let mut option_43: std::option::Option<reversi::Player> = std::option::Option::Some(player_34);
    let mut option_44: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_45: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_46: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_47: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_5: [std::option::Option<reversi::Player>; 8] = [option_47, option_46, option_45, option_44, option_43, option_42, option_41, option_40];
    let mut player_35: reversi::Player = crate::reversi::Player::Player0;
    let mut option_48: std::option::Option<reversi::Player> = std::option::Option::Some(player_35);
    let mut player_36: reversi::Player = crate::reversi::Player::Player1;
    let mut option_49: std::option::Option<reversi::Player> = std::option::Option::Some(player_36);
    let mut player_37: reversi::Player = crate::reversi::Player::Player1;
    let mut player_38: reversi::Player = crate::reversi::Player::other(player_37);
    let mut option_50: std::option::Option<reversi::Player> = std::option::Option::Some(player_38);
    let mut option_51: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_52: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_53: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_39: reversi::Player = crate::reversi::Player::Player0;
    let mut option_54: std::option::Option<reversi::Player> = std::option::Option::Some(player_39);
    let mut option_55: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_6: [std::option::Option<reversi::Player>; 8] = [option_55, option_54, option_53, option_52, option_51, option_50, option_49, option_48];
    let mut option_56: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_57: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_58: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_59: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_40: reversi::Player = crate::reversi::Player::Player1;
    let mut option_60: std::option::Option<reversi::Player> = std::option::Option::Some(player_40);
    let mut option_61: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_41: reversi::Player = crate::reversi::Player::Player1;
    let mut option_62: std::option::Option<reversi::Player> = std::option::Option::Some(player_41);
    let mut option_63: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_7: [std::option::Option<reversi::Player>; 8] = [option_63, option_62, option_61, option_60, option_59, option_58, option_57, option_56];
    let mut option_array_array_0: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_7, option_array_6, option_array_5, option_array_4, option_array_3, option_array_2, option_array_1, option_array_0];
    let mut reversi_0: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_0, next: player_3, status: gamestate_0};
    let mut reversi_0_ref_0: &crate::reversi::Reversi = &mut reversi_0;
    let mut player_42: tictactoe::Player = crate::tictactoe::Player::Player1;
    let mut player_43: connect_four::Player = crate::connect_four::Player::Player1;
    let mut player_44: tictactoe::Player = crate::tictactoe::Player::Player0;
    let mut player_45: tictactoe::Player = crate::tictactoe::Player::other(player_44);
    let mut player_46: gomoku::Player = crate::gomoku::Player::Player0;
    let mut player_47: gomoku::Player = crate::gomoku::Player::other(player_46);
    let mut player_48: reversi::Player = crate::reversi::Player::Player1;
    let mut player_48_ref_0: &reversi::Player = &mut player_48;
    let mut player_49: reversi::Player = std::clone::Clone::clone(player_48_ref_0);
    let mut minesweepererror_0: minesweeper::MinesweeperError = crate::minesweeper::MinesweeperError::GameEnded;
    let mut player_50: reversi::Player = crate::reversi::Player::other(player_49);
    let mut gomokuerror_0: gomoku::GomokuError = crate::gomoku::GomokuError::OccupiedPosition;
    let mut gomokuerror_0_ref_0: &gomoku::GomokuError = &mut gomokuerror_0;
    let mut player_51: connect_four::Player = crate::connect_four::Player::other(player_43);
    let mut gamestate_1: tictactoe::GameState = crate::tictactoe::GameState::Win(player_42);
    let mut gamestate_2: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut direction_0: reversi::Direction = crate::reversi::Direction::LowerRight;
    let mut result_0: std::result::Result<crate::gomoku::Gomoku, std::convert::Infallible> = crate::gomoku::Gomoku::new();
    let mut minesweepererror_0_ref_0: &minesweeper::MinesweeperError = &mut minesweepererror_0;
    let mut tictactoeerror_0: tictactoe::TicTacToeError = crate::tictactoe::TicTacToeError::WrongPlayer;
    let mut gomokuerror_1: gomoku::GomokuError = crate::gomoku::GomokuError::OccupiedPosition;
    let mut option_64: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_0_ref_0);
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_8540() {
    rusty_monitor::set_test_id(8540);
    let mut player_0: reversi::Player = crate::reversi::Player::Player0;
    let mut usize_0: usize = 55usize;
    let mut usize_1: usize = 59usize;
    let mut player_1: reversi::Player = crate::reversi::Player::Player0;
    let mut gamestate_0: reversi::GameState = crate::reversi::GameState::Win(player_1);
    let mut player_2: reversi::Player = crate::reversi::Player::Player1;
    let mut option_0: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_3: reversi::Player = crate::reversi::Player::Player0;
    let mut option_1: std::option::Option<reversi::Player> = std::option::Option::Some(player_3);
    let mut player_4: reversi::Player = crate::reversi::Player::Player0;
    let mut option_2: std::option::Option<reversi::Player> = std::option::Option::Some(player_4);
    let mut player_5: reversi::Player = crate::reversi::Player::Player1;
    let mut option_3: std::option::Option<reversi::Player> = std::option::Option::Some(player_5);
    let mut player_6: reversi::Player = crate::reversi::Player::Player0;
    let mut player_7: reversi::Player = crate::reversi::Player::other(player_6);
    let mut option_4: std::option::Option<reversi::Player> = std::option::Option::Some(player_7);
    let mut option_5: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_8: reversi::Player = crate::reversi::Player::Player1;
    let mut player_9: reversi::Player = crate::reversi::Player::other(player_8);
    let mut option_6: std::option::Option<reversi::Player> = std::option::Option::Some(player_9);
    let mut player_10: reversi::Player = crate::reversi::Player::Player0;
    let mut option_7: std::option::Option<reversi::Player> = std::option::Option::Some(player_10);
    let mut option_array_0: [std::option::Option<reversi::Player>; 8] = [option_7, option_6, option_5, option_4, option_3, option_2, option_1, option_0];
    let mut player_11: reversi::Player = crate::reversi::Player::Player1;
    let mut option_8: std::option::Option<reversi::Player> = std::option::Option::Some(player_11);
    let mut player_12: reversi::Player = crate::reversi::Player::Player1;
    let mut player_13: reversi::Player = crate::reversi::Player::other(player_12);
    let mut option_9: std::option::Option<reversi::Player> = std::option::Option::Some(player_13);
    let mut player_14: reversi::Player = crate::reversi::Player::Player0;
    let mut option_10: std::option::Option<reversi::Player> = std::option::Option::Some(player_14);
    let mut option_11: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_15: reversi::Player = crate::reversi::Player::Player1;
    let mut option_12: std::option::Option<reversi::Player> = std::option::Option::Some(player_15);
    let mut player_16: reversi::Player = crate::reversi::Player::Player1;
    let mut option_13: std::option::Option<reversi::Player> = std::option::Option::Some(player_16);
    let mut player_17: reversi::Player = crate::reversi::Player::Player0;
    let mut option_14: std::option::Option<reversi::Player> = std::option::Option::Some(player_17);
    let mut option_15: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_1: [std::option::Option<reversi::Player>; 8] = [option_15, option_14, option_13, option_12, option_11, option_10, option_9, option_8];
    let mut player_18: reversi::Player = crate::reversi::Player::Player0;
    let mut option_16: std::option::Option<reversi::Player> = std::option::Option::Some(player_18);
    let mut player_19: reversi::Player = crate::reversi::Player::Player0;
    let mut option_17: std::option::Option<reversi::Player> = std::option::Option::Some(player_19);
    let mut option_18: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_20: reversi::Player = crate::reversi::Player::Player0;
    let mut option_19: std::option::Option<reversi::Player> = std::option::Option::Some(player_20);
    let mut option_20: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_21: reversi::Player = crate::reversi::Player::Player0;
    let mut option_21: std::option::Option<reversi::Player> = std::option::Option::Some(player_21);
    let mut player_22: reversi::Player = crate::reversi::Player::Player0;
    let mut option_22: std::option::Option<reversi::Player> = std::option::Option::Some(player_22);
    let mut player_23: reversi::Player = crate::reversi::Player::Player0;
    let mut option_23: std::option::Option<reversi::Player> = std::option::Option::Some(player_23);
    let mut option_array_2: [std::option::Option<reversi::Player>; 8] = [option_23, option_22, option_21, option_20, option_19, option_18, option_17, option_16];
    let mut player_24: reversi::Player = crate::reversi::Player::Player0;
    let mut option_24: std::option::Option<reversi::Player> = std::option::Option::Some(player_24);
    let mut player_25: reversi::Player = crate::reversi::Player::Player1;
    let mut player_26: reversi::Player = crate::reversi::Player::other(player_25);
    let mut option_25: std::option::Option<reversi::Player> = std::option::Option::Some(player_26);
    let mut option_26: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_27: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_27: reversi::Player = crate::reversi::Player::Player0;
    let mut option_28: std::option::Option<reversi::Player> = std::option::Option::Some(player_27);
    let mut option_29: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_28: reversi::Player = crate::reversi::Player::Player0;
    let mut option_30: std::option::Option<reversi::Player> = std::option::Option::Some(player_28);
    let mut option_31: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_3: [std::option::Option<reversi::Player>; 8] = [option_31, option_30, option_29, option_28, option_27, option_26, option_25, option_24];
    let mut option_32: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_33: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_34: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_35: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_36: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_29: reversi::Player = crate::reversi::Player::Player0;
    let mut player_30: reversi::Player = crate::reversi::Player::other(player_29);
    let mut option_37: std::option::Option<reversi::Player> = std::option::Option::Some(player_30);
    let mut option_38: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_31: reversi::Player = crate::reversi::Player::Player0;
    let mut option_39: std::option::Option<reversi::Player> = std::option::Option::Some(player_31);
    let mut option_array_4: [std::option::Option<reversi::Player>; 8] = [option_39, option_38, option_37, option_36, option_35, option_34, option_33, option_32];
    let mut player_32: reversi::Player = crate::reversi::Player::Player1;
    let mut player_33: reversi::Player = crate::reversi::Player::other(player_32);
    let mut option_40: std::option::Option<reversi::Player> = std::option::Option::Some(player_33);
    let mut player_34: reversi::Player = crate::reversi::Player::Player1;
    let mut player_35: reversi::Player = crate::reversi::Player::other(player_34);
    let mut option_41: std::option::Option<reversi::Player> = std::option::Option::Some(player_35);
    let mut option_42: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_43: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_44: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_45: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_46: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_47: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_5: [std::option::Option<reversi::Player>; 8] = [option_47, option_46, option_45, option_44, option_43, option_42, option_41, option_40];
    let mut option_48: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_36: reversi::Player = crate::reversi::Player::Player1;
    let mut option_49: std::option::Option<reversi::Player> = std::option::Option::Some(player_36);
    let mut player_37: reversi::Player = crate::reversi::Player::Player0;
    let mut player_38: reversi::Player = crate::reversi::Player::other(player_37);
    let mut option_50: std::option::Option<reversi::Player> = std::option::Option::Some(player_38);
    let mut player_39: reversi::Player = crate::reversi::Player::Player0;
    let mut option_51: std::option::Option<reversi::Player> = std::option::Option::Some(player_39);
    let mut option_52: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_53: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_54: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_55: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_6: [std::option::Option<reversi::Player>; 8] = [option_55, option_54, option_53, option_52, option_51, option_50, option_49, option_48];
    let mut option_56: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_40: reversi::Player = crate::reversi::Player::Player1;
    let mut option_57: std::option::Option<reversi::Player> = std::option::Option::Some(player_40);
    let mut option_58: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_41: reversi::Player = crate::reversi::Player::Player1;
    let mut option_59: std::option::Option<reversi::Player> = std::option::Option::Some(player_41);
    let mut player_42: reversi::Player = crate::reversi::Player::Player0;
    let mut option_60: std::option::Option<reversi::Player> = std::option::Option::Some(player_42);
    let mut player_43: reversi::Player = crate::reversi::Player::Player1;
    let mut player_44: reversi::Player = crate::reversi::Player::other(player_43);
    let mut option_61: std::option::Option<reversi::Player> = std::option::Option::Some(player_44);
    let mut player_45: reversi::Player = crate::reversi::Player::Player0;
    let mut option_62: std::option::Option<reversi::Player> = std::option::Option::Some(player_45);
    let mut player_46: reversi::Player = crate::reversi::Player::Player1;
    let mut option_63: std::option::Option<reversi::Player> = std::option::Option::Some(player_46);
    let mut option_array_7: [std::option::Option<reversi::Player>; 8] = [option_63, option_62, option_61, option_60, option_59, option_58, option_57, option_56];
    let mut option_array_array_0: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_7, option_array_6, option_array_5, option_array_4, option_array_3, option_array_2, option_array_1, option_array_0];
    let mut reversi_0: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_0, next: player_2, status: gamestate_0};
    let mut reversi_0_ref_0: &crate::reversi::Reversi = &mut reversi_0;
    let mut tictactoeerror_0: tictactoe::TicTacToeError = crate::tictactoe::TicTacToeError::GameEnded;
    let mut result_0: std::result::Result<(), reversi::ReversiError> = crate::reversi::Reversi::check_position_validity(reversi_0_ref_0, usize_1, usize_0, player_0);
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_80() {
    rusty_monitor::set_test_id(80);
    let mut gamestate_0: reversi::GameState = crate::reversi::GameState::InProgress;
    let mut player_0: reversi::Player = crate::reversi::Player::Player0;
    let mut option_0: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_1: reversi::Player = crate::reversi::Player::Player0;
    let mut player_2: reversi::Player = crate::reversi::Player::other(player_1);
    let mut option_1: std::option::Option<reversi::Player> = std::option::Option::Some(player_2);
    let mut option_2: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_3: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_4: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_3: reversi::Player = crate::reversi::Player::Player1;
    let mut player_4: reversi::Player = crate::reversi::Player::other(player_3);
    let mut option_5: std::option::Option<reversi::Player> = std::option::Option::Some(player_4);
    let mut option_6: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_7: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_0: [std::option::Option<reversi::Player>; 8] = [option_7, option_6, option_5, option_4, option_3, option_2, option_1, option_0];
    let mut option_8: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_9: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_10: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_5: reversi::Player = crate::reversi::Player::Player0;
    let mut option_11: std::option::Option<reversi::Player> = std::option::Option::Some(player_5);
    let mut option_12: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_13: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_6: reversi::Player = crate::reversi::Player::Player0;
    let mut player_7: reversi::Player = crate::reversi::Player::other(player_6);
    let mut option_14: std::option::Option<reversi::Player> = std::option::Option::Some(player_7);
    let mut option_15: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_1: [std::option::Option<reversi::Player>; 8] = [option_15, option_14, option_13, option_12, option_11, option_10, option_9, option_8];
    let mut option_16: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_17: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_18: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_8: reversi::Player = crate::reversi::Player::Player0;
    let mut option_19: std::option::Option<reversi::Player> = std::option::Option::Some(player_8);
    let mut player_9: reversi::Player = crate::reversi::Player::Player0;
    let mut option_20: std::option::Option<reversi::Player> = std::option::Option::Some(player_9);
    let mut option_21: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_22: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_10: reversi::Player = crate::reversi::Player::Player0;
    let mut option_23: std::option::Option<reversi::Player> = std::option::Option::Some(player_10);
    let mut option_array_2: [std::option::Option<reversi::Player>; 8] = [option_23, option_22, option_21, option_20, option_19, option_18, option_17, option_16];
    let mut option_24: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_11: reversi::Player = crate::reversi::Player::Player0;
    let mut option_25: std::option::Option<reversi::Player> = std::option::Option::Some(player_11);
    let mut option_26: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_12: reversi::Player = crate::reversi::Player::Player0;
    let mut player_13: reversi::Player = crate::reversi::Player::other(player_12);
    let mut option_27: std::option::Option<reversi::Player> = std::option::Option::Some(player_13);
    let mut player_14: reversi::Player = crate::reversi::Player::Player1;
    let mut player_15: reversi::Player = crate::reversi::Player::other(player_14);
    let mut option_28: std::option::Option<reversi::Player> = std::option::Option::Some(player_15);
    let mut option_29: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_16: reversi::Player = crate::reversi::Player::Player1;
    let mut player_17: reversi::Player = crate::reversi::Player::other(player_16);
    let mut option_30: std::option::Option<reversi::Player> = std::option::Option::Some(player_17);
    let mut option_31: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_3: [std::option::Option<reversi::Player>; 8] = [option_31, option_30, option_29, option_28, option_27, option_26, option_25, option_24];
    let mut player_18: reversi::Player = crate::reversi::Player::Player0;
    let mut player_19: reversi::Player = crate::reversi::Player::other(player_18);
    let mut option_32: std::option::Option<reversi::Player> = std::option::Option::Some(player_19);
    let mut option_33: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_20: reversi::Player = crate::reversi::Player::Player1;
    let mut player_21: reversi::Player = crate::reversi::Player::other(player_20);
    let mut option_34: std::option::Option<reversi::Player> = std::option::Option::Some(player_21);
    let mut player_22: reversi::Player = crate::reversi::Player::Player1;
    let mut option_35: std::option::Option<reversi::Player> = std::option::Option::Some(player_22);
    let mut option_36: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_37: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_23: reversi::Player = crate::reversi::Player::Player1;
    let mut option_38: std::option::Option<reversi::Player> = std::option::Option::Some(player_23);
    let mut option_39: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_4: [std::option::Option<reversi::Player>; 8] = [option_39, option_38, option_37, option_36, option_35, option_34, option_33, option_32];
    let mut option_40: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_24: reversi::Player = crate::reversi::Player::Player0;
    let mut option_41: std::option::Option<reversi::Player> = std::option::Option::Some(player_24);
    let mut option_42: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_25: reversi::Player = crate::reversi::Player::Player1;
    let mut player_26: reversi::Player = crate::reversi::Player::other(player_25);
    let mut option_43: std::option::Option<reversi::Player> = std::option::Option::Some(player_26);
    let mut option_44: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_27: reversi::Player = crate::reversi::Player::Player1;
    let mut option_45: std::option::Option<reversi::Player> = std::option::Option::Some(player_27);
    let mut player_28: reversi::Player = crate::reversi::Player::Player1;
    let mut player_29: reversi::Player = crate::reversi::Player::other(player_28);
    let mut option_46: std::option::Option<reversi::Player> = std::option::Option::Some(player_29);
    let mut player_30: reversi::Player = crate::reversi::Player::Player1;
    let mut player_31: reversi::Player = crate::reversi::Player::other(player_30);
    let mut option_47: std::option::Option<reversi::Player> = std::option::Option::Some(player_31);
    let mut option_array_5: [std::option::Option<reversi::Player>; 8] = [option_47, option_46, option_45, option_44, option_43, option_42, option_41, option_40];
    let mut player_32: reversi::Player = crate::reversi::Player::Player1;
    let mut option_48: std::option::Option<reversi::Player> = std::option::Option::Some(player_32);
    let mut player_33: reversi::Player = crate::reversi::Player::Player0;
    let mut player_34: reversi::Player = crate::reversi::Player::other(player_33);
    let mut option_49: std::option::Option<reversi::Player> = std::option::Option::Some(player_34);
    let mut player_35: reversi::Player = crate::reversi::Player::Player0;
    let mut option_50: std::option::Option<reversi::Player> = std::option::Option::Some(player_35);
    let mut option_51: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_36: reversi::Player = crate::reversi::Player::Player0;
    let mut option_52: std::option::Option<reversi::Player> = std::option::Option::Some(player_36);
    let mut option_53: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_37: reversi::Player = crate::reversi::Player::Player1;
    let mut option_54: std::option::Option<reversi::Player> = std::option::Option::Some(player_37);
    let mut option_55: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_6: [std::option::Option<reversi::Player>; 8] = [option_55, option_54, option_53, option_52, option_51, option_50, option_49, option_48];
    let mut option_56: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_38: reversi::Player = crate::reversi::Player::Player0;
    let mut player_39: reversi::Player = crate::reversi::Player::other(player_38);
    let mut option_57: std::option::Option<reversi::Player> = std::option::Option::Some(player_39);
    let mut option_58: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_40: reversi::Player = crate::reversi::Player::Player0;
    let mut player_41: reversi::Player = crate::reversi::Player::other(player_40);
    let mut option_59: std::option::Option<reversi::Player> = std::option::Option::Some(player_41);
    let mut option_60: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut player_42: reversi::Player = crate::reversi::Player::Player1;
    let mut player_43: reversi::Player = crate::reversi::Player::other(player_42);
    let mut option_61: std::option::Option<reversi::Player> = std::option::Option::Some(player_43);
    let mut player_44: reversi::Player = crate::reversi::Player::Player0;
    let mut option_62: std::option::Option<reversi::Player> = std::option::Option::Some(player_44);
    let mut option_63: std::option::Option<reversi::Player> = std::option::Option::None;
    let mut option_array_7: [std::option::Option<reversi::Player>; 8] = [option_63, option_62, option_61, option_60, option_59, option_58, option_57, option_56];
    let mut option_array_array_0: [[std::option::Option<reversi::Player>; 8]; 8] = [option_array_7, option_array_6, option_array_5, option_array_4, option_array_3, option_array_2, option_array_1, option_array_0];
    let mut reversi_0: crate::reversi::Reversi = crate::reversi::Reversi {board: option_array_array_0, next: player_0, status: gamestate_0};
    let mut reversi_0_ref_0: &crate::reversi::Reversi = &mut reversi_0;
    let mut option_64: std::option::Option<reversi::Player> = crate::reversi::Reversi::winner(reversi_0_ref_0);
    panic!("From RustyUnit with love");
}

#[no_coverage]
#[test]
#[should_panic]
#[timeout(3000)]
fn rusty_test_196() {
    rusty_monitor::set_test_id(196);
    let mut reversierror_0: reversi::ReversiError = crate::reversi::ReversiError::InvalidPosition;
    let mut reversierror_0_ref_0: &reversi::ReversiError = &mut reversierror_0;
    let mut reversierror_1: reversi::ReversiError = crate::reversi::ReversiError::InvalidPosition;
    let mut reversierror_1_ref_0: &reversi::ReversiError = &mut reversierror_1;
    let mut player_0: connect_four::Player = crate::connect_four::Player::Player0;
    let mut player_1: connect_four::Player = crate::connect_four::Player::other(player_0);
    let mut player_2: reversi::Player = crate::reversi::Player::Player0;
    let mut player_3: reversi::Player = crate::reversi::Player::other(player_2);
    let mut player_4: connect_four::Player = crate::connect_four::Player::Player1;
    let mut result_0: std::result::Result<crate::connect_four::ConnectFour, std::convert::Infallible> = crate::connect_four::ConnectFour::new();
    let mut gamestate_0: connect_four::GameState = crate::connect_four::GameState::Win(player_4);
    let mut tictactoeerror_0: tictactoe::TicTacToeError = crate::tictactoe::TicTacToeError::OccupiedPosition;
    let mut tictactoeerror_0_ref_0: &tictactoe::TicTacToeError = &mut tictactoeerror_0;
    let mut direction_0: reversi::Direction = crate::reversi::Direction::UpperRight;
    let mut player_5: reversi::Player = crate::reversi::Player::other(player_3);
    let mut tictactoeerror_1: tictactoe::TicTacToeError = crate::tictactoe::TicTacToeError::WrongPlayer;
    let mut connectfourerror_0: connect_four::ConnectFourError = crate::connect_four::ConnectFourError::ColumnFilled;
    let mut gamestate_1: connect_four::GameState = crate::connect_four::GameState::InProgress;
    let mut player_6: connect_four::Player = crate::connect_four::Player::other(player_1);
    let mut direction_1: reversi::Direction = crate::reversi::Direction::UpperRight;
    let mut direction_2: reversi::Direction = crate::reversi::Direction::LowerLeft;
    let mut bool_0: bool = std::cmp::PartialEq::eq(reversierror_1_ref_0, reversierror_0_ref_0);
    let mut reversierror_2: reversi::ReversiError = crate::reversi::ReversiError::OccupiedPosition;
    panic!("From RustyUnit with love");
}
}