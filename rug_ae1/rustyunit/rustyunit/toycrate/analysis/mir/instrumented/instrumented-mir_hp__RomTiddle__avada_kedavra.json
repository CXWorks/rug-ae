{"global_id":"hp__RomTiddle__avada_kedavra","cdg":"{\"nodes\":[42069,1,4,5,2,3,0,6,7],\"node_holes\":[],\"edge_property\":\"directed\",\"edges\":[[1,2,1],[1,3,1],[1,4,1],[1,5,1],[0,6,1],[0,1,1],[0,7,1],[0,8,1],[0,0,1]]}","cdg_dot":"digraph {\n    0 [ label = \"42069\" ]\n    1 [ label = \"1\" ]\n    2 [ label = \"4\" ]\n    3 [ label = \"5\" ]\n    4 [ label = \"2\" ]\n    5 [ label = \"3\" ]\n    6 [ label = \"0\" ]\n    7 [ label = \"6\" ]\n    8 [ label = \"7\" ]\n    1 -> 2 [ label = \"1\" ]\n    1 -> 3 [ label = \"1\" ]\n    1 -> 4 [ label = \"1\" ]\n    1 -> 5 [ label = \"1\" ]\n    0 -> 6 [ label = \"1\" ]\n    0 -> 1 [ label = \"1\" ]\n    0 -> 7 [ label = \"1\" ]\n    0 -> 8 [ label = \"1\" ]\n    0 -> 0 [ label = \"1\" ]\n}\n","cfg":"","truncated_cfg":"","constant_pool":[],"branches":0,"assertions":0,"locals":["_0 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: src/hp.rs:164:53: 164:53 (#0), scope: scope[0] } }","_1 -> LocalDecl { mutability: Not, local_info: Some(User(Set(ImplicitSelf(MutRef)))), internal: false, is_block_tail: None, ty: &mut hp::RomTiddle, user_ty: None, source_info: SourceInfo { span: src/hp.rs:164:26: 164:35 (#0), scope: scope[0] } }","_2 -> LocalDecl { mutability: Not, local_info: Some(User(Set(Var(VarBindingForm { binding_mode: BindByValue(Not), opt_ty_info: Some(src/hp.rs:164:45: 164:51 (#0)), opt_match_place: Some((Some(_2), src/hp.rs:164:37: 164:43 (#0))), pat_span: src/hp.rs:164:37: 164:43 (#0) })))), internal: false, is_block_tail: None, ty: std::string::String, user_ty: None, source_info: SourceInfo { span: src/hp.rs:164:37: 164:43 (#0), scope: scope[0] } }","_3 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: Some(BlockTailInfo { tail_result_is_ignored: true, span: src/hp.rs:165:9: 170:10 (#0) }), ty: bool, user_ty: None, source_info: SourceInfo { span: src/hp.rs:165:12: 165:37 (#138), scope: scope[0] } }","_4 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: Some(BlockTailInfo { tail_result_is_ignored: true, span: src/hp.rs:165:9: 170:10 (#0) }), ty: &&std::string::String, user_ty: None, source_info: SourceInfo { span: src/hp.rs:165:12: 165:19 (#0), scope: scope[0] } }","_5 -> LocalDecl { mutability: Not, local_info: None, internal: false, is_block_tail: Some(BlockTailInfo { tail_result_is_ignored: true, span: src/hp.rs:165:9: 170:10 (#0) }), ty: &std::string::String, user_ty: None, source_info: SourceInfo { span: src/hp.rs:165:12: 165:19 (#0), scope: scope[0] } }","_6 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: Some(BlockTailInfo { tail_result_is_ignored: true, span: src/hp.rs:165:9: 170:10 (#0) }), ty: &&str, user_ty: None, source_info: SourceInfo { span: src/hp.rs:165:23: 165:37 (#0), scope: scope[0] } }","_7 -> LocalDecl { mutability: Mut, local_info: None, internal: true, is_block_tail: None, ty: (u16, bool), user_ty: None, source_info: SourceInfo { span: src/hp.rs:166:13: 166:30 (#0), scope: scope[0] } }","_8 -> LocalDecl { mutability: Mut, local_info: None, internal: true, is_block_tail: None, ty: (u16, bool), user_ty: None, source_info: SourceInfo { span: src/hp.rs:169:13: 169:30 (#0), scope: scope[0] } }","_9 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: &&str, user_ty: None, source_info: SourceInfo { span: src/hp.rs:165:23: 165:37 (#0), scope: scope[0] } }","_10 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_11 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_12 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_13 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_14 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_15 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_16 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_17 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_18 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_19 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_20 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_21 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_22 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_23 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }"],"basic_blocks":["0 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _23 = rusty_monitor::trace_entry(const 0_usize, const \"hp__RomTiddle__avada_kedavra\") -> bb1 }), is_cleanup: false }","1 -> BasicBlockData { statements: [_5 = &_2, _4 = &_5, _9 = const hp::RomTiddle::avada_kedavra::promoted[0], _6 = _9], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:165:12: 165:37 (#0), scope: scope[0] }, kind: _3 = <&std::string::String as std::cmp::PartialEq<&str>>::eq(move _4, move _6) -> [return: bb11, unwind: bb9] }), is_cleanup: false }","2 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:165:12: 165:37 (#138), scope: scope[0] }, kind: switchInt(move _3) -> [false: bb12, otherwise: bb14] }), is_cleanup: false }","3 -> BasicBlockData { statements: [_7 = CheckedSub(((*_1).0: u16), const 1_u16)], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:166:13: 166:30 (#0), scope: scope[0] }, kind: assert(!move (_7.1: bool), \"attempt to compute `{} - {}`, which would overflow\", ((*_1).0: u16), const 1_u16) -> [success: bb17, unwind: bb16] }), is_cleanup: false }","4 -> BasicBlockData { statements: [((*_1).0: u16) = move (_7.0: u16)], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:165:9: 170:10 (#0), scope: scope[0] }, kind: goto -> bb18 }), is_cleanup: false }","5 -> BasicBlockData { statements: [_8 = CheckedAdd(((*_1).0: u16), const 1_u16)], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:169:13: 169:30 (#0), scope: scope[0] }, kind: assert(!move (_8.1: bool), \"attempt to compute `{} + {}`, which would overflow\", ((*_1).0: u16), const 1_u16) -> [success: bb20, unwind: bb19] }), is_cleanup: false }","6 -> BasicBlockData { statements: [((*_1).0: u16) = move (_8.0: u16)], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:165:9: 170:10 (#0), scope: scope[0] }, kind: goto -> bb21 }), is_cleanup: false }","7 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:171:5: 171:6 (#0), scope: scope[0] }, kind: drop(_2) -> bb22 }), is_cleanup: false }","8 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:171:6: 171:6 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }","9 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:171:5: 171:6 (#0), scope: scope[0] }, kind: drop(_2) -> bb23 }), is_cleanup: true }","10 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:164:5: 171:6 (#0), scope: scope[0] }, kind: resume }), is_cleanup: true }","11 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _10 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__RomTiddle__avada_kedavra\", const 1_usize) -> bb2 }), is_cleanup: false }","12 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _11 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__RomTiddle__avada_kedavra\", const 4_usize) -> bb13 }), is_cleanup: false }","13 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _12 = rusty_monitor::trace_zero_or_one(const 0_usize, const \"hp__RomTiddle__avada_kedavra\", const 2_usize, const false) -> bb5 }), is_cleanup: false }","14 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _13 = rusty_monitor::trace_zero_or_one(const 0_usize, const \"hp__RomTiddle__avada_kedavra\", const 4_usize, const false) -> bb15 }), is_cleanup: false }","15 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _14 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__RomTiddle__avada_kedavra\", const 2_usize) -> bb3 }), is_cleanup: false }","16 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _15 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__RomTiddle__avada_kedavra\", const 8_usize) -> bb9 }), is_cleanup: false }","17 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _16 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__RomTiddle__avada_kedavra\", const 3_usize) -> bb4 }), is_cleanup: false }","18 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _17 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__RomTiddle__avada_kedavra\", const 6_usize) -> bb7 }), is_cleanup: false }","19 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _18 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__RomTiddle__avada_kedavra\", const 8_usize) -> bb9 }), is_cleanup: false }","20 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _19 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__RomTiddle__avada_kedavra\", const 5_usize) -> bb6 }), is_cleanup: false }","21 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _20 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__RomTiddle__avada_kedavra\", const 6_usize) -> bb7 }), is_cleanup: false }","22 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _21 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__RomTiddle__avada_kedavra\", const 7_usize) -> bb8 }), is_cleanup: false }","23 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _22 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__RomTiddle__avada_kedavra\", const 9_usize) -> bb10 }), is_cleanup: false }"]}