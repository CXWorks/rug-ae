{"global_id":"hp__WonReasley__ascendio","cdg":"{\"nodes\":[42069,1,2,3,4,5,6,0,7],\"node_holes\":[],\"edge_property\":\"directed\",\"edges\":[[1,2,1],[1,3,1],[1,4,1],[4,5,1],[4,6,1],[0,7,1],[0,1,1],[0,8,1],[0,0,1]]}","cdg_dot":"digraph {\n    0 [ label = \"42069\" ]\n    1 [ label = \"1\" ]\n    2 [ label = \"2\" ]\n    3 [ label = \"3\" ]\n    4 [ label = \"4\" ]\n    5 [ label = \"5\" ]\n    6 [ label = \"6\" ]\n    7 [ label = \"0\" ]\n    8 [ label = \"7\" ]\n    1 -> 2 [ label = \"1\" ]\n    1 -> 3 [ label = \"1\" ]\n    1 -> 4 [ label = \"1\" ]\n    4 -> 5 [ label = \"1\" ]\n    4 -> 6 [ label = \"1\" ]\n    0 -> 7 [ label = \"1\" ]\n    0 -> 1 [ label = \"1\" ]\n    0 -> 8 [ label = \"1\" ]\n    0 -> 0 [ label = \"1\" ]\n}\n","cfg":"","truncated_cfg":"","constant_pool":[],"branches":0,"assertions":0,"locals":["_0 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: src/hp.rs:140:40: 140:40 (#0), scope: scope[0] } }","_1 -> LocalDecl { mutability: Not, local_info: Some(User(Set(ImplicitSelf(MutRef)))), internal: false, is_block_tail: None, ty: &mut hp::WonReasley, user_ty: None, source_info: SourceInfo { span: src/hp.rs:140:21: 140:30 (#0), scope: scope[0] } }","_2 -> LocalDecl { mutability: Not, local_info: Some(User(Set(Var(VarBindingForm { binding_mode: BindByValue(Not), opt_ty_info: Some(src/hp.rs:140:35: 140:38 (#0)), opt_match_place: Some((Some(_2), src/hp.rs:140:32: 140:33 (#0))), pat_span: src/hp.rs:140:32: 140:33 (#0) })))), internal: false, is_block_tail: None, ty: i64, user_ty: None, source_info: SourceInfo { span: src/hp.rs:140:32: 140:33 (#0), scope: scope[0] } }","_3 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: i64, user_ty: None, source_info: SourceInfo { span: src/hp.rs:141:18: 141:24 (#0), scope: scope[0] } }","_4 -> LocalDecl { mutability: Mut, local_info: None, internal: true, is_block_tail: None, ty: (i64, bool), user_ty: None, source_info: SourceInfo { span: src/hp.rs:141:18: 141:30 (#0), scope: scope[0] } }","_5 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: Some(BlockTailInfo { tail_result_is_ignored: true, span: src/hp.rs:142:9: 146:10 (#0) }), ty: i64, user_ty: None, source_info: SourceInfo { span: src/hp.rs:142:12: 142:18 (#0), scope: scope[0] } }","_6 -> LocalDecl { mutability: Not, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:9: 103:62 (#79), scope: scope[0] } }","_7 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: std::fmt::Arguments, user_ty: None, source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:28: 103:61 (#80), scope: scope[0] } }","_8 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: &[&str], user_ty: None, source_info: SourceInfo { span: src/hp.rs:143:22: 143:30 (#0), scope: scope[0] } }","_9 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: &[&str; 1], user_ty: None, source_info: SourceInfo { span: src/hp.rs:143:22: 143:30 (#0), scope: scope[0] } }","_10 -> LocalDecl { mutability: Not, local_info: None, internal: false, is_block_tail: None, ty: &[&str; 1], user_ty: None, source_info: SourceInfo { span: src/hp.rs:143:22: 143:30 (#0), scope: scope[0] } }","_11 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: &[std::fmt::ArgumentV1], user_ty: None, source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:28: 103:61 (#80), scope: scope[0] } }","_12 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: &[std::fmt::ArgumentV1; 0], user_ty: None, source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:28: 103:61 (#80), scope: scope[0] } }","_13 -> LocalDecl { mutability: Not, local_info: None, internal: false, is_block_tail: None, ty: &[std::fmt::ArgumentV1; 0], user_ty: None, source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:28: 103:61 (#80), scope: scope[0] } }","_14 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: Some(BlockTailInfo { tail_result_is_ignored: true, span: src/hp.rs:142:9: 146:10 (#0) }), ty: i64, user_ty: None, source_info: SourceInfo { span: src/hp.rs:144:19: 144:25 (#0), scope: scope[0] } }","_15 -> LocalDecl { mutability: Not, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:9: 103:62 (#81), scope: scope[0] } }","_16 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: std::fmt::Arguments, user_ty: None, source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:28: 103:61 (#82), scope: scope[0] } }","_17 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: &[&str], user_ty: None, source_info: SourceInfo { span: src/hp.rs:145:22: 145:26 (#0), scope: scope[0] } }","_18 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: &[&str; 1], user_ty: None, source_info: SourceInfo { span: src/hp.rs:145:22: 145:26 (#0), scope: scope[0] } }","_19 -> LocalDecl { mutability: Not, local_info: None, internal: false, is_block_tail: None, ty: &[&str; 1], user_ty: None, source_info: SourceInfo { span: src/hp.rs:145:22: 145:26 (#0), scope: scope[0] } }","_20 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: &[std::fmt::ArgumentV1], user_ty: None, source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:28: 103:61 (#82), scope: scope[0] } }","_21 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: &[std::fmt::ArgumentV1; 0], user_ty: None, source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:28: 103:61 (#82), scope: scope[0] } }","_22 -> LocalDecl { mutability: Not, local_info: None, internal: false, is_block_tail: None, ty: &[std::fmt::ArgumentV1; 0], user_ty: None, source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:28: 103:61 (#82), scope: scope[0] } }","_23 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: &[std::fmt::ArgumentV1; 0], user_ty: None, source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:28: 103:61 (#82), scope: scope[0] } }","_24 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: &[&str; 1], user_ty: None, source_info: SourceInfo { span: src/hp.rs:145:22: 145:26 (#0), scope: scope[0] } }","_25 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: &[std::fmt::ArgumentV1; 0], user_ty: None, source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:28: 103:61 (#80), scope: scope[0] } }","_26 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: &[&str; 1], user_ty: None, source_info: SourceInfo { span: src/hp.rs:143:22: 143:30 (#0), scope: scope[0] } }","_27 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_28 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_29 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_30 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_31 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }","_32 -> LocalDecl { mutability: Mut, local_info: None, internal: false, is_block_tail: None, ty: (), user_ty: None, source_info: SourceInfo { span: no-location (#0), scope: scope[0] } }"],"basic_blocks":["0 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _32 = rusty_monitor::trace_entry(const 0_usize, const \"hp__WonReasley__ascendio\") -> bb1 }), is_cleanup: false }","1 -> BasicBlockData { statements: [_3 = ((*_1).1: i64), _4 = CheckedMul(_3, const 100_i64)], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:141:18: 141:30 (#0), scope: scope[0] }, kind: assert(!move (_4.1: bool), \"attempt to compute `{} * {}`, which would overflow\", move _3, const 100_i64) -> bb9 }), is_cleanup: false }","2 -> BasicBlockData { statements: [((*_1).1: i64) = move (_4.0: i64), _5 = ((*_1).1: i64)], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:142:12: 142:26 (#135), scope: scope[0] }, kind: switchInt(move _5) -> [3700_i64: bb3, otherwise: bb5] }), is_cleanup: false }","3 -> BasicBlockData { statements: [_26 = const hp::WonReasley::ascendio::promoted[3], _10 = _26, _9 = _10, _8 = move _9 as &[&str] (Pointer(Unsize)), _25 = const hp::WonReasley::ascendio::promoted[2], _13 = _25, _12 = _13, _11 = move _12 as &[std::fmt::ArgumentV1] (Pointer(Unsize))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:28: 103:61 (#80), scope: scope[0] }, kind: _7 = std::fmt::Arguments::new_v1(move _8, move _11) -> bb10 }), is_cleanup: false }","4 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:9: 103:62 (#79), scope: scope[0] }, kind: _6 = std::io::_print(move _7) -> bb11 }), is_cleanup: false }","5 -> BasicBlockData { statements: [_14 = ((*_1).1: i64)], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:144:19: 144:30 (#136), scope: scope[0] }, kind: switchInt(move _14) -> [0_i64: bb6, otherwise: bb8] }), is_cleanup: false }","6 -> BasicBlockData { statements: [_24 = const hp::WonReasley::ascendio::promoted[1], _19 = _24, _18 = _19, _17 = move _18 as &[&str] (Pointer(Unsize)), _23 = const hp::WonReasley::ascendio::promoted[0], _22 = _23, _21 = _22, _20 = move _21 as &[std::fmt::ArgumentV1] (Pointer(Unsize))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:28: 103:61 (#82), scope: scope[0] }, kind: _16 = std::fmt::Arguments::new_v1(move _17, move _20) -> bb12 }), is_cleanup: false }","7 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/tim/.rustup/toolchains/nightly-aarch64-apple-darwin/lib/rustlib/src/rust/library/std/src/macros.rs:103:9: 103:62 (#81), scope: scope[0] }, kind: _15 = std::io::_print(move _16) -> bb13 }), is_cleanup: false }","8 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: src/hp.rs:147:6: 147:6 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }","9 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _27 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__WonReasley__ascendio\", const 1_usize) -> bb2 }), is_cleanup: false }","10 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _28 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__WonReasley__ascendio\", const 3_usize) -> bb4 }), is_cleanup: false }","11 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _29 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__WonReasley__ascendio\", const 7_usize) -> bb8 }), is_cleanup: false }","12 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _30 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__WonReasley__ascendio\", const 6_usize) -> bb7 }), is_cleanup: false }","13 -> BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: _31 = rusty_monitor::trace_branch_hit(const 0_usize, const \"hp__WonReasley__ascendio\", const 7_usize) -> bb8 }), is_cleanup: false }"]}